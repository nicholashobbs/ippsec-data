 what's going on YouTube this is IPSec I'm doing Sunday from hack the box which is a relatively easy and straightforward box as long as you did not rule out guessing a user's password it starts off with the finger port being open which allows you to enumerate the box's hostname and users on the box boxes Harris name is Sunday the user is sunny so you can guess sunny Sunday may be a user you want to try to login with via SSH if you think that's a bit puzzly you can always brute-force it it's an easy password Hydra will not work I think it's because of an old SSH key exchange algorithm but a tool called Pettit or does or I can't pronounce that tools name but will show it and how you could brute-force SSH if you didn't want to guess once you log into the box all the other probe asks are relatively straightforward so let's just jump in and do this as always let's end map the box so and map - I see for default scripts as V enumerate versions Oh a output all formats put in the M map director and call it Sunday then the IP address which is 1010 1076 does take some time to run so I've already run it looking at the results we don't really have that many ports open the most interesting thing I see right off the bat is it is a Sun Solaris box which is kind of another form of UNIX or BSD and exactly what it's based off of but it's very similar to Linux we see the finger services open on port 79 and our PC bind on port 1 1 1 I'm going to start off with this finger service because finger tells you like what users are logged into the system or have logged into the system it's just a very old service that we can do some cool enumeration with and while that goes I'm actually going to start another end map just because of how few ports we have to scan all the ports so we're gonna do n map - P - 1010 1076 and I want to do Oh a we will call this all ports dot n map and we're gonna see its estimated time is going to be pretty long it doesn't even have it yet so to speed this up I'm just going to do a - - max - retries and set that to 1 so that should speed the scan up considerably and we can go on in a numerate finger there's two programs I normally use to enumerate finger it's either Metasploit and we'll start off with that so do MSF DB run this is just like MSF console but it's going to start the database then enter Metasploit and the second one is a Perl script so while Metasploit opens up we can google it finger khanoom and go to pen test monkey see we want to grab finger user enumeration actually it's on github right here second link so I will clone that so we have it ready for after Metasploit and i want to show the difference between the two so I'm gonna search Metasploit for finger and then we're going to use it so auxilary scanner finger finger users show the options set our hosts to ten ten ten seventy six and run it and all Metasploit does is tell us the found users finger actually can return more information so if we go over to the thing we had just cloned and run it we can see the options we're going to want to do - capital u because it's a file of user names and I will put the file in later I just want to get all the syntax right - t for the host ten ten ten seventy six and actually I think that's all we have to do so let's go and find a good user file to do so user share sick list if you don't have this directory you can just install it from apt I'm gonna go to user names names and names are tech sounds good so replace this file with this directory and names dot txt and this gives extremely long lines that I don't really like because it kind of screws up the output so I'm going to pipe that to last - capital s and this is going to kill off the line wrapping so it just outputs normally well that's going on let's go back and look at our end map it's only about 24 percent done it's going pretty slow so I'm going to turn Mac's retries to zero and this should speed it up quite a bit there is a program called masscan and I'm not really a huge fan of using masscan through VPNs just because I find it produces a lot of false positives it just goes too quick I guess but this side map should be finished soon we could do vvv to increase the verbosity and see results as they come in but home is done over half way so you can see how much time the retries adds to it nmap scan I think d4 is 10 so that's the main reason why it just takes forever is because it tries 10 different times to make sure it's 100% accurate take it down as your retries won't be hundred percent accurate but it'd be close enough so I didn't put that in the end map directory so I'm going to move it in there and then let's do a targeted end map so and map - SC for default scripts SV and reversions - P I'm going to do 79 one one one two two zero two two three five three four two and five six - seven - to identify what these ports are then we can do Oh a and call this targeted ports and then the IP address go back over to a pearl window we can see this is still finding valid users and add map should be done in a little bit it's now finished and we see scripts ran on one of the three services and that is the SSH on port two two zero two two looking back at the finger results we see they have completed and it's got a few hits we got access admin and Marie bin and a lot of these kind of look odd maybe the users never logged in it just exists I'm not sure exactly what's going to because I don't think anne-marie exists but we look down and we have Sammy and Sonny and these lines don't look like the others we have the usernames what a pseudo terminal they logged into and the time and the address so both of these users have SSH into the box from the IP of 10 10 14 for the odd thing here is I don't see a root user so I'm gonna copy this because I think soon as they exit less it's gonna clear my screen and I want to just paste what I copied so we'll do finger dot output paste and I want to run this command and look at root so let's see what root looks like since it just wasn't in that word list so - you will do lower case so it's not a file and we see it's very similar we got the pseudo terminal right here as 3 but instead of an IP we have the hostname Sunday so he's probably actually logged in physically to this machine or something since it's showing the hostname so we know the hostname is Sunday and we have users root and Sammy and Sonny so how I did this box is I was like well Sonny sunday is a thing so I just tried SSH - p220 - - and we'll do sunny at 10-10-10 76 we get no matching key exchange method found and if you look in the main pages of SSH you know there's - Oh key exchange algorithms is equal to plus let me choose any one of these algorithms this one's the easiest to copy so we'll just do diffie-hellman group 1 shot 1 and now it's asking us for the password and I'm gonna guess Sunday and we get logged in if you didn't like the guessing you could do in other ways so let us just open a new pane and if we tried Hydra it's weird Hydra won't work so Hydra - you Sonny - Pia Sunday then what is it SSH ten ten ten 76 twenty two or twenty two unknown service see how do we use it for SSH maybe - lowercase M and o - L is username not - II oh there we go and we don't have any valid passwords even though we know that's valid password so maybe it's the key exchange or something so keep in mind when using Hydra against old services because the key exchange methods for this box are particularly old I've noticed it with like old Cisco boxes also have this issue where Hydra just doesn't work and doesn't tell you that it aired out so I used normally use a tool called parrot or I think that's how you pronounce it so if we do parrot or SSH or underscore login then we can do host is equal to 10 10 10 76 port is equal to 22 0 22 password is equal to file 0 0 is equal to we have to get a password file so let us go user share SEC lists go into passwords and we get a lot of lists here I'm not using rock you because Rocky is huge and it's gonna take forever with SSH so I'm gonna do find dot dash type F and that's going to list every file in this I'm gonna do - exact WC - L for a would count line and then open and close squiggly brackets so it's going to take every entry from find put it there and then escape a semicolon to run this so now we have line counts of every file and then if I pipe that to sort we can do - n for number reverse and we have line counts for every file so I'm going to choose one around a thousand lines so 1500 lines is fine I'm going to grab this one so file is equal to user share cyclist passwords ok and then what else do we need I like doing the persistent is equal to 0 it's gonna slow it down but I find theirs less false positives this way and then when we hit enter it's going to spam us with the results and should be getting message denied that is bizarre let's see what did we screw up no we don't have a user so let's do user is equal to sunny there we go authentication failed and if we don't want to be spammed by this we can do better - - H SSH login and it gives us a option to ignore message so - X ignore message is equal to authentication failed and that will hide things from the message that is authentication failed additionally there if you just did failed and put a piece of that line it's not going to be enough if you wanted to search for that you could do F grep instead message and that's going to search for the string failed and exclude it if you wanted to use a regular expression you could do Ygritte so eventually this will come back and we'll see sunday is a valid password but let us continue on the box and do what an enumeration weekend so first thing first let's just run sudo - l and we see the user sunny may run the file root troll so i'm going to execute root troll and we just see testing UID equals zero g ID equals zero so no good information there we look at slash we see a slash backup directory which isn't default and Linux so I'm gonna go look at it and we have agent 22 backup and shadow dot backup looking at this we don't have access to read agent 22 only shadow so let us look at shadow and we get the password hash for Sammy so if we copy this we can go into our Kraken go in a hash cat add this hash so hashes backslash Sunday make sure I copy it correctly yep and then we go to Google we do hash cat example hashes and you could also use John to crack this and just specify sha-256 script but I pretty much exclusively use hash cat guessing it is mode 7400 so I just like this page because it gives example of the hash as how they should look and then tells you what mood it is so hash cat top mood 7400 hashes Sunday and we'll do up word list rock eel and see if this cracks and the reason why I'm using rock you for cracking a hash and I didn't do it for the SSH brute force is because it's a lot faster to crack hashes than brute force SSH and it's already cracked it so looking at it we can see Sammy's password is cool dude going over the Python still hasn't found the correct password in that word list get out of the Kraken and we're left with this SH we can do su - Sammy put the password cool dude in and we login and the thing I just noticed when I did su is I see this is a Solaris box from 2008 so I'm gonna go back to the sunday user and just try something out that something is shell-shocked just because Sherlock came out after 2008 and I've used it - professor on other boxes like so car so let's test this I create a variable and the variable name can be anything will do if SEC and then the shellshock payload and we can echo please subscribe and then just execute bash with nothing so it does look like this is vulnerable shell shock if we get rid of this payload here it doesn't echo please subscribe so that's how we know that it's executing code so the next thing is look at studio again we don't see it saying any environment variables are being kept but I'm going to pick one anyways so if I do a and V let's pick one that looks like it would probably be used or not changed will do log name so well name is equal to shell shock then sudo root roll and if it adds please subscribe to the output it was vulnerable to shell shock nope it's not and I say phone with shell shock I meant vulnerable shell shock through sudo so let's go back into the Sammi user and begin poking around what he has access to so sudo - L and we can see he can run user bin W get so if we do W get - H these are all the things we can probably do and there is one interesting thing that I noticed let's see - I input file download your elves found in file so if I do sudo W get - I I can specify any file a one so if I specify Etsy shadow I can read the entire shadow file I'll just have to all - friend for let's do standard air to standard help and now we can just grab the shadow file and try to crack the root password there are other things we can look at like we could do double you get - I root roll and we see it's just a bash script running echo testing and user bin ID so the intended way to prevent this one is to create a file on a bucks we'll name this troll and then just say bash well we can use a bin - start a web server and then we can sudo W get 10 10 14 to 8 thousand troll - capital o to write to a file root troll and then exit out go back to Sonny who can sudo this file and that was odd I try this again sudo W get 10 10 14 - rue troll I think there's a task that is writing that file back this is annoying let's just open up a second SSH session to this box and 76 let's specify the port and the key algorithm there we go sunday and now let us just execute this file root troll w get the file suit out let me get 10 10 14 to 8 thousand patrol route troll put asleep here I did not do that quick enough it'll be better if I just do sleep 5 this command ready and soon as I see it W get to execute this and there we go we are route and if we look in the files we can see a script that runs every single 5 seconds and rewrites route troll which I guess the name of the script does suffice since it is a pretty big troll there are there is another way that I like doing this box better then this file and that is going back to the CM a user and creating a script to exfil files and then overwrite shadow we don't have to do the script XML files because we already found the constants a shadow but the reason why I'm one showing this is because it's useful for engagements and if we didn't have that - I and W get it shows a another thing let's look at the options of W get and see if we see anything interesting the main thing I'm looking for is a way to put files so we can do what we did in Olympus with curl and the very first thing I see is post file so this will put the content and file at the end of the HTTP request and make it a post but I don't see any options for changing the method to a put if we had that we could probably add a header to make it a valid put request and do it the same way we did an Olympus but without that what kind of stock so we can make a script on a web server to handle a post file it's just a little more work so let's go into showing exactly how this works if we do sudo W get post file let see shadow and ten ten fourteen - let's just do this and start a Python web server or not Python web server let's just start netcat so we can actually see the full request so we see the request to you post to slash and then here is the file so let's kill the HTTP request to another netcat up and we can instead of just going to 10 10 14 - we can go to a script that will create let's say upload dot PHP and a argument of the filename so now we have opposed to upload dot PHP we're sending a argument and the contents of a file this is something we can actually work with so let's go create a new directory inside of SRV I just do this because it makes sense to put web files here so create a PHP directory and upload dot PHP and this should just be pretty simple file put contents upload and then we can do request file a name and then file get contents this would be what we're sending and if we just do PHP input this would be everything at that bottom of the HTTP request now if you're looking at this your nurse there's several vulnerabilities in this grip number one they can just drop a PHP script and upload and then execute it so we can fix that by playing with you mask settings which we'll go into so they can no longer read what they upload however we don't have anything filtering them or stopping them from putting like dot dot backslash and escaped in this upload directory so I'm going to create a variable F name and we're just gonna do base name and then this request well let highway wait too much and then put weird stuff that was odd highlight this ctrl C paste an egg's base name so now we just fix that directory traversal vulnerability so we can put F name here I can type and that looks a bit better so let's create the upload directory and then we can create a file so touch test and we can read write read read so if we chmod this two two two two we can only write to this file however because we're route let's do because we're root we can still read this foul despite the permissions saying we can so if we create a new user on this box let's just call him yep go into him and then don't have write permissions here I do not let's see hmm yep upload then if we echo please subscribe to test the file was created with read/write permissions so I can read that file if I chmod that to the twos I can no longer read it if we want to make all the files we created on this box only write permission we can do that with you mask and this takes the I think inverse of 777 I think that's the correct thing so the dimmest between 5 5 5 and 7 7 7 is 2 2 2 so now any file I touch is going to have permissions to 2 2 so now we got that web server all the files setup for web server we can do the little-known thing of using PHP to set up a web server and listen I can't do port 80 because I'm not a root user and I can't listen to the privileged ports so I'm just gonna do port 8000 1 and this is very much like the Python HTTP server the difference being is this can actually execute code if it has dot PHP and has those things so now we can do this pseudo double you get post file at C shadow to our IP change it to port 8000 1 and the file name is shadow we can see it says it uploaded if we go to sov PHP upload it cleared that file and it's the owner he can only write to it so we should be good from any codecs we could test this by just saying let's the exploit PHP and we can create a file PHP info and upload this sway dot PHP and this file will be exploit dot PHP so now on this there is a exploit PHP file and if we double you get 10 10 14 to 8 thousand 1 upload exploit dot PHP is it going to have Reaper missions to execute this nope it does not we get a 500 server error so we should be safe from that aspect so we can catch shadow and we see what we expect so let's edit this copy the password hash for Sammi which was cool dude go up to root and we will replace his hash and then copy shadow upper directory and then chmod it to be 644 so now it can read and write to shadow so I can do W get eight thousand one shadow - capital o let's see shadow I have to do sudo and now if I do su - cool dude we have the access to route and then if I was upset conscious I could just copy this and set his shadow file back to whatever past when he was and it's like we were never there and if we were extra cautious we could probably set the timestamp back as well but we're route we can see that file there's other ways you could do this you could drop things in like crontab or for a spool cron whatever and create a card entry to execute code dot ssh directory doesn't exist and I don't know if a way you can make W get through sudo obey a you mask so we couldn't create the dot SSH directory and create a SSH key if we could control you mask you could do something like let's just stop this web server exit this let's go make the Python make dot SSH and then ssh-keygen directory sov Python SSH sov Python SSH ID or sa so now we have that we can move IDRs a dot pub to be authorized keys and then we could probably do something like let's see dub to dou W get - M for mirror and I don't have to change directory 1 - h c include exclude see a directory see no force creation ok we want - capital P to save to a prefix so I will do sudo W get - P / root - m2 mirror and that should be good to be server it's on 8000 so if we look I don't think that created on SSH on my directory we have to start this on port 8000 one to get there shadow file back because I changed it back place on em server sudo W get ten ten fourteen twelve eight thousand one shadow Etsy shadow there we go cool dude so it created that it didn't create that SSH I wonder where that just save to CD /root oh it created 10 10 14 to 8 thousand and then darn SSH there's a different W get thing to not create that directory let's see if we can find that quickly - n capital H no host directories so - P - n capital H and if we look at root it clear that SSH we have all the files we need here to do the SH key unfortunately the key doesn't have the correct permissions so this won't work so we could verify that ax algorithm let's do root and - try to specify the key sov Python SSH ID RSA and we can chmod 645 on so because the permissions are not read only for the Solaris web server that method doesn't work I just wanted to show that you could go and create a directory path if you so needed it so hope you guys enjoy that box take care and I will see you next week