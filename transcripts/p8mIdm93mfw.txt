 what's going on youtube this is ipsec i'm into impressed from the uhc january finals this is a box i had created and when i created it i didn't really know this whole attack path i just know whenever i ran wp scan it always told me i should disable the xml rpc interface and i didn't know exactly why i knew you could brute force like logins with it but you can do that with wp login so i didn't really view that as a security thing so i dug around all the methods you can do in this and decided to find an attack chain that used it so i installed a multi-factor authentication plug-in on wordpress noticed it doesn't take effect on the xml rpc interface which isn't a surprise because number one it's legacy and number two it's meant for machine authentication not people and machines don't really do multi-factor authentication so with that i decided to poke around at what things i could do i installed the php anywhere plug-in that if you put php in a wordpress post it can actually execute and notice from the xml rpc interface i could edit that and get code execution so that is pretty much the essential of the box and also for root i threw in pound kit because that was hot at the time so hope you guys enjoy this video let's jump in as always we're gonna start with nmap so dash sc for default scripts sv enumerate versions oh a output all formats bring the nmap directory and call it pressed and then the ip address of 1010 11.142 this can take some time to run so i've already ran it looking at the results we have just one port open and that is http on port 80 and its banner tells us it's an ubuntu server we also see it is a wordpress site from this http generator tag or script and the title is uhc january final so let's just go take a look at the page to see what we have and just like nmap said we have a page it doesn't exactly look like wordpress at first glance but once we start seeing like the comments uncategorized this is beginning to look more and more like a wordpress site we can also just do like wp admin and it directs us to pressed.htb so i should go and add that to my host file so v etsy host and we can do 1010 11.142 put press.htb and delete this there we go refresh the page and we get our trusty wordpress site but this is really interesting we have this post hello world and it's giving us a bunch of user agents the first one is just looks like wordpress i like auto updater it's got one ip here it's done it three times this probably my web browser we have 1 and 14 request and then this is nmap along with this i think this is just like testing the methods and this is an actual script or maybe this is the port scan and this is just the scripting engine as it says so the very first thing i want to do is try to poison this because i mean wordpress is php we have a table here that looks like it's php so uh if we put a php tag in i wonder what happens so i'm going to do user agent i'm just going to say php echo please subscribe uh we can actually just send this to the repeater tab so if we want to edit more later we can do that if we refresh this page we'll maybe see it we don't so maybe it's on some type of auto updater so i'm just gonna put a few things in here um i'm just gonna google like um ssi string i think it's on cobalt's website i just used this string on a previous video but whenever i start doing server side template injection one of these strings here is what i use so if i see an error message um chances are this is going to be vulnerable so let's go back to the post see what we have we do have the php echo and then it stopped i don't know exactly what i did there php echo i wonder there's no way that has to be url encoded i guess it just does not like double quotes maybe so that could be interesting let's try a single quote real quick and see if it works with a single quote and then of as always test please subscribe do you you wanna see it so if we well i did not expect that i have no idea what is going on here oh wait we have tests so it just stripped the double quote um doesn't look like we have anything that's some weird behavior here but in the uh single quote that worked double quotes didn't really um oh wait yeah it cut off after a double quote because it should have said please subscribe i'm just going to look at this do you really and we don't have anything here and if you watch peacemaker that was a joke on the intro i could have said taste it but um then the people that don't watch it would be really confused so i don't see that so maybe and the beyond root we can take a look at it because even though i created this box i had no idea that interaction existed on this so that's a bit weird however we don't see any server-side template injection additionally we don't see it executing php code now i did make one mistake it's like my motto i always should have some type of recon going on in the background and i did not do that so let's do wp scan dash dash url http pressed.hdb and if i had done this recon in the background i probably would have saved time because i'd hoped that this finished by the time i was doing my recon and i'm gonna do wp scan dash h because i want to see exactly how to enumerate plugins i always like changing this plug-in not version detection um just how it detects plugins too aggressive uh yeah this is the mode i want so plugins detection let's set it to aggressive and let's see we could really fill up the table with this random user agent thing but i don't think we have to do that i'm just looking at this see if i see anything else we did ap to do all plugins i think that should be it let's just try running it i probably should update my wordpress oh it's going to let me update sweet um maybe i should get like the api key for it but we'll see what happens here so it's running wordpress version 5.9 released on january 25th so chances are we're not looking for any type of exploits there because today is february 5th and uhd has already happened so wordpress was really up to date it was like the day the competition started or something but we also see this xml rpc seems to be enabled and this is going to be important later on in this video um this is the whole reason i created this box because you always see this enabled a bunch of guides say to disable it but no one really knows why so i decided to play around with this and um yeah so let's see what else do we have here that's the version the theme being used and now it's enumerating all plugins the aggressive method and you can see oh it's going to take a while so i'm going to take off that enumerate all plugins and then we're going to run it again after uh wp scan finishes because this should only take like a minute to run so maybe it's the aggressive method we also want to take off let's just run it blind so it's going in retrogeek no plugins found looking for config backups and it looks like we did get one backup this wp.php wpconfig.php.back so that's probably what we should look at right now and while we go we're gonna run wp scan in the background this is gonna probably take until the end of the video but we'll go over the results so you can see why i always say that is beneficial or maybe i'm just wrong and it won't find what i wanted to find even though i created this box i didn't really test everything i just tested the attack path and um now i'm actually i guess playing my box for the first time so let's move downloads wp config.back here and if we cut this uh let's see we can probably search for a password is it a capital p is there a typo there we go so we have the db user as admin and the db password as uhc jn finals and if you look at this let's see we should oh do i not leak the username here um wp scan let's see wpscan definitely can enumerate users so press.hdb i think for enumerate users and let's see does it output administrator there we go brute forcing user ids and we get admin so this is why i'm going to try the password uhc jan finals 2021. uh let's go to the login we can try admin put in the password um and it doesn't work however the year is 2022 so we can try updating that password and we log in but there is a multi-factor authentication thing here we could do a lot of enumeration here but this plug-in is up to date just like wordpress uh three attempts left so if we um try brute forcing this it's going to fail and we have to register a new number so there's no real way around that multi-factor authentication on this login form now there is one thing i wanted to show um a long time ago i had created a discovery method and go buster so if you do like go buster discovery go buster let's see back up files it was in player there we go so in the player video i share the code how i added this to go buster but this is a flag i really like doing on pretty much every website because you saw when wp scan did it it tried like enumerating backup files aggressive method and everything just does a really bad job at enumerating backup files so i did it kind of how i thought it should happen and go buster and i'm going to show you real quick because i'm really proud of this i wish it would be incorporated more tools but let's see i'm going to do wp-config.php because that's the file that probably has backups i'm going to do go buster directory mode url http press.hdb dash w for word list i'm going to specify this i'm going to do the well we can just run it like this and it only finds wp config but what sd is going to do is it's going to take all the results from uh go buster and then pass it through to my discovery logic and actually hunt for files and we can see there is a vim swap file so let's try just downloading that so i'm going to do wget slash that and we're going to see if we can download this file we can so in vim if i just do vwpconfig.php which doesn't oh i thought that would um prompt me saying there's a swap i'm guessing this is because parrot does swap a bit weird because um i think it's using like neovam or something like that so let's see i wonder if i can just specify the file and it opens there we go but let's see i'm not exactly sure how to do this piece now um because this is getting written in some weird directory let's see vim recover swap file original vim dasher okay so dash r for recover probably dasher unable to read block 1 enter to continue i am at a loss here strings ubuntu template that's the host name is this actually empty so this file is empty so even though the swap file existed it did not put the password there so this whole method was a sham um i did not mean that to be a sham but thankfully uh no one found it i guess i like opened the configure when i was doing that i didn't save something i don't know but that is a good thing to do thankfully you can just increment the number by one and get the password that way that's the way i figured most people would do it so there is multi-factor authentication here now wordpress as i said before has this xml rpc interface and that whole interface the purpose of it is so programs can talk to wordpress without using some complex api it was created a long time ago mainly for like the pingback system so like if a automated post links to your post it can automatically leave a comment do some weird things but since it's you meant for services not people um it is like bypassable for multi-factor authentication because the service can't really do multi-factor authentication and it's legacy so the people that create those plug-ins don't think about um the legacy authentication methods it's much like when a multi-factor is first done for exchange i believe that it's if you enable um imap or pop they can't really do multi-factor there so you can still read a mailbox because multi-factor just doesn't work in that scenario and this is the way around it so i'm going to google let's see is it python3 or python xml rpc client wordpress i think this will be it yep this is the client i like using we could just go into um xml rpc wordpress documentation but when you start interacting with this via php you're in php and it's not as easy but this is a good place to go to get a bunch of um information about it we can do like example xml rpc list methods and this is going to tell us we're kind of on the right way so let's see is there a curl command to do this php example where is it this methods i'm just going to say curl url encode i should have had this done before interact with d okay so this will probably work so we're doing curl we're putting it in the data and we don't i don't need to use username and password for this so i'm going to get rid of those all we want to do is do wp i think list methods not well formed method call method name c list that's not it come on i forgot to add wordpress in the search system.list methods we can try that system not well formatted so we have the method call we have a slash method call that's good method name slash method name that should be good open param open param so we have two opens that's probably the issue there we go um before i just had param and closing params so i just had to fix that but here we can get a list of all the methods just like in the documentation um one of those should sound really interesting let's see that's all wordpress blogger meta web blog oh it's going to that website press.hdb is what we want and there is a method here called hdb get flag and this is just a plug-in i had created to show people they were on the right way of this xml rpc interface so if in this method name i do http get flag we can see there is the user flag but we want to interact with this to do a bit more and doing it all mainly through curl as you can see is very time consuming so let's switch over to python and i use the um python-wordpress-xml rpc let's do pip3 install python wordpress xml rpc and we can see it's already installed in my box so if i look at the examples we can see kind of how it works uh examples result come on uploading a file so it does two imports and i'm going to change up how this works a little bit because i don't want to do it in a script i just want to do it in this python interpreter and there's one quality of life thing i can do so we just want to import the client i believe and the other thing we want is to import all the methods here but i'm going to import that as wp uh let's see import wordpress xml fpc as wp so now i can do wp dot and get a bunch of methods so i can do like wp.post and we can see how we can interact with the post so these two imports are what we want write those down if you want and now we have to create the wordpress client so i'm going to do client is equal to http press.hdb and we could do like client dot and see all the things we can do wait um i forgot client is equal to client like that and it's telling us we need a username and password so let's do username is equal to admin and password is equal to let's see cat wp config php back prep for uhc and we just want to grab this password 2022 there we go and we have an error oh because i don't have xml rpc always put that on it so now if i do client dot we can see the things we can do um the main thing i want to do is call because this is going to call a method and that's why i do wp dot and we can see the methods we can do so i can do like wp dot users and let's see is that just going to get users or do i have to do dot get user yeah so this is like the users object so i'm going to do get users and we see there's just one user admin i'm going to do 0 because that's in a list so i just want to get this admin object i'm going to say u is equal to that and then if i do u dot we can see a bunch of other things we can do so we can do like u dot roles and see he is in the administrator role if we do display name uh we could look at his email if we wanted so that's all fine and dandy but we don't really want to do anything with users maybe if we could like disable multi-factor that would be good but multi-factor is handled by a plug-in so the first place i would go in this is like uh there's a get settings and this let's see probably have to go back to list method unfortunately um let's see list dot list so there is a let's see get capabilities i think get settings come on what is it i'm just gonna go to the documentation so wp or we'll do git settings xml rpc wordpress let's see small rpc design layout set option that's what it is it's get options and set options so this would be able to modify just the um straight um like settings in the database of wordpress and i spent a lot of time when trying to create this box playing around wp get options and set options but the one thing here is it is a white listed set of options so you're very restricted at what you can get and what you can set so there's nothing really dangerous here that you can do with this setting i was hoping maybe i could just do wp get options and disable the plugin or maybe even get and set options to allow me to upload php files because if you look at all these methods there is a dot media and there is let's see media there should be upload file there is so if i go back here let's see i just go to google python xml rpc upload file we should see how we could do it let's see upload file example maybe see we want file name um xml fpc client so this needs to be base64 i just want to go to this the actual page so name picture.jpg so let's prepare this so i'm going to do data is equal i'm going to copy this so data equal open dictionary just paste the whole thing so we can do data name and make that equal to please subscribe dot php okay and the next thing we need to do is get a base64 blob so let's see with open file name so with open let's just create v test.php php echo success like that test.php read binary as image sure and i'm probably going to get an error here because i don't have this xml rpc client we need to import that shoot there we go that is imported so now we can say this okay if i do data again we can see bits is this xml rpc client binary object i think that's just literally base64 but let's try this so r for response is equal to client.call wp dot media dot upload capital u upload file and we just pass up the data object we created and it says we're not allowed to upload this file type so if i go back into data we change please subscribe.php to um jpeg we can upload the file and if we look let's see it's created this wp content directory so let's go here should be able just to go you can see nothing's happening if i curl this it just prints out the php so we don't have any code execution we can't change the extension so another thing you may want to do like try the get setting set settings or whatever that was get option set option to try to change that but again it's wait listed options you can't change what it declares a media file so no way of just uploading php code that i know of so the next step is to go back into this and see what other things we can do well the really weird thing about this box is um let's see if we go back to this this table this table is weird because it's exiting code obviously we can see wp scan has created 61 000 different requests from just one ip here and it is still going um we got another 10 minutes left but let's try to enumerate what that post looks like how is it doing that so i'm going to do wp dot post and we can do get posts like that oh wait we don't want to do our equals we can just call this and there's only one post on this box i can specify it with zero so i can do p is equal to that we can do p dot and see various things so i do p dot user it's going to tell me id1 created it but we want to see the content of this post so p dot content and we can see how it looks now this is weird we have this php anywhere or a php everywhere tag so um chances are this is just executing php code if we google php dash everywhere php everywhere wordpress we can see it's just a wordpress plugin so they have this plugin installed and they say you know what people probably can't edit this plugin because we have multi-factor authentication for getting about we may be able to edit a post through the xml rpc interface so let's see exactly what this base64 is and it is url encoded and it's doing file get contents ver www.html output.log so it's just doing um a simple print we can probably just put this in cyber chef or we could um let's see see if i can do this real quick off top my head import url lib yes x is equal to this uh we should do double quotes because the single quotes already in it and then url lib dot unquote odd done purse is there unquote unquote x there we go i didn't python off memory that i'm actually surprised i remembered that one but if we can see it's just doing a simple php thing so what we want to do is either create a new post or just edit this post and add a different php everywhere tag so we have the p which is the post object so p dot i'm going to do id is equal to 2 so now we've just pretty much cloned this post and what i want to try is creating a new one so client dot um call wp dot post dot let's see new post i'm gonna pass it p and just see if this magically works we got post 48 and if i go back to [Music] this do we have two hello world post we do so now we have successfully just created a post it's doing the same exact thing um we could probably delete the post so if i do wp posts let's see delete post it's probably going to error and i just want to see what parameter it's looking for i don't know let's say id is equal to 48 let's see python xml rpc client wordpress delete post here's a method delete we want post underscore id so post id doesn't want this as a string let's see xml post delete post post id id of can i just give it p there we go i can do get post and then delete post that way if i refresh this page we only have one okay that works that's actually a funny way to do it but let's see so p dot and we want to set the content to something different so let's create a php file so i'm going to call this right.php this can be my very first one i'm going to violate my principle of keep it simple because um mainly this is like uhc and i want to show the path i would do first and the first path would be the opsec way so other people don't find out exactly what i'm doing and use my own web shell so i'm going to call file put then contents to try to write to a file i'll call this ipsec.php and then what i want to write is some base64 so we're going to create yet a another thing so this will be shell.php and we're just going to do php like that and then we'll say if um let's see server remote addr is equal to we'll say not equal 10 10 14 8 then echo get lost i don't know why it did a square bracket there and then we can do system and we'll call this request ipsec or we can just say cmd there we go so this shell will just automatically check if the ip address is 10 10 14 8 which there i am and if it is it'll go here which we can do the system command if it's not then it's going to tell them get lost and never execute this as long as i put the die statement in i could have done equals the ip address as well i don't know why i did it this way but um guess how my mind thinks so now we have a bunch of base64 so we can copy this then paste this in and i don't know if that may have had a php decode base64 so i'm just going to google it base64 underscore d code simple enough so do that and we can say base64 underscore decode and i'm really going to hope that um my keep it simple philosophy doesn't uh come to shine because if this fails i won't know where it failed and this we also want to base64 encode because this blob wants it so we kind of got like base64 inception so i'm going to copy this whole post the post.php or sure it can be post.php it doesn't matter on my box and i want to go to the base64 code here and we're going to copy it so grab this paste there we go catpost.php and this one should write a web shell um in hindsight i probably should have added something to i guess we can add it real quick output and then echo success that'll probably be the better thing to do real quick so now we at least know if a php code ran or aired out code delete paste there we go i don't know why minimize that because i need to copy this i don't think i have single quotes in this so i should just be able to do p dot content is equal to this and if i call uh new post on p we get 52. so let's go back here oh there's three post i probably should delete some we have success so i'm going to try ipsec.php cmd equals id cmd is equal to id and that did not work so something is weird there but it definitely wrote ipsec.php because if i do ph it doesn't work so i think i just forgot to put an echo so v there's like a few ways to write um do command injection php system i don't think outputs the result maybe exec does let's see this request that should work we can make dirt www cp shell just test it out real quick php dash s 127.01 8 000 okay 127.001 8000 test.php what i call this file shell.php okay cmd is equal to id get syntax server v shell um scr oh i need to put this in quotes like that so this is why it always helps testing out your code and system outputs it already so that's why we see this id or this output twice because system is going to output it and then we're going to echo and output it again so this now we have a good web shell so we want to base64 show.php grab this then we want to go into write.php and paste it and i guess we can call this ipsec2.php just in case um a file put contents decides it doesn't want to write it because it exists so grab this and we can redo it so we should probably um p dot id is equal to 52 delete post invalid post id oh well i'm not going to bother deleting post uh let's see p dot content is equal to we had it here let's see v post.php this is how we did it got it base64 grab it and i'm really gonna hope this works so p dot content is equal to that call new post we got 54. so we can go back to the page press.hdb and i don't know why ibase64 encoded that post p dot c can we yeah let's do p dot content is equal to this new post 56 so let's try the next one it says success so ipsec 2 should exist it does and we have command execution awesome so now we can potentially enumerate the box if i try to get a reverse shell um the first thing i do is like a test with curl 10 10 14 8 we can do 8 000 on our box nc lvnp 8 000 never gets to us um i wonder if i can ls slash etsy is it iptables we can see a rules.v4 in rules.v6 file if i add a la let's put this in view source mode we can see the rules.v4 is somewhat big oh anyone can read it so if i cat this let's see etsy iptables rules.v4 we can see the iptables rules so the default policy input is set to drop output is set to drop so if it doesn't match any of these chains or whatever it's called um it's going to drop it so it allows localhost it allows icmp type 8 which should be an echo response no this is an echo request i believe so we can ping the box and then also if the port is 80. so we're only accepting ping request and port 80. and also if you're on the local host interface on output we have this icmp so this should be the icmp reply message on accept and then if the state is related or established accept it and then if it's localhost also accept it so what this is doing is essentially blocking any syn packet outbound because when we do this call request or reverse shell we're not a related or established connection so iptables isn't going to allow it when we request to the web server we're coming in on port 80 and then the kernel says okay this is either a related connection or established connection and when it gets to ip tables it allows it so that's why we can access the website and do things over http but we won't be able to get any type of web shell which is a bit of a pain so let's go back to this and we have a few options of what we could do we could just like completely live in this shell because we can obviously run commands so uh we're probably happy with that we could create a like python cmd loop just so we have a better way to run commands but the downside to doing both of those is we don't have a persistent session every single command we do like if i do uh pwd i'm going to be inverted www.html if i went cd dot dot and then do pwd again it's still going to be verb www.html because every single request is um being a new shell and that can cause some problems with some exploits so people generally like just getting reverse shells and then of course doing the upgrade with pty uh the best way i know about doing that in this situation is a forward shell which i didn't coin the term but these definitely are not common if you go to a lot of guides chances are they probably don't talk about these that much um yeah i say it here um if you just go to ipsec.rocks and type forward shell and you'll see me using it a lot and it's been quite a while this is probably the last time i used it which was on this compromise box let's see how long ago it was uh wow almost exactly a year ago so what i want to do is grab this code and modify it real quick to be used and a lot of people's like complaints with void shells is they take a lot of time to set up and if you did it correctly um like this script isn't correct it's more meant for like learning to teach you how to do it so you can um conquer the world but i'll show you how i would modify the script or we'll see if i can modify it a year later so right here in this initialization i can see um it's doing my proxy to burp suite so i just want to make sure my burp suite is on i have intercept off so it doesn't hang later and it wants us to modify the url so this is going to be where a web shell exists so i'm going to do press.hdb and then slash ipsec2.php and we can leave the proxy on i just like having proxies to debug and then if i wanted to go faster i can disable it later and what this is going to do it's going to map standard n and standard out to a file and it's just picking a random number here and this is how we gain persistence because we can't depend on the network socket to stay open so we create two files on the server and keep reading and writing to those files and that's how a shell stays alive between requests again if you watch the circa video that's kind of where i explain it much better uh set up shell read thread those don't say modify so i'm not going to modify them the next piece is we want to modify down here because it says modify this so let's see this is where your payload goes looks like we don't have to modify anything because our payload is just straight uh command because that's what this is if i was doing like shell shock or something like that that i needed or maybe like a server side template injection where i needed to put my command inside of the actual exploit that's why i'd modify it so like if it would execute cmd if it was in these brackets i would do that um and then this is saying modify how we interact with it so this is writing the data and we did user agent because it was used in shell shock back then so i'm going to switch it up to do data because i just want it to be in the request so data and the argument is cmd that would be this and the actual payload is like that okay and now we're trying the request i'm going to change this from a get to a post because this does support both because i use the dollar underscore request and post requests are generally more stable than get request also it doesn't put all of your commands and viral log which is definitely good um we're not doing the headers anymore again we modified it up here now we're just doing data so i can just change this out data is equal to data and i think that's it so um i'm just going to execute forward shell and what i'm going to do we'll intercept it so we can see it working so right here we can see it's doing the um make fifo or i don't it's making the pipes dev shm input and output so we can forward that and now we're just going to cat output to make sure it worked and we're here and every like 1.3 seconds is i think what the interval was set at it'll try to read output so if i do id now i'm echoing id this is going to be base 64 into input if i want to view that in decoder so you can see it this is just base64 so if i went here decode as base64 you can see its id so it's just writing id to input and then reading output and we can see it got the id so i'm turned burp suite off intercept so we can just do this quickly if i do pwd we're inverted dub dub html and go up one directory do pwd again and we see now it says i'm in ver dub dub dub so we are now have a persistent shell um a super recent vulnerability would be the um phone kit which is in the like um let's see we actually just released a good blog post on this and i'll go over what i think like was really unique in the blog post clubby did a really good job about this but if you go here we have a lot of good blogs now um definitely check out like thought process behind delivery that's one i'm proud of and the chuck wilson interview is good if you want some motivation but for this we want to check out pwn kit so let's see um this post talks about it but there was one really funny piece about information that clubby had found i don't know where he read it but the bug was noted here in 2013 if you went to this post you see them talking about it and just saying i don't know how to exploit it but um rgv is doing something funny with pk exec and it's a pseudo file but this is the actual exploit we'll be doing um let's see bk exact dash h the real downside to this um i'm trying to figure out how to do the version pk exec v is my shell dead no but this binary has a way to show versions pk exact v cannot run program it's a dash dash version and my computer may be vulnerable we'll see what the version here is so uh i don't think my computer is vulnerable but the downside is i'm trying to show um when the patch happened to this binary uh they didn't increment the version so you can't depend on that to decide if it's vulnerable so we can see this was april 14th 2021 and if i look at this one user bin pk exec whoops i forgot a space lsla user bin pk exec we can see this is july 20 uh july 14th 2021 and this vulnerability is uh when did pwn kit come out uh phone kit it's probably gonna get spammed with a bunch of things qolsys on january 25th so of 2022. so this is definitely vulnerable they just did not increment the version so we have to find a exploit script so if i just do pwn kit exploit poc github we can try one out let's see what is this is this going to be good we can i guess try this one this looks like it's just one file in c i'm looking at it and it looks good so let's copy this and compile so v pwnkit.c we'll paste it i think that's good set uid that's good okay let's try it gcc to compile uh we probably want to output it to a file name just to be good and now we got to get this file onto the box um this is probably small enough we can just base64 it uh still relatively big and i don't wanna just basics before i'm going to actually use the python thing to upload it and the reason why i'm doing this is because uh how we have this shell set up currently is it's going to constantly like base64 right to a file and then execute based upon it writing to that file and that's just not a efficient way to send a lot of data so i'm going to change this to be prone kit and oh we should have copied what the other line was we're just doing that same wp method to upload data so like this that should be fine if i look at data we can see it's writing to please subscribe jpeg it's saying it's an image but we know it's not so let's do upload file see if it uploads just fine r it should be please subscribe dash one in this directory so i'm going to have my shell go to this directory for let's go cd www.html go here pwd see where we are do a lsla and every time before you run something always md5 summit to make sure it is what you expect at least when you do things like in a funny way so we upload this file in what i'd say a funny way so i just want to md5 summit make sure it's the same chmod plus x we want to put please subscribe one.jpg and now we can try executing this file so let's see what happens it's going to come back i do id and now i am suddenly root so i can go cd slash root and we can read the flag so that is kind of how i intended this whole box to go um no one actually got pound kit in time wade was super close but he had some like uh um encoding issue so when he was uploading a file he didn't do the um md5sum after to make sure and his base64 output had pluses and the server when writing that base64 to the disk treated those pluses as spaces so it was invalid base64 and he couldn't execute it but he did do something really cool um that i kind of thought of i didn't realize it was so easy but what he did is just modified this exploit and changed it to copy files so let's see um i want to do which cp to see where it is oh user ben i expect to slash pin um which cp that's not in my shell cp okay it's in user bin cp slash root uh let's just ch mod root uh yeah let's just chmod root which chmod use a bin chmod so use a bin chmod dash capital r to be recursive we'll make root 777 probably the stupidest thing we could possibly do but we just want to get that flag right so i'm going to save that i don't know if we need a space here or not i don't think so that looks fine let's do gcc pound kit we'll call this prone kit 2 and then i'm going to type exit here so first id again i'm in this weird persistent shell so i type exit i do id again and i am no longer root awesome so let's go back to a python and we just want to change this to be prone kit 2 bits ok upload file data and we should now have please subscribe dash2.jpg so chmod plus x i'm just going to do pl star so everything in this directory is chmodded and let's just execute this so 2.jpg and i probably should have looked at slash roots permissions before i just ran that command but now we can look at it and see root is 777 so uh hold on that's not what i wanted to do let's do chmod 600 slash root uh we probably have to uh execute a shell correctly again hold on because i'm in this four gel i want to show this working not in this forward shell so let's re-pop the box to get root and then we can change the permission so 1.jpg and then we will chmod 600 slash root and ls la on slash and root is now just 600 we go into our shell and we can do www.html wp content is it slash uploads 2022 that's why i'm drawing a blank i'll just do pwd 202202 slash o2 cmd let's do ls okay so now i can do please subscribe dash2.jpg and we just want to execute this file and again lsla on slash grep for root i guess that pipe doesn't work in this forward shell but where is root 600 run it and lsla on slash 777 so that is a way you could have done this box without um getting the forward shell is just have the exploit change permissions and get the flag uh the reason why you needed the ford shell if you wanted to get an actual session as route again is because uh you don't want your shell to terminate after your command the other thing you can do is just run the iptables command and enable it so um iptables dash a input dashj accept and then we could also do the same for output dash a output dash j except and of course you probably would want to um set your like your destination ip and source ip here so you're not opening it for everyone but now if i ssh to press.hdb we should see ssh is open and just that confirmation means if we try to curl and get a reverse shell curl 10 10 14 8 port 8 000 we could do that and you'd have to run those iptables commands inside of phonekit.c because again www data doesn't have privilege to modify iptables so you'd just be putting it here instead of the ch mod enabling the verse shell then you can do what you want there but um the last thing i want to show now that it's been probably long enough the wp scan output of us enumerating everything so or at least all the plugins so we can see the relative url plugin is installed if you look at this this is just a plugin because by default wordpress puts absolute urls into everything and that's why a lot of wordpress sites you need the dns name because it's linking to http colon slash the host name of the box slash wp content doing things like that so doing relative url just makes wordpress not do that so the links work on various hosts i'm not sure exactly why wordpress likes absolute paths but it does the next thing we have php everywhere um this version's out of date i don't think maybe they just released a version but at the time of creating the box this application was updated um and then we have mini orange two-factor authentication we can see this one is updated duplicator um is this just an lfi left on the box maybe there's yeah i guess i left an lfi on the box um what is duplicator maybe i should just log into the box real quick let's see do i still have a shell iptables dash l shoot id i should be root yup ver www.html and we go to wp content doing ls here let's go into plugins and let's see i'm just going to move let's what is it mini orange yeah this so if you want to disable a plugin on the command line you can just move it outside of the directory if the plugin doesn't exist wordpress will automatically disable it so now that should let me log into the box so if i do wp login.php we get here admin and then we gotta get the password so let's go to a bash prompt and cat wp config grep for uhc and grab everything and put 2022 and then we can log into the box let's see go to plugins duplicator i wonder if i left the vulnerable version on this this is probably uh let's see cd duplicator ls maybe this is when i copied the wordpress here or it's just a vulnerable version wp scan is not saying it's vulnerable so maybe i didn't do that if i cut it let's see what we see [Music] or we can just go exploit db duplicator 1326 file read so let's try this real quick i'm kind of curious if it is vulnerable so let's try this go to press.htb etsy passwd invalid installer name so i'm guessing it is not vulnerable or we have to put a bunch of dot slashes always helps to read it like that hey i think it is what do you know um less downloads passwd so you could probably use that to get the wp config why wordpress wp scan doesn't think it's vulnerable i don't know but um yeah that's potentially a way to grab this wp config and why i always say to run wp scan as a aggressive check with all plugins so um yeah i left that lfi on so you don't even need the backup file to begin with that was just i guess a hint because when i created the box i didn't want to like abuse vulnerable plugins um i had started going down that route but i really wanted to create a box that was exploiting wordpress based upon just a bunch of informational messages and just being like huh there's php everywhere installed multi-factor installed let's chain the xml rpc to get around multi-factor and edit php everywhere um i think there was one more thing i wanted to talk about but i can't remember so i guess that'll be the video take care guys and i will see you all next week