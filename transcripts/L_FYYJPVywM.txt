 what's going on youtube this is ipsec i'm doing unbalanced from hack the box and i really like this box just because it starts off with a lot of enumeration moves into some custom exploitation and then you get root by using a cve so it really covers the entire spectrum the enumeration you do is all straightforward you don't really have to jump through any big leaps so that's cool and then the middle of the box the custom exploitation was my favorite part because it involves xpath injection and you just get a login form and it looks like it's sql injectable you do some sql injection payloads and it all works up until you actually try to weaponize the payload and like identify the database because xpath doesn't really have comments like sql does and once you find out its xpath injection you can build a script to extract passwords one character at a time and just get a username and password that you can ssh into the box once you're in the box you do some uh examination of arp tables and find out there is a pie hole instance that you can do a port forward to and that is vulnerable to a cve so with all that being said let's just jump in as always i'm going to start over the nmap so dash sc for default scripts sv enumerate versions oh a output all formats play in the nmap directory and call it unbalanced and then the ip address which is 10 10 10 200. this can take some time to run so i've already ran it looking at the results we have just three ports open and glancing we don't have any web servers but we do have a squared http proxies to be fair however the very first port is just ssh on port 22 and it's running debian it looks like it's version 10 update 2 which is pretty up to date so i'm kind of just going to ignore ssh for now then we have ersync on port 873 and it should be important to note that um rsync generally piggybacks off a secure protocol because if you just see this it's over plain text so generally you won't even see ersync listening it just supports working over like ssh that goes over 22. so seeing this means ersync specifically called out which means we should take a look at it and then the final port is just squid running on port 3128 which is a http proxy so i'm going to take a look at squid first because this is something i can script to look at in the background while i mainly poke at rsync so squid itself is just a hdp proxy and the main way we look at this is just seeing what it can access we scanned the ports of this box and we didn't get much in return however um we scanned from our ip address which is 10 10 14 2 and we went directly to the server which is 10 10 10 200. with squid uh we actually go to 10 10 14 2 2 10 10 10 200.3128 and then this can actually bring us to a different port so we can use this to access port like 127.001 and then anything so we can see if that port is listening through squid and if you want to see more on that we have done it before so if you just go to like ipsec dot rocks and then type in squared you can see we did it on joker and probably inception as we're using it to pivot ports so we're just going to set this up to go in the background so to do that um we're going to use and i don't think fluff has a way to just do a range of numbers so i'm going to do a word list that's just a number one through sixty five thousand five hundred thirty five which i think is all the ports um i'm just gonna google six five five three five ports do i remember that correctly yes so that's max port so i'm just going to do a quick word list so for i n uh sec 1 through 65 535 do echo i done and pipe it to ports so now we just have a text file with everything in it there's a bunch of other ways you do it i'm sure tr has a way there's 101 ways to create that file i just like using for loops so now i can do h again and the first thing we want to specify is the proxy url so i'm just going to go like this so we have both the help and this the same pane so http 10 10 10 200 3128 and we can also make sure this actually works so i can go to my foxy proxy and let's add a new proxy so http 10 10 10 200 and the default port it shows three one two eight so this is the most common port for squid um and most people use squid goes under an uncommon port of 8080 but besides the point i'm just going to call this one unbalanced because that's the hostname of the box and now when i go and look at it so if i just go to 12701 we'll now get a squid error message which is awesome so i was just making sure it didn't prompt for like some type of authentication because squid can be configured to have user authentication which when we did that it would pop up a box saying we need to authenticate this shows there's no authentication there so we have the dash x the next thing we want is the url so 127.001 port uh we don't know that's going to be fuzz and that's just going to take everything from our text file which is ports so if i run this um at the start i did notice something weird so at 3 3 500 here but we do have some that are different so uh 57 is 329 or 397 and then like port 80 is i don't know where that went it is three four eight six so we have a lot of different sizes so i want to check this out real quick so 80 is 3486 in size and 66 is 3497 so just looking at this request we can make it bigger and then let's go to a second request let's just go to port uh we'll do 9001 and the main thing that's different is i can see it's appending 9001 here but here it's not because it's a well-known port so it's just saying http i'm kind of curious what happens if i do ftp uh address is restricted so we can't even go to that over firefox but yeah so that's it i'm going to just filter on the status code of 403 so dash fc for filter code 403 and now we're doing a brute force to check all the ports so we can go back to our nmap and we want to do our sync so i'm going to do rsync 10 10 10 200 and we hit specify the ersync protocol and when i hit enter it's not returning right away so this tells me that there's probably some type of reverse dns request going out to validate a host so i want to make sure if that is me and we have a it come back with the name and then description so comp backups encrypted fs backup configuration but the main thing i want to do is check if we're doing a dns lookup so i'm going to run wireshark and we're just going to look at this ersync protocol to see if it's giving a host name so i'm going to go to ton zero and we're gonna run it and there's oh shoot um because buff is running we have like a bunch of noise so this is the downside when you wanna do recon the background is your interface is just so noisy we can just search for rsync and it will probably pull out the packets and we're going to see if a hostname is being disclosed on the wire and it doesn't look like there is we got the version and then just saying that the other thing we could do is change our interface to be our external interface so well i just segfaulted but we can listen on each zero and then just search for dns and when we run this request again we can see if our box is making any dns queries it doesn't look like it is so we're not the one doing the dns lookup chances are the server is doing a dns lookup on us and that's just good to know as an attacker because just connecting to this port can mean that there's a dns request that goes out and dns is generally more monitored than ports so you may show up on some type of dashboard and if you're a sysadmin trying to figure out how to identify someone connected to your ersync port maybe um you have the logs in dns because chances are you're not like logging network connections but you are logging dns for queries hopefully so you'd be able to see it in that type of log um we want to download the comp backups so i'm going to do slash comp backups and i'll just say the directory is going to be comp backups where you write them to i'm going to add the dash a for archive that means it's going to archive it off the server back to us and the v for reverse so we see the files as they get copied we can kill wireshark and we should soon as this dns request fails on the server we should see a directory get created on us called conf backups and we have a bunch of files that were created so let's see we can just take a look at this so xxd on this file i generally open files up in xxd before cadding because if they can have like bad ascii characters it can screw up my terminal so this is more of just a safe way to display it and i just see a bunch of gibberish so nothing interesting there um i think bin walk may do entropy entropy let's see ben walk dash e maybe going off the reservation i haven't done this in a while but this is a good way to identify if something's encrypted or just um obfuscated uh i don't see what this is telling me i'm not sure how to interpret that i was hoping it would have like a line that tells me what the entropy of that was see is there a different way to do this i want to say there's a tool called ant yep i've used amp before so this is just going to be an entropy testing tool so let's do ant st l and we see the entropy is around 7.5 by bits per byte and the closer to 8 you get the more random it is so i'm sure if we still look at all these files um let's see for i n let's just do find dot or find dot dash exec and like that uh grep entropy and we can see all of the randomness um things generally in like the four to five range are going to be ascii um let's see hawk print three and now we can sort by number and it's less so we got one file that's zero uh we got 3.9 4.7 4.9 so we probably want to look at this 0.0 i'm guessing that file is empty and 3.9 so let's go back real quick get rid of that crap pipe it to less i'm just going to search for 0.00 and we get nothing and it doesn't have the file name in it that is annoying 3.9 let's see space 3.9 yeah it's not showing the file name that's annoying but we want to find out exactly what file that is so let's see um lsla xrgs or let's say 4i n ls dash la like that do and i done and we can echo i as well so less oh invalid option oh um ls-l ls-a we want a so what define command was doing was um looping on too much there we go so let's do 3.9 space 3.9 and we can see that file is this looks like it's just a rabbit hole there's nothing interesting in that file um we can look at all the files in this directory and we do see there is this encrypted fs6 i'm kind of curious why what this entropy was 4.9 so like i said it was in the 4 to 5 range that's going to be ascii text we could run ant against like ssh these configuration files like shd.config and we see that's 4.9 so let's take a look at what this one is and this is just a xml config file and with this we can probably um try to crack it so we can do a um encrypted fs to john i think this actually confirms it is encrypted fs 1.9.5 so based upon the entropy of a lot of files like um we do zx this is near 8 bits so we know this is encrypted well we have the xml file that pieces all these files together so if we knew the password we can decrypt it so i'm just going to google um fs to john and let's take a proxy off and there should be a script so we have this python script ncfs to john uh where do we download this source code uh let's see i'm going to do ncfs to john.pie see github let's see and go fast to john python here we go this is running a diff is there a way to just download this come on i wonder if it's all my box update db uh sudo and then we're going to locate it maybe it's just somewhere on the box locate and confess to john yeah we have it so it's already on the box and user share john so we can just run anca faster john on conf backups and we get this hash so we can send this over to john the ripper to try to crack it i'm just going to sh kraken and this goes to a box that i just have in my house because cracking is a very cpu intensive thing and i always hate doing it on the computer i'm working on especially in a vm because vms just crack so slow so i'm going to create a file called unbalanced we'll just do root unbalanced paste this and i can do dot slash john root unbalanced dash dash word list is equal to opt brock you dot text think that's it um ls oh there we go did it crack uh not found uh probably opt word list um i'm guessing that's where it is so opt word list rockyou.txt do i have it ssh kraken ls up word list yep that was the file and it says it has finished so use dash dash shell so i can do show and we see conf backups password is bubblegum so let's go back to our box and i'm going to create a file called pw i'm just going to put bubble gum so we'll just have a list of all the passwords of this box um if i go here that's the encrypted text so what i'm going to do is i'm going to move conf backups to encrypted backups i'm going to make a directory called decrypted backups and i'm going to run fs encrypted to decrypted see router mount point let's see maybe it wants full paths hdb like that there we go uh home ipsec hdb this is going to be unbalanced unbalanced uh password bubblegum and it's mounted so we can go into decrypted backups and we have a bunch of files so looking at these there's going to be a few files that stick out i want to look at the rsync first because that's the protocol we're using to see if there's any like hidden directories and it doesn't look like there is it's read only so we can't upload files to it and we have the path uh uid and gid so there's nothing too interesting about this the next thing we probably wanted to look at was let's see um there is a squid.com and i'm looking at squid because uh this was the port that's listening there's a lot of comments in this so what i'm going to do is grab v begins with a comment and we're going to hide all those squid and i'm going to do grep period and this is just going to show me all the non-commented lines so let's see we have some acls of just specifying local subnets so let's see this is everything that's a general rfc 1918 so these look to be the standard local host address so nothing unique there these reports will probably allow to access like 81 80 21 443 these unregistered ports so nothing too interesting there uh we have squid conf d local host um we do have a hostname disclosure so we have intranet.um unbalance.htb so i'm gonna go sudo vi etsy hosts and we're going to add an entry for 10 10 10 200 and i'm going to put that there i'm thinking i may want to put that as localhost um yeah i'm gonna do i'm gonna try localhost with that and the reason why is we're going through squid so this should be fine um if i wasn't going through squid i'd do that 200 address but because we're going through squid i want to tell squid 127 because hitting 127 is almost always going to work hitting the routable interface may not um we have their intranet being on the 172 16 range so if we wanted to create like a port scanner or ip scanner we'd limit it to this range however this is a lot of host so i'm not going to try scanning it because again that's a lot of host in that slash 12. we maybe will get it otherwise we got a cache manager password so i'm going to add this to a pw file so vpw i'm just going to paste that there and that's about it for the config so i'm going to curl intranet.unbalanced.htb and we have to specify the proxy i think it's just p 10 10 10 200 3128 and i think we got something let's see if that's any different than what we have been hitting so i'm going to change my suite back to unbalanced and we'll go to this url and we have a slash intranet page so i want to play with this login form but i bet if i just try like admin admin yeah this is annoying to do i want to send this to burp suite so i'm going to go over to burp suite go in the options maybe user options yep upstream proxy so user options upstream proxy and i'm just going to put http 10 1010 200.3128 so now we're burp suite um we don't put htp but now our burp suite will send to um this host so if we go back to our proxy tab intercept and i'm going to change to go through prep suite refresh the page send this to repeater and we're good so we got enter username password and it's not saying anything so i'm going to try to do a few things so i'm looking at the size 7059 bytes in that bottom left or bottom right and i'm just sending things that could cause error messages so i put a single quote double quote um just random symbols try it in this username field and i'm not changing the size but i am noticing something this internet host header is changing i've seen internet dash host 2 and internet host dash 3. if i refresh this page we're getting multiple so it kind of goes every other request we can go back to what we did and there was a squid cache manager password we got so that's gonna be the password to manage squid there's a squid internal thing so if we want to uh turn this off we access ten ten ten two hundred three one two eight slash squid dash internal uh let's see i don't think you can access this through a browser um you want to do through command line so this is um way to manage squared remotely and you wouldn't know this unless you configure squid so this is where like being a sysadmin also helps because you manage these things so you know what the passwords go to um the cache manager password goes to that squid internal is it mgo maybe yeah squid internal where is it come on no 10 10 10 200. slash squid internal mgr uh not https come on three one two eight pretty sure that's it we probably just specify the user um it's giving up the host name though when we hit this uh it's saying unbalance 3128 so we definitely know the host name of this box through this but as i was saying there is a skuid client tool that you could use to do this but all squid is is http so you can do this through kernel quest as well so i normally manage it through curl so we do dash dash user for user authentication and i'm going to do t h a what was the password cut pw let's cat pw here where's curl dash dash user then th a8 dollar sh1 and then http i'm just going to copy it from my browser let's see if we grab this paste see we get something different your cache administrator is something invalid url i think it slash menu see unbalanced 3128 cash manager access denied you are not allowed to access until you have authenticated yourself i thought i did just authenticate myself th i'm just going to copy and paste this so copy paste invalid url okay um i think i had sh a or lowercase s and need capital but we just hit menu we get like an invalid url but if we hit menu we get a menu of everything we can do i'm going to grab v disabled because i don't care about disabled functions and we can see the things we have access to um i think we could do like dash s for silent on curl to hide this download thing there we go so we have access to menu mem disk fully qualified domain name cache that sounds interesting uh histograms s buff events but i'm going to try to look at this fully qualified domain name cache and we get a list of all the ip addresses so this is falling into probably that slash 12 that we saw before we also have internet.unbalance.htb and i think that's what we've been hitting but we got internet hosts two and three and that is these but there is a intranet host one dot unbalanced hdb that we're not seeing um there's three two i'm going to take a wild guess and say dot one is internet dash host one dot unbalanced hdb so let's go and try that so sudo vi etsy hosts and it's going to be 172 32 what was it 31 179 31 179.1 and i think i copied i did not uh intranet dash host one dot unbalance dot hdb i'm making a big mistake here probably just typing it out and not copying and pasting but we'll see if it works so i go to intranet dash host one dot unbalanced dot hdb and nothing comes up we have to go through our proxy so intranet dash host one dot unbalanced dot htv refusing connections http see access denied maybe it doesn't know that host name so 172 i have this my clipboard so let's try accessing the port 172 31 1791 and we have who's temporarily taken out of load balancing for security maintenance so there's something wrong with this host and the previous box we were talking to um we just go to like intranet unbalanced hdb it takes us to intranet.php so let's just go to this page because maybe they just removed index and we get to the what looks like to be the same exact page so let's run a go buster on this so we always have something running in the background as we work so i'm going to do go buster-h so we can see how to do a proxy um let's see go buster dir h and let's see is there a proxy option dash p so let's do dir p htp 10 10 10 200 3128 uh dash u for url http do i have this on my clipboard i do so i can paste that w for word list or do opt set list and then let's see discovery web content and it's always raft small worlds uh word raft dash small dash words that i've been liking to use so we got that i'm going to add dash x php because we know php is running on the server and dash o for out file this is going to be intranet dash host one dot go buster so we have that running in the background as we take a look at this so i'm going to change this to go through prep suite and let's just try what we did before on this so clear our cache submit we go here go to repeater tab this is going to be um load balancer this is internet first one send the request uh 70 79 70 59 so there's something slightly different between these two um i'm gonna guess maybe this just has like dash one in it somewhere or internet dash hurst one or something not sure exactly what the difference between these two outputs is yet um oh it says invalid credentials i don't think i saw that on the other one so if we go here we don't see that so let's make sure these requests are the same we just did admin admin send don't have invalid credentials we do have invalid credentials so this is giving an error message the previous one did not so we have a difference there um so always remember 7079 and we're going to put like a single quote and we get 7185 so something on this page changed and it's hard to tell right off the bat so i'm going to turn that off and i just made this super small so i can look at the page so we have invalid credentials i'm going to do admin single quote and see what changes when i hit enter because more content got displayed to the page but it looks like things just got removed so let's go admin admin again i notice this got something added to it i'm doing a single quote and that line gets removed so nothing too special there but we did cause something to error out because we got a different thing by putting a single quote i'm going to try a double quote and it goes back to 70 79 and we have invalid credentials so i'm going to try enumerating the database or identifying what database it is so let's do single quote and then a comment 71.85 and uh let's see so it looks like that may be mysql so if we take that off 70 79 so maybe i'm going to try or one equals one and we'll put a comment at the end and see what happens 71.85 so we're not getting like an additional proxy header a cookie's header to set a new cookie and it's the same as just erroring out it's not saying invalid credentials or anything so i'm a bit confused by what just happened there i'm going to try to just put one quote and we get invalid credentials so that's weird um if this was my sequel we have now kind of just ruled it out because what we did was um whenever we see invalid credentials we have a valid query when there's no invalid credentials something crashed so doing this we get invalid credentials because we assume it's adding a single quote because if we make a balanced number uh and one two yeah a balanced number of single quotes uh we don't get this invalid cadential thing but there's an unbalanced one we get one match so maybe that's why the name of the box is called unbalanced i'm not sure but um we should have a valid sql query by doing this because we put the single quote here so this is a valid sql query and we put a comment which if they have a sql thing here to close it off um it doesn't matter because that's a comment so chances are this is not a my sequel database because that didn't work we can try other things like a hashtag and again doesn't go so right now we're trying to figure out exactly what type of database this is and having trouble because no comment fields seem to be working i'm going to test if the password field is vulnerable so we can do username is equal to nothing where password is equal to a single quote and we get 71.85 and valid credentials is not on the page so this is an invalid query if we do username and password blank and valid credentials pops up so this is a valid query i'm going to try or 1 equals 1 here and we get 7 852 bytes which is more than we're used to getting and if we scroll we have a list of emails so we dumped something we don't know exactly why this worked we just know that we did something and if we try to like put this comment again we go back to it not working or the query being invalid so at this point i'm trying like a bunch of random things to try to get this to work and i couldn't so then i'm thinking maybe it's not a database at all maybe this is going off like some weird xml thing and i'm doing xpath injection but it just looks like sql injection so i'm going to turn my proxy off and i'm going to google like xpath injection and let's see there's anything we want so this page is going to explain xpath injection and i was looking for a powerpoint going to click back and see if i can remember exactly what i searched i want to say it was like xpath injection comment because that's how i enumerate what type of database is running is i put a comment and truncate all the output the server is putting on so let's see this looks good and this didn't have a way to do comments but through this it did have a payload i liked so we can try what is it history where is the payload injection so we can try this payload and we're just going to change the double quotes for single quotes because we know that's what's breaking the application so i'm going to paste this and we're going to put a single quote and single quote single quote single quote we hit go and that did not work let's see i'm just going to type it out in case there's some weird like encoding option so let's see password is equal to and one equals zero single quote one equals one click go and that did not work i was really expecting something else see i'm doing something wrong maybe i should url encode this that's probably it um let's highlight everything ctrl u that was not it ctrl shift you to on url and code i'm gonna try just doing one equals one nothing let's see get rid of this there we go um i bet if we go down some they have a propeller that does not have that one equals one or one equals zero but now we have ten thousand bytes this is the most we've ever got and if we look at this um actually let's just do this in the actual browser so my proxy intercept is off we can go back to unbalanced go through brip suite i think we can just put anything for the username and then paste this and it's dumping a list of emails but this time we're getting roll equals blank a few times however this does confirm it is xpath injection because i can't imagine in what world this would be a valid sql payload so for reference we could do um dollar or one equals one and let's unmask this for you whoops go here go to this field uh type get rid of type equals password you can see the exact payload i'm sending we send and we just get a list of the users we don't get everything else so it did it dumped less but um we got everything that mattered we do have a few usernames like rita jim brian and sarah so if i go back here we can do vi users and put a few brian and sarah is there any other nope that's it and at this point my go buster is almost done and we've only discovered what we knew uh there's index.php internet.php css and as i say you always should have recon going in the background and if you follow this methodology you'd probably try brute forcing with different um i probably just ruined that out file but brute forcing with different extensions so we did php you could try like php or xml txt csv a bunch of them but if you ever tried xml you would find a file called employees.xml which is another hint at xpath injection so if we went 10 10 10 200 slash employees dot xml um no this is 172. my bad 172 31 employees.xml we just get 403 forbidden so we know that xml file exists and that would be another hint at it being xpath injection and this is just pulling data out of that xml file but the thing i want to do now is enumerate the actual password because we can do some type of boolean logic to extract the password and this is just because now we know it's xpath injection we can just do more um i probably could put the username here and then work here but i always like just putting my entire payload in one parameter so we're going to close that one off and the first thing we want to do is find the password length so i can test this out by doing or username is equal to and let's go with the first user which is rita and then the next thing we can do and string dash length password slash text and that's a function and then we'll say equals one and remember the um thing's always appending a single quote so we have to end this on a single quote so we'll do or two is equal to one like that and we get invalid match um and valid credentials so let's try two three and i'm just going to go four five six seven eight nine ten eleven twelve oh eleven's here so we have now changed to seven 7 347 and we did because it extracted her information so we now know that rita's password is 11 characters so i'm going to save that one and this will be password length and we're going to create a second query to try to enumerate what her password is and i'm probably going to do this one just purely in python because it's just a pain to enumerate um i guess we'll do burp intruder and then python so let's go over to three and we're going to name this uh pw brute and change our payload so this one is going to be still username is equal to rita except now we're going to do and substring the field which is password the position of the password which is going to be one the very first character if you're doing these in different languages um it may be zero starting off or it may be one and xml any path injection it starts off at one so if you don't get hits on the very first one always try the next one and then the length and the length is just one we just want to do one character at a time so we do that equals and then the character we want so we're going to try a and we get 70 79 so i'm going to send this into intruder and see if we can do this quickly so i'm going to clear all these and then this little thing says what it's going to brute force so we just want to do that payload and then the list we want to do is let's see um a to z sweet let's try this we can also add capital a to z and that should be fine let's click start attack and see what we get so everything's 200 we can go to the length and we have one length at 7347 begins with p so in our repeater tab if we start with p we can see it goes to 7347 so with this we can change the number so this is still going um wait that's length we can change this so now we're going for the second character and we're only doing one at a time and i'm guessing if it begins with p the next is a for password and we could have done like start at 1 and do a length of 2 and then do pa and get password that way and go brute force as well so that's all preference how you want to do it i'd recommend just doing one character at a time so your payload length doesn't change because every now and then if your payload length gets too long it breaks and you just don't notice so let's now move over to creating a python script because we want to automate this so i'm going to copy these two things and we're going to go to a new pane v we'll call it brute dot pi and i'm just going to put these at the top real quick so we don't have to keep going back and forth between python and um suite so we got those two things um we want to do import uh request because that's gonna allow us to send http and i'm gonna import string and string is a really cool library um we can do python 3 import string and then string dot and you can see all the things so we could do string dot ascii lowercase and that builds that so we could do ascii lowercase ascii uppercase and build a whole thing or what i do is i just use ascii printable uh string oh string.printable and we have a list of everything including symbols i don't like these last few characters uh these are just it's ascii printable but they're not actually like printable like return new line tab those aren't going to be in passwords so that's one two three four five so i just want to get rid of the last five so i can do it like that and now we got a good key space of all ascii printable characters so i'm going to do copy and we can say key space is equal to that and let's see is there anything else we want to do um i'm just going to put hard coded users so user is equal to rita and if you're creating the script at home you may want to make this like an argument and i'm also going to do proxies is equal to http http 12701 8080 because we have to go through a proxy we could have done 10 10 10 200 3128 or burp suite i'm just going to do burp sweet so we can see the request as we send it because chances are we're going to make some coding errors and we want to use burp suite to debug it anyways a burp suite is configured to use the proxy so they're essentially the same thing so the very first thing we want to do is probably brute force the length so let's create the function get length and then the parameter we give this is going to be username and we can say 4 i and range 0 to 32 so we're going to brute force up to 32 characters in length and i'm going to take this line and put it down here because we're going to use this so one two three four one two three four payload is equal to and all of this uses um single quotes so i can just do a double quote here double quote there and we're going to do user name and put the user here so username there and then this field no right here this was the password length so i'm going to do i so all this is going to do is increment all the way up and we can print payload i'm not sure where that get length came from delete that and if we just do um get length rita we can see what this does so python 3 root again same exact thing just incrementing all the way up so the one thing to notice is it's always going to be one off so when we do this loop the range if we want to go up to 32 we should say 33. there we go so the um next thing is to actually do the request so data is equal to username is nothing and password is going to be payload and then r is equal to request dot post http 172 31 179.1 and it was the intranet file so internet.php data is equal to data proxy is equal to proxies and we have to see what's on this page so let's go back here go to our repeater tab password length um let's see if we do 12 we have invalid credentials we do 11 we don't so i don't think we have credentials on it if we do 11. okay so i'm just going to say if cadentials is not in this page we're good so we can say if credentials not in our dot text we have our first character or our first password length so let's try running this uh let's get rid of oh we don't have the print in there anymore run this and it should come back should have came back with 11. so we can go proxy the history tab and let's see 109 doesn't look like it's going or maybe it was go go go and then stop oh we don't have a print at all um print that there we go 11. so we can say pwlen is equal to get length user and we can print f user password length 4 is pw plan there we go so the next thing we have to do now is brute force the um actual password and it looks like i have deleted that comment somehow so let's go back to burp suite and copy the payload we can paste it and let's do death brute care username position i can say four character in key space which is this variable and i'm just going to link this and say payload is equal to and again our actual payload doesn't use double quotes so we can easily just sub that out this will be username and then password 1 this is the position so this will be pos let's see and this is care so all this is doing is going to the username so this is going to be rita and substring password the position which is what we're calling one lin length and then the character and key space okay now we can say uh copy this actually four lines we can copy so data request credentials there we go and let's see if cadentials is not in our.text return i i think that's good so let's do a loop here so i'm going to do um for i and range 1 2 pw length and remember from this top one we did 32 and it stopped at 31 so i'm gonna do password length plus one so plus one and then after this we can say password character is equal to root character the user and then the position which is i and then um if not pw character print character not and key space and let's just return a false here so if we go through this entire key space this brute character function is going to return false and that's what's hitting this hit then print pw care i'm going to do end is equal to nothing flush is equal to true so it prints the characters as it finds them so we know the script is working i'm going to get rid of these blank lines because we don't need them i just did that to get my screen up let's see you can say print password for user is i'm going to do end is equal to nothing flush is equal to true and we're gonna see if this works i don't have a lot of faith but we'll see so we can look at uh it's a lowercase f do i have uppercase here nope so we can go to proxy and see it going so we already got password length is one uh one two i don't think this is right one two three four where's rita's we're using reader right it was password i don't know why it's going password is one two three four five six um we have something funny so i oh shoot uh let's see wait no we're printing password character right there printing the range so this is going to be that brute care c oh there we go we wanted to return character not i so we were in returning this variable every time we successfully crack something so now we're returning the actual character so let's try this again so password length is 11 and we can see g l k l there we go so now it's enumerating so i'm going to speed up the video and we're going to get her password so we have our password as password01 uh let's go back to all the user we have we have jim brian and sarah so let's go and create something for each of these so i'm going to do users is equal to jim we'll go like that brian if i can do this correctly and sarah we're gonna get rid of user let's see where do we first use user down here get length user okay for user and users we'll say pwlen is equal nothing pw care is equal to nothing just cleaning up the variables we have and let's exit out of this and we should be able to brute force multiple users now so jim's password is 16 characters and let's see if it starts cracking if it does then we're just going to now um let the video go and we'll speed it up and i noticed one bug right now soon as um it completes we don't do a line break which is not clean so let's fix that up real quick so every time this completes let's print two lines so it's gonna recrack jim's password but you're not waiting i'm waiting so i'm just gonna speed up the video and now it's gonna look much cleaner once the crack is done so we have them all cracked i'm going to vi my passwords file and we're going to add some we have stairway to heaven i really love bubble gum with three exclamation points copy paste and then sarah forever let's see there was a password i think it was password something let's see password password password password oh one bang password01bang that was reader's password so now a list of users and passwords if we visited our nmap again so less and map unbalanced and map we already looked at this rsync configuration file so we know there's no like hidden directories because it only had uh the config for um etsy and stuff so there's nothing really in here squid isn't really doing authentication so the only other port we really have is ssh so let's try running crack map exec against this so looking at users i have everyone so i can do cme ssh 10 10 10 200. users pw and it should be going shortly let's see is it going to it's taking its time so it's been a while and this hasn't come back with anything so what's ssh 10 10 10 200. i'm just making sure like the ssh login prompt wasn't there but i'm not sure exactly what's going on with crack map exact probably have to update it or something but i don't want to do that so i'm going to use a different tool let's just do medusa crack ssh or i should say brute ssh off medusa brute ssh do we have syntax here brute force saying come on we can do hydra so hydra dash l i'm going to do dash capital l so we can specify a user's file dash capital p is a password file so this is going to be um pw and then the ip address 10 10 10 200. so let's try this i'm not sure if it's going to output um unsuccessful cracks oh one of one completed zero passwords found i don't think that's correct we could add that dash t4 that it's recommending but let's see do we have the password still i close that pane um see i think this was i really love bubble gum let's see echo dash n wc-c 22 see i think that was brian's password so we can go back to repeater see username brian and substring password 1-1 let's see it's saying r let's see if that was i 7079 7361 so i screwed up copy and pasting that's a big surprise i always do that um we should be like doing better job logging and taking notes and screenshots so we could go back and see because we'd have to run that script again which would probably take a few minutes to see that but if your way of logging this would be more evident that that happened so let's try running that hydra again i'm not going to do the dash t4 it recommends even though probably should not slow it down right now it's running 16 threads and it says four but there we go we have a hit saying uh brian really loves bubble gum so we can go back and try that crack map exec while we work just to see if um crack map exec shows this so brian at 10 10 10 200 and the password i really love bubble gum triple bang there we go we get logged in and if we do lsla there is a to do and a user.txt so the flag is the user.txt but we should take a look at to do so looks like install internet host 3 docker done done fixing xpath vulnerability testing take down internet one internet2 install pi hold docker only listing on 127.001 done set password done create pi hole config script in process so right now it looks like we have to figure out what pi holes address is um we can run ip adr and we see chances are we're on the host because we have this docker o interface and all of these other interfaces i'm going to run um ip neighbor which is going to be the new version of netstat um i don't think netstats install in this box but ipneber will be like um i meant ib neighbors not like netstat it's like arp-a-n and erp is not found um this is going to tell us the ip addresses this machine has talked to lately um fe-80 this is a local ipv6 so probably not too interesting one three um 179 these are like internet one this is internet three internet two uh we also have 172 31 11.3 this is a new address uh we can also like cap the etsy host file and we confirm that internet host one is here but we don't have anything about this um [Music] yeah there's 11.3 so we can try curling it and we get um your black hole for the internet so this is definitely pi hole so what i'm going to do is i want to for this back to my box i'm going to exit ssh because if i try to forward port 80 right now it's going to fail because sh doesn't have permission to do it so we can show you dash l 80 uh paste where i want to go to 80. uh cannot listen and i want to do 80 because i just want to mimic pie hole as much as i can we can try 1 8 000 here so now 8 000 is listing on my box sporting it through ssh and going here so we can go localhost 8 000. and we get invalid domain [Music] so let's try going to port 80. so i'm going to do sudo and i'm just going to specify the l command here it's 172 31 11.3 uh the password crack map exec did not work i haven't had a lot of luck doing s's h with it i'm sure if my update will work so now we have this ssh connection up so 8000 is not working but localhost 80 is now forwarded to it and it looks like it's good we have a lot of things it can't resolve so i'm going to press ctrl u to go to source and we see it's resolving to pi.hole so we want to make um our host file point there so sudo vi etsy host and we want to say 127.001 as pi.hole and now when we refresh this page it works but we've been denied because we're accessing it on localhost um if i try to change this to pi.hole we probably have to do http pi dot whole it works so it's just um pi hole using the host header as a authentication mechanism which is bad uh we can show this more in depth by going to 127.001 um we gotta change burp suite to no longer go through the upstream proxy so we can take that off intercept on so if we for this uh let's try localhost we get denied so i'm going to edit localhost i'm going to say something else so it's looking at this header this host header so we can say um please subscribe forward and we can say actually the website is denied because please subscribe is not allowed so when we went to pi dot whole and put that in the host header field that is what allowed us to access so host pi.hole forward and we access so let's put it here so it remembers it and we have version four three two it says right at the bottom so i'm gonna go over to search boy i'm going to search for pi hole uh maybe pi space hole and we can see 4.4 but authenticated remote execution and if we looked at the to do we have brian creating a temporary password so what we probably want to do is find a way to brute force this password login so we have password right here we can try like passwords equal to password and nothing works it doesn't work so let's intercept this and see if they have like cross site request forgery or other things enabled so looking at this request um there's no extra field so if it was csrf we'd see like csrf equals and then some string um doesn't look like we have anything so we can use fuff right now to um brute force this so let's go to an empty pane oh um i just got rid of the employee.xml in that go buster oh well so  dash h let's see we want to do dash u url http pi dot whole slash admin index.php question mark login dash d for data because this is a post request pw equals fuzz and then dash w for word list um user share word list i'm going to go well let's do opt set list and then passwords and we got to pick a password we want to use um cert default password sounds good and let's hide the size uh hide words four three one one so ctrl c dash f w four three one one and we'll see if we get anything doesn't look like we are and the one thing with fluff that we generally should always do is um add the content type because this generally plays a big role in requests and that's the one thing this tool doesn't do automatically is add things in the host header like content type [Music] we can add dash h paste and see if we get anything oh 43.50 on everything so we want to change the hide words to 43.50 because as the new thing for um invalid password and see if we get anything it's going and it looks like the password is potentially admin when it got to admin the size is zero and it does a 302 which is a redirect so if we go here let's send this to repeater we can click send we get 1500 bytes as password we change it to admin and we get 366. i'm going to change this content type off if we took that header away you can see it no longer does that and responds with that size i'm saying like javascript disabled and things so that content header is definitely key so now we have authentication to this application so if we go here and just type admin let's make sure we are not intercepting admin we can log in so now we can do that there's a header that we did there please subscribe that's funny but now we can go look at that authenticated exploit so let's do search point pie hole and see if we can figure this out let's see search point dash m v four eight four three three looks like if we do less than four arguments it gives us explanation so python three four eight four three three see script takes five parameters session cookie url your ip reverse port so let's give it the session cookie um intercept on we'll grab this uh url of target uh http localhost i know this can be pi.hole which does go to localhost um my ip address 10 10 14 to port 9001 so we try running this and we're not getting any output it's weird um ping pi.hole you probably should read the script but i was being lazy and hoping we could skip that um we could also google for like blog post so let's turn that off it was what four three two let's do pi hole four three two export see if we have any good blog post uh let's see here's one going to wordpress so someone writing about it so instead of stepping through the python code which just did not look super clean to me we can look at their technical analysis so it looks like the exploit is doing a command injection inside of dhcp so we put some type of legitimate mac and then and-and and then a nasty payload so i'm sure they're gonna say exactly what this does or here's the thing so we gotta bypass the valid mac which makes sure the very first characters are a mac address then it's going add mac so a valid um it's got html special characters so chancellor this is why they are doing the um hex encoding if you looked we got hex to bend a bunch of hex here and later it does sudo pi hole add static dhcp and then the mac so we're doing the injection right here so we're able to put um some type of payload here and this is just a bash command running as pi pyhol so that's the exploit i wonder if we can grab a payload looks like yep we can so here's the payload what we want to do probably is change this hex so i'm going to copy this and we're going to google cyber chef and let's go and paste our hex and say from hex and we got it decoded so now we want to change the ip so 10 10 14 2 uh probably port 9001 and we can take that out and say we want to convert this to hex and the delimiter we don't want any so now we got a new magical hex byte thing so let's copy a payload that is an ugly payload so it's using and and for the command injection and then this is getting around to put our path and then we're executing something but i got to copy this because looking at this this quote looks special these are angled so that's not going to work in our payload i'm just going to go to burp to get a um anybody just doing in cyber chef actually uh where's cyber chef there it is um maybe not try to think of the best place to do this do we have cherry tree it is it's been a while since i used cherry tree so open this up new instance uh control and control ship what's the new node ctrl n so i did that so we want a hex bin so this is our payload and we want this let me quickly go through this and remove anything that looks like it's not ascii which is the quotes so move that that's a double quote double quote like that i think that's a wall copy a new payload all we did was change the ip address i don't see any more of that unicode magic so we'll just copy this go to pi hole see settings dhcp and the mac address so i'm going to paste um so it's going to mac address ip address hostname i'm just going to do 172 311. first name ipsec probably doesn't matter um if i can type it correctly and we are listing on 9001 so i'm going to click this green plus to add this exclusion it's not coming back to us and we have a shell so if we do a who am i we are dub dub dub data so we can do lsla pwd we can go to slash home see what's in here nothing and if we went into slash root her user can actually read the root um these like iot devices are just horribly insecure i'd always recommend um checking things like that so there is a bash rc um bash history but it's pointed to devnol we got this ph install and ph uh pihole config i'm gonna go to the config first because that install is pretty big and also the config is created relatively recently so it's cat pie hole config and we have um a password we have bubble gum forever ryan three so if we copy this and we go back to our box we can add yet another password to this and all these bubble gum passwords were kind of brian's password so and they all went to the box the first bubble gum is the decryption key the second bubble gum is brian's password this third bubble gum let's see what that is so let's go three come on three two my s is h10 anywhere i should be there he is so we can cat etsy pass wd brian's the only user so we can just try s u and put the password we just got which was the bubble gum for ever i think that is and we are root so that is the box hope you guys enjoyed take care and i will see you all next week