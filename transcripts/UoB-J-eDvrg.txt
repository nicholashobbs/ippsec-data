 what's going on YouTube this is if ii be doing why puffy from hack the box which was a really fun box and a lot of people asked why the name why puffy my guess is it's just because it's an open BST box and the OpenBSD mascot is that Blowfish and his name is puffy so I'm guessing that's where the name comes from the actual exploit path of this box was pretty cool it stood off with the scan you see HTTP LDAP and SMB you notice that LDAP is mis configured to allow anonymous binds you do a dump on LDAP you notice it actually gives you the ntlm password hashes of users you can do it pass the hash against the SMB service and get the private key to log in via SSH when you log into the box and check its SSH configuration you'll notice that it's actually checking a certificate authority to see if that authorities signed SSH keys which is unique and you can do a do as command to run as the certificate authority user so you can sign a SSH key say it's from the root user and then just log in as root if you didn't poke around the SSH configuration stuff there is another way to prove a screa a CVE I think it's in the xorg package will also do that and before we get into this I do want to give a shout out to Recon InfoSec they run a lot of the blue team villages for allow me to use the Wireshark image that's actually a sticker and the link to the story is in the description below and you'll understand why I'm including a Wireshark image in just a second so let's go into the box as always we can begin with a end map so end map - SC for default scripts as be numerate versions Oh a output all formats put in the end map directory and call it Y puffy and then the IP address which is 10 10 10 107 can take some time to run so I've already run it looking at the results we see a few ports are open we have SSH on 22 it's running OpenSSH 7.7 we have HTTP on 80 it's running OpenBSD httpd which is a new OS for us we haven't really had done any enumeration for OpenBSD before and then we have SMB on 139 and four four five and finally ldap on 389 and it allows anonymous bind which is unique but first let's just try to figure out which version of OpenBSD this is and we can do this by just finding out when OpenSSH 7.7 was put into OpenBSD so let's go to google type OpenBSD search up messes h77 go here and then just scroll 4 7 7 and we see April 3rd 2018 so let's just search for OpenBSD release history and see when each version was released so we have these threes so we have 6 2 which is 9 October 2017 we have 6 3 which is 2 April 2018 and I think this is the deprecated date or supported until so gender it's not six - because OpenSSH 7 7 came out after this oh no no it came out before this I misspoke Lea ignore what I said anyways 6 - 9 October 2017 6 3 2 April 2018 6 4 18 October 2018 so looking at this we have 7 8 which is August 24 so chances are 6 for probably is going to be using OpenSSH 7 8 or later so we're left with either 6 2 or 6 3 I'm going to guess that it is 6 3 so that is how we enumerate the BST version will at least just guess it from the information we have the next thing to do let's just poke it up the web server because well we always poke at web servers first so let's go to 10 10 10 107 and we get nothing so I'm going to send this over into / turn intercept on refresh this page go to burp send this to the repeater tab click go and we're not getting anything back we can try changing the request method to a post request could go not getting anything and it's odd because head map was able to tell that this was openbsd and I don't know how so I'm going to do is let's open up Wireshark and sniffed the traffic and see exactly what ad map is doing so let's go here let's resize our Wireshark window slow down okay listen on ton zero and then we want to do the Wireshark again so add map - p80 to specify port 80 and then run the same enumeration scripts let's not do any host detection and then the port and there - capital P n that's just not going to do like an ICMP to make sure the host is alive and things like that so if we look at Wireshark we see the request we can sort it by HTTP and then follow the request and we see why shrugs doing again and then getting nothing back so that is odd going back to HTTP we can see a 400 error message gets responded by the server so if we follow this we see we sent it nothing if we get a TCP stream 7 it's kind of the same thing is oh we set it junk and then responded with 400 bad request so if we go back to a window netcat to 10 10 10 1:07 480 send it junk that's not a valid request we get nothing if we just send it a blank line it gives us the 400 request back so we can also emulate that in burp suite send it no request whatsoever and click go blank whine click go and we get 400 bad request so if we send like periods like and map did we get that if we send it ASCII I think it just hangs send this Oh No so as long as it's not a valid HTTP request we're golden and we can get that it's an open BSD box but if we can't do any legitimate HTTP request do this there's not really anything we can do to further enumerate this until we find out more information about the web server so let's go back go back into or nmap stuff and the next thing I want to look at is this anonymous bind okay so we're going to start by using a tool called LDAP search we'll do - each we can see the options and we're going to want the simple authentication this is gonna be the anonymous bind and then - h4 host and I use - h4 help I wonder if I just put anything here I can't do - P so if we just air out we get the help thing so I don't know exactly what help is for LDAP search but if you just do - H it errors out and prints help so easy way to remember that that's how I do it so - x4 anonymous bind or a simple authentication - H and then the IP address and we connect to the LDAP server we get no such object and we get that because we're not specifying an actual LDAP query for LDAP query you need to know the base T and the distinguished name it's not like a directory structure if I just do ly / it shows me everything and LDAP you have to know the base DN and I don't know how to enumerate the base DN with just onap search but we're gonna find out so I do know that nmap scripts will enumerate the base DN so we're gonna do what Wireshark against nmap scripts and then figure out how that script is working and apply it to LDAP search so let's do locate NS e dollar to list all the nmap scripts or I think we need - or for reg X and then search for oh damn so we're going to do this LDAP - root DSE script so do nmap - p 389 test our script root D se - capital so we don't do any huge discovery and then just 10 10 10 107 before you run this I do want to clear my Wireshark history and we'll start this over get rid of TCP stream and click go and we see the naming context DC ACB and hack the box so it does search this and I was thinking and map would display more information so let's do that locate again and let's do LDAP search instead of route DSC so LDAP search I typed out that twice and this is the information I was expecting to see so if we have the route DSC and we search it we can get the contents of I guess the directory or whatever you want to call it an element all the distinguished names and objects so let's look at exactly what happened and Wireshark nothing did I know is odd let's try this again search this ok my filter I just had hit enter on so let us search for LDAP and we can see what the queries are so let's follow this TCP stream and that is probably nothing so let's do TCP stream equals 2 and we see LDAP stuff so if we follow this we can see us requesting something we're making a request right here and then the server is responding with the DCI figure with DC stands for this is gonna be like the base DN for LDAP and maybe distinguish something let's see Oh DAP what is DC disabled and I need to fix my job of dependencies on this VM let's see DC top LDAP tree doesn't say what it is but the very top is this the main component is what DC stands for so it's the top of the tree so we did make our LDAP search appear like this so if we go to this query the very first one we can see LDAP message search requests and this is the scope or LDAP search has to be so remember TCP stream equals 2 because we're going to do old app search and go back to Wireshark go to the very bottom one and we'll follow this stream and we have a request so let's open this packet 58 and I should have opened the other one so let's go back to TCP stream 2 and open I think is this request this one and look at the east side by side so we're looking at out message ID is different search request is the same scope base object ours so the right is old app search so Earth group is the whole subtree this goop is base object so let's try changing that so go back here get rid of this so we just see the help and we gotta figure out how to change the scope so I know it's - Tess I thought it was - yes let's see yep lowercase - asks I guess my search wasn't working but scope and then we can choose base sub or children so we want to do - s base and see what happens so we get success it's not outputting anything because we didn't give it a distinguished name so now we just have to figure out how to get the distinguished name so going to Wireshark let's see what else is different so these are the same size the same false is the same filter we're both filtering on object class and then if we go down we have attributes and we're not searching at naming context so if we do LDAP search naming context let's see what this is doing so we have the odep query here they're specifying the port is 30 60 but at the very end they just type naming context so let's do that and see what we get and there we go we have in returning DC hack the box comma d CH DB so that's just the active box dot h DB DN so now we want to do a another search so let's close out this one and see what EDD map did to pull data so I'm guessing it's going to be these queries so let's open this that's nothing open the next one and it's making quite a few so odep search I'm going to just close this and let's search real quick we want TCP stream 21 packet 21 let's see this query searching with the base object and what does this return because I think it was giving us too much at first yes this is what we want so let's see we want the base object in a search that's the one that we aren't doing yet so if we look we have LDAP search result and we're searching this and we're searching just root here so we want to specify this query so this is the base object as it says right here if we look on this search request we see no base object so going back into this we can see base object I believe is - B so let's see - B there we go base D n so that's the base distinguished name might be but not based object but let's try that so do - B DC is equal to half the box DC is equal to HD b get rid of naming context and now we're just searching so now we probably specify a filter or something when I search let's see did this return information go back and Wireshark follow this and it should return information so let's compare what our old app searches to the actual query again so let's do LDAP search let's just make sure everything's good let's do naming contacts does this change anything does not so let's see what is different between this LDAP search query and the one end map had done so close both of these open this one then we want to just search old app and grab the very last query because that should be us so maybe this one move this over and let's see what is difference between these two we have held that message and we have two LDAP queries here search quest search entry so the scope is the whole subtree and earth scope I believe is just base I don't see it in here but we know we specified base so I probably have the wrong packet old app search is probably doing multiple requests so here we just have the scope as the base object this is the correct old app we wanted so we're gonna get rid of base object we want to be a whole subtree so let's just get rid of - a space and do sub and now we're dumping the information we want it just like a map search so hopefully that was easy to follow it's turned out to be a little harder to explain than I thought because of picking the right packet and I don't use why shucks all that much but that is a valuable skill if you don't really know how to analyze the programming language of a script I don't know whatever ad map does I've never created a map script and I wouldn't be able to analyze that but I can look at the wire and kind of try to mimic what the thing does so that's just a good way to kind of find out what a tool is doing so now that we have the N map information let us just go and analyze it so let's look through this and see what we have a bunch of SMB information which makes sense because the server was listening on SMB as well so we have the distinguished name Y puffy and then a bunch of stuff this looks like like password requirements like history length all gonna change password max age men age stuff like that so this looks like maybe the domain password requirements we do have Alice and her user password is base64 so let's go echo - n base64 - d and it just says crypt so that doesn't really make much sense but let's just keep going up so Bob and this is the same exact base64 as Alice so I'm going to ignore this we have group we have Alice and we have a Samba NT password and this looks like it's just a ntlm hash go to Bob use a password and he has this base64 so let's go look what this is because that's not the same length as the other ones and bsd off so that's not too interesting and that's the end of the end map information so we do have information for Alice and a SMB nt password so let's see if this is a valid password for Alice with a pass the hash and the tool SMB map can do this so we do - you Alice what is it 19 something 1978 - P and we want the hash and if you don't want to remember what the LM hashes you can just do the ntlm twice because the LM hash is just blank it's this a a D 3 B 4 3 5 B 5 4 1 stuff and then a ad but that's normally irrelevant now I'd only just paste the ntlm hash twice and most tools accept it because computers ignore the LM hash so it's just a requirement in the packet doesn't really mean you need it so the host is 10 10 10 107 and we can look and we see we have a Alice share and we have readwrite access and the IP share we have no access so from this I can tell that Alice is probably not a local administrator to this box but she does have a share so I'm going to do - our list to list what is a whoops - ah I think it's just - Dora - list the contents that is recursive so now it's going into each share and then listing the files and we have a file called my underscore private underscore key PPK so let's download that so if we do SMB map grep download and we just have - - download so - - download probably Alice my private key dot PPK see if it downloads this it looks like it does so we can cap this file and we see it is a putty user key file so I'm just going to do app install putty tools and alternatively you could just open up putty on Windows and then import the key but I don't like using Windows if I don't have to so I'm just going to install the putty tools which gives me a way to convert this putty key into a regular SSH key and then we can go and use that so now that the package is installed we can just do puttygen - H and then we're going to want to do the key file then - o capital o and we want I don't know what the difference between new format and old format is so I'm just going to do the old format and then - oh for the output file and we'll call this Alice dump em and then do LS week at Alice TM we have this and I want to try OpenSSH - new I did Acurio this is so unless Alice - noob Pam or sa OpenSSH private I'm not sure oh well there's an open SSH private key and the other one is RSA private key so let's just do chmod 680 Nezzer so s HL s TM 10 10 10 107 and permission denied let's try actually specifying the user name and then I think it was now Alice 1987 what was the user name do I have this correct let's see Alice 1978 additionally I believe the SSH and new users would work let's just test this out Oh search ssh underscore a new use this module and then we want to show options set our host to ten ten ten 1:07 set user name root and run this and we'll see if it says root is a valid user set user name to please and subscribe and we'll see if this says invalid user and if that's the case then yes this would have worked so we do have please subscribes not found so let's go back here let's search let's grab Bob and do Bob eight seven nine one see if he's a valid user on the box and Alice 1978 so V users LST root Bob Alice 1978 and then we can also do white puffy which was the domain name exit this set user file user list and we can unset user name run this we got root found Bob found Alice found and why puffy not found so it is vulnerable to that SSH enumerate users thing but not really needed because we had already got in with the private key so let's take a look at what we can see we got the user dot text and we can look at this and then there's also this winter directory and that's just the SMB share so let us run linen oom and see if linen oom actually works on this I'm not sure if it will because it is BSD so let's do up linen oom Python sham simple HTTP server and then we also want to look at what my IP addresses it's ten ten fourteen three so curl ten ten fourteen three Lynne a new message and execute it with bash but we forgot to specify for it 8002 when a new message okay - execute this SH execute this there we go so we don't have all the pretty colors but it looks like it is doing its job I bet if we did like ksh I think that's what BSD uses we may have gotten colors but we can ignore that so we got open BSD user group who else has logged in just us group memberships the passwd file looks like we have password hashes and Etsy passwd I think that's just Lynne knew not realizing this is BSD because everything was star we do have a user called user CA so that is odd this is another passwd thing files earned let's see that is taking a while so I'm just going to kill this I'm not sure how long that linen would take but we don't have sudo on BSD instead BSD uses something called do as and I don't know if there's a do as list like there's a sudo - shell but we can read the Etsy do as file and see that Alice 1978 as the Alice 1978 has permission as user CA to run the command user bin SSH key Jen so let's go and look at GTFO bins and see if ssh key jen is one of them so we do SSH key Jen and we don't have anything so let's take a look at the everything else so we have Bob look at this DBA and we got a SSH off dot SQL and looking at this we don't really have anything we have create table principles UID text it's just a database and this kind of reminds me of we had a web server once upon a time but we just couldn't access it so if I curl one 27001 and we don't get anything so we should try to find out exactly what this webserver is so if we go for a dub dub dub and find dot let's see what we can see htdocs so if we curl one 27001 bgp OG empty reply so let's try Etsy and go to httpd.conf and see what this has we don't have them whoops less HTTP decomp and we can get the Apache configuration we have location star block drop so this is why when we just curl localhost we get nothing we have a location SSH off it's passing it to a WSGI object and location slash user CA which is that user CA user so let's try a curl one 27001 user CA we get moved permanently and it is moved to who is location we prize to do - v2c location so the location we just need to add a slash and then see a dot pub so we can get the newsroom's certificate key I guess so that's interesting and then the other one was SSH off we call this we just get a 400 error I do psdf it's BSD so all the flags are different so let's try PS dash aux and we see let's see can we just aux let's see we got Postgres so that's the database dump we saw it in Bob's directory more stuff very log sshd SH off D and the anit file a configuration file is in VAR app serve so let's see Deever log and see if we can read this ssh off d file we could not because it's owned by root and the group is wheel where neither those so we can't read let's go to ver app serve and permission denied so everything keeps saying something about SSH so I'm going to check the SSH config so Etsy SSH SSH D underscore config and we can see stuff about the web server now we have authorized key commands and authorized principals commands and it's curling one 27001 ssh auth type principal username equals you and this one is doing the same thing with instead of principal it is key so that is interesting let us see what happens when we curl this so if we do curl we just double curled username equals root we probably have to specify that in quotes so let's do user name LS 1978 and we get what looks like to be a public key so we do LS SSH or sed home SSH and we don't have the public key here so we can go back to our host and instead of doing win a Noom let's do SSH key Jen - f Alice dot PEM and I think this will output it generating public key pair let's do yes to overwrite blank key and let's see we got cat Alice Pam dot pub is this going to be the same key it is not but is it always gonna be the same key I'm not sure Pam got Pub let's see no it is not so what I'm going to do let's try something else let's copy this and let's do let's verify I didn't just clobber the SSH key so Shi Alice top m LS 1978 at 10 10 10 107 and I did clobber the key so let's do Bodie Jen okay let's X this because I have the puttygen command in this window and then we don't want new we just want Alister m and let's do our cm dot pub okay and then let's try SSH - key Jen - LF on our stop em and then we want Alice top m dot pub and we can see the sha-256 hash for both of these keys is the same so this public key is the one that goes to the private key so hopefully that makes sense I'm sure there's a way to generate the SSH public key just from the private key I just forgot all the flags but SSH - LF will tell you the sha-256 and if these match then the public key goes to the private key because the two files the Alice TM and the Alice Pub Alice top m dot Pub are certainly different so chmod 611 let's get back into this box and keep looking at the sshd config so the key thing we wanted was authorized so let's just make this easy clear the screen cat this and grep for authorized and we know a way to get the public keys out of the users let us see what this is the principal thing so if we can just copy the whole thing copy paste will do Alice 1978 I forgot we have to put this in quotes because Bash is seeing this ampersand sign and then trying to process it so doing this with the principal and the user name Alice 1978 it just gives us Alice 1978 back so let's cat Etsy passwd and let's all - f : print one so this just gets us all the users we grabbed Bob that doesn't get us all the users because Bob and Alice are not in Etsy passwd Etsy let's see grab Allister and where is past immediate maybe it's PWD DB but that's probably something let's see I hate BSD so let's see how do we just dump usernames out of BSD that's that PWD DB file which type of thing is this birthweight DB let's just go to google and search open BSD list users install you service system let's see get ant pastor VD okay I did some type magic and we do have user names at the bottom pastor bdj I just missed that before no they are not there okay I'm not sure exactly what good ant is doing but let's do get and pastor we D grab - B we don't want anything that begins with an underscore and this looks like a good way to get users so let's do this and then - F : print one okay SSH to do principal so now we can just combine those two commands so for I and this so looping through every user on the box do this command and I'm going to do this and a double quote so we can process the variable I and then done so now we get all the principals and we got a weird one emergency backdoor Alice and Bob so let's go back to this and do echo - n I : so now we have principal as root and it's going to be emergency backdoor so if we just did that curl command but I just copy it easier that's a bowl and user equals roof what was it there we go I've got the poles but we got the emergency backdoor so if we take a look at exactly how SSH ca is work SSH CA user authentication and read a bunch about this you could also just search for cat let's do grab authorized if we search for this command and we just look up a bunch of tutorials on SSH CAS will realize that SSH has I guess 30 ways to authenticate maybe it has more but I learned about this Third Way from this box you have the keyboard authentication which is just type in the password you have SSH key which is that SSH key that we provide how we logged in with Alice and then there is this as a certificate authority so the SSH client will search when you give it a pub key also searches for the - certain key and then if it has it it sends that key and that key is just signed I guess is the easiest way and it tells the server what that key is so maybe easier to do or understand once we actually do this and the reason why I'm going down this path is if we do cat Etsy do as we see that we're allowed to run SSH key Jen which allows us to sign SSH keys so let's create a key with the name root oops we need let's just go to our home directory and we'll make the directory if sec and then let's just create the key so this command is going to create root and root Pub they are chmod ador already and if we shut in SSH with root 2 root at localhost we get nothing it's denied however we can do do as - you user CA user bin SSH key Jen - s slash home user ca ca or we could just grab the I'm not sure we want the CAS private key so we can sign something so my bad for that let's just redo this so we want do as - you user CA user bin SSH key gen then we want - s which is going to be the signing key so home user ca ca - n this is gonna be the principal name so emergency I think it was backdoor like that and what else do we need just gonna specify the file name and permission not permitted key gen must best fight a key ID when certifying so key ID can be anything it's just how keys are identified so I'm just going to label it please subscribe and unable to sign root because I'm in the CA directory I want to go into if SEC as well and now we should be able to sign root Commission denied la let's see chmod 777 hip sac so it couldn't create that key because it's doing a do as as user CA and user CA do not have write permission so now we sign the user key root pub with the ID please subscribe so if I do SSH - I root root at localhost we get in so what exactly is happening here so we do have three keys we have root root - suit and root pub and we're sending the server both these two keys and the server if we do ssh-keygen - L I think LF brute yes and root - - we can see all three if we do root pub as well all three have the same exact sha-256 um so notice all three of these keys are tied together if we do - capital L on a root - sir Pub we can see information about how it's signed so we can see the key ID it doesn't need this is just please subscribe it sees the principle is emergency backdoor and it also sees it's signed by the CA which it trusts so when we authenticate to the server it's going to do a grep authorized it's going to do this command this user bin curl on SSH auth and username is equal to root cuz that's who we're trying to log in - I always forget to do these quotes around this and it's gonna see okay if this certificate says emergency backdoor as the principal it is a valid root certificate and that's exactly how that works it does that it sees the principal's emergency backdoor it sees it signed by the see a widget trusts and it's like okay this is a valid certificate let's let them in so that is that piece of the box and if you also looked if we do you name - a there is a unintended Prive esque I think it came out after this box we do see it is open BSD 6.3 so we're thought pattern had to be king of this box is correct that it's 6.3 and that's valid because if we look at open BSD 6.3 previs k-- there is a few prevx not stat clash search xorg and exploit dB let's see is this it I don't think this is it let's see what if we just do search poit OpenBSD and grep 46.6 don't get it oh let's see easy to exploit privilege escalation bug bites be OpenBSD I could fantastic let's see is this it this may be it so CP downloads what was that foul name it wouldn't be as dzo today that's less this file and we can just copy and paste all these commands so it's creating the file xsh doing something with xorg and creating a cron to do something see build date October so this is probably going to work this is different than the one I was thinking of but let's try this sleeping for 120 so it's waiting for the crontab to run and while that does that let's say we can see what this is doing so do we have a description to create a conch ab entry as route so let's see it's creating temp dot X SH and it's copying Benkei SH to use a local bin Excel to giving it a set UID bit and then going to make the xsh script executable it's putting this in the cron sleeping v killing X or sleeping two minutes and then running it and this file should give us the set UID bit so give us roof so let's just let it wait for the two minutes and see if it actually does work the two minutes is up and we see we switch from the dollar sign to the pound sign so it looks like we are indeed going to run as root and we can get root dart X as well so that is the two ways to root Y puffy I hope you guys enjoyed the box and actually let's just look at for our app serve real quick and see how SSH off works I get some time so we've got three files we have naturally four files but one is compiled Python so I ignore it so let's look at the SH off DNA and this is the initiation file it just runs this WSGI so if we cat this we see that's just going to import this Python application which is just a Python flask that's using looks like Postgres based upon that module we do have a fetch data we have a route for SSH off method is get requests if the type query type is principals run this sequel command or Postgres command and if it's not that then run keys and that is it so I hope you guys enjoyed the video take care and I'll see you all next week