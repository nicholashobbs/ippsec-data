 happy new years everyone this is IPSec can be doin mischief from hack the box which was rated as insane but most people found it between medium and hard because of a lot of unintended solutions near the end as a box it's actually really funny because the unintended solutions came from ipv6 which the creator of the Box tricks to zero is known for doing a lot of he made sneaky which was a like complete ipv6 box and then this box had a lot of ipv6 things in it it started out with a Apache server listening only on ipv6 and a simple HTTP server listening on ipv4 and you had to do some SNMP magic to join the two however once you got the ipv6 webserver got walked in there was a easy command injection thing and there's an IP tables rule that blocks all outbound connections so you can't really easily get a reverse shell the unfortunate thing is by default IP tables only does version 4 there's an IP 6 tables command that does version 6 and he only blocked it on the IP tables not IP 6 tables so you just reverse shell out through ipv6 and do the Box really quickly the intended solution was to do all that stuff through ICMP will go lightly into that I'll show you how to read files and leave it up to you at the end to how to actually do that ICMP shell so with all that being said let's just jump in and as always we start for the end map with dash SC for default scripts SV enumerate versions Oh a I'll put all formats plan the end map direct and call this mischief and then the IP address which is 10 10 10 92 this can take some time to run so I've already run it looking at the results we see not much information there's only port 22 open that's SSH and this is running OpenSSH 7 6 p1 Ubuntu 4 and if we search for this banner and since says Ubuntu I'm gonna include Launchpad in my research because launchpads the website that has Ubuntu information and we see this is you want to buy on it which was published in 2018 so without it being too out-of-date I'm assuming this is a recent box and we don't have to look for SSH exploits we could do things like brute forcing a login however I hates turning off with that because if they run failed you may just get blocked right away if they have some type of account lockout policy you may cause them like account lockouts and caused downtime and it's just noisy so we don't have much of an attack surface I increase my recon and I'm gonna do that first by doing a UDP scan so a map - su for UDP then we'll do - V and that's going to display open ports as it finds them and then we'll do - Oh a - output all formats and nmap mischief and we do - UDP and then the IP address well that's going on I also want to scan all tcp ports because by default if you don't specify it and that scans the top 1,000 ports as we see right here and I want to scan all 65535 TCP ports so I do - P - will do - V I'm going to do - - max - retries and set this to zero do - oh eh I'll put all formats but in the end map directory call this mischief - tcp all and then the IP address 10 10 10 at 92 we see the UDP scan has already finished and that is has 160 one open which is SNMP so I'm going to open a new pane and we'll try the default community string SNMP walk - C public which is the default community string - V - C which is the default version of SNMP you got one - C and three - sees what you're gonna see most of the time SNMP 3 doesn't really have a easily guessable community string so that's why I'm starting with V to C and then we'll just try 10 10 10 92 and we see amount of information flow in the screen so we know that worked if that didn't work I would use a tool like 161 it's the SNMP port so that's how you can remember it almost best by a community file so let's do find user share word list grep for SNMP no results - I to make this case insensitive don't have anything let's look in the set list directory and there we go so we have combin SNP community strings text so let's do this one 161 - see paste this file 10 10 10 92 community string too long so this is a bug I think the 161 on Kali is out of date no that's a 0 3 - if we go to github 161 trail of bits let's see we see a commit was a few months ago so let's download this so CD opt get clone and whenever you see me going into opt this is something I downloaded if I'm just running the command like 161 I got this from the apt repository so go in here make this file let me do dot slash 161 - B and 161 - V so the one I have from the repository is 0 3 - 0 3 3 is the latest so if we do dot slash 161 - C go back to the community string file I think that was in nope let's do there we go so one city one - see this file 10-10-10 92 run this and we see the community string public yet so that's a way to brute force community strings we do have the TCP scan finishing three support 3 3 6 6 is open so what I could do is nmap - s capital C to do default scripts - P 3 3 6 6 10 10 10 92 - sv as well I expected to see more information there I guess we'll just come back to that let's go back to the UDP SNMP thing and we have snmpwalk dot L I created this file this is just the output of the snmpwalk command because it takes forever to do so this is snmpwalk - the public v2c 10-10-10 92 so if you remove them from sneaky we went into this and we needed like SNMP MIBs to make this readable so if we want to we can install the SNMP MIBs and what that's going to do is translate all this information into what it actually means because we just can't read this well if we do 10 10 10 92 we see let's see all this means things and we have like Ethernet 0 IP address loopback whatnot we keeps going down we see right here this is going to be a ipv6 address and that's going to be the key to this box but it's a pain to view this ipv6 address because it's in decimal format and ipv6 is in hex if you wanted to you'd have to do something like let's go here you can go in a Python and convert that decimal to hex by doing print X 2 - 2 and we get de we go to the next octet 173 we'll get ad 190 be e so this is the ipv6 subnet the box and instead of doing all that let's just do this SNMP bit real quick because it makes it so much easier to read this so we'll do app install SNMP - MIBs - downloader and once this installs we just to come out out one line and etsy SMP SMP comp just take out this mips line if you read these comments it's telling you to and now we run snmpwalk - see public - we to see ten ten ten ninety two we're no longer getting a bunch of that weird numbers it's translating what those numbers actually mean so let's do pipes up the T can we do SMP walk - Miguel and let that run that T should have been printing it to the screen as it goes there we go so SMP well it's gonna take a little bit if you wanted to there was another way to do this if we SSH into a box within the Hector box lab to speed things up I already placed a SSH key on hawk but any box you have access to you could do the link local address and again watch sneaky if you want this fully explained but essentially ipv6 has a link local and a routable address and if you're on the same slash 24 one up the same way or two subnet you can access that link local so I guess is aged into a box so I'm on that same layer two subnet we can ping 10 10 10 92 and if I do up - a I can pull the MAC address of that box and the MAC address is actually translated into the link local address on many Linux distributions so how that works is if we do v10 we have the MAC address so let's put ipv4 is generally and four bytes so let's just do that now 56 8 ff4 a 3 so that's not enough um length for an ipv6 address so the first thing it does is it prepends fe80 and double colon and then the second thing it does is it goes in middle of the MAC address and puts F F F E and then the last thing it does is inverts the six bit and hex zero zero would be this and the six bit would be here and that turns this into two so it's not easily shown with MAC address that begins with zeros so let's pretend the ipv6 address was a b c d e f g one two three four five six something like that we also have to have F F that fee yeah let's pretend this is the link local address so in order to do that bits which we have to convert this into binary a B a is 10 so that would be 1 0 1 0 and B is 11 so that's 1 0 1 1 if you don't know this bit is 1 2 4 8 and the 8 bit is on the to bit is on that equals 10 B the 1 bit 2 bit and 8 bit is on so we would invert this 6 bit and now we would get this as 9 so that would be instead of a B that would be a 9 but we don't care about all that all we want is that fe80 up here so let's copy this in the clipboard and then we can do paying 6 invalid argument what paying six Oh because it's linked look we have to do percent eath zero to tell it to go out that interface and we do if config it's actually ENS 33 because in ipv6 world everything has the subnet so if you don't specify this percent it doesn't know what interface to go out so that's why we're doing that percent there and we can get a response back and we can continue on the box through proxying through this which is annoying so we won't bother doing that will just do dead beef address so let's go and cut that SMP walk mid output I think that's still going it is so since that's still going let's ignore ipv6 go all the way back to where we had this TCP port three three six six open so we can see the HTTP server is simple HTTP so let's go into Firefox and just go ten ten ten ninety two point three three six six and we get a authorization prompt try admin admin that fails we get basic and a base64 not authenticated and that's probably my admin admin that I just tried yep so it's just opening the attempt so this is simple HTTP server and in order to pass simple HTTP server a password and if you did through the command line you'd be doing it through an argument and we have a bunch of SNMP output and one of the things SNMP does is show you the running processes so let's see if we have simple HTTP in this SNMP output and we do we have this run parameter we have - mmm simple HTTP over three three six six loci gotta mischief is low key so if we refresh this page and do this whoops we get a picture and credentials I view the image just to see what's there and because it is Loki the god of mischief I'm gonna look for some stag in the picture real quick so I'm just gonna do exist tool that's probably in my downloads Loki dot JPEG we see nothing there if we do a bin walk on that we don't have anything of interest so can also do strings to see if anything's at the end nope so I'm gonna ignore that image and we'll just take note of the two good angels Loki got a mischief is Loki and Loki trickery and deceit so whoops computer's going slow let's see I forget what the past was this was so the very first password is the password of this web server so this is a new one Loki and trickery and deceit so I'm gonna do SSH 10 10 10 92 try this for the root user and that we get permission denied and try this for Loki and we get permission denied so what I'm going to do is go back to this SMP output and I'm going to search for other running programs so if I just less this file SMP mid and go to the line that had the process we can see like the output of PS on the server we got lxc so this is a potential risk is Loki is a member of the LXE group let's see some Python nothing really running so let us look back at the IP address information and let's do up scan on the ipv6 address so going down now we don't have to convert everything into hex we just have the straight-up ipv6 address and it's going to be this one this is a subnet because it's all zeros so the first thing we have to do is convert this ipv6 address into or this long hex string into an ipv6 address because if we just try ping 6 on it it doesn't recognize it so remember ipv6 is broken up into 4 characters at a time so I'm doing that first ok and that will work but um I hate having these strings of zeros in ipv6 if you have a bunch of zeros you can do this once and just do double : so that's a way to shrink this and we also don't have to lead with a 0 so this is the optimal way to put this ipv6 address and we can see we are pinging it so let's copy this go back into the first pane will remove or add Maps and we can clean the other ones up and we'll do n map - SC sv o a and map mischief - ipv6 do the - 6 to specify this is ipv6 and then the IP address and on IP v we have port 80 is open we don't see three three six six but that's not one of the top 1,000 ports we can just do MC - zv - six to specify ipv6 and then that point individually and we see connection refused we could also do - p three three six six we don't need all this and we see three three six six is closed on ipv6 so the difference being ipv6 has apache open and the simple HTTP server is closed and on ipv4 you have that simple HTTP server but not apache so let's go and browse this page and see what it has so if we go here just put the address in but - HTTP colon slash slash a bracket the ipv6 address and end the bracket you put ipv6 generally in brackets because this separator between octet s-- is colons and that's also these separated between a port so if you put in the brackets that's how the browser would know it's ipv6 so we get command execution panel please log in and we get username and password so let's try the password we don't have low key trick turian to see well again good answers don't match we can try a few other users admin administrator and we get in so that was a username guessing thing bit lame but that is definitely a common username you should always try if you wanted to you could have used what some are called Hydra and brute forced a bunch of user accounts with that password I were just viewing the page source to see if it was anywhere here but I don't think there's a hint to that that's just something you have to try and we get here and we have welcome administrator and it's prompting us to pain if we do execute we hit command was executed successfully so if we try pinging ourselves 10 10 14 - I think my IP is do if config is Z I want to do tun 0 to get my VPN IP 10 10 14 - we can do TCP dump - P - it--on 0 to specify the interface and then do ICMP we execute we can see 10 10 10 92 pinged us twice so this is a definitely command execution we can try chaining things like a semicolon sleep 10 and if this page takes about 10 seconds to a turn we just made it sleep so let's do execute and we see it is waiting and I probably I don't like sleep 5 but this will eventually do it and oddly enough we get output so in my home directory I have a password and a foul called credentials mr. admin so we know for some reason when we did this we get the output to this paint command and this is actually a mistake that created in this whole thing I think was unintentional at the end of the video we'll do this kind of the intentional way but it's essentially doing a system command at the end piping it to dev null so sleep 10 pipe - dev null kills the output of this but then leaves the output of the command that's run before so if you just drawn this without doing any command nesting with that semicolon this gets piped to dev null and you don't see it so as long as we run a command at the end we have a way to view things so if we just do Who am I we get nothing if we do Who am I echo or anything after that we get running as WW data so we can do home low-key credentials do echo command is not allowed so we have some type of laughs a web application file we have to bypass so no type cat it was XS Lee let's do low key successfully cadential x' and command is not allowed so credentials is a blacklisted thing so let's just try cat home low-key cred star and see if this works echo and we get the password is low key is the best Norse God so if we SSH as low key and a 10 10 10 92 paste that password and we get into the box so if we do WCC user text we have 33 32 characters is the sum then you got a line break so that is the hash of the user so what's LS on hosted this is the Python web server if we look at this oh this is the simple HTTP server giver dub-dub-dub HTML and look at let's see probably index dot PHP we have the command execution panel and let's see right here we're getting the list of the blacklisted commands and see bash CH own set faculty H mod Perl fine locate LS what not set faculty odd one out of all of these I don't see credentials let's see why wouldn't credentials be allowed Oh LS so this is just seeing if LS is in the string so credentials ends in LS so if we went back here and did cadential execute command successful so it's one of that LS is in so if we do a bunch of things at last a bunch of things command is not loud so that's why I credentials didn't work it's also worth knowing that we can bypass a lot of this by just doing a question mark so let's see let's do find so if we do find home floki and then echo at the end command is not allowed we do fi n question mark home loci let's see if this works man was executed accepts successfully we don't have any output that command oddly enough but let's do let's see which find will that work which echo I think find is in den which find user bin so if we specify user then fi end question mark Oh low key you should get the output of this command there we go so that's one way to bypass the laughs so let's see what else can we do we have the my sequel history file we have bash history so let's go check those out so go back into low key cat my sequel history we don't really have anything my sequel - you root access denied see cat bash history and we have the same HTTP server command but I think this password is different you have trickery and deceit god of mischief is loki and this is looky past if miss Jeff trickery so we got a different password in this bash history file so if we try to su we get permission denied so if we do LS - la then su we see read write special read execute read execute and everyone has execute over bin su but I cannot execute this as Loki which is odd so I'm going to get faculty show me the extended tributes on bin su and we see the user Loki only has read access other users have read and execute so we can't use the wookie user to view this we do Etsy passwd Loki's really the only user we do groups Loki is not a member of that LXE group so we can't use that to prove ask you can look at the calamity video for that one but if we went all the way back to this command execution panel we do Who am I Who am I echo what www.usacarsksa.com this repeater and now we can quickly play with this so we want to do NC - H when we get commands not allowed so we'll do and and question mark - H pipe - echo command is executed successfully we don't have any output and that's because for some reason why a lot of the times when you do - help it sends it to standard error and we're only capturing standard out so I'm going to do 2 which is the number for standard error pipe and one and this gonna send standard error to standard out and we click go command was executed successfully hi with this press control you - URL encode this and there we go now we have the help put the reason why I was doing - H is to see what version of netcat this is there's the OpenBSD version which means we don't have - e so in order to do the verse shell it just becomes a little bit more annoying so i'm going to google verse shell cheat sheet and we have to turn in a set back off reverse shell cheat sheet I guess I have something screwed up with butt so turn off completely first shell cheat sheet for the third time that's the charm and I love doing this reverse shell so when we copy this one go back to burp doing a repeater tab and paste this and we'll do 10 10 14 - and stove and see we have to do bin and question mark to bypass that with whatever it's called the laughs I like this euro encode it go back to a box and CLV NP I think we did on port 8080 30 and use will do port 9001 so go back to burp change one two three four - 9001 click go go back in a netcat window we don't have anything and this page has hung so it looks like it's attempting to a connection but just as failing and that's probably because of some web applications rule so let's do - six let's just on your own code this so we can read it how does the control shift you - six to specify ipv6 go back to a terminal window if config tun zero ipv6 address is dead beef and a LV NP we'll add - six to listen on ipv6 go back to boot paste this in URL encode this click go waiting and we don't get anything let's see is the still listening huh web servers hung let's do a new private window and try this again we copy this paste okay we get a login it looks like something with a session got screwed up I'm not exactly sure what happened so click login we have to grab the password trickery and deceit administrator password there we go so let's turn intercept on capture this send this to repeater copy this command into tab 2 and see if this works see oh I had got a show it was just really slow let's do this again but click go waiting here we go but it's not working at all we see it connect to us we see bash execute but we're not getting a prompt so my immediate thought right there is something in this command got screwed up because we have a lot of weird characters we're sending over HTML so I'm going to do is copy this command go back to a terminal I'm gonna do echo dash n paste this in and it prints so we do base64 it's specified - w04 with 0 to put it all on one line can copy this go back to burp and we do echo pipes at space base64 - D - decoder and then execute it with sh euro and code that with control you start my net cat whisperer up click go come here and now we have a shell if we do Who am I weird www.dsucc.org then - and then we can back on this st - I roll - echo and this just gives us tab Auto completion and things so let's go back into Loki's directory see I read bash history I cannot so let's switch to the wiki user tap bash history grep for simple and there we get we got his password so su - paste the password in and we are root so if we do WCC loot text we see 46 this is not 33 that's not what we used to sing we see the flag is not here get a shell to find it and that's odd so we have a show so let's just do find before we do that OS - that way we see this file was created May 17 2005 slash a new and modified time 2000 1805 for May will say the 15th and do an exclamation point newer modified time 2018 that was weird typed that completely backwards oh five and what do the 19 and we want to pipe errors we want to do - type F to only show us files not directories and pipe errors - Davin all run this and we got a few files but the very first of all we got was user Lib GCC x86 64 Linux GNU 7 root txt WC - C on this file we get 33 bytes this is going to be the flag so it's just moved there but this hint was a bit odd because the flag is not here get a shell to find it I don't even know how to execute commands as root doing this with and then view that file and the answer is kind of funny the creator made of ipv6 box and then forgot there's a separate IP tables for version 6 so if we do IP tables - L we can see the it's got an implicit drop whoops let's view exclusive on both the input filter and output filter so civilly only allowing specific things but IP six tables it is wide open so that output table let us get out so one way to abuse ipv6 and that's why the reverse shall worked so to do this box without using the IP six reverse shell you have to do it all with an ICMP and that just makes this box a lot harder so we'll do a way to read files over ICMP and then I'll leave it up to you to do the ICMP shell if you want relatively easy just have to search github for an ICMP shell put it on the box etc so let us start by figuring out how to read a file through ICMP so if we do ping - H oh let's do man ping and go through all these options we have one option that is gonna be helpful I can find it quickly - - P - pattern you may specify up to a 16 bytes to fill out the packet you send so this allows us to write stuff in ICMP packet and we can put up to sixteen bytes at a time so let's do ping - P and we'll do dead beef dead beef and that should be fine and we'll do one 27001 - see one okay and let's start up wireshark while we do this this I don't think I'm humble host stop switch to loop back and run this ping command if we look at Wireshark we can see dad beef dead beef is printed on the wire and we actually have a lot more because I think I only did eight bytes but you can see it's doing the pad so we can put that as anything we want if we do just let's do what the example said ffs and look at this ping request we can see it padded the rest of the packet with FS so we did something like x XD - p - see actually let's create a file first let's create the file called exfil let's say please subscribe to me and we'll do x XD - pc 16x fill and we get 16 bytes per line and we can do while read line do echo line done so this is a bash loop that's taking this and for every wine doing an action so I'm gonna say wild red line instead of Petco we can do ping - P line 1 27001 so let's restart this capture and we also want to specify - c1 to only do it once and then going here we have to ping requests and the first one is a bunch of please subscribe the second one is to me so if we one wanted to I thought one of this is putting more than 16 bytes I can't think right now but please subscribe please subscribe so if we do 32 and look at the latest one no no we'll leave it at 16 it'll be fine for this example so what we have to do is find a better way to read this because we could do this in Wireshark and just paste this in we do go back here go and burp actually paste this command in and instead of Expo will do home low-key cred and we can do 10 10 14 to change a wire show to listen on e0 contain without saving ICMP only click go let's see we get a ping oh that's not what I want I want ton zero not eat zero cancel go it's doing that weird thing we at home let's see does this old one work yep command was executed successfully and we get past Loki is the PA SS and that breaks so pass Loki is and go to the next one Norse God whatever it's just ugly doing it through Wireshark so let's upgrade this and do it all through a Python script so the first thing we have to do is TCP dump I tun 0 will do - W file dot L and we can specify ICMP okay so we're capturing if we click go cancel well we receive four packets and this what I'm going to do a Python script Italy use Cappy if you don't have it you can do pip install SCAP e and this will install that module for you and this is just kind of a Python way to go through a packet capture once in Python we can import the module so from Scapa doll and may be called scape ii i just call its copy import star so now we have a bunch of functions most importantly we have already pcap that's repeat and we specify test Donnell ah was it followed at out is that what we called it yeah we got it fouled out we can see we have four ICMP packets that is the request response request response so we could assign a variable packets is equal to r EP cap and then we do PK t s we get the same thing we do for packet in this print packet we get four different things we could just reference it with PK t s 0 for the first packet 1 for the second and this can be much cleaner so what's in these like this angle bracket ah the first thing right here that's in caps and then a space this is a layer so this is the IP layer this is the ICMP layer and this is the wrong way over the packet so if we can do packets and then another bracket IP it'll print information about that I thought it would it print information just about that IP I guess I peek includes ok yeah IP will include the sub protocols such as ID pou IC mb t cmp UDP whatever but does reference the ICMP layer and we can see the data there if we want we can encapsulate that with LS and it'll give us a nice pretty output of what this looks like so we have the type and type of 8 on the request if we go to the next packet in this we see the type is 0 that is the response next packet type of 8 again so this is kind of just going in and a way to filter what the packet is I guess so the key thing we want to do is go to the first packet ICMP and we want to go into that load so let's get rid of this OS because we want to grab this piece so if we do load we can do the last 16 characters of this packet and last 8 so that's the last 16 I think this is some weird padding let's just redo this capture and just do two bytes at a time so TCP dump I ton zero then we want - W we'll call this ICMP dot out and that we just want ICMP packets so going in here let's specify for characters that should give us two bytes okay we got 14 packets this time so now let's go over in a Python this OTP cap again read it as ICMP del and we'll just do minus 4 there we go if we do 2 is looking better it's that weird padding in this ICMP thing that's turn me off but lowering the numbers and just doing 2 bytes at a time there's just gonna simplify it so there we go we want to look at what that whole thing looks like we have the string and then it repeats pass a bunch of times so we're just grabbing the very last four characters so let's see the last thing we have to do is show you that like has layer command if you don't do this then your script may just error if it tries to reference something that doesn't exist so we can do like if packets zero dot has layer ICMP print true there we go if this has layer TCP print true it doesn't print so that's the last thing you really need to know for the scripting portion so let's start creating a script so V will do this what are we going to call this we'll do please subscribe PI and the very first thing we have to do is from SCAP you all import star and then we need the sniff command because we're not going to do this through a packet capture we actually get a sniff on the interface so we do sniff I face is equal to tun 0 then P RN is equal to process underscore packet and this could be anything it's just going to say on every packet execute this function and we're doing def to create the function process packet and we'll call this packet so we just print packet here and run please subscribe then click go it's printing the packets so let's see we do the next thing we want to do if packet has layer ICMP let's do something else so if we're an ICMP packet let's make sure we are the request packet so if packet ICMP dot type is equal to eight then we want to print we want packet I screw up that ICMP right there ICMP dot load and we want the last four bytes I think that works so let's try this pass loki is the best norse god so i'm last i'm going to do to make this pretty is get rid of the byte declaration or suppress that and make this all one line so we can do in the print command we can do flush is equal to true we won't do that first we'll just do ends with nothing so if we just do that and click go eyes it just end not ends click go we don't see any output if i control see this then we get the output so if we want the output as we're seeing it we just have to say flush is equal to true and we also still saw that be decoration let's just say if we move this will say data is equal to PK t ICMP dot blowed minus four and in this will just do data dot decode as UTF - eight and i could have done this all in one line it was just ugly i like doing it this way better and if you do that decode command it's not going to show you that a byte declaration so now when we click go we get passed low key as the best norse god so if we wanted to we could also just change this firewall so let's do set of cred let's do a bigger file like etsy passwd click go and we can see we're reading now the passwd file line-by-line so this is a cool way to read stuff with ICMP so that will be the box if you want to take it to like the next level i recommend trying to do a full ICMP shell the reason why the box said hey you should get a full shell to find the file is because if you just do like that python PTY thing and just pipe that su command in to read the file and input the password and create like an expect script or something it would be a pain to find the file if you didn't have an interactive shell so the Intendant way is to get a interactive ICMP show as the root user so I'll still leave that as a challenge for you to do it that way hope you guys enjoy the video take care and I'll see you all next week