 hello I'm Nick Eppolito and this is going to be a walkthrough on how to do the exception handler portion of the sans holiday hack challenge 2016 this starts off by causing a error and the android apk which is time consuming so we're gonna skip that assume we caused the error the phone sent the exception request and if you wanted to get up to this point there will be a tutorial down below that explains everything so the phone has sent off a request to the exception service we're going to send this into a repeater and see what the response was it wrote a crash dump to crash dump - bunch of stuff dot PHP dot PHP is an odd extension for a crash dump so we'll keep that in the back of our minds so we're gonna do slash docs slash this crash dump and we see it just wrote what is between this data field the other thing we don't know in this request is what operation means what if we got rid of crack right crash dump what happens well we see we have a fatal error json key operation must be set to write or read crash dump so let's set this over to read crash dump and see what happens we get a fatal error json key crash dump must be set so let's set the crash dump key crash dump must be set so this crash dump and we will specify our PHP file as the crash dump go over duplicate PHP extension detected these are very very convenient error messages or at least helpful error messages so we can craft a request the right way and there we go we have the same output as we do on an HTTP GET so we know how the read crash dump works it is accessing this file and then appending a dot PHP however PHP executes everything within PHP tags which is this less than simple question mark PHP and we want to get rid of that tag so we can view the source code of this file so to do that we're going to encode the and base64 using a PHP filter and that would just wipe that header off and allow us to pull the whole source so let's get rid of crash dump do PHP colon slash slash filter / convert dot base64 - encode slash resource equals and then the crash dump file copy this again paste go duplicate PHP extension so let's get rid of that again go so on it should have been base64 I forgot to UM convert do this go there we go we got a base64 code that's on how that command actually fails and gives you a decent response even on failing ok so I'm going to call this file crash dump dot PHP dot B 64 paste the base64 let's decode it and we'll call this crash dump dot PHP and go into it we can see yes it does have the PHP tags and it does a print statement so we want to get code injection and do that we're gonna have to get rid of this print statement and close it off gracefully while keeping a JSON intact so get rid of these messages we're gonna put a double quote because we got begin the initial part of the JSON when it close this little squiggly bracket we're going to close this single quote we're gonna close the parenthesis so that print statement is now xscape t' we're going to do PHP info and now we got to build that print statement back up so print goin squiggly and the other thing we have to do is keep this to be valid JSON so I'm gonna do a colon then two double quotes and I think that may be it because the scripts going to close off the squiggly close off the single quote and then of that so yeah this should be good so that put this all on one line and I will do this so it's a bit easier to read so it's gonna write this whole string that's one field of the JSON and then the other field is just blank and we want to grab believe from here on change this to write crash dump and get rid of this you may want to get we're gonna copy it from here everything within this that's what we want paste and we'll find out if we did this correctly go doc slash crash dump this so it generated this file let's paste this and if we get PHP info we have injected code and we do the reason I do PHP info first is because if we went straight for like a system command a reverse shell with something like that PHP safe mode or SELinux may kill it silently and we'll miss the code injection so I normally do a safe code injection that probably won't get killed by anything because it's a normal thing that developers do and then once I verify yes there is code injection I'll take it to the next level and try to do something like a reverse shell which we'll do now so we can get rid of this file and we want to go to copy the PHP - reverse - shell dot PHP out of user shared web shells this is on all Kali boxes and what we have to do to this is when I get rid of this opening tag get rid of this closing tag go back to the top and you'll have to change your IP and port I already done that in this file so we're gonna save it and then we want to be 64 encode this before and then we want to remove all the line breaks so what I'm gonna do is hit : % s slash backslash n for new line slash plays it with nothing so put another /g okay well there right quit PHP reverse shell dot base64 copy this whole output and we'll go back to our code injection and we want to put eval base64 underscore decode open the parenthesis paster base64 and then single quote and the base64 decode and the eval and before we do that we want to do that cat lv n p 80 and send go was valid JSON so it wrote this crash dump and we're going to execute this and we have the shell the first thing I normally do is a Python dash D input PT y PT y dot spawn slash bin slash bash so now I have kind of a decent TTY but I can't use up keys I can't do controller I can't use VI so I'm going to background this s TTY raw - echo hit enter twice do F G go back into my shell and now I have hotkeys I can hit the up arrow I can do VI so that end piece is a really cool thing to make my shells persist if it has screen on it I could go into screen if I said a terminal type and set more variables but we can go over the ww let's even got tab auto-completion and we can see the audio file right there we could even less this exception and view the exception dot PHP file so that'll be it for this tutorial hope this was helpful take care guys and I hope you're having good holidays