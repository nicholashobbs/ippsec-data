 what's going on youtube this is ipsec and this is gonna be a honeypot that's been worth its weight and gold to me because i can't even describe how many teams i've caught running responder because of this simple task so with that being said let's just jump in before we get into any of those detections and notifications we should understand the attack and potential implications of if this attack is successful and we don't detect it so this is going to be focused on a tool called responder and its capability to poison ll mnr or net buyers request and this happens when your computer attempts to resolve a dns name and resorts to net buyers now you should disable this in your environment and maybe you'll use this video as justification to do that but by default it's on so if i try to go to a dns name that doesn't exist let's say dc03 because i only have one and two i fat fingered this and did dc03 now what happened is my computer made a dns request the dns server said i don't know who dn dcr3 is so then my computer asks the network and that's netbios or llm and r to say hey does anyone know who dcr3 is the network goes nope and now my computer says hey we can't connect to dc03 now if someone did respond with it then my computer would attempt to connect and if they said hey this requires authorization windows is going to do some single sign-on magic and send the hash of my active user over to that computer and they can potentially crack in and get my password right so let's show this in action now i clicked on this which is a ssh connection to a computer that's on this network whenever you see the black background this is me on a linux computer i'm going to do python 3 responder and we got to specify the interface name i want to listen on which is ns160 and now i'm listening for events so let us do the same thing i'm going to type backslash backslash dc03 backslash and i'd even hit enter and we can see my computer already was like hey i want to log in he's like okay um it requires credentials it's like here's administrator and seek um hint the password is password1 or a password or something super weak to get on so let's just save this credential and we're going to um put in a credential as well so let's do dc03c and it wants me to log in i'm going to say ipsec and we're going to put a password and the password right here zelda we attempt to connect and the computer will just print out the hash again right so responder is logging all of that information and what we can do is take these hashes and then use it in a tool either like john the ripper or hash cat so we can show that so i'm going to go over to a different box i call it the kraken it's where i have hash cat running and we'll do v hashes i'm going to just call it hyrule.net v2 because that's the type of hash this is we can put both of them in and then if i do dot slash hash cat and then just specify the hash file and opt word list rock u which is just a dictionary file it's going to take that dictionary and throw it against these hashes and try to crack them we can see recovered two out of two if we scroll up it will tell us what they were but we could just specify dash dash show and it shows us both of them so here's the hash hip sex and his password is going to be zelda and then we have administrator and that password is just password1 so we have successfully cracked both of these so this is what a lot of junior pen testers would do on internal pen test assessments and if they don't have a linux box there's a tool called invay i-n-v-e-i-h which i want to say is powershell there's a net version as well and you can do the same exact thing from um a windows computer right so it's a very strong attack against them and the best way to defend against it is completely disable net buyers but even if you do that you still want to know if someone's running this tool that's a whole purpose of a honeypot right so what we can do is constantly just request invalid domain names right so let's go over to powershell and it's really simple to do this all we do is a function called resolve dns name and then it's got this whole ll mnr only thing and we put a domain let's just say please subscribe right and if i go back to my linux box we run responder if i hit enter here we can see it sent me a poison request back and we have ip addresses if i exit this and ran the tool now it's going to just time out and say hey um there's no one here of please subscribe so this can be a great way of detecting it right so let's run this again and what i'm going to do is set this to a variable called x or maybe we can just say um llm and r i guess and i'm going to pipe out um standard error which is just to carry it like that to null so if it does error it's not going to fill up our standard out and then if i do ll mnr we have the response and we can say dot ip address if i can type it ip address and we could do dash join and put it all on one line and now we have everything we need to potentially write the um alert and we're going to first send this in slack and i'm going to cheat and just use something from a previous video if you just go to my sending slack hook video i'm sure this will be a lot more sense or make a lot more sense the username is going to be bought i'm going to say responder detected and we can edit the message so before message i'm just going to do ip is equal to and we can say let's go back here and we'll do this and before that we'll also want to define the variable so we pretty much have everything done once we add this so we can say rogue llmnr server is at ip but the issue is going to be is this is always going to fire because we don't have any like if then statement right so we'll want to say if ll mnr in powershell if a variable is blank it's going to go to false if it has data it's going to go to true and that's with a lot of scripting languages so we can now just indent everything to put it into this loop or make it obvious it's in this loop and then that's it i think we're done so if we copy this put it into our powershell if i hit enter we have a notification here if i click on it we have responder detected host name this is the workstation that detected it and we're going to say the rogue llm nr server could be at here right so now the next step is to do the same thing but with responder off to make sure we're not getting messages so same thing hit enter and you notice i did not get a message and that's because the dns server is not um responding right responders offline send it again nothing we're going to start it up send it and we got a message right away right so now all we have left to do is put this in a scheduled task and run it like every 10 or 15 minutes and whenever something hits um we're golden right so let's open up task scheduler and once in task scheduler we can create a task and this time we're going to call it detect responder and a user let's just do system i always hate running something like this as a administrator maybe guest would be a good one but system i believe is fine because the system account is going to be my machine account which is a randomly generated password that can't be cracked and doesn't really have that many privileges if it's in a domain controller i would not run this just because the implication if it fails that would be probably like a kb tgt hash which is a super sensitive thing so leave this to like workstations and like low privileged servers to run the task on um i doubt it's really that exploitable on like if you did run a domain controller but it's just not a risk i would be worth taking so we can say um let's just say at startup we can run it we can repeat the task every let's do five minutes for the duration of indefinitely uh step tasks if it runs longer than 30 minutes that should be fine click ok the action new and we're going to run powershell so powershell is i think in like windows powershell where's powershell installed actually um [Music] powershell.exe normally i have it memorized yeah windows powershell v1 whatever so we're running this i'm going to do nop for no profile dash enc for encoded command and let's encode that command so let's go to gchq dot github dot io cyber chef and we're going to convert this into base 64. now windows base64 is utf-16 little ndn encoded so we have to do that first it's a bit of a pain but it's windows everything's a pain so in code text and then change this to utf-16 little endian then we can do base64 and just copy this and then we put it into a task and then click ok and i believe this is all we need so now detect responder let's hit enter a few times and i think i can cheat and just like right click and run and it looks like it worked i don't have a notification on slack though let's see 1202 i'm guessing it just didn't pop up because that did come up so if i right click and run this again we should see another message pop up and this time we did get the notification there so this is looking great right now if you're in an enterprise environment i generally would not um use this method to send the alert right i would instead use write to event log and i do that because in an enterprise environment i expect there to be centralized monitoring like splunk or elk so if i just write to the event log it's automatically can get shipped there to the seam or whatever you're using to monitor event logs and get notified that way right this whole invoke rest method thing to slack um it's a thing for small businesses that don't have centralized logging for whatever reason you should no matter what size business but if you don't this is a hacky thing that gets by right so instead of invoke rest method what we could do is a write event log and we can give it the log name of application if i can spell that we need the event id i'm going to do 9001. you can pick anything you want and then message we'll put i think ip is still defined so we can just put ip uh we need source let's see responder pot uh we need to create that log source so i think it's new event log log name application dash source responder pot and now we can write to this hopefully we need a specified source responder pot okay we wrote so i'm going to open up microsoft management console we're going to go to the event log edit what that did not add add okay oh it did i'm just blind there we go windows and we go to application and we're waiting for it to load it's taking a while maybe i should clear this log i don't know how big that thing is that is taking a while i guess while it loads we can copy this and we'll put it and our message right and we have the variable let's see msg i'm just going to remove this and we don't need body and the host name is going to be in it so this is literally all we need let's look back at our event log we have it responder pot and it's here i'm going to make it a warning dash level i think it's level let's see entry type category raw computer reverse debug warning or dash warning i guess no let's see i'm gonna go google write event log okay entry message raw data warning looks like maybe entry type i would not have guessed that dash entry type warning so that wrote refresh the log and now it is a warning so let's add that into our powershell or is it right here oh no notepad plus plus and it was i have the memory of a goldfish entry type entry type warning so now if i run this put it in powershell look at our event log we have roguellm on our server detected and it gave us the ip addresses so this is something that would go into a centralized logging and the alert would be handled that way so um just another way to do it if we wanted to we could also test it out in a scheduled task i'm not positive the schedule task needs to like run at the highest privilege so that's what i'm testing right now so we copy it go to schedule task we can edit this one so edit the action replace the base64 okay and then we run it it's running it stopped wha oh what'd we get 12 15 it ran the old task what i think cyber chef um decided not to show me the new base64 until i just did whatever i did so that was odd gremlins i swear let's paste the new base64 that we have and let's run this running okay refresh now we have a third entry so our task works just fine we can go here server then go to schedule task run it again it's running running running ran right and refreshing this we still only have three so with that a responder detection is up and running so i hope you guys enjoyed the video take care and i will see you all next week or next time um the last thing like i was thinking as i was closing that out is the step that we didn't do is like wait a little bit and see if the last run time does update because we've already manually ran the task so we want to make sure the task does run every five minutes so this should definitely do it but something i would check so yeah so i guess i shouldn't have said shouldn't because it's now 12 24 the last time this ran was 12 16 and it didn't run again so i'm gonna guess maybe i have to reboot the computer for this to take effect because on the um action or not action on the trigger i said at system startup right maybe i should have just said on a schedule and then did something let's change it back to on system startup and i'm just gonna reboot my box and then see if it happens every five minutes so it's still at startup repeat every five minutes or reboot and see what happens so it is restarting and now i am logging back into the box we're going to open up task scheduler and it's probably going to say it ran right away because we configured it to run at startup and then we want to make sure it runs in five minutes right so if we look at this task scheduler detect honeypot ran at 12 26 it's 12 27 so that is looking good um i'm going to open up putty and we're going to run responder to make sure um it all works as expected so let's log in with ipsec password of password cd responder sudo python3 respond.pi i ens 160. put the password back in okay and i did a lowercase i it's a capital i that gets me every time so we're just going to wait for i guess three more minutes and see if we get a hit or maybe it's let's see what is the time 26 18. so we'll wait another four minutes and it's now 12 31 almost five minutes we're just waiting on the seconds and there we go so our schedule task is working we just had to reboot the box so now hope you guys enjoyed that take care and we'll see you all next time