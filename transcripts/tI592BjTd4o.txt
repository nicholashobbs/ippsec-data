 what's going on YouTube the zipsak and we'll be doing the machine shrek from half the box this box was incredibly frustrating because involved most egg and crypto subjects I absolutely hate and what made it worse is for the crypto you had the private key you had the blob but they didn't tell you the algorithm used to encrypt so you have everything except you're missing a very basic part and trying to find that basic part is a pain you just got a brute-force and try a bunch of different crypto things until it works really frustrating but I mean that's crypto for you there's gonna be times when you just get blobs and the keys and got to figure out how to decrypt it I guess no way around that but let's jump in in my apologies if this video feels a little rushed it's Saturday at 8:10 and I generally have videos on my youtube by 10:00 in the morning on Saturday so trying to get this done relatively quickly but that being said let's just end map it first to find out what ports are open I'm gonna do and map - SC for default scripts SV and enumerate versions Oh a output all formats the grab a bowl normal and XML I'm going to throw that into the directory and map slash default and the IP address of shirk which is ten ten ten forty seven already ran that so let's just look at the results we do see that FTP SSH HTTP is open and V SFTP is a common thing there was a backdoored version a long time ago so let's just search point real quick for that to see if we get any quick wins so search point V SFTP D and 2 3 4 is the backdoor I think and maps at version 3 something yeah 3 or 3 so we don't have any quick wins there so let's proceed to the website I forgot to open Firefox so let's just line this up ok so we go to 10 10 10 47 and the book for this request and the website's not up I think there we go so we just get the Shrek love fansite got a few hack the box logos down here I had tried doing some basic stag thing because the stuck out to me but that was a dead end so going back up here we got site map image gallery and this website is just god-awful horrible so instead of mainly looking at it I just went to Burt go over to my target tab let's add this to the scope then I'm going to show only in scope items to get rid of some of the noise and we'll just spider this host and looking at this we have a blue page so upload HTML and upload dot PHP let's just look at that because that sticks out I see this works I think I don't know and if we try to upload something let's go to other locations computer op so we're shelf there we go we'll do PHP CMD I'll try to upload this says a file has been uploaded this is the upload dot PHP we can look at the source code we have no idea where it's been uploaded to so let's just go back into enumeration and do a go buster so /opt go Buster - you four URL let's just do - eh think - you yep URL HTTP 10-10-10 47 - w4 word list user share wordlist doorbuster directory list 2.3 - medium and we see a slash uploads directory so let's poke into that and let's get rid of that view source so it's a bit more friendly and we don't see the thing we uploaded which was CMD dot PHP but we have a few things so we got cow PHP 5 we can save this and look at it nothing really there that's weird let's do a file against it it's just data so don't know what that script is legit ASP this is a PHP server so I'm not PHP but a pet Linux running PHP so ASP is window stuff I'm just gonna ignore that secret ultimate dot PHP get a bunch of output so view the source it's a bit cleaner and we have a few things most importantly this end path a secret directory secret area 51 so let's try this paste that in get rid of view source and we get a song and before I get any copyright claims I'm gonna pause that and let's just analyze this in audacity so we've got audacity this piece in the beginning is a Smash Mouth song so to avoid copyright claims I'm just gonna copy the piece that we want which is that tail end we can close that and this is the piece with stead so if we play this it's really annoying and a weird sound and the first thing I did was just looked at the spectrogram settings and when we do that in a density we don't really get all that much and if we go to the settings we can change the maximum frequency to say hey we were to see absolutely everything because audacity defaults to just showing you what's common in sound so just add a few zeros and now we get obviously something that's hidden and the reason why I jumped straight to spectrogram is when I hear a bunch of static and audio that's the very first thing I do and I do that mainly because of a easter egg in mr. robot so if we play this they actually head stag in one of the audio clips and the top left you had the actual clip from the TV show and then if you did an audacity with the spectrogram you could see the hidden message which was hang in there so whenever you hear static that is one of the first jumps I make and we can kind of read this but you can play with the spectrogram settings and make it a little bit cleaner so let's change the range if we change it down to 20 it lowers it a bit then we can change window size let's go to like 1024 go range 50 make this a bit darker and it becomes very much clearer that these are FTP credentials we got FTP then donkey donkey leet exclamation point so if we FTP to that we should be able to get right in so FTP 10-10-10 47 username was donkey password was d0 and k3y one three three seven exclamation point and i misspelled donkey so let's quit and redo that donkey g0 and k3y 157 and we get login successful do a dir we get a bunch of text and a key so let's get the key and we can i think em get star d to download all of that and there's probably a argument to accept it but sure we'll just say yes to absolutely everything eventually we'll get to the end of this chain okay we got to the end so let's organise this a bit we'll make a directory called FTP and move story XD an FTP and move key as well into FTP so let's do file store txt they're all ASCII and we can view a few of them to see what they are looks like bunches and bunches of gibberish all ASCII fit with very long lines file did not lie to us so at this point I would take a look at the key file we looked at all the text files looking at the key file it's just a RSA private key that is encrypted so we'd have to throw this into a crack in and try to crack the key the key is a relatively strong password so I'm not going to go through all those steps I've done this in other videos I forget which one but if I find it I'll make it in the description but we'll take a look at these text files again go more in-depth into one of them we see it as all ASCII so we could try throwing it into like rub kin rot13 and do things like that so if we do rum kin safer or let's just do quick whip because quick whip would do a bunch of things so if we we just have to throw a line in and we'll see if it comes to anything so it doesn't look like this is any easy cipher let's try base64 decoding it didn't get any error message so that was a clean base64 decode let's try decoding them all so if we do 4i in LSD XD do base64 - di2 r dot be 64 done we get two invalid inputs so which ones errored not exactly sure let's change this to echo i we got a file up here and down here that have invalid input so let's take a look at this and right off the bat I do see spaces which we saw when we counted the whole blob but since we weren't going in depth it definitely stand out but we got a base64 inside a base64 so let's echo - n that basic four - D and we get Prince Charming so let's just put that to string take a look at the other one and again right after the few spaces we get aid and other base64 string we get looks like mixture of ascii and hex encapsulated in a single quote so let's just put this to blob I don't know exactly what that is but it is odd so this is where a lot of the guesswork comes in because you just have to try a bunch of different crypto algorithms and just googling things like Python ECC decrypt and we get PI secure so you would do pip install secure I've already installed it so of course it's going to say it's all satisfied and then we can just do Python and import secure and let's look at how to use the library so scrolling down in the examples decrypt secure decrypt ciphertext and then private key so secure dot decrypt actually before we do that it's signed ciphertext to a variable and it looks like it's already encapsulated and single quotes do that okay it looks like it's good so secure dot decrypt CT for ciphertext and then the private string which was Prince Charming or private key henna and we have the password for the SSH server is shrek is best and you have to SSH in as sec so if we try this let's just echo key phrase that is really messy okay in case we ever need notes we have it so LS SH now let's look at key key is MCH Margo to 600 so let's do that Shi key SEC at ten ten ten forty seven yes passphrase shrek is best and we get in the previs is really hard to find if you just depend on Linux print checker scripts like Lin enamel improv checker especially because there's a really stupid rabbit hole on this box so let's get out of this rabbit hole and then one do some isn't response kung-fu to show a good way of professing in these boot two routes and also something you should do as part of blue team or isn't response which I absolutely love so pseudo dose l-o-l says the user SEC can execute v as a user fir quad and I probably pronounced that wrong it's been a while snow white rack so we'll do sudo - you for a quad user bin V and then we just pull an estimation point Bend bash and that executes bash with envy and we get a probe ask to that fir quad user going to his home directory we see mirror which is a binary file and if we execute it it just outputs something we can do LS - la and we don't see anything really on this file there's no sticky bit there not sticky bit set UID bit so even if we exploit this nothing bad is going to happen you could throw this up in binary ninja or radar and see I don't even think there's a vulnerability in that program it's just a really stupid rabbit hole but once I noticed there was no set UID bit I ignored that so let's get out of this go back to our Shrek user and do thee instant response kung-fu so let's pretend the person that created this box was a hacker and he created that file user dot txt on August 22nd 2017 so what should we do well the first thing we want to see what was created two days before and two days after we have confirmation of the hack was on the box so if we do a fine / - type F - new or modified time newer MT 2017 0 8 20 and then we put an exclamation point - newer MT 2017 0 8 24 what this is gonna do is search for any file that has a modified time between August 20th and August 24th the reason why we do two days before is because we have confirmation he was on the box at this time do a few days before to see hey is this the first time he got on the box or was he on the Box a while until we caught him and then after is he really off was that the last thing he did so run that I forgot to pipe that - - / / dev no this will hide all permission denied error messages let's clear that and run that again and we have a few files so he created Hirst name and I think we can do - LS there we go he created Etsy Hearst name on the 23rd vs FTP D on the 21st and shat on the 21st so we know he was on the Box as early as August 21st we may want to change this and go a bit earlier but for this purpose we don't have to do that host name I think network stuff FTP shadow passwd user dot txt that's the file we caught him on here's some bash history that file was modified on August 22nd at 2058 and it's owned by root and only root can read and write to it so we can't do anything with that file interesting that we have verse pool cron Roo and that's where if you do like crontab - e or we're clowns get written for specific users so we can't see his Kron but because we can list the permissions within cron for a spool cron whoops or list the files within cron we know there is a cron job that was probably added or removed on August 22nd for root because that file changed so well looking at some exploit with a cron job go down very log we don't really care about that use your source thoughts dot text this is a new file is isn't on default Linux so let's look at what that is and it's still just a joke or something at track or that fur quad user so we know there's a cron job on this and with enough playing around if you had a set UID binary in this directory the cron job runs every five minutes and does a CH own command so we got to wait another minute I'm going to pause the video and we'll see what happens at 14:40 of this file so running date again we see that 5-minute marker has been passed and if SEC is now owned by nobody so that's interesting and if we go back to like the Joker video there was a I think defense code wild card gone wild vit article I linked I think this is it yeah and I think jerker's was with the tar command this is probably doing a CH own command because this file got chmod into nobody nobody can we stole right to this file no we cannot so let's look at exactly how this works there is a reference file for this and if you do like I explained it better in Joker but ever do LS star that star is actually operating as LS upset thoughts it automatically expands it out if there was a file on this if we do touch - la so now there's a file - la on it if we do LS Darnell it automatically process that - la as an argument so with CH own there is a - - reference which will take the owner of the reference file and that's kind of how this is working so if we do touch - - reference equals thoughts dot text touch - - space - - the reason why touch - - is because it's gonna say hey that's the end of all arguments treat everything else as just parameters to create the file as you said I didn't have that - - space to begin with so it thought - - reference equals thoughts attacks was an argument I was passing the touch command so now we have a file like that we'll look at the time we got about a minute and 31 seconds so go to my box I have OP shell set UID this is just a quick set UID program if we copy this we have GCC we do V exec C set paste come on there we go sometimes vias hood gzc exact - OH exact stage mod four seven five five exact date wait about 30 seconds and this should execute and all that script did is sets the UID to zero then executes Ben Sh I don't think that reference file has to be CH modded I think as long as that exists this should work so we will see we execute exact we see nothing really happens because we can't set you ID yet date about nine seconds left five four three two one LS - la route now owns that exec because again that CH own star on this directory that we just guessed existed processed reference equals thought text and they took the owner of thought star tax and applied it to exec so now if we did everything correct and asset UID binary works we our route and we can see if we do crontab dash L there was a cron job every five minutes then executed /root CH n which was a Python script that was vulnerable to that so that is shrek hope you guys enjoyed the box and I'll see you next week