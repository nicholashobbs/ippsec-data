 what's going on YouTube is zips I can be doing poison from hack the box and I both loved and hated some machine I loved a lot of the lfi aspects around the machine and I hated that you could bypass every single one if you just found the password file in the HTTP root directory and decoded it to get a SSH password there were two different Elif is that I know about the first one probably the intended way and that's through log poisoning hence the name poison and the second LF I was a bit tougher to do the author left a PHP info script on there and there's a pretty cool exploit chain where you can abuse the PHP info script to leak the temporary file name of a uploaded file and while doing that call that file through a lfi exploit so I'm gonna do that one first because I haven't done it yet and I find it fascinating then we'll go in and do the log poisoning one so let's just jump in before we run the NEP I wanted to show off something I just found out about it's a end map XML stylesheet that converts the end map XML output into a bootstrap web page which makes it very very pretty so I'm gonna make a directory called add map and go into it then go over to google and search and map XSL bootstrap and go to the very first resort which is Hans - - Nets github repository you could clone this or just down the file you want which was that add map - bootstrap dot XML or XSL for XML stylesheet I believe or style language or something weird like that but download this file and if you want to give this report to someone else hostess file on your own web server or you could just use this URL but using locations that you don't own is pretty dangerous so always recommend hosting stuff on your own so in order to use this we want to just run a standard MF command so - SC for default scripts SV enumerate versions Oh a output all formats we'll call it poison and then we'll do a dash - style sheet and map - bootstrap XSL and if we had hosted this on a web server you could put the HTTP location and a map will always go and pull that so you want to give them two files the final argument is always the IP address and this will take probably fifteen to twenty seconds to run and it pretty run it because I wanted to show exactly how this all works so nmap has finished now and we have just the standard output you'd expect we see ssh is listening on port 22 this is a freebsd box and as sh looks like it was built in 2016 then we have apache listening it's version two four to nine it's also a freebsd so it backs up that this is indeed a bsd box and we also got the PHP version leakage and Apaches listening on port 80 so nothing out of the ordinary there and the real match is going to come when we do Firefox on poisoned XML and this will be that bootstrap web page we had just created so it's relatively easy to read if you have a lot of hosts there's like open services thing is nice display entries go what not just a pretty cool thing I thought I'd show off so let's go to the open services and HTTP on port 80 so that is the very first thing we want to check out so go to 10-10-10 84 and we get this web page it's just a temporary website to test local dot PHP scripts so let's begin by just testing all the scripts that says sites to be tested so let's open a new tab 10-10-10 84 and go down the list so any PHP 1010 AAA for any dot PHP 1010 84 slash what's the next one info dot PHP next one is we should just do multiple so we did any list files and phpinfo dot php' so ten 1084 list files dot PHP 1010 eighty-four phpinfo dot php' so I believe we have opened all the scripts that's one two three four and we got one two three four so let's take a look at what the scripture any PHP new clue with this is we can view the source to make it a bit more user-friendly what's happening here is webpages only break when you have that carrot BR carrot and if you view source the actual line breaks of get obeyed so much prettier that way but no idea what command that is go to the next one it looks like it's just running a you name command next we have files in the directory and there is a file called PWD backup dot txt which we didn't see and I don't know if we saw a browse dot PHP so that's another one that's actually spoiler alert when we go to a type of script it goes to browse dot PHP so that's what that one is PWD backup again we'll get into this a little bit later it's a bunch of base64 and you eventually get a nice password out of it but that's not a fun way to do this box you skip a lot if you just immediately do that so put that on the back burner we get this PHP info page which I'm glad the author had put this in this leads to my way of doing the local show because it's unique and you learn something I haven't actually showed this in a video yet and I have like 70 videos out there so this would be pretty cool the key thing to look for is upload and we want to see file uploads is enabled on this PHP page what's going to happen is we can upload a temp file this PHP info is going to tell us what that file is we can do an lfi to execute it that doesn't make sense we'll get to it in probably five minutes so with that information we want to look at this browse PHP and the easiest way to do that is in book so I'm going to right click on foxy proxy use burps make sure burp is set to intercept web traffic and we'll just put a script name of please subscribe it doesn't matter because we'd be renaming this in a second so send this over to repeater with control or control shifter to go to the tab and then we send this we can see it field opening the file please subscribe it didn't append dot PHP or anything so we can just say let's try going to index dot PHP and it actually executes the index.php page if we wanted to view the source of index dot PHP we probably can try like a PHP filter so PHP colon slash slash filter convert base64 encode resource is equal to index dot PHP and that's going to convert this into base64 and the key thing there is if it converts it to base64 then Apache is never gonna read these tags which means PHP doesn't get executed so this is why we can exfil PHP source code with this method if you want to do more of this check out the Crimestoppers video so decode this and we just get the page so we could try we didn't know what any dot PHP was so let's do that with any dot PHP and see what's actually going on there relatively short command and echo - an base64 - D and it's just doing expanded print any get also I guess this is like get all config variables or something I'm not exactly positive but that is that the very first thing I'm going to test with lfi is see if it is an RFI so Elif eyes local file inclusion we're including local files in this so I want to see if I can include a remote file if I can include a remote file then I can just toast a PHP script on my web server include it and get code execution so NC l v NP 82 listen on port 80 my box go in a book set this file to be HTTP 10 10 14 15 I think that's my IP tons 0 yep and then we'll get any file and we see the HTTP wrapper is disabled in the configuration so we can't do that we can try a different one like FTP and FTP is disabled um we can try like expect LS to see if the expect wrap isn't able to code execution right away it's not so we're kind of stuck at this LF I right now and we know we can get outside of the web directory so if we include like Etsy passwd we can see this and get various users on the Box Gerak's is I guess the key when I get if you look at which ones have bash or or do Sh only two lines end with SH so all these are probably no logins so these are the only two users that can log in so if you decoder that base64 file the passwords gonna be to one of these but that's cheating we wanted to do the hard mode so we're going to go back to a web browser disable burp for a minute and search PHP info lfi and we're gonna go to the very first link and this is a little bit tough to read I guess and we're gonna walk through exactly what happens so if we go back into burp go to PHP info so let's see repeater tab and it was just phpinfo dot php' I think yep so if we render this we can view the page so with file upload on PHP is going to accept any files I can upload it to it it's just gonna put it in a cache directory and as long as users can hit that file it's not really causing any harm but if they can hit the file with like a lfi vulnerability then there's a potential for getting code execution so we're going to show off that it actually creates a file if we look in PHP variables we don't see anything so we're going to convert this so change the request method to post we got to change this content type to be multi-part form data and put the boundary is equal to please subscribe and then we have to do the boundary please subscribe content-disposition it's gonna be form data name can be anything and file name can be leave a comment the content type is going to be text plain and if you use python or something and like the request module it's gonna automate typing all this stuff in and for the context of this file we're gonna say please share my videos the content not context and then we end the boundary with please subscribe and hope I typed all that correctly and we go back here come on PHP variables there we go so we can see the files the dummy name is there for anything and now we're creating a file called leave a comment it's text plain the temp name is temp PHP some random strings and the size is 22 and this is 22 characters so if we added a few tags so I think I just added what that's three four seven characters go back to PHP variables well we added sex I guess or whatever was that before but you can see we have complete control over this and we see the filenames created so all this script is going to do is make a request it's going to put a bunch of A's and host user agent whatever it to create this request as big as possible so it takes PHP a few milliseconds longer to process and while it hits this page to upload this file because as soon as the page finishes loading PHP delete the file so we're hitting a race condition of hitting this PHP info page and then hitting that lfi to call what the PHP info page says before it actually deletes the file so that's what this script here is doing so let us copy the script and it's actually on the payload all the things repository so payload all the things github I should just download that if I have it already because as literally as all the tools you ever could want so let's see maybe file inclusion path traversal let's search that go here and yes this PHP to lfi it's just in a little bit more friendly format than that PDF that we had so see we can get out the end map directory create lfi dot pi set paste paste it in and we have to modify a few things so first thing we're going to do is swap out the payload so take that and then we want to copy the PHP reverse shell so I'm just going to find what it is copy this cat edit paste mode or a copy mode whatever it's called go back to V paste it in and we have to edit the IP so let's change this to 1010 14 15 the port 9000 1 we don't need all these comments okay see that looks fine go down see what else we have to change request one slash phpinfo dot php' that looks fine the lfi request this is a little bit different we want slash browse PHP and the argument see do we have it file file is equal to percent s which is going to be the file name I presume at least it ended with a null byte that's just old versions of PHP and that should be all we need to modify so python fi dot pi it wants the host so 10 10 10 80 for the port 80 threads will do 100 and we want to listen on port 9001 and we get an error message no PHP 10th name and PHP info output that's a bit odd so what I'm going to do is go into book we can go into options and that's on the proxy tab add a new listener we're going to bind to port 80 and redirect to who's 10 10 1084 port 80 ok click the check box to start this and then just change the IP to 1 27001 and we have to turn intercept off and go to history and we can see the request the Python thing is making we can also see the response so it says no tempt me man PHP info so the script is curling this to try to I'm not curling but scraping this request to try to get the tap name so it knows where to hit and we see tab name is here so let's go back in the code and see exactly how it finds tap name to see what's wrong so if we go into el fip tap name and it says temp name then equals West and Sun are greater them and we have I guess PHP changed at some point to do HTML entities so we don't actually have the carrot or whatever you want to call it or the greater than sign we just have an GT so let's replace that with an GT tab name and see if it's anywhere else in the script does it look like it is so now let's run this again and it's spawning the worker pool it looks like it's trying to cause that race condition and we just give it some time to see if it actually hits it well it does that we can double check our script my VM is going much lower now oh if I let's do ten ten ten ten fourteen fifteen point nine thousand one that's definitely correct go back here still spawning the worker threads see if we get a call back soon bet I could do this a thousand and hit it quicker oh I know what the issue is we're going through burp and burped by itself slows everything down because it's Java and not efficient so let's change this to be ten ten ten eighty four and this worker pool should be spawned much much quicker since we're not going through per there we go and we got a shell it says that and down here we're on the box so if we do hostname we're on poison and if we went into home chair X I can actually get into chicks this way var log not exactly sure I'm trying to think now let's see oh we have to go to ww2 PS aux W I think there we go let's see if we can find where Apache configuration is I hate BSD cuz I don't think it's time for a dub dub no it's not use your local dub dub dub Apache 24 data and now we can get this PWD backup txt and we see this file this actually has the password so if we copy this echo - an whoops PWD backup txt that if we base64 - D that file it's still base64 encoded and if you read the contents of it it says it's encoded at least 13 times so if we base64 - D base64 - D that and just keep going down the chain eventually we get it so what I'm going to do is just going to do for I and SEC 0 to 12 that count 0 so it's 13 times yeah we can do that then we're gonna pipe base64 - D echo and we went - and to not do a line break that was probably really confusing to fall well we forgot to do so all that did was print pipe base64 - D 13 times so we can copy that we can cat PWD backup paste it and we get a password so at this point we can SSH as chair X at 10 10 10 84 or we could probably Python C input PT y PT y dot spawn Bend bash Python 3 - C we can do which for us to see if it exists which Python 3 which may be pythons not install in this box and copy this password paste in SSH and now we could get user dot text so that is pretty much two ways to get the user show as you saw a while ago before we do that whole PHP info thing we saw a PWD text or pwe backup text whatever the power name was off the web server I personally think it was a mistake to leave that on the web server should have forced getting a shell to get to the file but before we get into the actual routing of the box let's get show a different way and probably the intended way because the box is called poison and we're going to do a log poisoning attack against this box to get code execution so let's go back to our firefox and go to the page so 10-10-10 84 so in order to understand how log poisoning works let's find a log to view and if we look at a patchy log free BST to get the location let's see where is it ver log httpd and there's - Eric log and - access log so we want - access that log so if we go back to a browser there we go and we want to go over log a httpd access log and we can view this page it's relatively big because it's the Apache access log the better way to view it probably would be through curl so we can just curl this file and we can see this is all from our PHP lfi exploit then we have stuff from mat map but the key thing is the very bottom of this we see the user agent so if I term burps intercept on go to Firefox enable it and we're going to go to let's go 10 10 10 80 for any page doesn't matter send this into book we can change the user agent to be please subscribe put this one repeater tab so it's just easier to navigate page wasn't found if we curl the access log and look at the very very bottom it's going to take a few seconds to go through this entire thing we see the get any page it doesn't matter and the user agent here is please subscribe so we have complete control over this and as we probably said before if you put PHP code and the page is executing it so we can do PHP echo please subscribe we're not going to see this PHP tag if we see the PHP call we know it's not passed to like a eval or something but if we don't see it we know it actually executed it and we may have just heard the box because something silly happened I'm not sure exactly what I think we put HTML and these quotes and now PHP has an error what I mean by that is a request has a double quote I think when we sent it the server translator a double quote to and quote which means our PHP code is bad and we should feel bad so I wanted to skip this part we'll come back to at the end when we route the box and can actually modify the logs let's see do we actually have modify privileges there's a shell we can just cat the file so what was it ver log Freetail HTTP access log I think is HTTP D access log we can see what did we do yeah it escaped our thing so LS dash L a on let's see httpd we cannot write the file only root can so yeah we have to root the box so we can fix this because these quick back slashes are breaking their script probably should have tested for that before doing this but I guess you only live once so let's go to her SSH session wherever that was channel 3 we can kill 4 and come back to that eventually so we want to get this secret zip file off so let's base64 encode it and base64 is not found because this is BSD let's SCP it off so copy the password and then SCP jarek's at 1010 1084 file power name secret zip current directory wait for this whole right guess diffie-hellman or whatever to take place at doing a DNS lookup and failing because it's ssh and then what type the password and get this file and be able to analyze what it is while that's going on now there we go so we got the file we can try unzipping it it wants a password try the password we already have which was that the same thing as Sh and extracts secret if we do file against it we just see its ASCII text with no line terminators if we try to cat it it's all garbage so we have no idea what this file is going back on how I did the previs we go to opt was it profess where's my twin express stuff fine /opt crap - I when a noob do we have it I don't have linen I'm not sh anymore let's go grab that so Google well disable burp so we go a little bit quicker when enum sh github go here raw copy and let's just double check by looking at the forks see if there's one that's much further ahead where's the graph yeah we won't worry about that let's just use this one so make the directory dub dub dub got Sh paste it and then Python - I am simple HTTP server curl ten ten fourteen fifteen port 8000 when a new message - that's not found dev sh m not they're going W get a /tmp then we can W get the script Flynn and um that Sh execute it chmod plus x I guess we don't have bash it's only show can we copy to our home directory see what its permissions are we can execute it CSH I think is B PSD see if it works so this script probably isn't going to work so let's just look at the things we care about so we want to look at processes so PSA uxw and just go through them a little bit we have a bunch of shells that's garbage let's see here's a root process running VNC which is unique if I do PSA ux w last - think w for rap there we go we can search VNC to get there and see all the arguments that ended at geometry but we have VNC running and we normally don't see VNC running it's tight BNC as well and we have all root X Authority we do a net stat - a n and grep for listening we also see VNC is listening on port 5801 and 5901 so let's do a SSH tunnel to the sport and I'm lazy I don't want to kill my current SSH connection so we're going to go back to Google and Google code ami SSH code to find a post by Jeff McJunkin from sans and has a bunch of cool key sequences and SSH that I just didn't know about so we want squiggly C to open a command line so new lines quickly see we got SSH and this will allow us to create a port forward so if we just do - Dee 9001 it does what the whole studying a new SSH with - Dee 9001 would have done let's just do 1080 so we have a dynamic port forward listing on localhost 1080 going to SSH and we can verify that by doing net stat a and LP grep 1080 and there we go we're listening on that so we can go in Firefox foxy proxy let's create a new one and say SSH 1080 proxy details one 2700 one port 1080 it's a Sox SSH a Sox five close this use it if we go to one 2700 one was it 5901 see what happens probably nothing because I'm guessing Firefox is configured to not proxy one 27001 guessing it's something to do with that so let's completely disable foxy proxy and try this again so one 27001 take out no proxy for one 27001 5901 5801 connection reset it goes back to SSH see what it said the port's were 5901 to 5801 so let's try something else proxy chains socks5 put this to be one 2700 one for 1080 and we'll try proxy chaining it so proxy chain one 2700 159 one forgot the s and doesn't look to be working 5801 let's see I was like my whole SSH connections dead that's weird SH had completely died there wasn't responding so let's do it manually so let's specify the dynamic at 1080 and then we can also say 6801 250 801 and 6901 to 5901 normally I make these ports the same and what this is doing is saying hey listen on my box because it's - Elfa local so listen on my Cali box on point 6801 send it through ssh and on the other end of ssh go to one 27001 5801 the reason I didn't make this 5801 is just because I want to test this dynamic thing to see if that's working so just because testing two things I didn't want to put curl 5801 and have it worked because of the - shell and not the - D so that's why I did that small separation I have to get the password again so let's see there it is and I'm really not sure why that SSH connection just decided to not respond that was odd I'm - the password then we can go back here proxy chains far not found that's more what we expected 5901 RF be zero zero three zero zero eight this is a VNC thing so we know that's working and we can get rid of this proxy chains and we try to get to 5901 we fail to connect if we put it to 6901 which was that - L it's the same exact thing so we know there's a VNC server if we do VNC viewer and then we want what is it host so one 27001 and double colon port 5900 one connection refused 6901 my bad and it wants a password so I'm going to assume that this secret file is some type of password so let's just do VNC viewer - passwd and we can do secret and pass that file as the actual password and there we go we have VNC on this box and VNC is like a remote desktop protocol and it is root so we wanted to we can now go back and [Music] fix that log but before we do that let's just do one small thing let's find out what that password was so we have this it's just a bunch of junk and V&C actually just obfuscates the password I think it's des encoded but you have the secret because open source so VNC password decrypt github let's see if we can find this we have to disable the proxy on Firefox no proxy go back here grab this get clone CMD VN c pw make the file executable it wants it just wants to pass to BD file and we can execute it with the file and we see the password of VNC was VN CP @ SS or a dollar dollar bang and all that does is if we look at it whoops it's got the coffee station key decrypt and at doing that and if you couldn't read the C code it looks like there's this Python script it does the similar thing so VNC passwd dot pi yeah so that is that I did promise we'd go and fix that log and then do this lfi again so VI user Verilog HT PD access log and let's delete that line of us dorking the server so played a few lines and let's also go to the top of the log file for a log only delete Wow that's 800 lines I'm doing several times let's just see Devo log echo 2 HD B D - access blog okay we got a blank log file to play with so if we go back to or lfi stuff let's just go back to please subscribe [Music] and page does exist let us go back to this and we want to do that curl do I have it yeah I do so we can see or user agent right here so the smart thing to do would have been put a double quote there click go and curl and see it escapes double quotes and the reason it's doing that is because every parameter in this log is using double quotes so we got IP something date and then this get is in double quotes for 4 to 17 this dashes in double quotes and then the user agent is in double quotes so because we're being a double quote in there it escapes that to not mess with this field I think that's something specific to FreeBSD I don't think normal like Ubuntu and stuff will do that so if we were smart we would have noticed that beforehand and since we're not we're playing a little bit of doing it after I'm gonna try a single quote and see what happens and there we go so single quote is just fine it doesn't do any escaping let us and the reason why the PHP error message gave HTML entity is probably because PHP did that by itself so PHP we need the question mark echo please subscribe I put a double quote there again do not do that and then exit that so if we go to the page C execute this view the source we see we didn't get anything here because it literally did the execute so if we changed please subscribe to you don't see the PHP tags refresh this and you still didn't see the PHP tags which are these things so we know we have code execution so let's put something in here so let's do system then server or not server requests hip sack so if we could go view this we're probably gonna have some time for error message but if we put the argument if SEC is equal to you name - a we have the command execution right in here so we could change this to be whose name there we go we got poison so that is how you do it through wall poisoning you could W get do the netcat shell so we could go to end test monkey reverse shell cheat sheet grab this netcat shell and bsd is weird it doesn't like this redirect part where is it let's put in terminal so it's a bit easier to read so we want that m'kay fi fo we don't want this redirect and we want to change the IP to 1010 1415 for 9000 - because we haven't used that so we can copy this and CoV NP 9,000 to paste this in I'll probably want to send this to burp because I think it's going to incur this weird and not going to work but we can try doesn't look like it's working so let's send this to Brooke go in but you don't need that request don't need that you know a lot of requests before that okay put a command in URL encode and send repeater click go see if we get a shell doesn't look like we do with this one we could probably just W get that a PHP file I don't feel like playing around with this too much but leave this one for you if you want you can watch the beep video where I do a bunch of other LF I type stuff but you should be able to get the basic info on how to do this box so hope you get in oh uh hope you enjoyed the video take care and I'll see you next week