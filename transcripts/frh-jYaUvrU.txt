 what's going on YouTube this is IPSec can we do a nightmare from hack the box which I believe is decoders third machine he's also done minion and Karen that have retired in the past and after this machine he published fighter which is another good machine but this machine stands a on a league of its own in terms of difficulty because after 163 days it's only got 267 ODEs and that's personally because almost everything you have to modify slightly to get working the initial exploit is a second order SQL injection which just is pretty rare the only other time I saw that was on a sans holiday hack challenge I have that video on my channel as well it's probably like the third video I've uploaded it's got analytics in the name but after that you get credentials to brute-force in to SSH to find out it's only SFTP allowed which gives you read-only access to the file system and as a loop reviews err so you still can't get into the flags and other things there's a SFTP exploit out but all the proof of concepts even after 163 days of being active there's still only 64 bit I didn't find one that worked for 32 bits so you have to modify that exploit to work on a 32-bit platform which we go into a little bit after that there's a binary to exploit you have to find the argument and then find which character it's not filtering and then after that you're still not done because you pop that binary but it still only gives you the user flag the final flag you have to get root which is a kernel exploit and you have to modify the exploit slightly because the peripheral concepts can have a hard time identifying what Ubuntu OS is running so with all that said let's jump in to start off we're going to use n map so n map - SC for default scripts as V enumerate versions Oh a output all formats for any directory and map call it nightmare then the IP address of nightmare which is 1010 1066 this command can take some time so to run so I've already lent it looking at the results we see it has two ports open Apache on port 80 and SSH on port two - two - we are running Apache version - 4 1 8 on a Ubuntu box and I believe that means it is going to most likely be Ubuntu xenial it's not a huge difference between the Ubuntu versions if it was a no longer supported ubuntu version that I try definitely old exploits but Ubuntu zaniel I'm assuming it's gonna be relatively up-to-date additionally if it said CentOS or something I know that some binaries I compile on Callie won't be compatible because CentOS is not a derivative of Debian like Ubuntu and they just have different locations for things additionally SSH we have it listening on a non-standard port normally listens on 22 this time it is 2 2 2 2 and we have a weird banner it says 32-bit not so recent version I've never seen an map actually say this and we know it's not nmap actually putting not so recent version for 32-bit because if we go down here we see it's actually in the banner if we netcat to that port so netcat 1010 1066 on port 2 2 2 2 we see it does prompt us saying it is ssh 32-bit not so recent version so there's probably something here but i always like looking at the websites first because that is generally where you get your initial foothold so let us go to 1010 1066 and we just get a login prompt so we're gonna try like admin admin admin password few common things admin then I'm going to do the standard sequel injection of scene work or one equals one and then comment out try that we don't get anywhere there so well we start playing with this I'm going to throw this into go Buster so we're going to do opt go Buster - H and we'll use the - W for Willis flag user share word list go Buster directory list two three medium and the URL HTTP already had that my clip would just paste that in will do - OH - right the results and we will write - root directory search dot txt I think that is all I want to do so that is running we see documents comes back immediately so let's just poke at that directory looking at it we see a weird array we can view Dante dot txt we see it has some type of encoding or encryption I'm gonna say it's like not rot13 because I'm seeing special characters here so let's just take this and go to quit quit real quick and see if this will solve it if it doesn't solve it no worries if it does solve it we got a quick easy win and I'll probably move on to the next thing if we don't figure out what Dante text is we also see index.php but that is the script we can try putting strings so if we do like question mark a look 0 equals 1 see if we can change what this is it doesn't look like it so if we look at this it's probably doing some PHP command to list a directory because we see array and then 0 is equal to dot 2 is equal to dot dot and if you do LS oh we got another few directories or tell us - show you maybe we see the very first two postings are always dot and dot dot so that's why I'm thinking it's just a hard-coded LS command and we're going to ignore that and go check out the other directories that came so I think one was a secret yep ones include we can check that we get it forbidden and we can go to secret as well and we get forbidden there I want to kill that go Buster because I don't believe there's anything left for us to see there and we're going to do another one so let's see let's change this URL to be slash secret and we'll do - oh for will call this secret directory with PHP extension and then we do - X for PHP and the reason why I did PHP scripts first is because we know the server's running PHP based upon both what's in documents and also what is in the N that beyond are saying the PHP session cookie for HTTP so looking at this we see download PHP returns a 302 so let us just check that out I'm gonna change my burp proxy to go through but turn aricept on and we're gonna try going to that page so if we go to secret download dot PHP send this to repeater click go we get through - found and we're not getting any content so we followed the redirection and it just takes us to index so let us turn the intercept off and try this register thing else so we're going to use the username tip SEC and the password of I guess we'll just do EPS ACK keep it easy we have successfully registered so we can log in and we have a few more things to play with but I want to see if that 302 is still there yeah the redirect so secret download PHP and we get something it's not much but is something so we can guess that downloaded PHP is probably gonna have some type of argument so I'm gonna use W fuzz against that so we can leave that go Buster going and we can do W fuzz - - help to list things I need to do W fuzz - let's see what's cookie how cookies right here B and the reason why we have to do B is because that redirect so we're going to go to Burt go to my history and just grab this PHP session because if we have this session cookie then secret will not redirect us so we can prove that by going to secret download PHP we don't get redirected we take this cookie out we do get redirected we got that 302 found so - be put in that cookie then we can do - W for a word list we'll do user share word list SEC list this is on github this isn't default Akali so if you just google cyclist github you can grab it discovery web content and parameters so this just can be a bunch of common parameters in HTTP stuff so HTTP colon slash slash 1010 1066 secret download PHP and we want to fuzz the argument name and we'll just put a file we think exists on the server like Etsy passwd and do I have the URL and sing quote I do so I'll close that off we'll run this and then run help again and I'm going to copy this line and if we just look we have this hide option so hide option based upon HTTP code HC length HL word HW and characters h h so we're going to add that h hn and - HH and it was three characters and I screwed something up it's two dashes and we see right off the bat when the parameter has found a m-- it responds with nine characters two words so let's go back to but use the parameter file name we have to put a PHP cookie back use the parameter file name as equal to at C passwd and see what the sees nothing but it printed passwd so let's try something we think exists in this directory which is like index dot PHP we don't get anything let's try download PHP see if we can view the contents of what we're executing and we get the script source so we have session start if the session doesn't exist redirect to index dot PHP we saw that foul name get from the user and we're doing a base name and base name is going to take always what is after the very last slash so this will grab pass so I'm not sure how we can use this for like directory traversal if we want to go up multiple directories we're echoing out the file which is the name so that's why when we did at C passwd we just saw passwd then we're also echoing out file get contents file and this will not this isn't a code execution thing this is just going to cat the content of a PHP file if it was include we could have a potential to do code execution but we also wouldn't have been able to view the source in the script because it would execute it download PHP so I'm gonna assume this is just a rabbit hole because I don't see anything readily exploitable so let's go back and look at the web application some more so if we just go to 1010 1066 and let's log out first because I want to sequel map this page and then we'll go play with it while we're doing sequel map so let's just make a log and request doesn't have to be valid because we're just sending this over to sequel map go to the proxy tab intercept on click login go back to perk right click copy to file when the nightmare directory so we're going to call this login request and then we can just do SQL map - our login request and we'll do - - level 5 - - Wisc 3 and I'm going to assume it's my sequel and there's a batch option - I think it's just - - batch SQL map help grant batch yep - - batch and that's just gonna make it so it doesn't ask us whenever it comes across an option it's just always gonna choose default because we're not gonna look at this so SQL map label that window I think you'll love that go Buster okay so let's turn intercept off while that goes and login with it Zack I've forgot where I set the password - let's register a new user will create Oh we'll try admin see if we can register admin as a user to admin password already exist let's try like admin space and a password already exists admin to spaces password okay so sometimes you can get like lazy comparisons and register to admin users but it looks like that's not vulnerable here so let's just do it and the password of password well again and we can see notes so let's do test insert test test so I'm gonna do a bunch of special characters see how the application handles it in both these fields there we go we got to set me : insert here let's go to page source and looks like we may have cross-site scripting see if we do old test /p and sir it is cross-site script ball and the name field but in the text field we are going for I think HTML and E and coding or whatever this is sometimes when coding so safe strings is on the text field but not the name field so if someone does hit this page there's a chance we could do cross-site scripting let's see let's try browse and upload a document so if we go to root htb boxes nightmare let's just upload a shell so we'll copy a page she'll be HB CMD PHP look at this file we can do gif eight so that now registers a gif and system command actually outputs data to standard out anyway so that echo can't command was redundant so I'll fix that and we want to upload this so CMB dot PHP upload what's it gonna say file upload has not been implemented yet okay let's look back at sequel map I had to have bat Tron guy typo that died dream putting it on I have one - not two dashes that's stupid so nothing there the other thing I'm going to do is let's register another user let's do it and we'll do all the special characters again here and we'll do that for the password as well we have registered we go to login it logs us in and we get sequel error so something we did caused a SQL error and this is called a second-order injection there is a good video I did on the sans holiday hack challenge of I think 2016 it's one of the very first videos I've uploaded I think it's called like holiday hack 2016 analytics it's the Analects challenge probably the longest one because essentially a second word or c SQL injection is when you put bad information in the database and then the script pulls from the database use that for another query and that is injectable and that comes along because a lot of developers the conscious when dealing with user input and they know okay i'm ever gonna trust what the user sends me but sometimes they're just blindly trust what the database sends them so that's what we have going on here it's trusting the I guess maybe this is probably gonna be in the username so it's probably something along the lines of select star from notes where users dot o where username like and then this user it gets it from the database so that's probably what this command kind of looks like and even though we're not giving it this parameter here we put this parameter in the database and that's where there's no filtering so I'm saying it's probably the user because I can't think of why the password would cause a SQL error trying to pull notes so let's log out register a user let's do please subscribe I'm just do - and comment it out but that for the password - just because it's easy to paste in both fields we get SQL error on that single quote so that wasn't enough to exit the parameter so let's register again let's play with this a little bit let's register with they put it in parentheses as well so we know the single quote is probably the bad character unless it was the dashes before which I don't think it would be the dashes so register this user and we don't have an error message so now we have injected it and commented it out so we have SQL injection right here so the next thing I'm going to do is log out well register again and we're going to try a Union injection so we'll do union select there's a max number of characters I can put there okay so let's see if there's a max number of characters we can use and burp if that's just JavaScript women in us so get an HTTP history let's look at a post to register copy that to repeater we can control shift you to decode all this so we want to do let's see what what the password equal to a so we wanted Union select one copy this send the registration you have been successfully registered so we can go to login password to a SQL error and if you're curious about Union injections my Karen video is really good CH AR o n I think it's pronounced Karen I don't know but I explained you and injections in depth in that video so I'm just gonna do Union select one comma two copy this I forgot the last - click go put this as a and we see the Union select works we know one get a SQL error and we can control the output so if we did something like this to be I think at at version is one this should print the sequel version information so let's try this so there we go we see this is my sequel five seven one nine Ubuntu 1604 one so I think that is Ubuntu xenial again so now we have the sequel version so we have injection we can two fields so let us search for the information schema table so information schema my sequel and we want to figure out how to get all the tables and databases so let's turn ok intercept is off look at this reference manual and this will just list all the tables and give us the table structure so we want to look for tables and we see the information schema tables table and we probably want the table name and table schema table schema is going to be what database it's in table name is going to be the name of the table so if we go back to a registration command we can do select table name and table with your table schema first so that's on top since that's the database name and a table name I do that correct I did one of it ask me case sensitive we'll make a case sensitive anyways because that's what the web page has the casing as ta be le and that's right schema and then we want to do from information schema tables so this is the database name then dot is the table we want to view information from click go control you your Ellen code this I don't want this equals here I'm saying uh because I got a 302 found which I don't know why I got 302 found click go let's try logging in with that I don't think it cleared the user and we have to do your I'll encode that so I screwed something up with this command I think yeah so it did not register this user so what did we do wrong so post slash register we want please subscribe killing off that Union select table schema table name from information schema dot tables let's just lower the length of the query maybe we actually hit the max length yep that's what it was so login and we can see we are now dumping the entire database so let's copy this highlight that go down here shift copy will kill SQL map because we don't need it we can use SQL map to do second order injection probably cover that at the end of the video because I think this union is honestly better so let's make a directory called database and we'll just create the file so this will be database table paste it in that's a little ugly let's do WC - L and that will grab dot on database table copy the temp and we'll do WCHL on temp there's 130 so 65 records so if we VI temp let's do QA to start recording a macro go down one line backspace : hit home go down one line and the macro and recording if we do at a that works so we had 65 lines so if I do 63 at a like magic it does that 63 times and we have that nice and organized so we can move tap now back to database table and we want to probably look at all the rows and these tables so let us do that going back to the information schema reference let's see probably the columns table does this have information we got column name table name oh we even have the database in the columns table but since we I guess we could have used concat to do multiple fields and one and export it all this but maybe woulda hit that weird max character limit so we want to do table name column name so table name column name from information schema dot columns copy click go through to found how can we shrink this table name column name from huh get rid of the a nope huh guessing we're hitting a max character limit I don't know how we can shrink this any so we have a union select table underscore name column underscore name from information underscore schema dot-coms yeah I don't know how we can shrink this so if we just get rid of table name and do column name will do Union select a there are two founds so something may be going on with this web application right now oh we fall the redirect and we're logged in that's what it is I don't think there's a max on the name but I think is this actual PHP cookie so we'll click back or do table name column name from information schema columns get rid of this cookie because this cookie we accidentally logged in with it and now it always thinks were logged in so let's validate that by going please subscribe and comment that is probably longer than the last query we did so if we copy this paste yep so there is no log in length on that user I think it was the cookie so we had probably clicked log out when we shrunk the cookie and that's what caused it to work because it killed the session well again with this and there we go there's gonna be a lot more than the previous one but we can do the same thing so we can we'll just call this temp right off the bat paste grep dot tab 210 to WC - shell tap - oh well 615 so them temp 2 will do cue to start recording I down colon home down escape keel and then when I say 615 so we'll do 614 and almost got it correct we just have this one extra so we'll do that so we got notes users and config so we'll move to to be tables and we'll tale - 20 tables and let us I guess grab all the I delete them too much because looking here we have sysadmin I don't see sysadmin here configs notes notes notes users configs huh I don't know why it didn't not grab sysadmin that is curious I think I screwed something up because the database I don't have configs what was my query Union select table name column name from yeah see notes ID notes title let's go down and see if just missed it huh so if we look at database table again we see a notes table and a sysadmin table Oh notes I know where I did wrong so let us change this query a little bit we got two tables and we're not showing this is probably sysadmin configs and it has a column of server that's why what I missed out so let us do a where table underscore schema like one if we could just do this is it concat information about schema whoops I think in cat is SQL so if we do can cat table name table schema table name we'll see if this works I think that's the correct syntax if it's not we'll just do it the lazy way and exfil one at one date up one table at a time so let's log out and try this one database at a time Meishan schema yep this did it so sysadmin users so this is what we want so we V temp paste this MV temp - temp - then I don't know why I did that grep dot tab - - temp there we go and we can do this again so QA backspace colon and insert and recording at a edit work QA insert down cue a cue a insert mode down colon home down escape cue at a at a do this a few times there we go so we have the two tables or two databases and the table name of a database name is what I think threw me off because I saw notes I knew that was a database name but it's also a table name so there we go this makes sense so we have sysadmin database has a user's table that contains the user name and password column while notes also has user name and password so let's do database table column name sysadmin generally sounds more juicy than the notes users so that's what I'm going to be starting so let's do Union select we don't need to do that concat anymore we just need username password from this admin dot what was it users and we can copy this go have been registered so what us well Gail well again and here we go we got a bunch of username and passwords to try so let's put this in a file and we'll get out of the database and just do use your past text paste I don't know why I keep giving a name when I'm just gonna grab dot I need to figure out the said to delete blank lines let's see if we can do that real quick % s begins with a line break delete that didn't work you % begins line break delete that didn't work either so we'll just grab dot user pass to temp them temp QA then we'll do let's say five at a five at a that looks good was it the last one yep so now we got a list it's good up somewhere right they had screwed up oh this is bad so sometimes doing macros doesn't work out and you spend more time cleaning up the file then you would have if you just did it manually but man does it feel good when the macro actually works okay so I'm going to move that to be well move temp to be user past text and when you use Hydra and throw that at the SSH server listening on port 2 2 2 2 let's do Hydra - - help - H so we can see the arguments we want to use that - capital C I believe down here means a colon separated file so if we just search up for a colon yes - capital C file is login comma colon pass format so that's why I did that for me I did when I was formatting it so hi Josh C user past text will do dad I think just SSH 1010 1066 I think we can specify port like this that looks valid looks a lot simpler than it should see yep so we get a hit back we get FTP user and the password of at where you go so let us SSH to 1010 1066 I think it's - capital P or lowercase B I think capital P note low K speed and we specify the username FTP user paste it allocation request failed so it's a FTP user so let's try SFTP it still went to port do capital P I really hate that they flip those two so now we have SFTP which is secure FTP we do it LS and we can see everything on the file system so the very first thing I did here is got out of SFTP because I want to do a fine command if we do help we don't really have find or anything so let's look at my mount I have a nightmare directory in my mount so let's do SSH FS and this is exactly what it says it treats SFTP as a file system so we can do the same thing OTP user at 10:10 1066 / mount nightmare - P lower case okay paste that don't get any output but if I go to mount nightmare I have the file system here and that means I can do a find command and then just list every file I can do also - LS - dev null and we're getting all the files and their permissions dates and all that stuff this is gonna take a really long time to run so I piped it to htb foxes nightmare dot find text and because this probably would take two hours to run we can just poke around at it so if we do htb boxes nightmare and we can like grep for grep user dot txt like grep for user dot txt and dot find out text and this is again just the output of that recursive find command so we see that it was created on September 12th so the next thing I did was copy this trap set 12 to be and find dot txt and see what else changed there so we got notes and htaccess I scuzzy - SSH config change then so that is definitely interesting so let's look at that so if we go to mount nightmare we can Etsy SSH them sshd config let's just do less it's saying it's a read-only file system so we can look around we see port 22 there's no reference to put 2 - 2 - so either there's another SSH or iptables is doing something fun funny because there's nothing that would say this is listening on for Tuesday's a port so what I'm going to do is let's just verify we can't write anywhere so tell touch test ok I had slash time so I touch test on my machine can't write in town CD home decoder see WC - see we can't read user dot text can't write here Deb s hm touch test Ken right there so it looks like we'll pretty much read only and we see temp is chmod into 777 so we should have written there so there's probably some SSH or SFTP command to make it so it's only read-only so let's go back up here and search for let's see sshd so we do see a second SSH config or actually an ssh binary user local 2's pin sshd and here's the config we can read it so let us go there copy this and here's the point two two two two and let's see we see SFTP so this is definitely it allow user FTP user so we know this is potentially exploitable because if you remember in the Recon the header said 32 bit old version so let us grab this file so if we CP user bin sshd - HT be boxes nightmare let's see file s HD it is a 32-bit binary gonna do a - V on it I can't strings s HD grabbed by version and my lucky grap I - a - and we threw this on a 32-bit 32-bit box I'm almost positive we could grab the version from it because anybody just do SH D - V it would say the version compiled and I may be a little bit too lazy to copy it to a 32-bit box so we'll do search boy SFTP and let's see if we see anything Synnex free sshd grap SSH nothing I'll weep I have to do - I I don't think it's free SSS HD because it's OpenSSH will grab OpenSSH see if there's anything here username remote discovery don't see anything here so I guess I just can't be lazy so let's do dot slash s HD - V and we'll do this with links thirty-two and try to execute this on our box because I think nightmare was 64 bits so there's gotta be a way we got lib crypto so let's just grab this and copy this to a box and see how many libraries we have to copy before it starts failing so let's do grip dot find C we want the 32-bit version so we can copy this CP melt nightmare to /lib i 386 fifty-two shd unknown option - V so no version option s is HD s HD version hundred Chairman SSH version SSH as the - V oh that's a troll says boy at the top of the output I tell you it's version it looks like decoder had modified this to prevent showing the version that's a troll probably another way to do it but let's just Google SFTP exploit let's see we got SEC force 1 and 1 on github let's see what difference between these two is this is a Python one there's gonna touch files so since this is touching two files I don't think I'm going to use it because we don't have write access so let's check this one and that very much could have worked I just don't think it will check this one let's see that's six point six was this six point six yeah so both of these are six point six so they're probably the same exploit so this will probably touch files so what is this doing see we can go to the SEC list page I'm not sure this is the correct one because this is 2014 and our header showed this as 2016 but we'll try this okay I met remember saying forests command internal SFTP don't configure the chroot will be able to access all persons that file system including proc FS proc self maps reveals the memory layout and proc self mem lets you write memory so combine these you get RCE so let us see if we can read and proc self mem so if we go to mount nightmare we can do proc self tail mem not getting access to nine it's probably because we're in sshfs so i bet if we did SFTP was it up here SFTP all SFTP - P - - - - FTP user at 10:10 1066 where you go question mark sweet CD pro self get mem couldn't read get rocked self ma'am wait it was maps of course we can't just get memory we could potentially right there so if we cat maps we can get the memory layout of everything so so far it's looking like it is good and did I do cat mem yeah I did cat maps it's still blank because I guess that's sshfs but we verified we can read proc self maps we couldn't read brach self ma'am but we may be able to write there so let's just keep going down we can copy the exploit and paste it on Linux so we have code highlighting because I'll make it a bit easier to so exit that them SFTP C set paste paste that in and see what's happening so the very first thing we do is we're grabbing a file cousin this is just a standard function so I can grab any file dump file so we can write slurp file I don't know what that's doing maybe it's reading maybe get head slurp now I'm not sure exactly what slurp file means we got main now so we're signing our arguments strutting SSH okay asking for the password authenticating actually let's not ask what password let's just assign it I don't feel like typing that every time there we go see this is authenticating grabbing /proc self map so we can get the memory address like got it looks like now we're gonna go look at web c so there's gonna be able to return to Lib C attack if you look at my just YouTube search tips a curette to Lib C you'll find more information when I talk about them we're grabbing the system address right here so there do a system sis call this gadget we don't need because this is pop RDI that's 64 bit and this is a 32 bit process according to the head or unless that's a complete troll naturally checked it on filing sshd binary so it's definitely 32-bit still doing stack copying and here's the actual exploit we're putting I guess a shellcode or whatnot this is the core of the exploit and it is definitely 64-bit we have address of pop RDI and the main difference between 64-bit and 32-bit buffer overflows is how arguments are read and 64-bit there's a lot more memory registers so they placed arguments on top of the memory registers so the system syscall instead of reading off the stack like a 32-bit program it's going to just read off of the memory registers in order of RDI RSI RDX RCX and there's two other ones are and a number I forget the other two but after six arguments then it resorts to the stack but that's why you see this exploit not putting the memory address first because in 32-bit you do the system memory address and then it's going to pop one address for the exit that's going to pop another address for the actual system syscall and 64-bit it's going to first before loading the system address it's going to pop the command you want to run into RDI and then I think exit is after that and since we don't care about exit it doesn't even bother popping it here so we just pop ODI and then execute the syscall we want and that's going to look at the RDI register and pull the command so let's change this to be 32-bit friendly so we can comment this out and then we got let's see we don't do the gadget address because we're not using gadgets at all we're gonna do remote system address then we can do or exit address which is going to be for nops so if it hits that it just does nothing and then we want the final one to be the stacks dirt address okay I'm gonna go through we're reading the file writing and that's it so let's grip that for GCC and we don't do we have compiled instructions anywhere B or C 64-bit nope this one looks similar and has compiled instructions so we'll take this we renamed it to SFTP so we'll just name that flicking type password there we go so chmod plus x SSH point then we can do dot slash so we want to do the host which is 1010 1066 port 2 to 2 to the user FTP user and a shell command will do Who am I field resolved host name so this doesn't support ports whereas SSH options here we go so we want to change this or try to get pull I hit an extra key let's undo that and redo it I'm always paranoid when I hit a key and don't mean to in VI that's something weird I don't see happened so let's see we got to assign the port so we'll do int target port is equal to ASCII to integer two two two two okay that is now assigned shoot what did I screw up target for and there we go uh don't need this anymore okay we authenticated and we got no return so let us create a reverse shell so we'll let's do this all in a new window so let's that's all I want it NCLB mp443 actually 9001 okay so we have to create a Python reverse shell is something that doesn't touch so pen test monkey reverse shell cheat sheet and the reason why we are not going to be using like netcat or things like that because we can't touch disk so this old faithful where is it that we've always used this temp F well that's going to touch disk and we can't have that so let's use this one and execute this command so the reason I hate using this is because you got to escape frickin double quotes so V shell pie let's change this to be 10 10 14 30 on port 9000 1 I'm 14 30 right if config time 0 yep that is correct so now we have now we have to escape all double quotes so we do that and now every double quote has a backslash in front of it so we can catch shelled up PI grab this and we can finally do the exploit so let's see dot slash SSH boy it wants host 10 10 1066 user was FTP user and shell command we can put it in quotes it's going we didn't get anything so I'm going to change to port 443 because that's my default thing I do whenever a reverse shell doesn't work is I try HTTP since almost always you'll be able to get out on HTTPS still don't see anything back so let's take a look at that exploit maybe I screwed something up then what is it SFTP dot C and we want to look at this remote stack remote system that's good I wonder if I got the order wrong let's try that I don't think the orders wrong there but it's always possible pretty sure when I did this there wasn't much modification let's see stacks address remote system address see see see nothing and I think I said it once before in this video but here's the obligatory time where I wish I prepared more let's see what's going on it all looks good let's see where the stack right to memory oh crap SFTP seek 64 we don't want that everything's in like 64-bit declaration so we want to replace long long with integer let's try this so we got rid of SFTP c64 and char long lungs into ents and we no longer see the stack let's see sighs t2 unsigned and sex T unsigned and space in okay size T is also an unsigned integer okay gonna find that now still can't find the stack what did I screw up doing said on code is probably ill-advised to say the least we got a bunch of L X's that's shouldn't be LX anymore at the top o X no no no because that's I believe long and we're not doing Long's please work hey we found the stack sweet and there we go so if you could somehow follow that all we had to do was convert the C code from 64-bit to 32-bit the first thing we did was copied the registers as I explained before and then the second thing is I had to change from the SFTP whatever 64 to not be the 64-bit one and I changed from I guess declaring 64-bit variables to 32-bit with replacing let's see if I can pull up the curse still have it replaced sighs tea with unsigned integer sighs tea with the extra s with unsigned integer and we here to replace I think that was all I had to do along with long long to be a regular integer so that is that I think there's a proof of concept out there where you don't have to know you would have to I guess I just don't remember doing that step but I don't know that's I guess the official way to do it now is to take that proof of concept and modify it to be a 32-bit exploit so we're on the system now as ftp user and we have a shell so we can actually do commands so if we do temp clean touch test still can't write to it let's look at the permissions and we see a plus which is unique if we look at my box I don't have a plus at the end and that just stands for like an extended attribute I think it's like set faculy and get faculty do additional thing so and when accept like this typical chmod is eärnur group everyone we're set faculty can actually do multiple users or things like that there's also like set cap and get caps so you don't have to give a binary full root privileges for instance like you could give TCP dump like set raw something cap set raw net I think cap and that will give TCP dump the ability to do a raw packet capture so Linux does have a lot of strict permissions just like windows in that sense so on this box let's see let's go to find dot - writable - Devon all because I don't want to see errors and we got quite a bit Lib and that can't be right I guess I'm gonna try writing but let's see can't write to sis can't write to proc dev sh m here no it's not so these are all files so let's see let's go to a home decoder and let's see can I finally WC - L user dot txt still can't have permission so I have the same exact permissions as I did with the SQL so what I'm going to do is we're going to run Linux brave checker so CP opt clinics risk leonard um Sh we do a python - and we're going to use this first let's see if this does it okay python - mmm simple HTTP server and we can curl 10 10 14 30 when an um a seat pipe to bash and see if we see anything so women um let's see we have a colonel from 2017 of June and it is currently July of 2018 when this box is being retired and boxes normally only last 18 to 20 weeks 18 to 24 weeks or whatever around that time nowhere near over a year so this is a relatively old colonel even when it was released we have Blade Runner as the code name is annuals era so it looks like the creator mucked with what the box report says cuz Blade Runner is definitely not a thing Hearst name is nightmare UID root has logged in the system December 27th so that's probably around the time the Box got released was there that's probably actually the act the box mods changing the Nick interface to send an IP address so they could access the box a test it so now this is looking at I'm by root not writable home directory stuff we don't care about that root can login over ssh mailable shells password expiry Cron's network information we don't see any additional interfaces so it's probably not like dock or anything not talking anything over so again that just points to not having other hosts on the network listening tcp when I've been listening on port 22 so SSH isn't running my sequel is I guess IP tables does have to be deployed because we do have my sequel listening on 3306 but and map didn't see it and that's not one 27001 or loopback so IP tables is configured somewhat at least on inbound ports and not D these are services pseudo the day the server was built so it was built July 27th and that's Apache so Apache was on July 27th and the kernels back in June so that's not too out of the ordinary Pachi home directory permissions see can we write anywhere we can't write anywhere so I was thinking if we wanted to change out of the FTP user they scan finished we could drop a shell on Apache and pivot out where am I we're just go here interesting files we have NC netcat so we may have been we'll just do oh no it's n cat that does the - e flag so we probably couldn't just do - e installed compilers sensitive files su ID looking through this we have pseudo old that's interesting it still has a set UID bit on it pseudo and those use a local bin so we got to pseudos this one is about two weeks older than wait two weeks before a few months before so don't know what this is 6:08 definitely a different pseudo so that's something to look at usually been SLS I haven't seen this file before so we got two Sui set you add a bit programs to look at so SOS and something so them interesting where is it user Ben SLS and pseudo old so let's look at these we can buy just copy it off mount nightmare which is a sshfs directory user bin SLS dot will make the directory bins and move that there may be bins and then CP mount nightmare user bin pseudo that old here file on both them the both 64-bit elfs strains on pseudo old now it looks like a pseudo binary md5 some pseudo cold let's see if this exists on the Internet maybe we'll get lucky and find a copy nope let's see well and let's look at SLS ok this looks like something I don't recognize so let's dot slash to do that old you don't know how to fix that issue so I'm gonna look at SLS first and we'll just ignore su to that old so I created a new pane we'll call this our e3 red shell to was exploit so CD bin CD bins can we execute SLS so SOS is just doing a LS if we s trace it see what do we see execute the preload and see Lib C and protect I really hate s trace let's just open this up in radar so we're going to do a a a to analyze all functions and we can do AFL for analyze function list and looking at this I only see main that looks interesting so I'm going to do PDQ at main and we see this is a relatively big function we could also do PD I think see PD see if we wanted to look at it and some C syntax but this is big enough where I don't feel like looking at like this I'd rather just do VV at main and here we go so we got a big call graph and what I also want to do we can split the pain in half and try to see what's going on yeah we'll just rename this to r2 and we'll do 5 as gdb you can debug within radar but it's a bit wonky and I just like G to be better so gdb do that so let's see we have it creating a bunch of variables we don't know up here and just assigning them random names and the best thing I do when I analyze under my name is try to figure out what these do so let's see not sure what this is but it's just a jumped this block and this is doing a compare against local underscore 34 can I just highlight let's see local 34 so we see that is EDI and we can look at local 2 CH I'm just doing slash and then typing to highlight and we see that is 1 so it's comparing EAX which is local to CH which is currently 1 to local 34 which is EDI so I'm gonna hit P to change the view so I have memory addresses and I'm just going to set a breakpoint here and we can do break on that run and we can see it's moving EDI into that so if we print EDI we can see that's equal to 1 so if we quit that out do this again and do run with an argument of /root I forgot to set the break point B see what this does now Brent EDI and that's two so we know that is going to be the number of arguments in the string we could do it again for three but I think it's safe to say after that we know that variable is going to be arguments which is 34 H so I'm going to do like to click here : analyze function variable name afvn I'm going to say local 34 H is equal to underscore count and we see it has replaced 34 H with our gun distort count and let's see let's go back to gdb and see if this hits it multiple times because we have two paths this is going down and we heard coded this to be one Luco two CH so I would guess that this is comparing and if EAX is ever equal to the ERG count then it's going to go down this path so we should hit one more break if I continue this because our account is if we print account is two because we did that's last root we see it here EDIS 2 so if we set the break for this now we can delete the first break point so if we do info be for break points we only have the one we continue we hit this and eax is currently 1 if we continue we hit the break point again and EAX is 2 so that confirms my suspicion that this is just a loop counter so we can change that variable name to be let's see AV f n local to CH to be loop index did I screw something up don't change a [Music] FV n local to CH loop index there we go I must've made a typo on that command so now we got two of those variables so looking up here we can also probably guess that 18 H is going to be bad characters and Rader just puts it above it so that is just going to put that there because it's almost a given looking at all those characters and this is doing an LS that there's some type of filter so afvn local 18 H and cares so we don't know what this variable is but if I had to guess if this is the number of arguments this is probably gonna be going to be the arguments so let's exit gdb open it again break on that run we will do please subscribe hip sac okay we hit if we print RSI we get a memory address o x /s RSI to examine was it RSI it is let's see right I'm having a brain float here that's a memory address we got to go to the memory address I don't know so we don't know what that is yet we step again do we get anything no so I don't know what that variable is must've did something off anyways let's see what can we go from here so I'm gonna hit GB to select this block and then I'm gonna hit the semicolon to add a comment and this is gonna be 4i and yeah we can do I and hugs okay so we're going to go let's see I think down this left path first let's JL so jump if Wes then and that's hard-coded to one so yeah this is going to be down this path we could verify that by going back to gdb and it really bothers me that that RSI thing is like that let's see so if we examine the string here is it going to give us that same thing probably yeah so I don't know what iris is I could have swore that would have been variables so let's exit this and get this to a clean state q gdb and we want to break at this jump so be here run give an argument and then if we do one step we went to seven b5 we go to gdb we have a go to radar seven B 5 is here so we continue to hit that break point again and then do another jump we're at eight cc because that loop counter had increment and we went down this path so first things first right here see it's comparing al vs. 2 XD so this is going to be probably the very first character in the argument that is checking to XD is 45 which is - so it's checking for a - there we go I don't know I could get rid of those lines so comment this is going to be F contains - actually this is if our does not contain jet - because that's jump if not equal so if this is not equal to - and jump so if hug does not contain - I don't know how to wipe the comments actually and that'll make sense eventually so now we have the next one is comparing a single character 262 which is 98 which is lowercase B and this again is jump if not equal so we can hit gf to highlight this code block semicolon if is - B is not - P there we go didn't make the same mistake twice there so if the ERG is not - B we're gonna go down this path no idea what this is doing it's got a loop index 4 th - RA X was for th the one we had questions about before where si is it is so let's see what was that let's just set a breakpoint here and see what that turns into where is a 4 th gdb remember we left off so let's do this again B right point there run slash root we even hit there Oh beast - be /root because I think without the - be we'd even get to that spot in code there we go so with the - be we do get to the spotting code we do a step and print our ax x /s C / that's got to be / root with just some encoding that I'm not thinking about yeah whoa I don't want color how do I get rid of colors no I like those colors that sucks I've never done that before later to toggle color so let's see can help capital R see that's comment Oh No so let's leave e at main okay we got some color it's not as good Oh capital R randomize color pain there we get what's working say what do we like that was good okay where were we we were see Fergus not - be loop index doing something this is probably bad characters because it's long let's see is it grabbing bad characters highlight bad nope right here is GX so I don't know what that's doing so still let's go back to the Train original train of thought if ERG is not - B we're going down here doing something I'm not exactly sure what this is doing maybe it's making sure a parenthesis not in this but I don't think so and we're moving to F H to equal one so that is the end result of the - B flag I believe we can verify that but if we do P to get a memory addresses again copy start gdb over break here would do run - B + root we hit that code we break at that same point run - B root all right auto pilot types it again break run slash route we're gonna error because we didn't hit that code segment so so I hit some keys and Raiders really not like me right now but we'll work through this this will be - be checked and we can set a v FN now afvn local - fh to be argh d - b ok let's see where this argument is used so - b is used over here on the chain so once this loop is complete we're going down here and we don't know what that is don't know what that is we hit - b and we either go to exit or down here which leads us to a path of system so looking at what - b is before we have a comparison against zo x a and if we man ASCII table or man ASCII a is backslash n new line so GT this is checked for backslash n on the comment just put a line break new line there we go so let's see if there is a new line it's going down here oh no this is a different Cisco so this is saying if a new line exists go here and then this is saying if - B is set then jump and if not then don't jump what not so this is a check I guess - B stands for - bad because it's literally a check here that says hey if this is a new line it's a bad character that is not up here but if that - B flag is set yeah go on anyways so we should know enough to exploit this program we go to a reverse shell notice we can do SLS /home decoder the program works we do SLS single quote home decoder and a Ben - I ID we have now not executed code and I got to my shell that was like a double feel there let's see eat I thought is the exploit script C Python there we go okay got the Rochelle Python C and put PT y PT y that spawn and bash TP user okay now let's try SLS see which - OH - la bin - what just happened there okay I have no idea what that happened but I guess let's just do SLS and uh and bash I will do bin Sh my show died do this again got the show and I can worry about TTY this time cuz that was a weird freak out and Sh I should be executing then it as the user yeah it's definitely not executing Ben Sh let's see sls c-print f % backslash and try that write f still not working oh my god SLS - B and that's why I kept forgetting oh that's embarrassing then bash and execute at that time but not as the user I wanted so SLS - B and SH there we go so Ben sh is sim linked to bend - maybe OS definitely been sh yeah it's symlink - - which isn't dropping the set UID stuff so now we can do Python C and port PT y PT y dot spawn Ben - background st - why raw - echo foreground there we go so we are now finally I'm gonna to kill my shell again because that stty trick I sure did been SH because it dropped my permissions kill that pain and see LV mp443 well the good news is there's not many more ways I can fail so I'm bound to succeed here SOS - B then Sh I D I am good Python C and PT y PT y dot spawn then SH not bash ID we are still that user as Dakota sty rah - echo for ground there we go you can only in fail so many times in one day so home Dakota and now we can finally see user dot txt and that's 32 characters because you get the line break so there's that and then there is a test folder that is owned by root and decoder can write into it and I think this is like the only spot I can't write in because I try to get like dev ASA gem test can't I do LS - la that temp has a plus to it so that's the special commission can't touch there so I think I'm left to just home decoder Oh - doesn't have the autocomplete how its set up so my teacher why trick do almost nothing so let's make that window bigger so since I don't have the read permission bit I can't read files out of test but I can write n test so if I V touch please subscribe they can write that and I can right to it and then cat please subscribe so we can do that and I guess the next foot is let's look for a kernel exploit so was sometimes we exploit for this the last time someone did something like this where you could write into a directory but not read the contents of the directory was crap calamity and that was a binary exploit so let's search this this Ubuntu let's see is this from June of 2017 when's the date oh come on there's no date launch pad do you have a date it does not so let's just do search boy I don't know why that was my clipboard search boy if I could type four eight zero for a generic can't find a previous for that that easily Travis we have one right here that has the exact kernel in it June 26 so we can try this one so if we go back to a reverse shell the exploit will call please subscribe see set paste grep GCC please subscribe see let's see - Oh phone can't access GCC so we'll compile it over on Ubuntu phone dot C set paste okay GCC whoa there are a lot of errors prove the concept something I screwed up and pacing probably see man detect trigger doesn't look bad so let's see you name - eh I probably don't have some of the libraries this needs maybe see a I paste it twice search proof-of-concept I did paste it twice I lied about this how many times you can screw up in a day Owen a 64th pound let's do it all in one line w zr l as a big file go all the way to the left down copy all of this and I'm going to really hope this is the correct cuddle probe ask B please subscribe be 64 that's not the right paste that looks good base 64 - D please subscribe be 64 - pone I don't feel like typing that again because of things like that I'm not recognized starting checking distro and versions let's see I bet this is that Bladerunner crap v po don't see let's see what was the exact error message kernel version not recognized in checking distro in conversions see detective urchins okay character name dis drill let's see maybe we should just hard cure this kind of aversion percent detected kind of version I return see what else does it do done checking SMP how does it use these variables okay so yeah let's just hard good this one exploit let's see if we go into CD Etsy cat LSB - release yep LS crap are there any other ones cat OS release see I'm guessing that should be I don't know what each variable should be like how its defined that's why I was trying to figure out what Co name should be let's go back here let's see look at almost be released okay we want to hard-code anything we can just replace this call so sent s slash backslash @c LSB release um Dakota oh my god now test oh my god there we go so what's goody Google Ubuntu xenial LSB release its how to if it's counting it you should be able to grab it there we go this is what I want so let's go to them that Firefox is hanging a lot of memory um Dakota home Dakota test oh my god them um Dakota test oh my god sure okay so that was written let's go back here and compiled a new one so GCC let's just call it own a 64 pound that's w0 there's a lot of a box that remember copy all of this then we can go into a shell then please subscribe dot B 64 I have a type of that of Mt dot be 64 paste nope wrong paste my shell is really freaking out mt dot be 64 paste oh I can't write run hope why am i PWD I'm an Etsy home to coda test them T dot be 64 that's a lot less error messages there's your sign a 64 t dot B 64 to pone seis y plus X power base 64 - D T dot B 64 Capone permission denied to proc self set groups so maybe it isn't this exploit so let's try another one let's see actually before we do that I don't think we can actually do set groups because of we already have a eg ID and all that stuff so let's control out of this till that pain SOPA new one back at LV mp443 on the exploit get a shell decoder so we don't have the GID now anyone can execute and test so dot slash pound cannot set terminal process Python C and put PT y PT y dot spawn then Sh I knew that looked wrong I forgot the double quotes input PT y PT y dot spawn band Sh huh I can actually read out this directory is this user ID I'm route was I route before and that inappropriate ioctl just which will call it d WC - sea route text yep so it's exit out and try that again so maybe that ioctl thing wasn't an error message and it was just saying hey this is a warning message that's why it would happen home take care to test so can access that phone ID yep that's exactly what happened all that is funny so if we go to slash route we have DV dot SH and we have the password for my sequel so let's see I guess we can recap the box now and then I may do the SQL map tamper I'm gonna have to go take a break from recording and eat because this is longer than I expected I did a lot more fails than I thought I would but to recap the Box we had a second order SQL injection so at 10:10 1066 we had could put sequel injection here so if we did a SDF single quote we registered a single quote a we get SQL error when we login so we had that SQL injection error which led to us dumping the database of sequel and then we use that with Hydra to brute force SS an SFTP server and we pulled the exploit here right here SFTP exploit here this full disclosure if you just search on this in the top and we had to convert this exploit to be 32-bit compatible and once we did that we had SFTP access to what we had command line access to the SFTP server and then we found a set GID binary on that to give us the decoder group and that was exploitable with a newline character and finding the - B flag I think that took a lot longer than I expected it to but we got that and then after that it was just finding a kernel provost so that is the box I hope you guys enjoyed the video I know I did not it lived up to its name it was definitely a nightmare doing this but yeah maybe a tamper script and just a second or that maybe the video will see good news I ate pretty quick and we have time to do the tamper scripts so this came from a llama or a la MOT I believe he's definitely on the matter most but he did the SQL injection through a Union injection which I thought was pretty cool and I wanted to show kind of what he did I think a lot more people did say that we don't know which way people get more through a SQL map or through the actual injection is the Box offline now did I kick it over paying ten ten ten sixty six let's connect again okay guess my VPN had an issue okay so on this notes page we have the cat login dot request so we need that file and we'll make a directory SQL map and then in this directory we will put that login request so we'll copy Logan up request in here and let us Google SQL map second order and we need a tamper script and you wouldn't really need a tamper script if once you log in if we see if we register test a we get to this login page but we can't hit notes dot PHP because we're not logged in so we actually have to do this log in and that's what the tamper scripts going to do for us so let's see we were googling SQL map second order we'll go to this pen test blog see do we have an example that we can use here we go so then we'll do nightmare pie set paste paste that script that's annoying but we got it so get a few spaces here so it's easier for me to read and what this is doing is it's doing something with CSRF tokens so we don't actually have to do that we want to return a PHP session which I guess it's kind of like the same thing but we'll do session dot post tow ball again so in SQL map payload is going to be the variable so we can do session dot post ten ten ten sixty six and there's probably a variable for host name but oh well what is for wall again oh wait we have login that request we want registered not request but logins good for now so we want login with these three variables and that's to index so let's see here we're going to login to the page and we got to give data which is going to be the prams and SQL map my dad has probably taken first data is equal to that and let's convert this to what it wants users going to be payload and then pass is going to be please subscribe whoa every now and then you hit a weird key and then this login is going to be equal to login so we've got a pairs to login the user name is going to be the payload the past is going to be please subscribe and the login is going to be login so now we can do data is equal to post underscore data and the headers can stay the same okay and then we need to get the PHP cookie so that will be result is equal to read search for regular expression and it's C just PHP SSID right okay that's the cookie we're grabbing I think let's do an actual login request first index okay the response we need set-cookie set-cookie let's search for that maybe we should just login let's intercept on test a well again send a repeater go through to found let's get rid of a cookie go set cookie that's what we want so this what we're doing the regular expression against so we can do PHP SSID is equal to anything and then end man this is going to be in response headers set cookie okay so this is going to search the variable response style header setcookie for PHP SSID and if it is then it's going to grab it so PHP cookie is equal to result group grab the very first match and we have the login request and we can return PHP cookie now this is PHP SSID is equal to percent s and this is going to be PHP cookie we're going to call this parameter with payload otherwise new cookie doesn't have payload and we need payload because that's our actual username so that maybe it actually so if we do SQL map we'll do - - technique is equal to you is that a thing I feel like that's a thing SQL map help grep tech yep technique that's boolean forget e Union stat time I forget all those but technique is you and we want to do - our we have to create a registration request so let's go to burp then that off logout register and this will be anything for that pass will Ruby please subscribe intercept on click register save requests to a file or an SQL map so this is reg dot request so - or reg request C DBMS is equal to my sequel I think it's like that - - second - order let's go back to that blog post to see how this flag is used the whole URL so second - order space ten ten ten sixty six notes dot PHP and then that's it let's see if this finds it follow well lets them reg don't request get rid of the PHP session cookie and doesn't look like it found it that's odd so let's troubleshoot this has changed the host is equal to one 27001 netstat a OMP grip 480 do I have it listening see I think I do have it somewhere exploit exit exit reverse shell kill pain kill pain radar GDP maybe I don't have the list name it's the man ASCII page ok port 80 is open so let's go into boat go to our options tab and we could probably just do a dash dash proxy feature as well but this is my go-to for proxy for direct to host 1010 1066 redirect on 80 so now if I go to one 27001 I really go to nightmare we can run this again go to burp HTTP history what is it getting that's bizarre okay so SQL map did something I didn't expect let's see what the request looks like - a reg request first one 2700 one that I mean we can say the referral is index dot PHP C very topical oh I was cold like midway through okay so here's all the requests that makes more sense I was about to go crazy I was like why am I just SQL mapping the Internet but now so look at the request we're only making it to slash register dot PHP because I'm an idiot and forgot to do a tamper so let's editor registration we want to create the user B because I want to make all the users unique and maybe that'll do it maybe it won't I don't know but - - tamper nightmare hi make sure there's an empty and knit pie inside the tampers that's weird global re is not to find them nightmare and put our II see you prior to HTTP cookie value the target URL provide its own cookie I provide a one sure when running Tampa function redirect no okay so we have an error and tamper let's see try this except okay now with the area is local variable PHP cookie reference before assessment typo okay it's running go to the top we don't need setcookie anymore maybe that's what gave me the issues earlier still only making requests to register let's see session post I guess we can specify index.php don't think we had to but maybe we do still only hitting register to it register then index and we need - you user or a - p user so we don't want to inject into password okay so we're not getting to the response session post thing so let's see I guess this is where the error is so let's what could we have made a mistake on response is equal to session de post HTTP one 27001 so I was making the post request it just wasn't going through book there we go that looks better still something that look right it's not hitting the second order page so we register their union select successfully registered there's not the same things we have different randomization at the end that's annoying so let's see do we need this so let's see log another page I guess we have this even register if we do everything in this script so let's try that register first data is equal to user payload Pass please subscribe cat let's see SQL map registered that request and register equals register okay that looks good and this goes to slash register dot PHP okay so this is slash register dot PHP it's going to do post data and then can probably grab the cookie here login to the page and see if that's a day so now we're hitting notes dot PHP too so we went index register notes I'm not sure what happened but it detected it I don't see it doing a login see queer history yes register index and then notes okay so those are we register twice this register is when I sign the payload there and the I know I could do like fresh queries but I always forget that syntax I'll try this again okay PHP session ID is changing register and X notes register notes don't change their I'm guessing it's threaded or something but there we go now we can do - - dump and it says - - no cast we have issues inside - - X you want to merge them in further request no you understand no there we go so we can see now SQL map was dumping stuff but that is the box that time we are for good I think done I guess we could have done common column common column existence checks to find other things I'm surprising try to go to information schema no caste yes fall well no header don't send original there we go now it's dumping everything so we got one too what a wonderful note it's doing looks like [Music] something it's definitely - oh God so this must be the users table not the sysadmin table and it's dumping what SQL map put in that table by registering all the accounts that could take a while so there you have it nightmare is complete this will finish eventually but you can always do it on your own and also if you had changed it to go away from burp I'm assuming this would be a lot faster let's just try that B nightmare dot pie change 127 0 0 1 so that's 3 4 5 6 9 10 10 10 66 okay them registered requests 1010 1066 I have forgot - dumped I think nope I have it so we'll see if this starts going faster when it starts doing the users table doesn't look like it answer is no so well take care guys I'll see you next week