 what's going on YouTube the zipsak I've been doing help from ACTA box and the thing that gave most people trouble in this box is the server time is slightly off and I really like that I think it was completely unintended but one of the exploits on this box depends on knowing the server time and you have to sync the server time and your exploit script for it to work if you don't do that it won't work there is a different probe ask path through graph QL which was I think a lot more difficult than the uploading a file one but we will cover them both and both of those exploit paths lead down to the same exact prevx which is just an outdated kernel module so let's just get into the box as always we're going to start off with the end map so - SC for default scripts as V enumerate versions Oh a up at all formats but in the end map directory call it help and then the IP address which is ten ten ten one twenty one can take some time to run so I've already ran it look at the results we have just three ports open we have SSH on port 22 and it's running for Ubuntu 2.6 and if you just search launchpad for this you'll come up with this is Ubuntu Daniel then we have Apache HTTP T on port 80 and node J s Express framework on port 3000 so the first thing I want to do is check what's listening on port 80 so going over to Firefox corn at 10 10 10 121 and we have burps set to on so let's go over to burp turn intercept off click go and we just get the Apache to default page so the first thing I'm going to do is start launching a go Buster so do go Buster - you for your rel HTTP 10 10 10 121 - W for word list users share word Lister buster and directory list 2.3 medium and - Oh file file we'll just call this HTTP - root dot log I promise to put go bust or something in that and right away we get a slash support page so let's go check that out and if we don't get anything here I move over to port 3000 but the first thing I see is help desk Zee Support Center so I'm just going to go over into a new pane and do your search poit helpdesk Z and we get two different exploits a file upload and a SQL injection so these are saying version one point zero point two so it to find out exactly what version this is I'm going to view the page source and just search for one point zero and go down I don't see anything so that's bizarre PHP echoed news kind of screwed up there but I'm not sure what that is first time I noticed that but let's go to github helpdesk z to see if there's an open source application and it looks like it is so going to this page just looking at the files we have a readme dot MD that is for this github so I don't think that would exist so we can just get out view source readme MD it does exist so we'll see if this has the version version 1.0 0.2 from June 2015 so we know this is probably gonna be vulnerable to this file upload so let's go take a look at the script so search point - X to view I think X is examined anywho let's just go over what this exploit does we have a nice lower description here the software default configuration allows for upload of dot PHP files he thinks the developers thought it may have been no risk because the foul names get obfuscated when they are uploaded however if you look at controllers dot PHP we do see exactly how their off is getting the filename it's taking the md5 sum of the file name and then taking the system time and then doing the extension and doing combining all three of those and doing an md5 sum so obviously if we upload a file we know the file timely file got uploaded so we can just do this calculation ourselves and guess what the foul name is so we have steps to reproduce and are anything the mandatory fields attached to your PHP shell and solve the CAPTCHA to submit your ticket and then call the script so call the script with the URL and then your filename so let's go over to Firefox submit a ticket give it to the general Department and for the name will do if Zach the email please subscribe at epic rocks the subject of this will be comments or good to also likes so we got to attach a file so let's go to desktop where's htb boxes help and let's copy a script here so I'm going to do CP user share Lau tab and I don't know what that word is but this word good PHP reverse shell is so I'll copy that into my current working directory and we just got to edit it and change the IP address so if you open is probably start at the top hit page down get to the IP and we are 1010 14 3 I believe if configured on 0 that is correct and then the port let's do 9001 because why not so cut the file we can upload it and then we'll do 8mm us click Submit Wow not allowed but the author of the exploit says this gets uploaded anyways the last thing we have to do is figure out what URL to pass it so let's do that - X I'll change this to - M - mirror the exploit to copy to my working directory and now we can just vim it to edit so let's see URL is helpdesk base URL helpdesk base URL is argh v1 so to find out exactly where the foul name is so let's upload a legitimate ticket as well so I'm just going to so I'm gonna get an image let's see we're save image as we'll save this as root logo will move logo to our working directory move root downloads logo to the working directory and let's upload this so we can see where the files get uploaded to so WX nine to four submit and we don't get anything oh because it probably needs login to get to the submit a ticket page so the best thing to do in this case it is probably either Google around or install this application yourself so let's just go over to the github page because I don't want to install it and we'll just look at the directory structure I'm gonna guess that uploads is the directory where uploads are gonna go to and we've got articles and tickets so uploads slash tickets sounds like a logical option so let's do Python 430 and then we want HTTP 10 10 10 1:21 support and then uploads let's just make sure this path exists support uploads tickets and it gets redirected back home so let's do support uploads tickets and we'll just copy this and then we want a foul name which is PHP River shell and we also want to listen on port 9001 so there is going to be one gotcha and if you examine the source code more in-depth you'll figure out exactly why this exploit doesn't work and we see our current time is just getting int time which is a time on a local box so what if the server time is off or it's in a different time zone or a bunch of other scenarios so let's check that out real quick so let's go into boot tone intercept on click refresh go to options intercept server request for this request and we can look at the header as we get back and we get ahead of back saying what time it is on the server Saturday June 8th at 1:00 a.m. if I look at the time in my box it is June 7th 959 so obviously we're gonna have some type of issue because not only is the timezone wrong but the server is a few minutes behind as well so instead of having this exploit pick up the time of a local box when we make it do a request and then grab the time out of the request and do the conversion so we get the local server time the first thing to do would be to take out the current time and then we open up a new pane to figure out exactly how we do this in Python so I'm gonna input the request module I'm gonna do response is equal to request dot head because I don't need the whole request I just want the headers of the remote server and we'll do HTTP 10 10 10 121 it doesn't have to be the entire page because all again all we want is the headers and does that serve it not 10 10 10 121 why is it hanging is my request module somehow Matt to go through a proxy request dot head HTTP 10 10 10 121 10 10 10 121 should be up exit let's do this again import requests response is equal to request dot head HTTP 10 10 10 121 let's just do slash support um something is wrong with my proxy and grep - I proxy nothing set curl 10 10 10 121 does work so what is the dealio Python import requests requests ahead HTTP 10 10 10 121 support response is equal this okay now it's working I'm not sure exactly what happened there but if we do response start text we just get that which is fine because there is no text because we only did a head request we didn't actually ask for all the body so I'm gonna do a dir on this object so we can see what we have and there is a headers so if I do response dot headers we can see all the headers we have we have set cookie which is this we want date down here which is this so we do response dot headers and then date if I get tight so this gets the server time so let's go back up a few commands and just copy this over here server time is equal to we'll do spawns now server time is equal to and we can do response headers date there we go so now we have to convert this over into [Music] epoch time because we got this ugly timestamp so I'm going to do is copy this just paste this in and we want to make a new variable time format is equal to and we just go over to Google my burp is off we can do Python time format and let's see I like this STR format time calm or strf time because this gives everything we want so for example the first thing is the day but only three characters so that be percent a then we got a comma then we got the day so this would be percent da0 padded decimal so let's go back over to this and we do the time format is equal to percent a for the day date B will be the month capital y is the year and four decimal places percent H hour minute second time zone I think that's correct so now we need to correct time is equal to int I want to use a new module calendar time dot GM time GM if I just use the time module and date I think make time it'll be assuming the wrong timezone calendar time assumes the right one and I think I screwed up typing that because I was talking so that's calendar dot time GM to assume GM timezone since that's what this is time STR I think P is pattern I don't know what the P stands for there but we want to put server time and then time format close out all these and we can print correct time and now we just want to execute script no schema supplied donut HTTP we'll just exit this and hit up come on no it's probably this window okay so we got an epoch timestamp let's go over here epoch to date let's see copy this output then search copy this paste time stamp to human Saturday June 8th at 2:00 a.m. which is around the same time I forgot to copy this out of the request so it took us like four minutes to make that script so that is all correct so now we can begin and do this for real so let's look at the script again and what this is going to do is take the current time and subtract it by X and we don't want to go back five minutes so let's just shorten this to thirty seconds because we're gonna be quick so go up and let's go to submit a ticket and re-upload this TT at b.com put a bunch of junk in the ticket browse the attachments upload the show 9vc i okay submit we have netcat still listening execute this and we'll see if we get a shell and we did not so let's go back and put this to 300 let's see we may want to put ticket slash and give this a few minutes to go through everything there's probably not putting that slash which did me in because if you look at the script of m3 400 let's see base URL plus md5 hash yeah so we put that md5 hash right after upload without doing a slash so that's probably what did it we go back to this Python script wait a few more minutes and we'll see if we get a shell and we still didn't get anything so let's go back here and oh emails read please enter a valid email address t@b comm does not compute to this so let's put more stuff in this and re-upload this and actually read the error message it gives so this will be M 3 VP cube may be found not allowed so this time it passed the email so let's speed this up by square out of them and we'll say 15 seconds it's 5 in more than 15 let's see didn't find it so let's go back and change this to 90 run this and this should definitely get us a shell there we go so we have a shell here the first thing I always do is Python - cm fort PT y PT y dot spawn bin - and now we can do export term is equal to X term so now I can clear the screen so let's do ctrl Z - background it s TTY raw - echo foreground with FG enter you won't see the input hit edit twice and now we got a really nice terminal with tab Auto completion so let's go to /home help and we got user dot txt we can see if we can read that we can so there is that flag looking in this directory we have a node thing which is odd because we didn't use node at all but this will be part of the intended way to route the box which will do at the end I just didn't like that whole path I liked this file upload thing much better so let's ignore that node and just do an LS - la we do see - history has some contents in it so let's cat this out cat paste we got what looks like a password su root me or die so let's do su - paste that password and we don't get anything so let us start the Linux prim checker and see what that says so let's make there dub dub dub CDW dub and then CP opt let a Noom will do when a new message copying in this directory go over to a net cat session before we do that start simple HTTP server and now we can just curl 10 10 14 3 port 8000 when a new message paints that over to bash and Co is not installed let's just CD dev s hm w get and I know there's a flag to do W get just like coal or you're not writing to disk but I don't have that one memorized so I just do it this way so now we have Linda newb running let's go to the top and start looking down while it runs and the very first thing I notice is this kernel is old so this is well over a year old probably around like 15 or 16 months so since there's an old colonel maybe this is an intended path so let's just google this kernel for privacy so that kernel probe ask what a search plate would find it go and this pain search poit nope we do have an exploit DB Ubuntu 1604 we we got women to him running how control-c it that's fine okay Etsy LSB release we see 1604 and this is for 1604 this is dot for 1.5 we'll see if it works so let's see does this have any special compile instructions doesn't look like it where is raw so I can just copy and paste this VI exploit dot C set paste paste it in GCC exploit - C - f out file exploit clear I think something's wrong with my tumblr when I get to the bottom but anywho do dot slash exploit and we do see it worked we are now rude on this box WC - C root text obviously does work so that will be the onion unintended way through the box but the way I think most people did it and the way I liked it the most so let's get back out and we'll do the user a bit differently and that would be through node so main X is that pane we can exit this exit this exit this and stop go Buster so these symbol is also listening on port 3000 so if we cat this again we can see that is the node Jas express framework so if we go to 10 10 10 121 port 3000 we get hi Shiv to get access please find the credentials with given query and if you do a lot of googling around for like Express language query node maybe maybe I'll get something yeah we get a bunch of graph QL stuff and that was supposed to be enough of hint to tell you to go try slash graph SQL Draft QL so we get get query is missing and this is just a popular package at node Express is a framework that is based upon node so yeah I really wish like the help desk had a knowledge base that kind of explained that but it did not so that was kind of a big leap to make on a ezybox thankfully the unintended prevx unattended or out there which i think fits in line with easy but we find this and then if we google a bunch of graph QL query post and start reading exactly how to do this and I also Google bike pen test graph QL and let's see this one Twitter post came in pretty handy it says paste this in so if we go to this graph to L it says get query missing so this is saying a get request so let's send it that did I copy too much let's just copy / graphic ul and copy everything so give it the get query of the get parameter with the query variable to dump a bunch of stuff and we do that and see this information so let's turn this over into burp so you can kind of see exactly what happened there go to burp there we go so we can copy this go over the decoder tab smart decode a demo paste it and we'll decode it here I don't like how that was limited so not some decoder control-shift you there we go so we can see what query we're doing we're making query for schema driving types and saying show me the output of name kind description fields and name so let's see maybe I can format this a bit better so let's do that type for there we go so this is a query he's doing the reason why this isn't another I guess list or dictionary or whatever is because it's querying that so in fields recurring name so hopefully that makes sense I don't know but we see there is a user object and in that user object it has two values username and password so what I'm going to do is a query for the user object and I want a query username and password because that's what I see here so I don't know how you don't cure this to one line so I guess I'll just type it again so we want user then username password still one space there control you to your Ellen code make this compliant well Center repeater to make sure it works first and these be a blank line there we go so copy this entire request paisa repeater where it will be a nicely formatted output and we can see the user name is help me and help me calm and we have this hash or what looks like a hash so I'm going to do echo dash n do not print a new line and then W see - see we see it's 32 characters hexadecimal most likely going to be md5 sum instead of going to the Kraken since there's no salt or anything I'm just gonna go to hashes org and was really turned burp intercept off cuz that's getting annoying we can just do hash search paste it in QF 6x e UL search this and we can see the password is God help me please so we got a username and password to this so I'm going to paste the password go back over here grab the username paste this in we log in and at this point we can do the search point helpdesk Z I wonder if this just wasn't uploaded at the time or the Creator didn't think this was vulnerable because that time issue not sure exactly how that got overlooked but anyways we got this one this authenticated SQL injection I know this says helpdesk Z less than version one zero two which leads you to believe it was patched in this version but the people that create these exploits don't always label it correctly if it says that if it reads like it's patched in this version also check if this is vulnerable because in this case it is so please look at this exploit exploit dash X we can see software after a ticket submit allows to download attachment by entering the following ticket view controller steps to reproduce so valid ticket ID here and a pram so let's see if we can get a URL like this so go to one of our uploads and see let me just try this probably easy if we do it over a image so let's send this over to book intercept on send I don't know why that's taking a second to get over to repeater tab so if we click go we get gibberish I'm going to put something else in this pram statement we get a a CB 200 okay if I put something that may not matter we'll do like a comment in SQL - - space - we get that if we put something after the comment we still get this so this is looking like it is an SQL ejection a boolean based so it doesn't do math but we definitely have something with this so what we could do is just copy this request to file put this in Help Desk dot rec go to a terminal window and do SQL map - our helpdesk request I do - - batch so it doesn't ask us any questions it just keeps moving on and always assumes the default so let's play with this manually so we do - - based - we get this so the way to abuse this and do blind queries manually would be do like we could go and one equals one we'll have to you're Landcare this because it has spaces and that equal sign come on load there we go and if we do two equals one it doesn't work so we can append a query here so we could do a query like and substring select password from staff these are tables I just know you'd have to query like the information schema table I have a bunch of other SQL injection video so I'm assuming you know a little bit about SQL injection already so we're going to query the very result very first result of password from the staff table that's what that limit does and then we're going to grab the first character and go one up so grabbing the very first character of the resort of password and saying does that equal a and if that equals a then it will display that picture if it doesn't equal a it won't so this is like a more complicated one equals one so we have to create a Python script to abuse this so let's do V SQL dot pi and let's do import requests and then deaf-blind inject query so we have to identify what we can flag on so we have this request method as 200 okay the content length is 110 so we could flag that we have the content type as text slash HTML and if it is the image it is image slash PNG so we want to flag it on content type so let's go back and we can do URL is equal to F and let's just copy it based that would be easier paste this and we'll put query at the end so now we can do response is equal to request dot get URL and we can print blind inject 1 equals 1 return response dot headers and then content - type if you remember from earlier in the video how we did this with the date so Python 3 SQL by keywords can't be expressions what did I screw up Oh this needs be in quotes missing schema we need HTTP 10 10 10 121 run this response is not defined or what if my s is failing my keyboard that is twice I've missed that same exact character so we get text HTML that is not what we wanted so what could it be looking at this how do we get authenticated to view this ticket we need to copy the cookie so let's go over to book grab a cookie and we want to do [Music] ctrl shift due to URL decode that so copy that we can do cookies is equal to and paste this so we don't need playing equals English and let's just make this a JSON object to make a life easy base bssid get rid of the equals replace it with a colon and do the same thing here so after PHP CSS ID comma use a hash I don't know what this is but let's just keep it anyways so now we've got cookies so we can do URL cookies equals cookies and we need to terminate this and we still get text HTML we don't pass it anything and get rid of this what happens image/png so it was something how we did the query and we probably forgot to say and one equals one paste there we go so if we change this to two we can see that so what we want to do now is say our content is equal to that we'll call it type and say if our content type is equal to image slash PNG this is 2 equals return true else return false so now we can have syntax here that says if blind inject returns false print false here by keeping the cue let's see Oh we'll just make it run turn true so if one inject is true it's going to print route so we do this and it's route if it's false this if then statements going to return false and it does nothing so now all we have to do is loop through that um query I had said earlier so let's do key space is equal to ABCDE F 0 1 2 3 4 5 6 7 8 9 all hexadecimal characters we can say for I in range I know ahead of time this is going to be a sha-1 sum if you didn't you just have to add logic to figure it out but we've done that in plenty of other videos so this is what's going to iterate over each character in the password hash so that would be like the index number and we do for C in key space and that's going to loop through each possible character in this key space and now we can just do inject is equal to and substring select password from staff limit 0 1 and then we want the index because this is going to grab which place in the password so if the index was 0 it grabs a if it's 3 it grabs see right here pretending this was the password hash so I then comma 1 so we always only grab one character at a time and if that is equal to C which is going to be that character in the key space so we have that inject string so we can say if blind inject inject print C and equals this it's not going to print a new line and we set flush is equal to true so it prints the kicked her right away so that should be it we'll see if it works so python 3 SQ o pi and come on print the first character doesn't look like it's working what did I screw up let's control see VI maybe it's this print see let's run this nope print inject I need that print inject up here I expect an indent come on Python okay let's see what this looks like and sub string select password from staff zero one and we screwed up something obviously so let's see for I in range what the hell happened zero one that should be printing i/o I had two commas so I think it going across this line break screwed me up because they have a comma here and a comma here so of course it's brute-forcing the very first character so let me just run this and we can show you because that actually looks like it's helping so once we get through F we see it moved up to one so it's trying to brute force the very first character and then it gets through the whole key space and moves to the next character so we can do print F success C so maybe this will be a bit easier to visualize and now I doesn't have the double comma so that should be good come on so we can see once it did D it was successful and then is going to go down and loop to the next character and try to get the next one there is no logic in the script that says hey when it's success exit this loop you could add that and one speed this up a little bit and be a bit more efficient but for our purposes it is fine so let's coming out this line again put it this way and run it remove this line so this should work there we go the first character and then we'll get the second character shortly there we go so I'm gonna speed this video up and we'll get all whoops I just realize I made a mistake the SQL top I won't be headin anyways this needs be 41 unless it won't grab the last character there we go so make sure this is working there we go and if we go back here we do see SQL map did detect pram was vulnerable so we can run this in - - dumb we see SQL map is dumping everything so we got tables for support and it will eventually grab the entire database so I'm gonna fast forward the video while this runs there we go it has now finished we have 40 characters which is the length of a sha-1 some I believe so let's go back over to hashes org we can do search for this one it's gonna turn this completely off search g XC p SJ t we can see the password is welcome one so the thing I really didn't like about this box again you had a guess at the username I believe I went through like the sequel dumb the knowledgebase and everything I don't know how you know the users help other than they use the phrases help a lot on this box so help at 10 10 10 121 and then the password of welcome one and you get in so that is the intended way to get a shell in the box the privacy is the same it's just that old colonel so looking back over here you can see SQL map is working away eventually it would dump everything so hope you enjoyed the box take care and I will see you all next week