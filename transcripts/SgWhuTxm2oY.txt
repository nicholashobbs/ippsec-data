 what's going on YouTube this is IPS I can be doing a bucket from hack the box and this has to be one of my favorite machines because of just how unique it is on the platform and after doing the machine it's one of those things like wow why hasn't this been done before because everyone hears about how like S3 bucket permissions are bad and how a bunch of data gets leaked through S3 buckets or random databases in AWS but hack the Box never could do that because it's all like on premise it doesn't use the cloud etc etc however there is an application called local stack apparently which allows you to replicate AWS on your local infrastructure so you don't have to go to the cloud and take those monthly charges to go experiment with like the AWS CLI so in this box we're going to go and access a S3 bucket put a reverse shell up on a website grab it down and then access dynamodb to take a bunch of information from a database log in with the user and do just a bunch of fun stuff so with that being said let's jump in as always we're going to start over the end map so Dash SC for default scripts as we the enumerate versions OA output or formats playing the M map directory and call it bucket and then the IP address of 10 10 10 212. this can take some time to run so I've already ran looking at the results we have just two ports open the first one being SSH on Port 22 and its Banner tells us it's an Ubuntu Server we also have HTTP on Port 80 and its parent tells us it's Apache running on a Ubuntu Server we also have the HTTP title script from nmap running telling us the hostname is bucket.htb we can just go over to the page and go 10 10 10 to 12 and see what we get it looks like it redirects us right to bucket.htb so let's go and edit a host file to add that so sudo VI Etsy host and then we'll add 10 10 10 to 12 bucket.htb and then we can hopefully hit this page looks like we can and I'm gonna do something a little bit different I don't know if it's gonna be beneficial um I'm just going to do a full end map on this box so sudo nmap Dash p dash and then we can say 10 10 10 212 and then output all formats into nmap all ports so we'll just see if that's beneficial so going to this page right off the bat we just see bucket advertising platform and then bug Bounty search um clicking on feeds about nothing happens so the very first thing I want to do is know exactly what this is running so I'm going to try index.php we get a not found try index.html and we get bucket advertising platform so I'm going to go over into Go Buster and then just start a quick go bust so I'm going to do uh go Buster directory mode uh URL HTTP bucket.htb and then word list I'm going to be doing opt seclist then Discovery web content wrapped small words once I get there dot text and I'm also going to specify the extension HTML because that's the extension we know right now and out file will say go Buster dot out this will just be your standard one we may want to actually not use Google shutdown and say bucket.htb Go Buster Dash there we go that's a better out file so now that's running let's go take a look at the page we could open this up in burp Suite or view the source code to see if there's like WordPress or anything but one of the underrated tools I think of Firefox or just web browser in general is like this developers console because there's a lot of cool information you can get from this so if I just reload the page we can see every Network request that goes and it's making a request to s3.bucket.htb so I'm going to go and edit the host file to add that and to note I did this all ports and it didn't find any extra ports so something I always do out of habit I just normally don't show in my videos but let's do pseudo VI Etsy host and let's add s3.bucket.hdb save this and then let's go to this so s3bucket.htb and we just get status running we can go back into the developer console and if I do reload we could see what happens and this is weird um it's telling us it's a 404 but we get status running we can view the headers and the response headers and we can see a bunch of like um AMZ stuff which is Amazon and this is one of my like head stereotype like wait we have Amazon and hack the Box because hack the Box generally is not cloud-based so I'm going to do a curl dash dash headers on s3.bucket.hdb to kind of confirm what I'm seeing and I think it's just header uh uh is it head there we go it's just head so we see the 404 and then a bunch of Amazon stuff so what I'm going to do is uh kill disco Buster because I don't think I'd need it I'm going to change it up and go with S3 so I'm gonna do s3bucket.htb we can get rid of this HTML extension because we just want to see what other directories are out there so there we go that is running and meanwhile um we could Google like how to use AWS but I'm just going to say I know how to do it and we're going to install um AWS on a instance so I'm going to do a pseudo apt install AWS CLI then do yes and we're going to try connecting the AWS command line binary to this bucket so once this starts or installs we can run the command and if you don't know any of this you can Google AWS CLI documentation probably and it'll get yeah this AWS CLI so this is essentially what we're going to be going to I think the command line reference is generally easier to read than the full out documentation but gonna pause the video let this finish now that the AWS binary is installed we should be able to use it so I'm going to do AWS and do dash dash end point Dash URL and we're going to say s3.bucket.htb I don't know if I had HTTP or not but the command I'm going to use is S3 and I just want to do a LS so I do this and endpoint must be in the form of HTTP so I'm wrong there let's do that and see what airs it says unable to look at credentials you can configure credentials by running AWS configure so I'm going to run AWS configure and I don't know an access key if I just do none for everything uh region I'm just going to put us East one I don't know if this is needed or not but I mean that's the region of all AWS so let's see if this works with just a blank configuration and it says no so let's try this again and I'm just going to put things that don't matter so like Please Subscribe does not exist uh LOL does not exist and we'll just leave it at Us East one and try it again and the reason why I think this works is because this endpoint actually isn't AWS it is um local stack if you go local stack it's running AWS on your own box to kind of play with it so you don't spin up a instance and take a bunch of Licensing fees but I don't think it has like I am it's like the way AWS does permissions everything fully implemented so as long as you provided a key and secret key it just accepts you so I think it's just a thing of local stack not being fully configured but we have S3 now and if this was on like production I would mainly be looking for a like service side request forgery inside of bucket to see if I can make this server make a request to 169 254 169 254 because this is like some magical API endpoint of Amazon and when you curl this you can go into um the I am credentials and pull the security credential from that box and potentially get its secret key and do lateral movement that we're about to do so I don't think that's going to be a thing here but something to look into um maybe if you're curious Google let's do AWS pen test uh 169 254 169 254 I am takeover this may be a good thing yeah um read articles well maybe that one uh this Reiner security one is good so I would read this article if you're interested in what I said um back to the actual video uh let's go AWS S3 LS now we can see there is a directory ad server if I go into ad server we can get index.html so S3 has other commands so if we do S3 help we pull up the documentation for this and I should just maximize this you can see it's got like cpmv and RM so let's try putting a web shell here so let's go uh copy user share Lord Nom PHP PHP reverse shell because this is my favorite PHP reverse shell I'm going to name it rev.php to make it easier to work with we'll go into it and delete a bunch of these comments because we don't need them and then set the IP address so we are 10 10 14 3 and my port is going to be of course 9001. so now we got this now we just gotta get this CP command working so I'm going to copy rev.php to add server slash rev.php and it does not work it wants S3 URI which means like a URL so I'm going to try maybe S3 colon slash slash like that does that work and it does sweet nclvmp 9001 and we can go over here and see if we can hit rev.ph where'd that Amazon link come from let's go rev.php and not found let's try copying that again and not found maybe we don't put the file name so just cprev.php to add server and there we go connection refused that's what I wanted so I guess destination we do not put file name I wonder what that was doing um let's see can we do an LS real quick where's LS because I'm always curious I don't know what that did um I was thinking maybe I created a directory rev.php but it doesn't look like it does so let's do netcat launch this got a REV shell and holy cow we've got to do a bunch of documentation so let's go um new note we'll do zero zero enumeration and actually zero five enumeration and we can say nmap and then we'll do bash and then let's cat and map so cat and map M or bucket x-clip selection clipboard I know some people don't want to do these notes as we go but you can always just use the timestamps below to skip so important notes uh Ubuntu and first name leak and title okay numeration is done and I'm just going to use this at the end to do um zero zero Magic so that's a note for me to do something later so let's do 10 we can say bucket.hdb and then if we go to bucket htb sweet uh well it's cached shoot if I reload it's going to show right you block blocked it oh well that's fine I'm gonna do print screen and then this is going to be flame shot that I have synced up so we can copy this we can highlight this and say uh S3 is used sure copy uh Ctrl C to copy I don't know why that's not copying Ctrl C let's see there's one of these that is copied a clipboard this here we go normally control C copies I'm not sure what was going on there um web page paste it image control e that looks good and say um let's see S3 URL leaked and then the next thing we do is our S3 enum so 15 S3 enum okay so we can just do S3 bucket hdb and then we want to paste some commands we did so while we have it we can do okay this so first LS and then fake creds then we can paste it is taking longer than expected but oh well copy uh okay do Bash work because local staff and I put the question mark there as if I'm writing the report and before I hand it to a client I want to validate the statement that's my assumption so we can do LS and we now can view it then the last thing we did was copy to show we copied it proof we didn't LS again here copy paste there we go hopefully that wasn't too painful but now we have some nice notes if we look good stuff okay so let's see the next thing we need to do is fool around on the server so we have a shell we can do a TTY trick so python3-c input PTY PTY dot spawn Ben Bash then sdty raw minus Echo well Ctrl Z to background it sdty raw minus Echo f g enter enter you won't see the keys but it'll work export um term is equal to X term and now a clear screen so now we have a low priv shell on this box if we looked at this go Buster output let's do go Buster Dash S3 we can grab Dash v403 to see if there's any other things I don't see anything so we can just close that out and we can close that out so let's go enumerate this box right off the bat I want to check if we're in some type of Docker environment so I'm gonna do a LS LA on slash to see if I see a like dot Docker M file and I don't but I do see this AWS director which piqued my interest I'm gonna do an lsla on that and we see there is credentials and it does have a file size of 64. so I know that file is not blank but unfortunately it is owned by root and only readable by root so we can't read that I am going to put this as a note though because maybe there is a challenge later we have to do some type of lateral movement and these credentials would um certainly potentially allow for that so let's just copy this and then go over here I'm going to do a new note 100 future things and we're gonna say um AWS creds Bash I'm going to say Mead root for this so we got that uh we can go back into slash and the next thing I'd probably check for is like iPad just to see what the interfaces look like I can see ens 160 so I don't believe I'm inside some type of virtual environment I do see Docker which is weird I'm used to breaking out of a Docker but seeing me being on the host and there being a Docker I may have to actually break into a Docker which is unique so to enumerate this Docker a little bit I'm going to do a SSO ntp to see if there's any type of Port forwards um we did the full nmap scan and it only showed 80 and 22 but we have a few other ports listening we have 8 000 35 167 and 4566. I'm going to go into Etsy Apache and I can do sites enabled and there's only one site enabled but I'm going to grab for 45.66 on the default config and we do see it being in here we can also check for uh three five one six I was just too lazy to type the seven there but that's not in there and then 8 000. so what is this um if we were root we could get the PID so it becomes really easy to see um let's see then this can be unknown socket and hopefully at the end of the video I go back and actually look at this and we see everything so paste that and we can snip snip there we go so we definitely should look at that at the end of the video but we know there is Apache configs for both 4566 and 8000. so what I'm going to do is less this zero zero zero default config and we can print this out we can actually just log this so copy good obsidian we can say 20 shell as www data and do that maybe there's an Apache thing I don't know um patchy virtual host and let's see the important things 8 000 uh is running this which means it's running as root so Port 8000 equals running as root uh Port 80 this is bucket and we don't have the full config because we don't have okay it still goes uh let's see let's cat zero zero default uh grep Dash V anything with a comment and then grab period there we go that's better so let's see we probably should fix up our TTY so if I go into a new pane sdty Dash a I have 34 rows and 136 columns and the reason why I'm doing this is because something gets chopped off and I was typing like all the way back here yeah you can see how ugly that is so I can just do stty Rose was it 34 and columns 136. 136 . so now when I do this command I can go all the way to the end and it behaves just fine so now we have the full virtual host so we can copy this and paste it there we go uh we may not let's see oh here we go so virtual host on 80. and it's saying this one um let's see okay if the server name is s3.bucket.hdb send it to localhost 4566 and this is Docker so 4566 equals docker just notes for me and yeah so that's how that's running so this is local sac so I there's no enumeration for me to know this is local stack but I just know this is local stack we may be able to do like a fine slash uh grab local stack and we probably want to do a two devnal maybe there's something we can do to enumerate it and probably grab Dash I just in case it's a capital l s or something and nothing's found so I don't know how you know that's local Sac other than just knowing there's a application called local stack which lets you host AWS locally but we can either run dynamodb commands from here and point it to 4566 or we can go over to this Pane and just run the AWS endpoint URL HTTP s3.bucket.hdb knowing this goes to Port 4566 on the host and instead of doing um S3 we're gonna do dynamodb we can do help this will tell us all the things we can do with dynamodb uh the key thing when you want to look at databases is always listing the tables and scan we're going to use in a little bit um so we can also like put items in the database do queries things like that but in order to enumerate the database you need to know what tables there are so we can do list tables and we see there's one table called users so we can do scan I think we do help here it tells us how to use scan and there's a dash dash table name so we can do scan dash dash table name users and we get stuff we could just copy this whole output if we wanted to uh I guess we will but I'm going to simplify it and get just credentials so let's see this is show us www data and then we can do 25 dumping Dynamo and let's do that Dash dumping Dynamo DB and let's go and make this a bit more pretty because we have like username MGMT the password of this uh this means string we'll probably go into this in a little bit but we just see username credential username credential uh I just want to get all this and since it's only three we could easily copy and paste but chances are when you're doing dynamodb dumps you have a lot of data to work with so copy and paste isn't really going to be your friend this is all uh Json so we can use our favorite tool JQ so if I just do JQ period you can see it's now color so it just parsed this so we can do a little bit of JQ Foo to get just the information we want so let's do this Dot and we want to grab everything in items and the reason why we want to grab everything in items is because items is top level so we do dot items and if we want to like get rid of these brackets we just do this so now we're just grabbing all the passwords and usernames now we could do dot password and grab all the passwords and I think if we do this we just display passwords but we want to grab two things at once so JQ actually lets you do pipes and this is going to get confusing because we do a pipe within a pipe so we're going to do JQ put a single quote here so everything within these quotes is going to be processed by JQ I'm going to do pipe and we're going to do uh dot username and then dot password and then and that so this is our pipe within JQ and then a single quote awesome so we have a bunch of escapes and if we want to get rid of those escapes we go back to the JQ command and do raw and we have this and remember if we want to get rid of the Json we put the open and close square brackets next to this and now we just have straight creds pretty awesome so let's go copy and we should rename o magic to like O2 magic that's just a note for me to do something later that I think you guys will like uh let's do oh oh creds and let's do this and we can do user password like that and I guess we could have used said to do this um foreign there we go so now it's formatted pretty you can do like sad things like that to do that person I trust you can do that the JQ stuff was a bit tough like all I'm saying is pipe this to set and say uh single quote is now a pipe right yeah there we go that's all I was saying but we got those creds uh we probably should log this and I'm going to go back here we go to dumping dynamodb and we can say making it pretty and have that for logs because I mean that looks cool do that and yeah so again this is going to look complicated here's the command here's a pipe to JQ because this pipe is in these quotes the pipe applies to JQ not the whole command bit confusing but yeah Syntax for this command is not the greatest but JQ itself is amazing so now we have a bunch of creds I'm not sure exactly what they go to but hey we got creds you never say no to free credentials so let's go back to the Shell to see exactly how we can use these creds so looking at the Shell I'm in this Apache directory which reminds me we took notes of something the show has www there was this virtual host that we probably should look more at uh www bucket app because this user is root I kind of went on this like local stack tangent because I got excited about that but I mean this virtual host is running as rude we should buy a check that so number one thing to prevask is look for things running as root and exploit them so let's go into VAR dub dub dub and go into bucket app we get permission denied but it has a plus next to it so it's owned by root user and group and only root can read and write but it has a plus and the plus means like extended permission so I'm going to do lsatr on bucket app to list attributes don't have anything I'll try get fackle which is get file ACL on bucket app and we can see the user Roy can read it so this git file ACL is something that's been around for like probably 15 years maybe even longer on Linux but it's a way to now allow other users access to the file most people know like here's user here's group here's uh other or not that but there is the extended attributes that allow you to specify other users so even though um it's owned by the root and group even though it's owned by user and group of root and only that can read it the extended one is giving it to Roy I spent a while talking about that when it's super simple but hopefully it helps you uh we have to get to Roy so I'm going to cat Etsy past WD and look at all the users on this box I'm just gonna grab for Bash uh let's see and we see only root and Roy have bash so I'm gonna be lazy and we're just going to go to our creds and we're going to try each of these creds for Roy to look for some type of password reuse so Su Roy paste that password we'll copy the next one while we wait for it to go authentication failed uh we want to do Roy and then the last one we have this which is sysadmin paste the password and we get in I'm going to try doing a SSH so SSH Roy at 10 10 10 212. except the fingerprint put this password in and we get in the reason why I try Su before SSH is because um it's just uh more likely to work um Roy can be denied SSH access which then the credential just doesn't work for us it's much more rare to find Su is blocked for user if you're curious why do this Dash because when I do Dash it's going to take the new environment of Roy let's go out you see when I did this I went into Roya bucket if I take that away it's probably going to be staying at wherever I am and we're dub dub dub uh I need to copy this again so Su Roy uh yeah so it didn't redo my environment variables and put me in a new directory so like uh let's see I still have all of apache's environment variables I believe show Bin bash PWD long name not all of environment variables but um it's just cleaner to do a dash when you switch users I don't know a good way to explain it you can probably read the comments for someone telling me I'm wrong but when I switch users I like my Dash so now that we're Roy uh we can go into verb dub dub dub app and take a look at this so there is a index.php and this pd4ml demo jar so we got some type of java going on if I did ps-e-f what do we see uh there is a sleep here uh we may want to run like um shoot yeah there we go may want to run goes by to see if we can figure out what this is there is a restore.sh also running so I'm guessing sleep is probably related to restoring it every minute uh let's see can we just cat root restore.sh no okay so we got dynamodb here so that was another hint that that's running uh is doing tail on local stack stuff so there we go um that's how we would find out that local stack is running if you look at PS or look at in the temp directory you have local stack stuff so see we also have the docker so instead of doing the SS lntp I could have just looked at what's running and we see docker proxies localhost 4566. so that would have told us that as well and so I'm going through Apache the amazing things you learn when you just take some time and poke at the system so I forget what I looked at PS4 but we got a bunch of good information um let's look at index.php and I probably should do this in VI so we have syntax highlighting there we go to the top so to go over this I think flame shot's gonna be really handy so I'm going to use it to take a screenshot of this code and then we can draw out the logic so the very first thing I want to do is highlight the um first action I see here and Red's probably not a good color so let's go to Tool settings what color is not really used um I guess this green May stand out more uh that does not stand how do I get okay there we go so that stands out a bit more I think so we can do this and then I can click on this Auto incrementing bubble and say one and then we'll do text and I'm going to say right here if post action equals get alerts there we go and then let's see this is all setting up the Dynamo DB interface that's not too interesting to us um we have table name alerts so this is going to we want this I want to make I'm holding the control and using my mouse wheel to change the like heaviness of this so you can look in the top left as I scroll up and down so here we can put a big old two and then put the text um this will be uh let's see use alerts table it's going to take the title so poll title and if title equals ransomware and then it's going to go down here all right and we'll say right here but three Let's see we can say where's my cursor there we go put data into HTML file and then this right here it's doing pass through doing pd4ml and it's grabbing the file that we just put and putting in a result.pdf so we can highlight this entire thing and then put the last one for and we can say we have to update that and go to text see text then convert HTML to PDF using pd4ml okay so we got four things here and that's pretty cool for a screenshot um we can copy this to a clipboard and then go to obsidian dumping Dynamo DB this will be 30 and we'll call this well 30 is Roy we need to gain access and then the next thing we need to do is say what this is what 8 000 bam and we gained access via password reuse in dynamodb the sysadmin user do this Roy there we go and service there we go I'm not sure why that's different but when I go in edit mode it looks fine so there we go and we have a nice screenshot on this explaining everything we did so now we have to go exploit this so we're gonna have to create the alerts table probably because when I did an LS with S3 uh when I did a list tables with dynamodb it only showed me a user's table so we probably have to create alert and then create something with a title and saying ransomware is in the title and then putting some data that pd4ml will use if we look at pd4ml let's see PD for ML HTML to PDF converter let's see what is like documentation of this there is a tag in here to attach files so pd4ml attach file whenever you do like these conversions you should look for how to attach things so we can see here we have a way to attach a file to a PDF and what we're going to try to do is attach a like Etsy pass WD inside a PDF that's generated and see if it works so let's um do that so going here we will have to access port 8000 and go back to and see I'm going to kill this this is my netcat sessions we don't need this anymore so I can kill this because we have SSH I'm going to do um the very first thing on a line if you do Ctrl C you enter the Konami Code for SSH which puts you in a little shell where you can do Port forwards you can also do it on the command line when you do SSH if you don't know what I'm talking about the reddish video is what I do most of my forwarding token so I'm going to do that well enter that now I'm in this sh mode Dash L I'm going to say um listen on Port 8000 forward it through this SSH session and the endpoint will be 127.001 8000. so now if I curl localhost Port 8000 we go through SSH and get this and I don't know what this is some type of joke uh localhost 8000 and just says the bucket application is not ready yet but we looked at the source for this already and we know essentially what we have to do so let's do that unfortunately I am human and don't know all the syntax to do this off top my head so I'm going to go over to Google and type Dynamo DB create table AWS CLI and we get this create table thing and I'm going to go and look for examples and we have something awesome I'm going to grab this and we'll say new note 35 create table or say exploit port 8000. so we got this and we don't know exactly what all this does but we know we need to create table command we also probably want dash dash endpoint URL because we're not using Amazon's S3 we're using our own so we add that we got dynamodb create table then table name we want alerts attribute definitions uh let's see we wanted title I believe so we can do attribute definitions attribute name title attribute type s for string and I don't think we need anything else we may need no we probably don't I was thinking maybe data but let's try this let's just keep going key schema so let's see attribute name I'm gonna go with title key type hash um don't know what this is okay provision throughput read capacity units five right capacity five this is just um like how active or like throughput limits on this S3 bucket I guess I'm not an AWS expert by any means and I think we can get rid of tags we don't need any tags so let's try this see what errors out if it gives an error message that will be amazing if it doesn't and it works that would be even more amazing okay so let's see the following arguments are required attribute definitions table name and key schema thought we put those I guess we want an all on one line but I don't want it on one line because I like this for documentation maybe we only do one slash I know you can do commands over multiple lines there we go um it didn't error let's just list tables real quick so let's do download DB was it list table list tables there we go so we have alerts so now we got to put something into alerts so I'm going to V ransomware.json and we need to create something so the title and this is going to be a string and it's going to be ransomware right because if we go back to Roy this image here's where we are so we need the title to be this and then we create data for this um object or whatever it's called so we go like this and then we can do data and then that's going to be its own thing so s and then this is where we create our HTML so HTML pd4ml what is it right here let's see what do we want attached push pen is by fine so we can grab this another way you may be able to do this is with like iframes and linking pages not positive but we can change this to be file and let's just try a file we know exist Etsy pass WD and then we can grab this now there is one issue right now and we have double quotes we want to put these all as single quotes so let's do that description I know this like coloring is God awful right now but hopefully it's fine like that and then we can end it sweet uh we have to close this one so this Json looks fine let's try putting it so we can do AWS endpoint and then it's put item dash dash table name alerts then item file coin slash slash ransomware dot Json uh let's see no such file uh file coin slash I think three went to my root uh non-existent table so let's create the table again put this here and then we need to uh let's see go back to Roy we need to do a post with a action is equal to get alerts so curl Dash capital x post Dash D action equals get underscore alerts on HTTP 127001 port 8000. and maybe Dash V upload okay so let's go localhost 8000 . bucket there is a files so let's go files it's empty but let's see there may be something clearing something so let's do a put back real quick final cone slash slash maybe it was on this page well we can list tables list tables and our table's gone so we have to do this pretty quick so let's create table put item and then curl and we look at this we have our HTML that we put in and we have this PDF so I'm going to go to the PDF I want to click this attachment to save it pass WD that's looking promising open file and we have the pass WD so now this is running as root you can see our HTML if we view Source uh it's not found so it got deleted again but this is a Java application so what we should be able to do is just give it directories with Java Java is unique compared to Python and PHP if you do an F open on a directory it'll just do a dir so that is one unique thing to Java we create the table table's already there okay we gotta edit our Json so instead of etsy pass WD we can go to root oh we could also do um dot AWS credentials right that was it we go back here uh futurethings.aws credentials see taking notes is so good uh it helps you when it comes to those things so create tables created what uh uh what that's not what I wanted this is what I wanted I don't know what I just ran but we'll see okay we can go to results.pdf click this we got credentials open ah test test well you're not helpful all that worked for nothing uh let's go and edit ransomware so V ransomware we can do file and we can say root we give it this directory let's see put this in call it and then down with the new PDF it's unnamed foreign C directories so we go in this AWS directory but I also see a DOT SSH so I'm going to take a look at dot SSH so let's go ransomware root dot SSH put it post download a new PDF open this we got a idrsa so now we can edit ransomware do ID underscore RSA upload and open this we should get a SSH key idrsa we do go back to our notes creds and say root sh or we can say SSH keys root there we go so I guess now is time to test root idrsa let's go back copy this paste chmod 600 root sh Dash I root at 10 10 10 212. and we are root on this box awesome so now we can go take a look at everything we wanted to do after rooting the Box so going over to obsidian we can take a look at what we need the very first thing we left off on was getting AWS creds so if I cat slash dot AWS credentials we already saw this but there's nothing special here we can also do the one in slash root which we haven't looked at yet but it's the same thing so I'm not too interested in this however oh we should take note that we did it okay and then socket so we want to know what listens on Port 35167 so if I do ss-l for um listening ports and don't do DNS T I think it's TCP and P is process we can see what that is so 35167 that is container D if I do a grep on three five one six seven be easier to see container D and I think this is related to docker and unfortunately I don't know how to enumerate this uh local host 35167 uh 404 maybe like V2 uh let's see Dash X post let's do container d web API curl example it's the example rest for openshift container D sure uh let's see uh it wants a bunch of stuff in the header uh we can try accessing API V1 see if this works not gonna spend too much time on this because I have no idea so let's see we can just say unknown socket this is container d not really interesting I think so the next thing the magic that I teased you about so obsidian has plugins and I found one plug-in I really like I'm digging through plugins to find more and then I plan on creating a obsidian video similar to uh t-marks but there is this timelines plugin and this is going to do something cool so let's Google timelines plugin obsidian and I may not be using this the right way I'm just using it the way I played with it yesterday but you can create pretty timelines so on everything we just tag so let's go obsidian let's go to enumeration the very bottom we can put this and uh does it show this band it does because I think we don't want that maybe it's like that I think it wants to be an HTML the demo gods have me going right now uh let's see leaves that open that closed it doesn't look like HTML let's say tags it was hiding that when I previewed it before say I'm gonna pause the video real quick and play with this okay I got what I was doing wrong uh when I copied a lot of stuff just got escaped so let's go back to here all these backslashes we can escape and the span tag is left open because it gets closed here so that all makes sense okay so we have this event and if we go to magic I'm just going to do timeline and then viz and we don't see anything because something is screwed up let's see oh we have to tag it so if we put a tag of timeline and call it that now on my magic page boom we have the first one so we may want to edit the time so let's say uh this was one day so let's say uh 2012 uh 2021 it is 04 let's say we started it there and we'll say startup box and you can edit all these things highly recommend watching the video of how to use it it's not a great one but I'll create one eventually so we have this timeline and the time started was here and I think we can specify our two right we specified 10. 10 what happens here uh we break it so again still playing with this 420 weird okay let's leave that at zero and then we could do something later like S3 go to the bottom here and put S3 compromised and do four 21. then we go back to a magic tab we have this and we'd probably get change another event because that's linking to this so if we edit and say another event would be startup box yeah start a box here and then down here we'll say and map all the things and then S3 instead of saying S3 compromised here we can put title has to be compromised and we can say uploading a reverse shell and then Roy if we copy this go around here and say let's see this will be the next day let's say dynamodb dumped uh credentials to Roy leaked so you could do something like this and then you have this timeline and it's pretty pretty um I bet if we killed the Dead image in this we wouldn't have that I don't think we need that tag so if we get rid of that tag everywhere what happens this is where if you had a graphics artist you could make this really cool but I've been enjoying putting timelines in my notes because as I do test I like to know how things worked and when someone says um did you attack this application like uh I did it on that day and here's generally what happened it's just a quick way to visualize notes at a high level so hope you guys enjoyed the video take care and I will see you all next week