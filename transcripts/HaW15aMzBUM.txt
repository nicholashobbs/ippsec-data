 what's going on YouTube this is if SEC and this video is going to be an introduction to PHP D civilization also known as object injection and I wanted to create this video because there's a lot of information out there on how to exploit DC realization vulnerabilities using tools like Y so serial or PHP generic gadget chains however there isn't much information on finding the gadgets yourself or exactly how this works so hopefully this video helps you understand it and in future videos taking applications that have actually suffered from this like WordPress and Joomla and walking through the steps of creating an exploit with something like PHP generic gadget chains and then maybe another video on the PHP for unn serialization method which is spelt pH AR but those are a bit more advanced --fill we're getting into so let's just jump in before we get into any actual exploitation let's show the difference between a variable and an object and why giving users control over an object can lead into bad things so let's go into a PHP interpreter and just create a few variables the first one let's call it if SEC and that would be a and then B is equal to is not an admin and then if we just concatenate those two strings with a period we get if SEC is not an admin let's create a new variable call it C and make that equal to B and then it could catenate a and C and we get I am still not at admin now if we go back and update B and say is totally an admin but only call C so echo AC we see I am NOT at admin so this is showing that even though we say C is equal to B it's saying C is equal to B at that point in time if B updates then C is not going to update as well we can further demonstrate this with like D is equal to shell exact date and then if we echo D we need a semicolon we get just the exact date do it again date doesn't update if the was an object it would be possible to make this variable go and perform a function and get us the date and this is kind of how object relationship mappers work that's the PHP framework such as code igniter or larval it's taken the whole database and can bring the database into an object so now the PHP developer won't have to type like select username from users where users equal to if set instead of doing that to get information about a user all they would do is say username epoch and then the framework would go and do all that magic to convert this into a sequel statement and pull that and then this function could return everything such as if I did like groups it could say hey if zach is a member of administrators or if zach email could pull my email so that's what object relationship mappers do and since PHP moved to that type of technology civilization has become much more common back when you had just simple like lfi scripts and not doing anything complex all the Curtis wrote their own sequel queries there was really no need for objects but in this IRM world then objects become a thing so let us just create a object manually so we can really demonstrate exactly what is happening so let's create a file called code dot PHP and give it the standard PHP header and then begin creating a class which is going to be our object so class user and we can say public username public is admin just defining the variables ahead of time and we can say public function print data and then start with a if statement saying something like if this is admin then we'll do echo we'll just start off with this username and catenate is an admin and then let's do else echo this username is not an admin okay so now let's create the object so object is equal to new user and then object username is equal to epsilon is equal to false and then we can call object print data so if we didn't make typos we'll see EPS AK is not an admin I'm going to do one small thing to make this a bit easier put double quotes around this and put a line break there we go so we see I am NOT an admin if I change this to true of course it's going to say I am now an admin so we can package this whole class up with a CR wise call so if we just do sterilized object and we should actor this we'll see how PHP stores serialized objects and essentially it is a letter this stands for what type it is oh this is object s we got a string here B we got a boolean and then the thing that comes right after that is going to be the length of the name so in this case it's user which is 4 and then after this since an object it's going to be how many items are in this object we have two items we have the username item and then we have the is admin item so that's why this 2 is here so the very first variable is the variable name is a string it's 8 characters long and that is you name its contents is also a string it's six characters long and it is if sack then we got this second thing here the variable name itself is a string which is is admin and the contents of is admin is a boolean and it's currently set to one because that is true if we change this to false we see it changes to zero so that is how objects are serialized and if you do a uncie realization then that's how you store this whole object so let's make this code able to accept HTTP input so we can begin creating the exploit and putting vulnerable things into this code so let's go back into code dot PHP and we don't need this we'll just put object is equal to whoops unsere wise and then we'll do first a p' SEC and then object to print data so all this is doing is saying this object is equal to an HTTP POST and the variable is going to be upset and then uncie relies that so what's now PHP dash s and this is much like Python simple HTTP server I just don't do it because if someone puts a PHP script here it will execute it so be careful with that so we can do curl ex post - d up SEC is equal to that object and then localhost / code dot PHP we do everything correctly which we did not it should output I'm an admin so let's see call it an undefined function print data so let's go back into code here let's see object - print data there we go so now I am NOT an admin if we go and edit this manually by hand and change that 0 to a 1 we can see we can flip things in this object and convert it now this object alone isn't really exploitable because we don't really have any code to jump to and there's no dangerous code in this application if there was dangerous code in this application we could jump to that and then call those things and that's called a I believe gadget and if you go in Firefox sorry I'm not used to the new Kali right now PHP GCC I think I know GGC this is a library much like wiser serial and Java that does all the gadget finding for you with known frameworks but we may get into more on that later so let us create a second program and that second program is going to create us malicious objects so let's do attack PHP and actually I'm going to do this on a new pane if we can split it be attacked PHP and V code so all we have to do for attack is create the object we don't have to have all this data in it so to just create the object we just need to create that class call it user and then we can do public function construct this username is equal to epsilons true and I need to put this there and then close this out we can say object is equal to new user and echo Sierra object so if I do PHP attack PHP I've been equals somewhere they would go it just creates the exact object we used so it'll be more obvious why created a attack dot PHP a little bit later but the next thing we have to do is just create a exploit SH so we can quickly exploit this and start typing a curl command every time so let's just do curl - ex post - D if set is equal to dollar one local host code PHP then - and before I execute this let's just echo chmod plus x exploit test and that's just going to run this command so we can get rid of that PHP attack copy it and then exploit paste and there we go so now we have to add some various things into this and for PHP object injection to work you generally chain against magic functions so we Google PHP magic functions magic methods we get them construct destroyed sleep call call static get set whatnot if you go back to the PHP gadget chain finder thing you can see what vector they use we have destruct - string to start to start destruct wake up to string and yeah so those are the methods we'll get play with a few of them so the very first one we want to play with is I guess to string so to do that let's say we'll create the class read file and give it the public function to string and then we can say return file get contents this file name so that's all we added here we're not adding anything actually calling this function but because we have that defined we can jump to it and that is the gadget so let's go back into attack and then create a similar thing here so this will be class read file public function construct and then we can just say this file name is equal to Etsy passwd okay and then for user name I am no longer going to be hip sack I'm just going to be new read file so now if I PHP attack dot PHP I forgot a semicolon and I probably forgot it and a second place let's see what did I forget to do what's air unexpected public there we go so looking at this I really should put hold on there we go there we go okay I really hate when things don't end on new line but we can see now instead of this username being a string that username is an object it in length because read follows eight characters it has one item and it's single item is filename so now if we copy all this and do dot slash exploit and send this object into our application we get the contents of Etsy passwd so we just exploited or injected an object to instead of give us the username it now gives us a file we could give that any file we wanted so the only thing we have to do is edit it here I don't know another file to really include the root proof we'll call ya proof dot txt test and if we do slash route proof text whoops get that object copy and run this we read that file so there's plenty of other things we could do now another common one is creating files and creating files that is going to be let's do think of a good way to demonstrate this let's actually show what code path means so often when you hear DC authorization you can hear it's coupled with the attack you can jump to anything in the code path and what I say keep saying that that's pretty much how like Java works they're jumping to like common collections and what that means is you can jump to anything that exact script can jump to so if we created a separate file called logging dot PHP and do the same thing create a new class called log file and say public function destruct and then we can say file put contents this file name into this user name file append so the logic of this is upon ending or termination put a user name into a file so that's the logic of what this script is doing so just now because this exists we can now go back to code PHP whoops that's already open over here we just have to include login dot PHP so now that's quote-unquote in my class path and if we do exploit SH on exploit SH attack PHP we can do the class and I'm going to open logging here log file public function construct this filename is equal to where my root directory PHP unsere lies slash pound PHP and will say this username is now equal to PHP system Who am I so instead of calling read file I'm just going to go to log file and let's see what I type owed surprisingly nothing so we can copy this dot slash exploit paste we do LS we don't see anything so let's go back here and let's see we have PHP recoverable fatal error object of class log file cannot be converted to string so what just happened here is let's go back into the attack or attack code so this function log file went into this and it tried to print the results of whatever file put contents were and it couldn't it couldn't convert that and it aired out and when it aired out it crashed before it called destruct so that is why we don't have the file here if we go back into attack and just said instead of username we inject it into is admin that'll probably work so if we do this new log file and PHP attack and we can copy this God slash exploit paste LS and we got pwned PHP so if we are exploiting this box we now just call that script and get code execution but there's a better way to do this actually so whenever you do destruct chains you can force a destruction immediately and that's called the fast destruct method so let's show you what that is so let's go back here and let's do pulse and we can change this back to new log file and to make sure I'm not pulling a fast one on you let's just do this again and see the file does not get created so running this again file not created now the fastest truck method works by just forcing a destruction to happen and that happens when it reassigns variables so let's do this username zero zero and I did to YY to copy two lines and one one so now we have this whole thing twice we don't need the whole thing twice it's just quicker to do you just need a second object so now this is extremely messy you can see up here where we have log file it's got two and where is log file here it still got two but these two are a array or dictionary so let's see so let's see I won yeah I can't read this right now my eyes are playing tricks on me try to read all these letters but essentially there's now and array in this so if we copy this content and then do actually before I do that let's go back here and I'm just going to clear the screen so you can see it does in fact still air out so if we dot slash exploit this huge blob we get array is an admin do LS it created pwned and it actually didn't air out I hope that's what passed destruct is um yeah so I haven't looked too much into this and now just doing this I can see it behaved differently and instead of failing because of how it returned it succeeded because it's an array but the logic behind the fast destruct method which just go and explain this to my understanding is when it goes and does this it's going to go and try it twice and the second time is defining new variables and then when it does it the second time it's clearing out the results of the first one which means it destructs so I think that's what the fast destruction math is doing now I'm not sure so hopefully that's correct so now that we're through that whole rabbit hole and we can go into the next thing I want to show you and that is probably where am i it now read file we can create a gadget chain to call a function that doesn't have any magic methods so this will be the last example we do we can do class pwned and then say public function pone and this will be system this command so right off the bat we can't actually call pwned because it doesn't have a magic method for us to do it if we tried we can just see ourselves fail so we can do class owned public function construct and then we'll do this command is equal to touch root PHP unsee our allies slash finished txt so if we just called owned here how we have been before new pwned okay PHP attack copy this and then exploit paste and do an LS we don't get that file because it doesn't have any magic methods tied to it so it never calls this this being code we just created this class when it got here it said huh I don't know what to do I'm gonna do nothing it doesn't know to go into own so if there was a destruct method somewhere else using this function or a wake or some magic string using this it would then magically work so if we do this secret pone so now this read file is using it and then in attack file name we just do new owned and this is new read file and I think this is going to work so let's do dot slash exploit paste OS it did not work so let's see what we have let's see we probably need something here saying this secret let's see there we go now I got sent to exile ending back I don't know why sometimes when I do that syntax highlighting goes away so this is looking good going back here we can see our script did error and to string must be a string value and we gave it an object so let's do instead of this foul name this secret and this flower name can be a string this will be root rooftop text I guess and just bring the code side-by-side this function has this secret pen right here so let's do PHP attack and copy this dot slash X boy paste and we do LS and we get finished dot txt so that is how PHP object injection /d serialization works hopefully you guys enjoyed that take care and I will see you all next week