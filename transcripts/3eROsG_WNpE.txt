 what's going on youtube i talked about this a little bit on twitch where i try to live stream once a week if you want to catch it live check it out on twitch.tv ipsec and that's really the only way to catch it right now because i'm not doing the whole vod thing because i like to be off the cuff and just a on the moment thing and when i talk about something cool i create a new clip or just clip it out of the twitch stream and put it on youtube and i talked a lot about dll hijacking which is my favorite way to persist on a box both as a user or system because there's a lot of various just persistence techniques like you go into the startup directory and app data roaming microsoft windows start menu program startup drop something here you can go into the registry so if i do reg edit we go what is it current user software microsoft windows current version run like we could put keys here to start up we could do run one so encoder malware to write itself here upon running so it stays in this location just in case something's not checking it we can use a task scheduler there's a bunch of places we could put persistence but i really like the dll hijacking because it's not one of those things you can just look at and know it's malicious like all these locations i said like task scheduling registry startup folders like those are queryable locations that you can look and then just analyze everything that's starting up dll hijacking kind of depends on taking advantage of something else that is running so to go into it a bit more let's go and build a sample application and we're going to do something really cool at the end of this so don't worry this if this seems simple just stay tuned until the end it's still simple but it's a pretty cool technique that a lot of people don't realize about hijacking things out of explorer but i'm just going to compile this so let's see um x86 w64 actually before we compile i should look at the source code so we see hello.c it's just a sample application it's going to load up ipsec.dll and then if the dll was loaded print dll found else print dll not found it's a super simple application and then the dll we're going to be using for this is just this um when the dll attaches to a process it's going to pop up a message box that says please subscribe to ipsec and follow him on twitch with the title of ipsec and it's going to display an error message with an ok button if this whole message box thing doesn't make sense to you literally all i did was go to the microsoft page look at the message box functions and then just call the message box so we can see this is saying if the parameter is null message box has no owner window then the next thing you can just read this to see what it does when i get to the type um we had like icon error and this just says a stop sign appears and then we also had like mb okay and this just says the message box has one push button okay so that's why the message box is going to look like it does and if i was doing something uh evil i would definitely change out this message box to be something else so now we can go and compile these so x86 w64 mngw32 [Music] gcc win32 this is just my compiler to make executables and dlls on windows so the first one was hello.c we'll give it the name test.exe and then we have um was it dll.c we'll give it the name ipsec.dll uh we also have to say dash shared to make it a dll so now if i run a file against this we see ipsec.dll is a dll and what is the next one hello dot we call it test.exe and that is a executable so now we can transfer this over to our windows box so i'm just getting my ip address standing up a web server and we can download this so copy let's go over here it's in a powershell if i can type there we go cd desktop make this font a little bit bigger for you and we just want to download the test.exe here first test.exe dash co test.exe so now when i execute it we have dll not found so now we can go over to process monitor run it as administrator i think it would ask anyways and this is just a sys internal tool um and it's going to show everything every process does so if i wanted to look at like what um let's see this ms my windows defender is doing i can just right click um include it and i can see everything defender looks at right um we just want to look at test.exe so what i'm going to do is go to filter and we can change this by double clicking and then just type test.exe we could have also created manual by doing these dropboxes but i like just right clicking here doing a filter and then clicking to populate it so where process name is test.exe we see nothing here because we weren't running process monitor when this process started so now i'm going to run it and we see things start getting populated so we see the process start it created a thread loading nt dll and if we scroll down we see it's attempting a create file it's just trying to get a handle on a file it's not actually trying to create it it just wants to get the handle so we can read it and we see it going from desktop to system 32 to system to windows to desktop again system32 to wbam to powershell to openssh to this.net directory to app data to another.net directory so if we can write the dll to any of these locations chances are we can do a dll hijack and we can also do dll hijacks if the file exists by just putting it into the current working directory you can try this later with explorer.exe because it's a really cool one we'll get into that in probably like five to ten minutes once we finish explaining what we're gonna do so all these directories how it loads is just the windows path right so if i do echo path we can see what the path is and this is the order things get loaded in the only thing you don't see is the very first piece of a path is the current working directory of that program i believe it could be the current working director of the user but i want to say it's the program um and this becomes important again when we do explore later i'm highlighting this because i have seen people that like install java or python and then they want to edit the path to put python in the path so they don't have to type the full path to python every time and they make the mistake of putting it before system 32 and when they do that it enables a lot of bad dll hijacking right um this one we can either write our dll hijack to our current working directory or this.net tools because i have visual studio installed on this machine so i'm going to test out both those locations so right now it's looking for ipsec.dll and all of those and i guess one's more side tangent the there are dlls we can never hijack and those will be called known dlls and let's see i think that's in it's in local machine and then let's see um system current control set control session profile i think or session manager and then let's see configuration known dlls so all these dlls that are here will always be loaded out of system32 you can't really change those um if you can write into this key then a lot of dangerous things can happen i actually think it's in a different key it's not in session manager there's a hidden location where known dlls are also kept that becomes dangerous but whole different topic just know you can't hijack or proxy these dlls so now let's put ipsec.dll in the current working directory and execute test.exe so i'm going to do my curl and we're gonna do what do we call it ipsec.dll and we'll call it ipsec.dll here so now i'm going to just clear this and when we run test.exe boom we have the message with the message box that says please subscribe and follow on twitch and when we go down here let's see where is ipsec create file success now it's going to read and close the file so um success there now let's say we didn't want to put it in the desktop right we had a um was it a net directory here where was it loading before let's just delete this and then run it again and find out exactly where actually we have the path dot net tools so i'm going to move ipsec.dll to net tools does that not exist let's see users.net and then a directory called tools so if i just run this again dlo not found right so cd.net let's make the tools and then move ipsec.dll into this directory so now we just made this exist and if you went back in the video and you saw the process monitor you'd see it tried to load something out of this directory i'm going to hope we have dll injection again so this is why i like the hijack so much because you can just place that dll in different spots so it becomes very hard to find um now i kept hinting at we're going to do something cool that i don't see a lot of people talking about and that is hijacking explorer so there is one really cool thing let's see actually let's just include this again change the process monitor the filter to be explorer.exe okay let's add it now so now watching everything explorer does i'm actually just going to also include the create file filter because that's all we care about so let's delete it and then i'm going to um let's task kill slash i am explorer.exe force kill it and now we can actually clear it again and when we run explorer let's do c colon windows explorer.exe um maybe it's my current working directory or maybe i left something in from the stream so let's go cd backslash windows and just run explorer.exe so i left something in from the stream we're already hijacking it um dll let's see there we go um [Music] what am i not in an elevated session this became weird i may have to reboot this box to easily delete this file cd.dlcscapi.dll there we go i was not an elevated session so you saw what we're doing we're hijacking that right um so let's go cd backslash so now if i just do colon windows explorer.exe reload and we can see everything it's doing right now it's loading a lot of things from system 32 and we can take pretty much any one of these like um let's see include this i'm just going to use the one i had shown you because i know this one explorer doesn't really use it's called csc api dot dll it's a generally safe one to use and we see explorer is trying to access this file um [Music] i thought it was trying to access it out of system 32. that's weird let's see i get a sword that file normally exists in system32 i must be in a weird state let's see sql and windows system32 cse api yeah dlo does exist in system 32 my machine's just in a weird state i believe but or maybe windows applications try to load that i think i'm going to reboot [Laughter] to see exactly what's happening here because i could have sworn it would load in more than one location oh i have the path and i'm only exclu including that path so let's see we can do a wild card here i think maybe i can't let's see remove let's see is there a process name or a program name see we can just say ends with cscapi.dll there we go the downside to doing things somewhat live so we can see explorer tries to load it in sql and windows and then goes to system32 now explorer is a unique binary on windows in the sense that there's not many exes that exist in this windows directory so if i just do find string exe we got explorer help pane um my 99 sure i created this but there's not really that many executables that get used so we're gonna hijack the csc api one because explorer tries to load it first so let's go and go to our powershell i'm going to make sure this is an elevated powershell run as administrator and then we can just curl uh what was this there we go so curl ipsec.dll and we're going to name it cse api.dll and before we run this we're just going to show my explorer if i kill it i can run it again it tries to load cse api from windows then defaults to system32 so now i'm going to put cse api into sql and windows kill it and we'll start it again and we have the please subscribe to ipsec and follow on twitch so we have successfully persisted now inside of um explore not inside of explore.exe to the side of explore.exe we hijacked that path and there also is something called dll proxing so if you wanted to proxy the function calls so now let's say explore.exe actually needed csc api to exist um we broke all that functionality because it's no longer loading the correct library we can do something which is called like a proxy load in a library so if it calls csc api a function out of that it doesn't exist into errors we can proxy it over to the real one so we don't break any functionality the other thing i love doing about this because right now we're writing into windows so we need um administrative permissions let me just delete this um really dll cse api dot dll there we go so now i am back and we can look at a program that runs on a lot of computers by default notably onedrive like i'm not signed in it just came here by default and i want to say it's in a place where users can write so let's find out exactly where onedrive exists i'm going to go into prosmon or not procmon i want to go into process explorer and we will look for onedrive and see where it exists exist in c colon users app data local onedrive onedrive.exe so if i do this let's go and kill one drive so task kill slash im onedrive.exe f onedrive's not running i can start it up by double clicking this and we have it running now we could look at um process monitor and do that whole thing again but i'm just going to speed it up and say i know onedrive looks for csc api as well so we can do the same exact proxy load so cd into this directory let's drop our dll we have it here double click and it says please subscribe and follow on twitch now if you want to actually weaponize this dll you'll have to find that content elsewhere we do talk about it on a few videos um the ones i would highly recommend probably um search for av evasion because that brings up hackback in this machine we did a bunch of av evasion with meterpreter load it in a dll the other good resource i would have is probably talking about the dns threading because in resolute we hijacked something out of the dns server and a lot of people didn't thread it so they hung the dns server remember like whenever i executed anything my dns my dll hijack there the application didn't keep going um it just paused until i clicked okay that's what a lot of people mistakenly did with the dns exploit in that machine so i talked about how to thread it to get code running in the background but hopefully you guys enjoyed this little highlight from the stream take care and i will see you all next time