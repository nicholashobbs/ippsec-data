 what's going on youtube this is ipsec and this video is about taking that data that would normally upload into bloodhound to find a complex active directory attack path and instead just press it with jq so we can think like a list instead of the graph which allows us to find some basic attack pads for example with a list we can just dump all enabled users and then do a password spray or even better we can dump all enabled users with the password set time more recently than the last login which may indicate the help desk or someone change the passwords and do a password spray against those users additionally we could just look at all the computers that have been powered on within the last years because maybe when we did or nessa scan the computer is powered off this helps us find it so with all that being said let's just jump in and get to the parsing now before we get into any of the fun command line parsing stuff i do want to just go over the data visually as it's intended with bloodhound we can just click around and kind of see what bloodhound shows us so we click find all domain admins and we can see we have two here and this is just the data from the search machine on hack the box it's not gonna be perfect but it's gonna be enough to show it so we could search around a lot of things so if we do like shortest path to unconstrained delegation systems we have this beautiful graph and this is what bloodhound is good at showing it's good at showing exact attack pads but there are attack pads that it's just not good at showing because it's hard to visualize it uh visually and if you want to do like a password spray across all enabled users you could run a custom cipher query like let's match um users where it's enabled so if we do this and return true this should return a list of all users let's see where n dot did i do that right enabled oh not return true return n we're returning what the match is right and this is going to return a list of all the users and we can see which ones we compromise marked as high value things like that but it's hard to get all these names in a text file from bloodhound we could like enable this so we see all the names and kind of just type them out but it's not that easy there's also a lot of really good information in this like last login last login replicated enabled if it's compromised a lot of good information like as rep roastable so it looks like there's extra properties things like that but it's hard to look at all this information in a visual form and if you want to learn more about writing cipher queries there is a hack to box academy module that goes into it if you don't want to pay any money you can try turning on this debug mode and when you turn on the debug mode whenever you run a query it's going to output that on the bottom so if we do like show shortest paths from kerberostable users no data returned let's see let's just find all domain admins and it puts the query down here so you want to learn that you can potentially do it this way right here we're just matching end user where has spn service principal name is true and there's two here but this isn't a video on cipher queries it's a video on parsing this command line stuff so if we look at the data from bloodhound this is just the bloodhound python ingester let's start with users because uses what's most um noticeable and we just cap this file it's a huge json blob if we do jq dot we can kind of see the information but we kind of just get flooded with information it's hard to visualize everything right i know a lot of people that like do this and grep for name and i used to be guilty of this like doing this and um let's see maybe if we put a single quote here and then we get a list of all the users however when we do this we can't really like chain this command so like users here could be disabled and we don't know it because we use grep and just threw away a lot of the data so if we actually learn how to use jq and parse it properly we can do fun queries to make it like a database and just show us the information we want so i'm going to go back to this jq dot and jq can parse files i just like piping it after cat because then oops oh god i just erased burp well erased it from the tray but that's fine um i like doing this because it puts my query at the end of my syntax and the really weird thing about jq is it uses the pipe character a lot so i put everything in quotes so my command line doesn't interpret that if i just do this jq dot we have two values here we have meta and then if we look at the top we have data and we can view that by doing jq dot and piping that over to keys and it shows us those two keys we don't really care about meta meta is just telling us it's users how many there are what version of the ingester we used i believe so i'm just going to do dot data and now we're only in that data group and the issue here is we're in a list we can see that by that like square bracket so if i just do open close we're going to go into that list and now we're in the heart of the user data and the only thing i really care about is going to be stuff out of properties i don't care about this whole asus thing things like that everything i want is in properties so i'm also going to do dot properties to go in here and then we can do a pipe and let's see what is a good way to do this visually i'm going to probably let's see hold on i'm trying to think of how to best visually display this data so for this demo i think i'm going to use a lot of escapes there we go then we can do jq dot properties like this and when i do it again oh it's not going to visually show that escape oh well um so i want to just show all names so i'm going to pipe this to dot name and that name was a variable here right it's this one so now we have just dumped a list of all the names now if i wanted to just show enabled we can go back to properties we see there is a enabled flag and we can pipe this and use a select and we can say dot enabled is equal to true and then we pipe out the name and we have a list of every account right we can also do equals false and here's the disabled account so right away we can see the value of doing this instead of using grep now the other thing we could do is show things like descriptions right so we can do name let's see can i do what if i hold on so i do this i wonder if this will go over multi lines so let's see jq like that no i'm having trouble getting multi lines oh well um ignore that so we got this name and i'm gonna do plus then a quote then a plus and i'm gonna do dot description so now we have a list of the names and descriptions for all disabled accounts because enable is set to false i can set that over to true and now we have descriptions for accounts and this is handy because every now and then you see descriptions that are useful maybe it contains a password it contains some type of information right i don't see it that often but it's the go-to for like ctfs and things and beginner to ad exploitation now if i look at an account that doesn't have a description this one does um let's see this description is set to null so if i want to just show all accounts with descriptions we can go back over to where this select is and say select dot uh we gotta do a parenthesis dot description i type for that description and then is not equal to null and now we're only listing all 80 accounts and their descriptions um we could change this to like a colon so it's a bit more friendly if we wanted to i think a tab would also work if we do backslash t oh no tab does not wonder backslash backslash nope i'm sure there's a way to do tab delimitation but i don't know but we can see this right and this is helpful we see like web services a temporary account created by the help desk another good one to do that i like using if we go back to where just jq and look at all properties um there's this whole last login last login timestamp and also let's see last login and password last set right pwd oh it's right below it so these timestamps are a bit confusing um in like windows early days the last logon wasn't replicated between all domain controllers so this is all the logins for this domain controller most organizations have multiple domain controllers you normally have one per building to speed up things so you can't really depend on this last logon timestamp because it's just whatever domain controller you're querying so they introduced last logon timestamp which has a timestamp i realize i said last long in timestamp but there's actually a variable last long in timestamp and this one is replicated i think it's only replicated every one to two weeks so this can still be out of date however it's a much more accurate way when dealing with bloodhound data in bloodhelm that one is actually last logon you can see it twice and it's quote unquote replicated but in this demo it's probably not going to be that good because a lot of these accounts were created automatically so if i get rid of this description we say last logon timestamp uh oh here's a good one so it's trying to add a string to a number because this is an integer value in order to do integers we put the last login timestamp in parentheses pipe it over to string like that and here we have it so all these are because um the data is the account's never been logged into if i look at last login like this it's zero so zero negative one for that but it just means the account hasn't been logged in uh then when you see this typically i try weak passwords or maybe it's a honeypot um week pass was because it means the account's never been logged in so maybe it's one that the help desk freshly created um and that becomes handy to then target things so you may want to mark like um like do starting points like search for these users and then right click and try to do a shortest path from that user or something the other thing we could do with this with these queries let's get rid of this description is equal to null and there are two fields we have last logon timestamp and password last set so i'm going to grab password last set and say when that is greater than the last logon timestamp then display it and we have to let's see we screwed something up oh i don't have a period before this and the command i pasted from did not convert this to string there we go so now this is showing all the accounts that have a password last set greater than the last log on and these would be accounts that are probably good for a password spray because this means the help desk reset the password and the user has not logged in yet again we're seeing a lot of data here because this is a demo environment but you should kind of get the picture the other thing there is let's see in this box there is a kerberostable user um the web svc and if we look at the web svc user let's see um trying to think the best way to show it i'm probably just going to do dot properties and search for it right web svc we can see it has a service principal name so if for some reason we didn't want to go in bloodhound we could just search for this right if we look at service principal name for something else it's just open close so if we do this search and say dot select dot service principle name is not equal to open and close and then do dot name see i don't think i closed my select statement see what is this saying unexpected end oh i have a period select it's just select and that did not work let's see did i type our service principal name it's names with an s right so let's add that s and then we have all the kerberostable accounts kbtgt you'd never go into kerberos but this is a good way to get started with just parsing the bloodhound data and really i can't stress enough trying to run like the password last set query i did on your actual domains to find accounts but another good one to do is going into the computers so if i cat 2022 computers.json pipe it over to jq we see it's pretty much the same exact thing so i'm going to do data pipe it like that and then we can do dot properties and see properties of computers and one of the key ones is operating system so with this we can easily just show me all the operating systems so i can do uh dot name i did a single quote there dot name and then plus we can separate with colon dot operating system like this uh let's see did i type of this oh i don't have a plus and we see a list of all the computers and their operating system a lot of these are null because again it is a lab so we can also say um let's see select dot operating system is not null like this and now we have a list of the two computers we could also do something like um let's say there's a lot of windows 10 pros and we just want to find like windows like non-windows 10 pros and eventually filter out the things that have a lot of and find like windows xp right so we could do another select here and say that operating system is not windows 10 pro and of course i forgot to close the parentheses and then we have just the one now another common thing i like doing like just like user names if we look at the properties of a computer there is this last logon timestamp we also have password last set so there's a lot of timestamps here um if you didn't know every machine in active directory is also an account and its password automatically changes every 30 days but the last log on timestamp is going to be the last time that computer pretty much was powered on so we could take a look at this and if we do let's say data properties like this and then select actually let's just do dot last login timestamp and dot name of course this is a number so we have to pipe it over to string and we can see [Music] a lot of machines just have negative one because they've never been powered on but like this machine this is pretty old right if we look at this timestamp this curved.search.htb uh the epoch time is 162. if we let's see epoch converter if we look at this time stamp this was may 24th to 2021 and it's april 30th so almost or probably a little over a year ago this time stamp what is this so let's go back to the epoch converter timestamp to human this is probably when i was recording the video april 25th 2022 five days ago right oh it has the days ago if i would have just uh picked this i wouldn't have to like guess was this a year ago or not uh epoch tells me right a year ago so um i'm bringing this up because a lot of times when i do like nessa scans i want to make sure i hit every computer right and a lot of times computers will be powered off maybe they just went to sleep or something like that workstations often won't do that so i can compare a list of like the number of computers i've got in nessus and then i can do something like let's do this last log on timestamp so let's do dot name and we'll do a select dot last logon timestamp is greater than let's just epoc 30 days ago right um let's do actually we'll do like 60 days ago so human date to timestamp we grab this timestamp and then we'd put it here and this will show me every computer that's been on in the last about 60 days so we could get this list and if this list is bigger than the list nessus gave us or an expose if you use that or whatever tool you use to do your vulnerability scanning you know it missed some because these machines were powered on within 60 days and it's not on your list so that's where i use this data a lot as well and all this type of stuff you can pull from the tools like crack map exec things like that the reason why i like bloodhound is because you run it it grabs pretty much every data you could possibly want puts it in files so um you don't have to query the domain anymore it gets good snapshots in time so hope you guys enjoy this video take care and i will see you all next time