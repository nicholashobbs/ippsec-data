 what's going on youtube this is ipsec i'm doing search from hack the box and the initial foothold was a bit of pain getting the first set of credentials but once you get those and get the ball rolling this is a super solid active directory box and probably a must-watch video for anyone wanting to learn about active directory exploitation because it just has so much in it we have user enumeration password spraying kerber roasting bloodhound file share enumeration with crack map exacting the spyder plus module and with both bloodhound and that module we use the jq binary to manually go through the actual output files to do better searching so that's pretty cool uh we have group managed service accounts a bunch of power shell usage a bit of av evasion with the shang to get a reverse shell through powershell um there's certificate cracking in this box there's just a lot so um with that being said let's get going as always we start off with the nmap so dash sc for default scripts sv enumerate versions oh a output all formats playing the nmap directory and call it search and then the ip address of 1010 11.129 this can take some time to run so i've already ran it looking at the results we have 13 ports open i figured out so quickly because i know there's a thousand total ports so 987 there's a 13 difference so since there's 13 ports i'm not going to go over every one we do see dns is on 53 and then the next port is http on 80 telling us it's a windows server generally whenever i see dns on windows i scroll down and look over if there's an ldap server that confirms this is microsoft windows active directory we also have https on 443 which is leaking a hostname of research but generally whenever i have a windows server um the way i pull hostname is through crack map exec so i just do at cme smb10101129 and this will also give us a hostname and this one is also saying the name is research and the domain is search.htb so i don't know if search.htv is here it's probably in the ldap looks like it is telling us that so let's go and edit our host file so sudo vi etsy hosts and we can add 10 10 11 129. i'm gonna add search.htb um then research.search.edu and then also just research so now we have all the hosts there and looking through the other ports this is all a bunch of ldapy stuff like secured ldap regular ldap global catalog things like that of active directory that we don't really care about that much i always like starting with web servers so i'm going to do 10 10 11 129 and we're going to see what we have i'm also going to do like research dot research.search.htb to see if it's a different website this is doing the same exact thing it was also on ssl so let's make sure this is the same web page so except this certain continue and it's looking like um there's no like virtual host funkiness going on it's just one single page um okay it scared me because the title was just testing iis and i was like wait a second um they just forgot to update the title so looking at this we do have research working to identify your business and the main thing i look for when starting like an active directory challenge at least what i assume this is going to be is a bunch of usernames because i want to convert these into potential um what is it uh like we can do a bunch of username and enumeration that's what i meant like was trying to get at so i'm going to copy all this the users.txt paste it in and then we're probably going to have to filter out a few of these words so if i grep v for image and manager what are we left with just names so grab period to get rid of those line breaks and i always move it to just a blank out file then rewrite it because if i directed this to the file i initially catted it would just delete the file and i'd lose it so have it to me just to read to just some random one character thing and then move it afterwards so usernames typically don't like spaces so what i'm going to do is we can send search for space and replace it with a period okay and same thing and then we probably want to um do first initial the name and last name and there's probably a program that does this for me i'm sure if you look at ipsec dot rocks uh something will come out but i'm just going to quickly do this and let's see there we go so we have that um we could potentially just do the last name as well so just duplicate this and um if we wanted to do just the first name let's grab that and let's see if i search for period escape period there we go oh no undo that one so now we have a pretty big username file right so i can go to a program called curb route and there's probably a way to do this in other programs but i just love curb route and always use it so if i grab this and there's going to be one gotcha that i'm not sure if it's going to affect me or not because we're going into kerberos it's going to be the time of my box whenever you do anything with kerberos you have to have a synced up time to the active directory server i think if it's like five minutes out of sync then bad things happen so if i don't get a hit that doesn't mean it doesn't exist it means my clock skew could be wrong so that's the first thing i'm going to check if this doesn't work right away and then i'm going to anyways actually we can verify so if i do ntp uh what is it date and then just dash q this isn't going to update my system clock it's just going to check so if we do this we can see uh this is probably six minutes off i want to say so this cube root command will probably fail which is good we want it to fail so i can show you um they're failing which doesn't sound like much but when you're doing these types of tests um knowing when tools fail and how to prevent it is um key especially when they silently fail so i want to do user anew because we want to enumerate valid domain users via kerberos we don't know the password yet and then the flags for this is just the username list so if i well we may want to specify the dc so 10 10 11 129 and dash d we can say search.htb oh it succeeded um so we know it's first name dot last name let's see date let's see if i can change the date pseudo date i'm gonna say one two two two two um how do i set there we go so now if i own a date it's way back in time so let's run this curbroot command again and it still worked well darn um i wonder if it wouldn't work if it's a valid password i could have sworn this should not have worked but oh well let's do ntp date again without that dash q to update or clock and then run curb route again see if we get any more users maybe we will maybe we won't um let's see it seems like it's definitely taking a bit longer to do it now that our clock is synced but um still only three so 6.4 seconds um that is weird okay it was just that one time that was taking longer but we have these users um it's automatically going to check for um what is it it's not kerber roasting it's the other one um password may be stored in reversible format since we don't have hashes we don't have anything here so it's time to try to get more usernames from this to see if there's anything else that we missed it also only got a few um if we look at this it got sierra keeley and dax so sierra where's keely keely and dax it got the first three but kyla stewart it did not get or chris do it if i go into users.txt kyla stewart i mean that looks correct so i just want to make sure like my copy and paste didn't screw up and if we look through everything everything looks standard this is one part of the box i did not like if we look at this image closely we can get a different username from this so send password to hope sharp and it says the password here is isolation is key question mark so let's add hope.sharp to this list and um i know this part of the box probably not the greatest but stick with it this restless box is amazing so we can see hope sharp is a valid user and then if we switch the mode to what is it password spray let's see yep password spray it's test a single password against a list of users so i'm going to change this to be password spray and then do a h because i want to see how to do this username word list and password so let's do isolation is key question mark that is what was on that image and we get a valid login for hope sharp and i got the password from right there so i want to try one thing real quick pseudo date now we're completely out of sync again we do this and we're not getting a success so um i guess user enumeration does work but um password enumeration when you do kerberos will not if your date is not set and it's not um giving you a clear error message so that is one thing to keep in mind when doing this type of enumeration and that's where ctfs definitely help because you learn about all these um gotchas come on it's taking a second there we go so the very first thing i do whenever i get a user is probably pass it over to like crack map exec so we can do cme um smb 10 10 11 129 dash u hope sure dash p because i want to see if i can log in with this user so if we do this uh we forgot oh no we did smb so this will probably tell us that we made a typo in the username there we go fix that up and we get a login but doesn't say pound so we can't use that well um we can't like ps exact the next thing i check is winrm for windows remoting to see if this user can do that and then the second thing i'm going to do once um it's weird cme-h was it winrm it is um i'm not sure why it didn't output anything but i'm guessing that means uh she could not um win rm i was really expecting it at least out but it failed um maybe we need domain uh what is it search.hdb if this doesn't work i'm just gonna move on because i'm not sure what went wrong here which happens quite often so um not sure there but the next thing i generally do is go to bloodhound and whenever i do anything in bloodhound at least for ctfs i find myself re-downloading everything because it gets updated so often and all the updates are always good i just found it easier to just update it when i need it so the first thing i'm getting is python scripts and this is going to allow us to run bloodhound from our linux box so python 3 bloodhound dot pi you could probably pip install it but the easiest way to always guarantee you have the latest is just getting it from github so python3 bloodhound.pi dash u hope sharp dash p isolation is key dash d search dot local dash dash dc 10 11 12 actually it's not dc it's an s for name server um and then dash c all for collection all and i think this is everything i need for bloodhound uh dash dash ns maybe it's one dash there we go it looks like bloodhound is running and it's not let's see so we did see collection method username password ns name server dash d for domain i don't think we need dc oh we have search.local with search.hcb there we go but it's missing digest mod uh let's try python39 python38 okay sudo python3 setup install and hope this fixes that hi this is a weird pip error missing parameter let's see if we can just google this real quick if not i may have to pause the video and come back when i figured out um what happened this is definitely an impact air that i encounter quite often let's see latest version of impact see let's just try running this pip3 install in packet upgrade user and maybe this will fix that dependency issue one can only hope no so i'm cutting out quite a bit of troubleshooting if you go over here we can see i went to a bunch of sites and i couldn't fix this one issue i want to say it's like within the hash lib module but um the easiest thing is to just do this correctly so whenever running these python scripts you should have like a virtual environment so things don't step on each other which is what happened here i had two programs that installed different dependencies for doing crypto stuff and now i got some weird dependency conflicts so i'm gonna do python 3 mvm and we're just going to create a directory called dot vn for virtual environment and then we can source dot vm bin activate and now i'm in this environment so now if i do a pip 3 install period it's going to go download all the modules and put everything in this virtual environment so nothing conflicts with each other if i go and run this command again we get an error message um ldap this looks like a authentication one oh um i forgot a question mark in the password so let's add that and hopefully we get all the output so it looks like it has connected it's going to start dumping things so while it dumps let's do a pseudo neo4j console to start this up and then i'm going to download bloodhound so i'm just going to do blendhound github search on google and let's download the latest release so go to releases we can see february 9th so two months ago this was updated the whole reason again that i like doing this is if we do it on an outdated version it's just going to like error silently when uploading the files and i always end up spending more time troubleshooting than i care to admit so now i just always whenever i download a new python ingester i download a new copy of bloodhound to make sure they are both on the latest and that also goes for the.net and gesture as well but on ctfs i tend to download the python ingestors much more because i'm not on a windows machine so we are now logged in to bloodhound and i can upload data and let's go bloodhound.pi and upload all these jsons so i'm skipping this user this one has zero bytes i'm not sure why but these do and this has a user with data and it's trying to upload there we go uploaded them all clear finish to make sure there's nothing else and then we can just do a quick query like find all domain admins to verify we have data there's a administrator i see the diamond there so it's high value this one is not marked high value i'm just going to mark it as high value and then we can look at like um gibberistable accounts we have care btgt and then this web service so this one we can probably own it i'm going to use in packet to dump this so we run git user spns and then i'm looking at the syntax because i can't always remember it it looks like target and domain slash username colon password so let's do search.htb [Music] hope.sharp colon isolation is key question mark and there we go we have it looking like it dumps uh there's a dash output file so let's do output file and i'll call this um curb host and we cut this and we do get a hash so let's go over to the kraken and i just don't like cracking on the machine i do recording from and it's also a vm so this is a bit um easier so i'm gonna do vi hashes and i'm gonna call this search paste this in and we can do hash cat i think it's dot bin actually there we go and upped word list rock u and i'm not gonna specify the format because hash cat has an auto detection mode and it should be able to catch this and we do see recovered one out of one and i say it should be able to catch this because like this specifying kerberos the encryption type it's specifying enough for this i want to say this is like triple des encryption type or something but um it's specifying everything it needs to auto identify if it was just like an ntlm hash i may not do auto identification because ntlm conflicts with a lot of things because a lot of things can just be 32 characters of hex such as md5 sum so um yeah i'm just going to do a show here so we can see the password and we have at one million baby so let's go back over to a host i'm gonna do v creds dot text and this was web underscore service we have that and was it hope dot sharp is isolation is key question mark save this and let's go back to bloodhound because we can now mark this guy as owned so let's go back to analysis and we can do shortest path from owned principles and we get nothing i'm going to add hope dot sharp like maybe this was just a rabbit hole we should always enumerate all paths and mark hope as owned and shortest path to domain admin from own principles still nothing let's try sure's path from domain users to high value targets nothing um let's see if we right click shortest paths two here there's nothing we can really do there um we could try more password spraying and one thing i really like about bloodhound that a lot of people don't really use is how it writes everything because everything's just in these json files so we can easily pull a username list from this because we only got like three valid users from our initial user enumeration then we found two others so we have a total of five usernames however if we do cat this json file and we could also um let's see cme um let's do cme smb 1010 12 11 129. like we could also do this isolation is key and i think dash dash users like this will also dump all the usernames the things i don't like about doing this is it's making extra queries um it gave us a lot of good information like bad password count and things like that but um say we didn't want to query the domain again or maybe like we lost access or use or persistence requires a user logging in because we never escalated but we had bloodhound data i always like being able to reuse this data right the thing i don't like about bloodhound is it's not easily searchable in this interface but it is json so if we do this 262 is it three what's it wanting one users there we go so if we do jq dot we can get a lot of information right um i'm going to do pipe it over to keys and we can see there's two different keys data and meta we can see meta right here it's just saying information about this it's the user's file and there's 107 users it's version 4. we don't care about that so let's do dot data and the first thing i notice is we're going into a list right we have this bracket i can do a head as well and we see it starts off with that um to get rid of the bracket we just do a dot and then open close maybe it's not even a dot maybe it's just yeah open close brackets so now we got rid of that so we're no longer there and if we look at this data we want let's see stuff out of this properties because we have this name here so if i do a dot properties let's see let's pipe this dot properties nope let's see data and then dot properties like this null is a capital p is that what i'm missing yep it is case sensitive remember so now we have everything we could just grep for name here um maybe name colon uh probably a capital n or wait it's a single quote like there we go like we could get usernames this way but this is pretty messy right and we lose a lot of ability to do this one thing about um jq we know it we could do name like this but if we really wanted to we could get a bit more fancy and say select and then there is a field here called enabled and if we want to get everyone that is enabled so select enabled is equal to true does this work uh select dot enabled and this is going to give me all the users that are enabled so now add dot name here and we have all these we could do enabled equal false and there's two users that are disabled so you can really see the power here right we could do get rid of this and we could say give me name and i think plus description right and we may want to put a colon separating it so now we got names and descriptions a lot of users don't have a description so we could go back here and before this do a select where dot description is not i want to say it's null but we go up here let's see where is description right here so that one has something its value is null so where description is not null and now we have a list of everything with a description we could also filter this out and say also select enabled is equal to true and see every description for accounts that are enabled test if it works by doing equals false but this really lets us parse through this data if you hate all these like double quotes you can do dash r to put it in raw mode and it gets rid of those so um this was a long tangent but we really don't care about things being enabled or whatnot uh i guess we do care about enabled so dot enable is equal to true and then dot name because all we want to do is see all the accounts so there we have it we can direct these to users.txt and i don't know if i want those um at search.hdb so let's just cat users.txt awk field separator for at and print the first field to o mvo to users.txt there so um let's move user.txt up one directory and now let's run kerberos or curb route and password a new uh we probably have it on a session let's see here curb route there we go password spray users.txt we need to go up one directory and instead of isolation is key we want to do the other password which i think was like at one million baby or something creds at three let's see yep i'm just going to copy and paste this i'm not positive that is oh or a 0. but copy and paste doesn't fail me and we get another valid login um edgar.jacobs so if we try him let's see edgar jacobs in here so go here let's mark him as owned what is it mark users owned and analysis shortest path from owned principles do we have anything we don't so we could go back and add this so v creds dot this um let's just yank this and do edgard.jacobs and i'm also going to split this file now so let's cap this awk dash f semicolon print one two valid user dot text and then let's get the two to valid pw dot text okay we can do cme smb dash u valid users dash p valid passwords and then um let's do a dash h real quick because it's a brute option we want not rid brute no brute force so what this is going to do is try um each line of the file that like sequentially go through both so it's going to take the first line of users.txt or validusers.txt and use it against the first line of valid passwords the second line second line and go through the file that way so no brute and there's also i think continue on success so we're not going to stop once we succeed and what this is going to do is tell me if we have any shells on the box and doesn't look like we do we can try winrm but maybe like port 5985 and 5986 is closed and that's why it's doing this um nmap dash dash open 10 10 11 129 dash p 59.85 or 59.86 we can do it either way doesn't matter we can add a dash n to speed this up so it doesn't do dns resolution and those ports are not open um we can check 80 as well it should show 80 open so that's why a win rm is not working um we're at pretty much a standstill here right um we got yet another user but that user doesn't get us anything in bloodhound so the next thing i'd probably do is start looking through share drives and to do that i would use crack map exec and i'd use the spyder plus module and the old me probably would use tools like smb map things like that but i've really liked using sm crack map exec for everything because it's a bit more scalable and i thought if i specified it with three users it would dump it on three things but that doesn't look like the case so i guess let's just try the latest user and as i say it's scalable i run into an issue right but i'm sure mpgn is going to watch this video and then fix it for me so it works the next time i try to do something like this but let's copy and paste this password and run this and it should hopefully get something and it still fails um ls tap cme spider plus did it write it 10 10 11 if i cat it it's an empty file um let's see let's take off these no brute force options and continue on success and maybe that will fix it see it's starting in and it looks like it is taking a little bit longer so i'm assuming this is going to work i'm going to control see it i'm just going to run the time so you guys can see how long this took me to run it but i'm gonna pause the video while this runs because it can take like i think 45 seconds to a minute but if it's a huge like actual environment it can take a very long time for this thing to run because it goes through each directory to list some files okay the command has took about a minute and 20 seconds and it gives us this wonderful output that a lot of people don't like i didn't used to like it until i learned jq and it's really powerful it gives us the like file timestamp so you could do a bunch of queries here to show me recently modified files but the main thing we want to do is just show all the file names if i do jq dot and we say show me all the keys here we can see the shares that are open but if we wanted to we go up one show keys and we have a list of all the files and i don't like doing it this way because we don't get the actual share name up here right there's a bit better way we can do this if we just go back to keys we can say map underscore values on keys and now it doesn't traverse this so the issue was it kept going down every key showing all these times so it's a bit messy like each file is taking up six lines um this fixes that and if we go we can see the directory names right or the share name so we can see this cert enroll has a few files ipc uh there's redirected folders and then this dollar means it's a hidden directory it looks like it's going to be like a user's home folder so it's like redirecting their user folder somewhere so this is to an allow like roaming profile so anywhere they log in since their desktop documents downloads things like that as a share file it can just make sure those files exist for them on any computer they log into and i'm a bit curious why we can see sierra we can get her there's multiple user.txt for sierra can we actually see her files and access it um we also see phishingattemp.xlsx and then the help testing is empty but this is interesting um i'm going to take a look at sierra's to see if we can access it so let's go back to the cme command um smb there we go i'm gonna do smb client let's first make a directory smb for the files we download and then smb client dash u edgar dot jacobs p see if we have access to this um i don't think it's dash p and smb client and this is definitely a dash capital u um 10 10 11 129 it was redirected folders i want to say put in his password do a dir and i'm going to go into sierra fry do i have access to download user.txt from her access denied so i can go into a directory but i can't download files um what's in her documents nothing so if i do dir we can let's go to edgar.jacobs which is my user dir desktop dir documents oh apparently it doesn't go in and get files i have to i wonder if i did dir desktop slash there we go if i don't do a trailing slash it just does that which is annoying but inside a desktop there's this phishingattemp.xlxx which is a excel file so i can download this and then if we use like libreoffice to open it uh let's see let me also attempt to recover the state discard is that like a artifact okay so we have the file here we see columns a b d and if i try to view or move it over we have protected cells cannot be modified so this is a pretty bad protection by excel if we close out of this we can unzip the whole document and if you google it around i'm sure you'd find it but i'm just going to look for files name sheet because it is sheet2.xml when you looked at if you looked in the bottom left you saw sheet 1 and then sheet 2 was passwords right so that's why i'm going to go straight to sheet 2 because we're on the second tab and the next time i open up i will point it out but i'm going to search this for protect protection and essentially we just delete this line this sheet protection algorithm [Music] just delete this whole um entity so go here highlight this delete it that is now gone so let's save this and i'm going to do a zip we're going to call this what was it phishing dot xlsx dash art recurse and zip everything so now when i do liberty office on this phishing document it's going to open it up and if i go here if i can click this column we can now see the passwords which is awesome so we have unprotected this file so i'm going to just do it in this pane up here v what is it going to be fish dash u dot text put all the users here v fish dash p dot text put all the passwords so this looks like the um help desk or it team whoever this user is a part of ran a phishing exercise against a bunch of employees and log the credentials they typed into the website so now what we're doing is testing which ones are valid um cme smb so i guess i don't have it in this pane was it fished you dot text p fish p dot text um no brute force continue on success so now we're going to use crack map exec to see [Music] um if any of these credentials are valid it did not seem to work oh we're on winram still let's do smb and we have sierra frye is valid so we can go straight to her directory now because we know um we had files from her and be able to download user.txt but i'm going to see what she has here so if i do sierra.fry i'm going to mark her as owned and then we can do the shortest path from owned principles is anything going to come up it does so sierra fry is a member of it security which is in the itsec group who can read gmsa password it's a group managed service account she can read this password which has generic all to tristan davies who can um be a member of domain admin so he can do anything he wants in the domain so this is a pretty cool attack path if we had done like shortest path to domain admins we'd also see this it would just be if we did this from the very start we'd be able to see this path that's what i'm saying so we have domain admins tristan this adfs the group managed service account and anyone in member of itsec can read that and we can see now we have an own principle right so we can mark this whole group as high value so now the issue is we don't know how to get commands being ran because it doesn't say owned here we don't have m so i don't know exactly what we can do with sierra fry i guess we should run crack map exact spider plus again with her and see if there's any other files so cme uh smb dash u sierra fry dash p put in the password dash m spider plus and we'll run this command again we forgot the ip address and this will probably take um a minute or so let's just run a time as well but probably a minute and 20 seconds it will take to run and a minute and 18 seconds later we have it finished so let's go do our jq command again and we have to let's see is it keys like that and then map values i think we get rid of this bracket and we can see what's different here we probably should have um like put these in separate files because spider plus always goes like temp cme spider plus and then the um ip i wish it did like ip dash username because then we could just like do a diff on these jsons and find what files are new but we can look at this we have downloads backups we have a pfx this is like a um user certificate we also have the certificate authority here and of course uh user.txt if we want it so i'm going to do another smb client to download these files so i'm going to go into my smb directory we can get her credentials up here and do smb client dash capital u sierra fry and then let's see it's 10 10 11 129 i want to say it was restricted folders or maybe redirected folders that's it redirected folders and then we can put her password in copy this and we could also use like sm crack map exec to download files um i don't know why i don't do that i just i guess when it comes to navigating the file system and downloading files i like just doing smb client because it makes it easier to download exactly what you want i want to say crack map exec if you look at it has like a regular expression so you can download multiple files with one command which probably is better but um i guess this is just easier so i went into the downloads backups directory and we can download the certificates and if we really wanted to we go into i think desktop is where user.txt is and download that uh it's get there we go and if i can't use our text now we do have it but the main thing we want is this uh well pfx file if i less it it's probably going to just be a big blob we can try to import that into firefox so let's go search for certificates your certificates import and if we go hdb and this box is called search smb and staff.pfx it wants a password so we have to probably crack this because i tried password password and it doesn't work so let's copy this over to the kraken and i want to say john the ripper has a mode to crack this um when i did it i used a program i think it's pkcs12 crack but um let's see pk cs12 crack i want to say this is the application i had used come on pkcs12 crack github search it this is it crack pkcs12 um but when i was doing some searching after doing the box i did see um john may have something so if i search for hashcat pfxcrack this will probably bring me over to an issue or maybe something on the form and someone let's see this is where they wrote that program so it's actually on sourceforge originally but we found it on github uh let's see if you read this whole thing it doesn't like um no one says they convert it to john all right convert to hash cat but someone says that it isn't john so if we do john format pfx and we can try this and this is 2012. um i'm going to search hashcat real quick hashcat example hashes go here and i'm just going to do a search on pfx p12 it doesn't come up so i'm guessing it's not in hashcat still so let's go over to the kraken i think it's opt john john i think it was dash format equals pfx and then the file and then john's is dash dash word list i want to say is equal to opt rocky.opt wordlist rockyou.txt is that it invalid utf encoding seen on staff.pfx let's see pkcs12 i don't know what they did maybe it's i need the dash t i don't know what that does that is a dash t huh see we can just do a doss to unix real quick on this i doubt this is the case uh binary symbol found skipping so i'm not sure about that so let's just go to that uh crack pkcs12 github see if this works get clone actually let's go into opt here see dot slash configure make and it is would it download to or in bill 2 probably miss no it's in src for source okay so we have this let's see dash d dictionary t number of threads and file to crack so dash d opt word list rocky.text and then the pfx and it does 12 threads by default so this looks better i wish it gave me like some type of progress see we could do dash v for verbose mode prefix for brute force so that's like a combination attack i think see i'm going to add dash v we can run a time on this as well to see how long it takes ah v we have exactly how fast this thing is it's doing 20 000 passwords per second and is this number going down it looks like note that is going up so i guess i'm going to just let this run and hope we crack it i guess so we'll see how long this takes and there we have it about 4 minutes and 30 seconds later we have the password as miss pissy so um now we could load this certificate the issue we have is we don't know what this certificate goes to right there is no like windows remoting port or anything to authenticate with that certificate so i'm going to run a go buster on this to see if there's anything we are missing so i'm going to do let's get out of this smb directory actually let's get out of that whole virtual environment we're in and just do go buster dash u for url put this in we can put it in directory mode and then word list up sec list discovery raft or web content raph small words dot text and let's see if we have anything so we found images javascript css um it's looking like it's not oh it is windows so it's not case sensitive we could have done um lowercase i forgot that we do have this slash staff directory that goes to a 403 so if i do staff we have just a forbidden access is denied so let's see what happens if we import our certificate because this could be doing some type of mutual ssl authentication so let's go back in preferences search we can import let's go to the staff.pfx put in the password and that imported successfully now in order to use this certificate we can't have it like pop up an error message right of like certificate so if i went now to this slash staff we can remember this and maybe it's gonna work i thought we needed to import the actual ca but apparently we don't sometimes you would also need to import a certificate authority so if we went view certificates we can do authorities import i want to say there was a p12 file right this if we import this did that import i don't know where it is global sign this is weird like assuming that imported somewhere but maybe it didn't i'm used to it like popping up a box saying do you want this to be able to verify sites or users right and ah there there it is i think right here so if we edit trust we could say this web certificate can identify websites um i want to say that's exactly what we imported search research ca yeah this is it um this has to be it right fingerprints i wish i knew how to get a fingerprint of a p12 file let's see because that is not just in this right yeah this is a binary file so open ssl dump p12 file and i bet if i double clicked it i could also get it but i like doing it through this open slp kcs info maybe this let's try this dash n search p12 um put that password in is this it search research ca i was hoping to find a fingerprint i'm actually not sure um let's see pk no dez maybe um get fingerprint how to get shaft one so in do we do nodes oh dash fingerprint so we pipe that open ssl x509 no out fingerprint okay like this put in the password i should put that on my clipboard and here we have it here's the sha-1 fingerprint 62cd1a so if we wanted to verify that we can so 6 2 cd what a 3d so that's there but that was not needed i was just showing something you may want to do and of course when we finish this box we probably should delete this certificate because if we leave it on a box like this one um that means anyone with a certificate can man the middle or ssl connection which is not good right so let's just delete that one from an old box you should periodically clean these things up this is one of the reason why some people don't like using like brip suite on their main web browser because if someone pops their system steals the brip sweet certificate then they can always just man the middle all the ssl connections which is bad so let's go back here let's go to powershell uh we can log in with sierra fry i think i spelled that correctly let's hope i think we did up here no well there we go and put this password in that is a weird password looks like something out of like an xkcd password generator uh computer name okay and let's see what is this um we can do search.htb it's probably research.search.htb i don't know if that exactly matters let's log in and see if we get anything awesome we have powershell web access so here we have a remote like command thing we can do who am i and if i went back here to this bloodhound we are sierra fry right here we're a member of this itsec group which we marked as high privilege because it can read group managed service account password of this account right we can go to abuse info um it's using password reader i don't think we have to use this application right we can just trade in powershell right um so bir adfs gmsa so if i do get 80 account i think that's the snippet bir ad fs gm sa let's see get ad user account see get user is it get 80 user there we go nope uh cannot find object that's better bir adfs let's see let's mark him as high value i don't know why i did that we in this we are you can copy and paste this it may end in a dollar sign most group man service accounts do that can't find object huh or a sam account name when created group memberships it's a service account i wonder if there's a special thing for that um i'm going to get 80 user was it edgar.jacob jacobs so that does work but this one does not let's see is there a get ad service account okay that's a snippet and we don't see the password here but since we can read it i bet if we do like dash properties star to select everything we can get everything and this dumps every attribute and i want to say the password is one of these it starts with ms so manage service interval days so every 3650 days this account password changes i don't think that's default i think it's defaulted to like 30 or 60 days right but that's the whole benefit of group managed service accounts is the passwords automatically rotate and the passwords are also very secure so let's see ms what is it um maybe this is slightly different than i'm used to let's see we can just go over to google real quick do this read gm sa password clear text gmsa password from active directory ds internals right and let's take a look at what they do so here they're creating the group manage service account we don't really care about that we just want to view the password so here we have retrieve using that get ad service account that we did properties ms managed password um let's see do we have this ms was it msds manage password it is manage password id so it doesn't have that attribute um let's do dash properties specify this and if we specify it we do get the attribute it is going to be just like gibberish i bet if we go here to decode it let's see so we can do gmsa is equal and then we do dot that attribute so let's go back here hit up and then we can say gmsa is equal to this and then paste in this so we have mp here and this is i think the password um let's decode it real quick so they do convert from 80 managed whatever password blob and mp and the password just bites it's not even like characters so you can't really display it you can't type it which makes it super secure because you would never crack this password so if like this service account was kerberostable good luck cracking that password because it is a bunch of bytes so the key space is huge you can see it's a lot of characters so um it's like as secure as it can possibly get in terms of protection from cracking so what we want to do is probably save that into an attribute so we can use this password so let's go down here we can just hit up and then i can do like password is equal to and we do dot current password actually we can do secure current password because this looks like it's a secure string of the password and this saves us a step because we won't have to convert this to a secure string so that should have the password i'm just going to call this sec pwd because that's generally what we what the security industry uses for that and if we do cred for credential object we can say new object system management automation ps credential the username so this username is let's go back to bloodhound bir adfs gmsa so bir adfs gmsa and then comma the secure pwd for password okay so we have this cadential object right and there's the account there's the secure string so if i do an invert command we should be able to switch users so computer name 12701 cadential as our cred object and then script block let's just do who am i does this come back it does we are now this user so if we look at what this user does he has generic all over tristan davies who is a member of domain admins so i bet if we just change his password so let's go back up here we can say net user tristan.davies [Music] uh we'll call it p app like this and that command completed successfully so we probably could um go back here if we go slash staff let's see if we can just authenticate as him and do it the easy way we may not be able to because there's a chance that microsoft's checking the certificate and comparing the name because we're using a certificate of um sierra fry so if it does any type of comparison there this won't work but i doubt it does that doesn't happen too often so let's just do this and it was research.search.htb and the reason why that doesn't happen too often is uh oh so maybe maybe we can um let's see let's just do this again real quick to make sure the password was correct maybe like the password reverted yeah so we can't so it is checking um a lot of third application or third-party applications won't check that but this is microsoft so i think they are so we can't authenticate as a user we don't have the certificate with that being said um we can change this so if we do secure pwd is equal to convert to dash secure string and then the password of p at ss wrd one exclamation point and you should never set a password to this in an actual environment right um you should do something random don't introduce vulnerabilities but i'm lazy in these videos so now we can say was it tristan.davies [Music] and i'll call this cred two because i don't want to um we'll call this cred tristan i don't want to overwrite that in case i have to redo this command so i think that would be correct we can go back to this invoke command and instead of cred we can do cred tristan and i just changed his password again uh if we do who am i we are now this user so we could probably do dir c colon um users administrator desktop and get root.text this way so root.text and we can do type right here and there we have it um reverse shell or not a reverse shell but we have a shell that can access that if we wanted to do over shell uh we probably could let's do this grip block thing let's go let's open a new pane what is it user local nishang uh share nashang locate machang user share the shang shells and then let's copy uh invoke powershell tcp oneline.ps1 let's just copy it to hdb search and let's take a look at which one we want to use um i'm just going to use this one because it's less characters and let's do ten ten fourteen eight nine thousand one and let's see if we can just copy and paste this it may not work because a defender but who knows right never know till you try so copy this can we just paste this in we can run it running come on 10 10 [Music] 14 8 that is correct 9001 and it's not i wonder if there's a firewall rule right that's possible let's see get stream script contains malicious content has been blocked by av so it can't be that easy um let's see invoke powershell new object set see let's do percent s let's rename every sm variable to please sub okay we can keep that get stream uh we can rename bt so bt is equal to we'll do dollar ipsec there we go now the next variable we have is a dollar d so we can change that so dollar d um i'll do this thank you for the sub so i wonder if this now just um changed the script enough i think i normally changed the top one i don't think i normally change this bottom script of tcp one line so i don't know how the signature of defender works on this one but if we submit still contains malicious a uh code so what else can we change here please sub ipsec thank you for the sub asking and coding let's just recopy cp user share shang shells invoke powershell tcp oneline.ps1 copy it here and i'm going to try this top one i'm not sure what the top one's different i wonder no there's definitely some extra things because i didn't see this ps base so let's rename client to be ipsec there we go we have to redo this so we can do 10 10 14 8 9001 stream to be please sub okay data to be def not rev alright definitely not av let's just do that i was going to do like rev shell or something but i could hit a different um signature that way there is send back so let's redo send back send back to b um d back for data back right then this is doing an i x d back let's get rid of send byte and this will be s data and let's try this one we change variable names here maybe it's no longer malicious nc lvmp 9001 it's running and it has been blocked so we have to change this a bit more um that's a shame let's see i wonder if i can new ob does that work let's see thinking about it nope not recognized so we can't do that system net sockets tcp client i wonder where the trigger is so i'm going to cap this invoke powershell tcp to be ipsec.ps1 uh we should have just copied but oh well and what i'm going to do is delete each line and when it works we're not going to get the reverse shell what we're doing here is finding out where the actual trigger is so what function we have to change right so nclvmp 9001 run this we need to close it it's running don't have a connection back it's thinking we're probably gonna get a av hit oh no we got it so um let's do that copy again so we know the signature is in this please right uh subscribe right or well huh we change that flush ipsec.close i wonder if defenders not flagging on this exact string and flagging on this calling something right i wonder if we just get rid of this does this fixed set so we got rid of the path a bit cat ipsec.ps1 now this video is going to be longer than i expected because we're going for this reverse shell it's running it's probably detected as malicious right we changed those variables i don't know exactly what it could flag on this right i guess we could kill this ipsec dot close oh wait diyr hey we got it it was that space ps right um so even though we had let's see we deleted something right that was new object so we went up to here and powershell did not flag it right uh we ended up deleting this and then powershell neural flagged it um the reason why it didn't flag here is probably like this never got called so down here when it's doing this please sub dot right it was calling that one piece and then i guess defender may like detect it on the outbound and like hey the um whole like path name space carrot is going to be a reverse shell probably let's uh flag that as malicious right so that actually worked i did not expect that to work um but whenever coming up with av those are the types of things and the thought patterns i go through right like i saw this and like there's no way i can really change this right we could like drop bytes or something but can't change that but we can change what it's writing to the socket and what it was writing was the path then space the colon or not colon but the greater than sign so um there we have it now we have a reverse shell um where's sierra fry oh because we're not doing that whole invoke thing right so if we exit this this command no oh shoot um we can try this real quick i don't want to do the whole gmsa thing again so if i have to do that we're just going to call the video but if i don't we can do it um if you put that reverse shell in the um what is it the invoke command that should work right because if i do this up here i no longer have history so um sec pwd is equal to convert to secure string and we did password one exclamation point and this is the benefit of using weak passwords you can actually remember them right so uh create this and then cred is equal to a new object system manage don't i do have taboo awesome automation ps credential and then tristan davies sec pwd and then invert command uh computer name 12701 dash cred cred dash script block who am i does this still work it does so now let's go whoa am i cat ipsec.ps1 so if i put this and this command hopefully it works and defended doesn't say oh now this is in this whole invoke command thing this is malicious right but um i don't think it will maybe it will it's taking a while i don't like that uh this is the one where it has some of that deleted there we go connection so dir who am i tristan davies so there you have it reverse shell bypassing defender um oddly enough the eight like gmsa account on the file system has a dollar at the end but in the commands it did not but oh well uh we can do administrator desktop and then type root.text and there we have it so the one last thing i want to show is um john the ripper to crack that bfx hash because i was talking about with oxdf while i was recording this and he said john was much faster or he didn't even do the crack pk cs12 i was like is this taking a while for you he's like no it was quick i used john so i want to try that real quick and the thing i was missing is there is a pfx to john script of course there is i should have just guessed that whenever taking um some type of format like a key pass file or something like that there's probably a to john if i just do like grep to john um i did not type grep but you can see there's tons of scripts to put it to john right so let's do pfx to john staff we can just direct this to staff dot pfx dot out and then we can just do john we don't need the dash format probably probably just do dash w for word list opt word list rock u dot text and then what we call it um staff.pfx.out i think if we do time we can see how long this takes um it has started cracking i was hoping it would be done already but um i want to say the other one took like four and a half minutes so let's see how quick john does it and then we'll call it a video and john is done we can see it took 39 seconds so john went much quicker than that one program we had ran we need to specify this uh we can't do a word list with the dash dash so i wish hashtag and john didn't have that stipulation but there we have it it cracking the password so hope you guys enjoyed the video take care and we'll see you all next time