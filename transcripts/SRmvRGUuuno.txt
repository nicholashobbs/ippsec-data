 what's going on YouTube this is if SEC and we'll be doing the Mirai box from hack to box this boxes host name was a big hint because Mariah was a botnet that was used to to knowledge service a lot of major sites such as Brian Krebs blog OVH dynamic DNS and the list goes on the botnet grew because it would just scan the internet for crappy devices with default credentials mainly IP cameras and routers but DVRs printers etc on the list of devices and effects so it would log into the device then do something that advice to allow it to be a part of the botnet which then they just use its internet connection to help in the denial of service so you can bet there's gonna be a default credential somewhere on this box so let's jump in as always let's start off with an nmap so and map - SC for default scripts SV enumerate versions Oh a output all formats or throw it in the directory and map and call the file initial and the IP address mirai which is 1010 1048 already ran it so let's look at the results we have three ports open ssh DNS and HTTP and HTTP when we go to the page the title says blocked so let's check that out Tenten 1048 and we don't get anything that's a little bit odd because we're getting a blocked from nmap and not when we browse to it so let's do a curl - vvv for super verbose 1010 1048 and we still don't see website blocked anywhere and we could also throw that into burp so we turn intercept dawn go to the page send this to repeater not found however if we plead with this host flag because ed mat does set the host flag I forget what it sets it to you can always run it and do a peek Wireshark and see what it does but if we click go now we get the website blocked so we have to have something in this hearse flag for the website to be blocked and interesting enough once it's blocked it exposes a DNS name PI dot whole so let's do a big query against that which is just essentially nslookup but I'm doing it because we see it's open on DNS so we should be able to query information about it so if we do dig at 1010 1048 this is specifying the server and thence put PI poll we do get a result to 192 168 204 dot 129 don't know what that IP is but if we set this host flag to Phi dot whole saying hey we want to go to this web page the web page is called pi that hole we get a 301 moved and we get directed to admin so we can test that out what we ate and then PI that hole so now my computer resolves PI dot hole to 1010 1048 so if we go to PI that hole proxy let's see this one can drop here we go Ford we interested in accept off but we get to this administration page so we know there's something with DNS there's one thing I wanted to test because if we looked at the end map DNS is listening on TCP and normally when DNS listens on TCP that's to facilitate zone transfers so I want to test a few zones with that so we can do a dig at axfr at 10:10 1048 because we're specifying use this DNS server and I'm gonna try to transfer whole doesn't look like we get anything and then we'll do PI dot whole no HTP nope so it doesn't look like zone transfers are enabled so going back to this we can try logging in and try default credentials because again more I and we get wrong password everything we try so nothing's there if you looked into the code on github I believe it automatically it sets a random password and doesn't have a default password it's random you login with it it tells you to change it so the one hint though is pi it's a raspberry pi device apparently so if you took that piece of information and we use the raspberry PI's default credentials which is username pi at 10:10 1048 and the password is raspberry right that we login so if we look around we have the desktop and that user dot txt Plex is also installed there's a bunch of things we do a sudo - L we see that the PI user may run all commands as root so just sudo su - and we get his route the issue with that though is the root text is not there it says hey I think I may have a backup of the file on my USB stick so I did a DF - LH to show disks free on everything I could have also done like the mount command and mount what it told me so the DF we have dev s DB dev has to be with Mel however you want to do it it's mounted read-only but we can go to it so slash media USB stick and there's a file that doesn't have the key either because he accidentally deleted it we go to the lost and found directory nothing there yeah so it's a directory completely empty there is one way to recover the file though because Linux we can just cat this device or not cat it but grap it if we did strings on dev sdb you can see something that looks like a flag and in this case it is a flag but this works because you're just catting the block device the hard drive and reading the bits off of it if you did xxt as a hex editor we can see that has a lot of zeroes because that hasn't been written to and eventually we're going to get where we have data on this device and we must have just missed it so let's grab dash V and we'll say don't trim me anything with a line full of zeros and we get some results so we got the text of the file the hash and then random stuff some all laughs file names on that so we can see root dot X does exist or that didn't even delete the file name but yeah so how I got the flag is my didn't use strings I when dealing with these block devices I tried to do an actual file recovery so I used grep and I said hey let's grab for a regular expression any lowercase character because that's what we're looking for and then I also want to say numbers can be included and then for 32 straight times because there's not really many 32 characters straight that match that even this text has capital spaces special characters so the only thing that should match should be this so we're going to grep that on dev SDB binary file matches because I forgot the - a flag to treat binary files as text and we get that and why do I like using grep instead of strings because you can do things like show me the two lines before in the two lines after that and recover entire files so strings is nice if you're just doing the CTF but if you actually wanted to recover a file off a block device and you didn't have been walk or something this would be a good way to go so we could do let's say we know a piece of the file we deleted off the USB so if we grip that we only get that line we could do - B 2 - a 2 and start recovering the entire thing so if we do a 5 because right here we know this isn't part of the file that doesn't look like text we're looking for text so - a 5 and we get the entire file so that's why I like grabbed since I mentioned been walk earlier let's actually do a bid walk and see if it will find the file or do anything so let's do it on my host computer before I do that I want to see if DB exists dd-does I'm going to see if dcfldd exists which is just a more forensic version of DD so I'm going to use that one because it exists and we're doing some type of forensics exact one more to get back to my host and we do SSH pi at 1010 1048 I'm going to run the command sudo dcfldd I F equals dev s DB I'm going to pipe that to gzip - 1 and that's just going to zip the information on the fly and I'm doing that just because we're doing it remotely and I wanted to zip it to make it faster and zipping has a good compression ratio on hard drives because you saw all those zeroes so it doesn't send all those it just says hey 0 times whatever essentially and compresses that so it's got a pretty good compression rate and then we can pipe that entire SSH command to dcfldd output file equals PI dot d d gz think that works right try it PI's password is raspberry and we already did it so if we look at D you - HS on PI it's only 48 K but that image is 8 or 10 megabytes so that's the compression rate 48 kilobytes from 8 plus megabytes so anyways let's examine this so we'll do gun zip - D - unzip this and now we have PI D D and I'm in my end map directory let's move this out so we can now then walk PI D D and we see a Linux ext filesystem we can do - capital M e on PI dot D D and this is going to auto extract so if we go to PI D D extracted go to the root petition we didn't get the file so let's try a different thing test disk and we have a 10 megabyte partition so proceed I know this is ext I don't see ext here so I'm just gonna select non petition data and we can do advanced for file system utilities specify the petition and I thought it would have got this we can do list maybe there we go I do list I can see a deleted file root text and C to copy current file and then capital C when destination is correct this tool is a bit funky how it tells you what to do in different spots but we copied that file and we can see if it saved it again when I was saying that the output was down here so his on super block by default and that's why it only said txt so I moved it west but Q to quit out do it a few times and we got the roof dark text file and it didn't get the contents so I'm just gonna do photorec it's another tool proceed search EXT will do unallocated first and capital C but this 0 file saved so it didn't recover anything do it from the whole partition 1 file saved in that one so recoup dyrone nothing there it's just a report dot xml that will say no files and we got one file and not the file we want that's just the file that exists so it's showing you that the forensic tools do fail you and there's still benefit to doing like examining it in a hex editor we did see that root dot text existed through the deleted file tool so at that point that's when you should just open it up in a hex editor and examine the file and see if you can get a contents so that is that I hope you guys enjoyed the video take care and I'll see you next week